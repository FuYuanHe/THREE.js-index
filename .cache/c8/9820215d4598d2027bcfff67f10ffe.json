{"id":"../node_modules/cannon/build/cannon.js","dependencies":[{"name":"C:\\Users\\hfy83\\Desktop\\THREE.js-index\\package.json","includedInParent":true,"mtime":1677318514776},{"name":"C:\\Users\\hfy83\\Desktop\\THREE.js-index\\node_modules\\cannon\\package.json","includedInParent":true,"mtime":1677318667384}],"generated":{"js":"var define;\nvar global = arguments[3];\n/*\n * Copyright (c) 2015 cannon.js Authors\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use, copy,\n * modify, merge, publish, distribute, sublicense, and/or sell copies\n * of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&false)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.CANNON=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\nmodule.exports={\n  \"name\": \"cannon\",\n  \"version\": \"0.6.2\",\n  \"description\": \"A lightweight 3D physics engine written in JavaScript.\",\n  \"homepage\": \"https://github.com/schteppe/cannon.js\",\n  \"author\": \"Stefan Hedman <schteppe@gmail.com> (http://steffe.se)\",\n  \"keywords\": [\n    \"cannon.js\",\n    \"cannon\",\n    \"physics\",\n    \"engine\",\n    \"3d\"\n  ],\n  \"main\": \"./build/cannon.js\",\n  \"engines\": {\n    \"node\": \"*\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/schteppe/cannon.js.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/schteppe/cannon.js/issues\"\n  },\n  \"licenses\": [\n    {\n      \"type\": \"MIT\"\n    }\n  ],\n  \"devDependencies\": {\n    \"jshint\": \"latest\",\n    \"uglify-js\": \"latest\",\n    \"nodeunit\": \"^0.9.0\",\n    \"grunt\": \"~0.4.0\",\n    \"grunt-contrib-jshint\": \"~0.1.1\",\n    \"grunt-contrib-nodeunit\": \"^0.4.1\",\n    \"grunt-contrib-concat\": \"~0.1.3\",\n    \"grunt-contrib-uglify\": \"^0.5.1\",\n    \"grunt-browserify\": \"^2.1.4\",\n    \"grunt-contrib-yuidoc\": \"^0.5.2\",\n    \"browserify\": \"*\"\n  },\n  \"dependencies\": {}\n}\n\n},{}],2:[function(_dereq_,module,exports){\n// Export classes\nmodule.exports = {\n    version :                       _dereq_('../package.json').version,\n\n    AABB :                          _dereq_('./collision/AABB'),\n    ArrayCollisionMatrix :          _dereq_('./collision/ArrayCollisionMatrix'),\n    Body :                          _dereq_('./objects/Body'),\n    Box :                           _dereq_('./shapes/Box'),\n    Broadphase :                    _dereq_('./collision/Broadphase'),\n    Constraint :                    _dereq_('./constraints/Constraint'),\n    ContactEquation :               _dereq_('./equations/ContactEquation'),\n    Narrowphase :                   _dereq_('./world/Narrowphase'),\n    ConeTwistConstraint :           _dereq_('./constraints/ConeTwistConstraint'),\n    ContactMaterial :               _dereq_('./material/ContactMaterial'),\n    ConvexPolyhedron :              _dereq_('./shapes/ConvexPolyhedron'),\n    Cylinder :                      _dereq_('./shapes/Cylinder'),\n    DistanceConstraint :            _dereq_('./constraints/DistanceConstraint'),\n    Equation :                      _dereq_('./equations/Equation'),\n    EventTarget :                   _dereq_('./utils/EventTarget'),\n    FrictionEquation :              _dereq_('./equations/FrictionEquation'),\n    GSSolver :                      _dereq_('./solver/GSSolver'),\n    GridBroadphase :                _dereq_('./collision/GridBroadphase'),\n    Heightfield :                   _dereq_('./shapes/Heightfield'),\n    HingeConstraint :               _dereq_('./constraints/HingeConstraint'),\n    LockConstraint :                _dereq_('./constraints/LockConstraint'),\n    Mat3 :                          _dereq_('./math/Mat3'),\n    Material :                      _dereq_('./material/Material'),\n    NaiveBroadphase :               _dereq_('./collision/NaiveBroadphase'),\n    ObjectCollisionMatrix :         _dereq_('./collision/ObjectCollisionMatrix'),\n    Pool :                          _dereq_('./utils/Pool'),\n    Particle :                      _dereq_('./shapes/Particle'),\n    Plane :                         _dereq_('./shapes/Plane'),\n    PointToPointConstraint :        _dereq_('./constraints/PointToPointConstraint'),\n    Quaternion :                    _dereq_('./math/Quaternion'),\n    Ray :                           _dereq_('./collision/Ray'),\n    RaycastVehicle :                _dereq_('./objects/RaycastVehicle'),\n    RaycastResult :                 _dereq_('./collision/RaycastResult'),\n    RigidVehicle :                  _dereq_('./objects/RigidVehicle'),\n    RotationalEquation :            _dereq_('./equations/RotationalEquation'),\n    RotationalMotorEquation :       _dereq_('./equations/RotationalMotorEquation'),\n    SAPBroadphase :                 _dereq_('./collision/SAPBroadphase'),\n    SPHSystem :                     _dereq_('./objects/SPHSystem'),\n    Shape :                         _dereq_('./shapes/Shape'),\n    Solver :                        _dereq_('./solver/Solver'),\n    Sphere :                        _dereq_('./shapes/Sphere'),\n    SplitSolver :                   _dereq_('./solver/SplitSolver'),\n    Spring :                        _dereq_('./objects/Spring'),\n    Trimesh :                       _dereq_('./shapes/Trimesh'),\n    Vec3 :                          _dereq_('./math/Vec3'),\n    Vec3Pool :                      _dereq_('./utils/Vec3Pool'),\n    World :                         _dereq_('./world/World'),\n};\n\n},{\"../package.json\":1,\"./collision/AABB\":3,\"./collision/ArrayCollisionMatrix\":4,\"./collision/Broadphase\":5,\"./collision/GridBroadphase\":6,\"./collision/NaiveBroadphase\":7,\"./collision/ObjectCollisionMatrix\":8,\"./collision/Ray\":9,\"./collision/RaycastResult\":10,\"./collision/SAPBroadphase\":11,\"./constraints/ConeTwistConstraint\":12,\"./constraints/Constraint\":13,\"./constraints/DistanceConstraint\":14,\"./constraints/HingeConstraint\":15,\"./constraints/LockConstraint\":16,\"./constraints/PointToPointConstraint\":17,\"./equations/ContactEquation\":19,\"./equations/Equation\":20,\"./equations/FrictionEquation\":21,\"./equations/RotationalEquation\":22,\"./equations/RotationalMotorEquation\":23,\"./material/ContactMaterial\":24,\"./material/Material\":25,\"./math/Mat3\":27,\"./math/Quaternion\":28,\"./math/Vec3\":30,\"./objects/Body\":31,\"./objects/RaycastVehicle\":32,\"./objects/RigidVehicle\":33,\"./objects/SPHSystem\":34,\"./objects/Spring\":35,\"./shapes/Box\":37,\"./shapes/ConvexPolyhedron\":38,\"./shapes/Cylinder\":39,\"./shapes/Heightfield\":40,\"./shapes/Particle\":41,\"./shapes/Plane\":42,\"./shapes/Shape\":43,\"./shapes/Sphere\":44,\"./shapes/Trimesh\":45,\"./solver/GSSolver\":46,\"./solver/Solver\":47,\"./solver/SplitSolver\":48,\"./utils/EventTarget\":49,\"./utils/Pool\":51,\"./utils/Vec3Pool\":54,\"./world/Narrowphase\":55,\"./world/World\":56}],3:[function(_dereq_,module,exports){\nvar Vec3 = _dereq_('../math/Vec3');\nvar Utils = _dereq_('../utils/Utils');\n\nmodule.exports = AABB;\n\n/**\n * Axis aligned bounding box class.\n * @class AABB\n * @constructor\n * @param {Object} [options]\n * @param {Vec3}   [options.upperBound]\n * @param {Vec3}   [options.lowerBound]\n */\nfunction AABB(options){\n    options = options || {};\n\n    /**\n     * The lower bound of the bounding box.\n     * @property lowerBound\n     * @type {Vec3}\n     */\n    this.lowerBound = new Vec3();\n    if(options.lowerBound){\n        this.lowerBound.copy(options.lowerBound);\n    }\n\n    /**\n     * The upper bound of the bounding box.\n     * @property upperBound\n     * @type {Vec3}\n     */\n    this.upperBound = new Vec3();\n    if(options.upperBound){\n        this.upperBound.copy(options.upperBound);\n    }\n}\n\nvar tmp = new Vec3();\n\n/**\n * Set the AABB bounds from a set of points.\n * @method setFromPoints\n * @param {Array} points An array of Vec3's.\n * @param {Vec3} position\n * @param {Quaternion} quaternion\n * @param {number} skinSize\n * @return {AABB} The self object\n */\nAABB.prototype.setFromPoints = function(points, position, quaternion, skinSize){\n    var l = this.lowerBound,\n        u = this.upperBound,\n        q = quaternion;\n\n    // Set to the first point\n    l.copy(points[0]);\n    if(q){\n        q.vmult(l, l);\n    }\n    u.copy(l);\n\n    for(var i = 1; i<points.length; i++){\n        var p = points[i];\n\n        if(q){\n            q.vmult(p, tmp);\n            p = tmp;\n        }\n\n        if(p.x > u.x){ u.x = p.x; }\n        if(p.x < l.x){ l.x = p.x; }\n        if(p.y > u.y){ u.y = p.y; }\n        if(p.y < l.y){ l.y = p.y; }\n        if(p.z > u.z){ u.z = p.z; }\n        if(p.z < l.z){ l.z = p.z; }\n    }\n\n    // Add offset\n    if (position) {\n        position.vadd(l, l);\n        position.vadd(u, u);\n    }\n\n    if(skinSize){\n        l.x -= skinSize;\n        l.y -= skinSize;\n        l.z -= skinSize;\n        u.x += skinSize;\n        u.y += skinSize;\n        u.z += skinSize;\n    }\n\n    return this;\n};\n\n/**\n * Copy bounds from an AABB to this AABB\n * @method copy\n * @param  {AABB} aabb Source to copy from\n * @return {AABB} The this object, for chainability\n */\nAABB.prototype.copy = function(aabb){\n    this.lowerBound.copy(aabb.lowerBound);\n    this.upperBound.copy(aabb.upperBound);\n    return this;\n};\n\n/**\n * Clone an AABB\n * @method clone\n */\nAABB.prototype.clone = function(){\n    return new AABB().copy(this);\n};\n\n/**\n * Extend this AABB so that it covers the given AABB too.\n * @method extend\n * @param  {AABB} aabb\n */\nAABB.prototype.extend = function(aabb){\n    // Extend lower bound\n    var l = aabb.lowerBound.x;\n    if(this.lowerBound.x > l){\n        this.lowerBound.x = l;\n    }\n\n    // Upper\n    var u = aabb.upperBound.x;\n    if(this.upperBound.x < u){\n        this.upperBound.x = u;\n    }\n\n    // Extend lower bound\n    var l = aabb.lowerBound.y;\n    if(this.lowerBound.y > l){\n        this.lowerBound.y = l;\n    }\n\n    // Upper\n    var u = aabb.upperBound.y;\n    if(this.upperBound.y < u){\n        this.upperBound.y = u;\n    }\n\n    // Extend lower bound\n    var l = aabb.lowerBound.z;\n    if(this.lowerBound.z > l){\n        this.lowerBound.z = l;\n    }\n\n    // Upper\n    var u = aabb.upperBound.z;\n    if(this.upperBound.z < u){\n        this.upperBound.z = u;\n    }\n};\n\n/**\n * Returns true if the given AABB overlaps this AABB.\n * @method overlaps\n * @param  {AABB} aabb\n * @return {Boolean}\n */\nAABB.prototype.overlaps = function(aabb){\n    var l1 = this.lowerBound,\n        u1 = this.upperBound,\n        l2 = aabb.lowerBound,\n        u2 = aabb.upperBound;\n\n    //      l2        u2\n    //      |---------|\n    // |--------|\n    // l1       u1\n\n    return ((l2.x <= u1.x && u1.x <= u2.x) || (l1.x <= u2.x && u2.x <= u1.x)) &&\n           ((l2.y <= u1.y && u1.y <= u2.y) || (l1.y <= u2.y && u2.y <= u1.y)) &&\n           ((l2.z <= u1.z && u1.z <= u2.z) || (l1.z <= u2.z && u2.z <= u1.z));\n};\n\n/**\n * Returns true if the given AABB is fully contained in this AABB.\n * @method contains\n * @param {AABB} aabb\n * @return {Boolean}\n */\nAABB.prototype.contains = function(aabb){\n    var l1 = this.lowerBound,\n        u1 = this.upperBound,\n        l2 = aabb.lowerBound,\n        u2 = aabb.upperBound;\n\n    //      l2        u2\n    //      |---------|\n    // |---------------|\n    // l1              u1\n\n    return (\n        (l1.x <= l2.x && u1.x >= u2.x) &&\n        (l1.y <= l2.y && u1.y >= u2.y) &&\n        (l1.z <= l2.z && u1.z >= u2.z)\n    );\n};\n\n/**\n * @method getCorners\n * @param {Vec3} a\n * @param {Vec3} b\n * @param {Vec3} c\n * @param {Vec3} d\n * @param {Vec3} e\n * @param {Vec3} f\n * @param {Vec3} g\n * @param {Vec3} h\n */\nAABB.prototype.getCorners = function(a, b, c, d, e, f, g, h){\n    var l = this.lowerBound,\n        u = this.upperBound;\n\n    a.copy(l);\n    b.set( u.x, l.y, l.z );\n    c.set( u.x, u.y, l.z );\n    d.set( l.x, u.y, u.z );\n    e.set( u.x, l.y, l.z );\n    f.set( l.x, u.y, l.z );\n    g.set( l.x, l.y, u.z );\n    h.copy(u);\n};\n\nvar transformIntoFrame_corners = [\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3()\n];\n\n/**\n * Get the representation of an AABB in another frame.\n * @method toLocalFrame\n * @param  {Transform} frame\n * @param  {AABB} target\n * @return {AABB} The \"target\" AABB object.\n */\nAABB.prototype.toLocalFrame = function(frame, target){\n\n    var corners = transformIntoFrame_corners;\n    var a = corners[0];\n    var b = corners[1];\n    var c = corners[2];\n    var d = corners[3];\n    var e = corners[4];\n    var f = corners[5];\n    var g = corners[6];\n    var h = corners[7];\n\n    // Get corners in current frame\n    this.getCorners(a, b, c, d, e, f, g, h);\n\n    // Transform them to new local frame\n    for(var i=0; i !== 8; i++){\n        var corner = corners[i];\n        frame.pointToLocal(corner, corner);\n    }\n\n    return target.setFromPoints(corners);\n};\n\n/**\n * Get the representation of an AABB in the global frame.\n * @method toWorldFrame\n * @param  {Transform} frame\n * @param  {AABB} target\n * @return {AABB} The \"target\" AABB object.\n */\nAABB.prototype.toWorldFrame = function(frame, target){\n\n    var corners = transformIntoFrame_corners;\n    var a = corners[0];\n    var b = corners[1];\n    var c = corners[2];\n    var d = corners[3];\n    var e = corners[4];\n    var f = corners[5];\n    var g = corners[6];\n    var h = corners[7];\n\n    // Get corners in current frame\n    this.getCorners(a, b, c, d, e, f, g, h);\n\n    // Transform them to new local frame\n    for(var i=0; i !== 8; i++){\n        var corner = corners[i];\n        frame.pointToWorld(corner, corner);\n    }\n\n    return target.setFromPoints(corners);\n};\n\n},{\"../math/Vec3\":30,\"../utils/Utils\":53}],4:[function(_dereq_,module,exports){\nmodule.exports = ArrayCollisionMatrix;\n\n/**\n * Collision \"matrix\". It's actually a triangular-shaped array of whether two bodies are touching this step, for reference next step\n * @class ArrayCollisionMatrix\n * @constructor\n */\nfunction ArrayCollisionMatrix() {\n\n    /**\n     * The matrix storage\n     * @property matrix\n     * @type {Array}\n     */\n\tthis.matrix = [];\n}\n\n/**\n * Get an element\n * @method get\n * @param  {Number} i\n * @param  {Number} j\n * @return {Number}\n */\nArrayCollisionMatrix.prototype.get = function(i, j) {\n\ti = i.index;\n\tj = j.index;\n    if (j > i) {\n        var temp = j;\n        j = i;\n        i = temp;\n    }\n\treturn this.matrix[(i*(i + 1)>>1) + j-1];\n};\n\n/**\n * Set an element\n * @method set\n * @param {Number} i\n * @param {Number} j\n * @param {Number} value\n */\nArrayCollisionMatrix.prototype.set = function(i, j, value) {\n\ti = i.index;\n\tj = j.index;\n    if (j > i) {\n        var temp = j;\n        j = i;\n        i = temp;\n    }\n\tthis.matrix[(i*(i + 1)>>1) + j-1] = value ? 1 : 0;\n};\n\n/**\n * Sets all elements to zero\n * @method reset\n */\nArrayCollisionMatrix.prototype.reset = function() {\n\tfor (var i=0, l=this.matrix.length; i!==l; i++) {\n\t\tthis.matrix[i]=0;\n\t}\n};\n\n/**\n * Sets the max number of objects\n * @method setNumObjects\n * @param {Number} n\n */\nArrayCollisionMatrix.prototype.setNumObjects = function(n) {\n\tthis.matrix.length = n*(n-1)>>1;\n};\n\n},{}],5:[function(_dereq_,module,exports){\nvar Body = _dereq_('../objects/Body');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar Shape = _dereq_('../shapes/Shape');\nvar Plane = _dereq_('../shapes/Plane');\n\nmodule.exports = Broadphase;\n\n/**\n * Base class for broadphase implementations\n * @class Broadphase\n * @constructor\n * @author schteppe\n */\nfunction Broadphase(){\n    /**\n    * The world to search for collisions in.\n    * @property world\n    * @type {World}\n    */\n    this.world = null;\n\n    /**\n     * If set to true, the broadphase uses bounding boxes for intersection test, else it uses bounding spheres.\n     * @property useBoundingBoxes\n     * @type {Boolean}\n     */\n    this.useBoundingBoxes = false;\n\n    /**\n     * Set to true if the objects in the world moved.\n     * @property {Boolean} dirty\n     */\n    this.dirty = true;\n}\n\n/**\n * Get the collision pairs from the world\n * @method collisionPairs\n * @param {World} world The world to search in\n * @param {Array} p1 Empty array to be filled with body objects\n * @param {Array} p2 Empty array to be filled with body objects\n */\nBroadphase.prototype.collisionPairs = function(world,p1,p2){\n    throw new Error(\"collisionPairs not implemented for this BroadPhase class!\");\n};\n\n/**\n * Check if a body pair needs to be intersection tested at all.\n * @method needBroadphaseCollision\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @return {bool}\n */\nvar Broadphase_needBroadphaseCollision_STATIC_OR_KINEMATIC = Body.STATIC | Body.KINEMATIC;\nBroadphase.prototype.needBroadphaseCollision = function(bodyA,bodyB){\n\n    // Check collision filter masks\n    if( (bodyA.collisionFilterGroup & bodyB.collisionFilterMask)===0 || (bodyB.collisionFilterGroup & bodyA.collisionFilterMask)===0){\n        return false;\n    }\n\n    // Check types\n    if(((bodyA.type & Broadphase_needBroadphaseCollision_STATIC_OR_KINEMATIC)!==0 || bodyA.sleepState === Body.SLEEPING) &&\n       ((bodyB.type & Broadphase_needBroadphaseCollision_STATIC_OR_KINEMATIC)!==0 || bodyB.sleepState === Body.SLEEPING)) {\n        // Both bodies are static, kinematic or sleeping. Skip.\n        return false;\n    }\n\n    return true;\n};\n\n/**\n * Check if the bounding volumes of two bodies intersect.\n * @method intersectionTest\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {array} pairs1\n * @param {array} pairs2\n  */\nBroadphase.prototype.intersectionTest = function(bodyA, bodyB, pairs1, pairs2){\n    if(this.useBoundingBoxes){\n        this.doBoundingBoxBroadphase(bodyA,bodyB,pairs1,pairs2);\n    } else {\n        this.doBoundingSphereBroadphase(bodyA,bodyB,pairs1,pairs2);\n    }\n};\n\n/**\n * Check if the bounding spheres of two bodies are intersecting.\n * @method doBoundingSphereBroadphase\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Array} pairs1 bodyA is appended to this array if intersection\n * @param {Array} pairs2 bodyB is appended to this array if intersection\n */\nvar Broadphase_collisionPairs_r = new Vec3(), // Temp objects\n    Broadphase_collisionPairs_normal =  new Vec3(),\n    Broadphase_collisionPairs_quat =  new Quaternion(),\n    Broadphase_collisionPairs_relpos  =  new Vec3();\nBroadphase.prototype.doBoundingSphereBroadphase = function(bodyA,bodyB,pairs1,pairs2){\n    var r = Broadphase_collisionPairs_r;\n    bodyB.position.vsub(bodyA.position,r);\n    var boundingRadiusSum2 = Math.pow(bodyA.boundingRadius + bodyB.boundingRadius, 2);\n    var norm2 = r.norm2();\n    if(norm2 < boundingRadiusSum2){\n        pairs1.push(bodyA);\n        pairs2.push(bodyB);\n    }\n};\n\n/**\n * Check if the bounding boxes of two bodies are intersecting.\n * @method doBoundingBoxBroadphase\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Array} pairs1\n * @param {Array} pairs2\n */\nBroadphase.prototype.doBoundingBoxBroadphase = function(bodyA,bodyB,pairs1,pairs2){\n    if(bodyA.aabbNeedsUpdate){\n        bodyA.computeAABB();\n    }\n    if(bodyB.aabbNeedsUpdate){\n        bodyB.computeAABB();\n    }\n\n    // Check AABB / AABB\n    if(bodyA.aabb.overlaps(bodyB.aabb)){\n        pairs1.push(bodyA);\n        pairs2.push(bodyB);\n    }\n};\n\n/**\n * Removes duplicate pairs from the pair arrays.\n * @method makePairsUnique\n * @param {Array} pairs1\n * @param {Array} pairs2\n */\nvar Broadphase_makePairsUnique_temp = { keys:[] },\n    Broadphase_makePairsUnique_p1 = [],\n    Broadphase_makePairsUnique_p2 = [];\nBroadphase.prototype.makePairsUnique = function(pairs1,pairs2){\n    var t = Broadphase_makePairsUnique_temp,\n        p1 = Broadphase_makePairsUnique_p1,\n        p2 = Broadphase_makePairsUnique_p2,\n        N = pairs1.length;\n\n    for(var i=0; i!==N; i++){\n        p1[i] = pairs1[i];\n        p2[i] = pairs2[i];\n    }\n\n    pairs1.length = 0;\n    pairs2.length = 0;\n\n    for(var i=0; i!==N; i++){\n        var id1 = p1[i].id,\n            id2 = p2[i].id;\n        var key = id1 < id2 ? id1+\",\"+id2 :  id2+\",\"+id1;\n        t[key] = i;\n        t.keys.push(key);\n    }\n\n    for(var i=0; i!==t.keys.length; i++){\n        var key = t.keys.pop(),\n            pairIndex = t[key];\n        pairs1.push(p1[pairIndex]);\n        pairs2.push(p2[pairIndex]);\n        delete t[key];\n    }\n};\n\n/**\n * To be implemented by subcasses\n * @method setWorld\n * @param {World} world\n */\nBroadphase.prototype.setWorld = function(world){\n};\n\n/**\n * Check if the bounding spheres of two bodies overlap.\n * @method boundingSphereCheck\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @return {boolean}\n */\nvar bsc_dist = new Vec3();\nBroadphase.boundingSphereCheck = function(bodyA,bodyB){\n    var dist = bsc_dist;\n    bodyA.position.vsub(bodyB.position,dist);\n    return Math.pow(bodyA.shape.boundingSphereRadius + bodyB.shape.boundingSphereRadius,2) > dist.norm2();\n};\n\n/**\n * Returns all the bodies within the AABB.\n * @method aabbQuery\n * @param  {World} world\n * @param  {AABB} aabb\n * @param  {array} result An array to store resulting bodies in.\n * @return {array}\n */\nBroadphase.prototype.aabbQuery = function(world, aabb, result){\n    console.warn('.aabbQuery is not implemented in this Broadphase subclass.');\n    return [];\n};\n},{\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/Body\":31,\"../shapes/Plane\":42,\"../shapes/Shape\":43}],6:[function(_dereq_,module,exports){\nmodule.exports = GridBroadphase;\n\nvar Broadphase = _dereq_('./Broadphase');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Shape = _dereq_('../shapes/Shape');\n\n/**\n * Axis aligned uniform grid broadphase.\n * @class GridBroadphase\n * @constructor\n * @extends Broadphase\n * @todo Needs support for more than just planes and spheres.\n * @param {Vec3} aabbMin\n * @param {Vec3} aabbMax\n * @param {Number} nx Number of boxes along x\n * @param {Number} ny Number of boxes along y\n * @param {Number} nz Number of boxes along z\n */\nfunction GridBroadphase(aabbMin,aabbMax,nx,ny,nz){\n    Broadphase.apply(this);\n    this.nx = nx || 10;\n    this.ny = ny || 10;\n    this.nz = nz || 10;\n    this.aabbMin = aabbMin || new Vec3(100,100,100);\n    this.aabbMax = aabbMax || new Vec3(-100,-100,-100);\n\tvar nbins = this.nx * this.ny * this.nz;\n\tif (nbins <= 0) {\n\t\tthrow \"GridBroadphase: Each dimension's n must be >0\";\n\t}\n    this.bins = [];\n\tthis.binLengths = []; //Rather than continually resizing arrays (thrashing the memory), just record length and allow them to grow\n\tthis.bins.length = nbins;\n\tthis.binLengths.length = nbins;\n\tfor (var i=0;i<nbins;i++) {\n\t\tthis.bins[i]=[];\n\t\tthis.binLengths[i]=0;\n\t}\n}\nGridBroadphase.prototype = new Broadphase();\nGridBroadphase.prototype.constructor = GridBroadphase;\n\n/**\n * Get all the collision pairs in the physics world\n * @method collisionPairs\n * @param {World} world\n * @param {Array} pairs1\n * @param {Array} pairs2\n */\nvar GridBroadphase_collisionPairs_d = new Vec3();\nvar GridBroadphase_collisionPairs_binPos = new Vec3();\nGridBroadphase.prototype.collisionPairs = function(world,pairs1,pairs2){\n    var N = world.numObjects(),\n        bodies = world.bodies;\n\n    var max = this.aabbMax,\n        min = this.aabbMin,\n        nx = this.nx,\n        ny = this.ny,\n        nz = this.nz;\n\n\tvar xstep = ny*nz;\n\tvar ystep = nz;\n\tvar zstep = 1;\n\n    var xmax = max.x,\n        ymax = max.y,\n        zmax = max.z,\n        xmin = min.x,\n        ymin = min.y,\n        zmin = min.z;\n\n    var xmult = nx / (xmax-xmin),\n        ymult = ny / (ymax-ymin),\n        zmult = nz / (zmax-zmin);\n\n    var binsizeX = (xmax - xmin) / nx,\n        binsizeY = (ymax - ymin) / ny,\n        binsizeZ = (zmax - zmin) / nz;\n\n\tvar binRadius = Math.sqrt(binsizeX*binsizeX + binsizeY*binsizeY + binsizeZ*binsizeZ) * 0.5;\n\n    var types = Shape.types;\n    var SPHERE =            types.SPHERE,\n        PLANE =             types.PLANE,\n        BOX =               types.BOX,\n        COMPOUND =          types.COMPOUND,\n        CONVEXPOLYHEDRON =  types.CONVEXPOLYHEDRON;\n\n    var bins=this.bins,\n\t\tbinLengths=this.binLengths,\n        Nbins=this.bins.length;\n\n    // Reset bins\n    for(var i=0; i!==Nbins; i++){\n        binLengths[i] = 0;\n    }\n\n    var ceil = Math.ceil;\n\tvar min = Math.min;\n\tvar max = Math.max;\n\n\tfunction addBoxToBins(x0,y0,z0,x1,y1,z1,bi) {\n\t\tvar xoff0 = ((x0 - xmin) * xmult)|0,\n\t\t\tyoff0 = ((y0 - ymin) * ymult)|0,\n\t\t\tzoff0 = ((z0 - zmin) * zmult)|0,\n\t\t\txoff1 = ceil((x1 - xmin) * xmult),\n\t\t\tyoff1 = ceil((y1 - ymin) * ymult),\n\t\t\tzoff1 = ceil((z1 - zmin) * zmult);\n\n\t\tif (xoff0 < 0) { xoff0 = 0; } else if (xoff0 >= nx) { xoff0 = nx - 1; }\n\t\tif (yoff0 < 0) { yoff0 = 0; } else if (yoff0 >= ny) { yoff0 = ny - 1; }\n\t\tif (zoff0 < 0) { zoff0 = 0; } else if (zoff0 >= nz) { zoff0 = nz - 1; }\n\t\tif (xoff1 < 0) { xoff1 = 0; } else if (xoff1 >= nx) { xoff1 = nx - 1; }\n\t\tif (yoff1 < 0) { yoff1 = 0; } else if (yoff1 >= ny) { yoff1 = ny - 1; }\n\t\tif (zoff1 < 0) { zoff1 = 0; } else if (zoff1 >= nz) { zoff1 = nz - 1; }\n\n\t\txoff0 *= xstep;\n\t\tyoff0 *= ystep;\n\t\tzoff0 *= zstep;\n\t\txoff1 *= xstep;\n\t\tyoff1 *= ystep;\n\t\tzoff1 *= zstep;\n\n\t\tfor (var xoff = xoff0; xoff <= xoff1; xoff += xstep) {\n\t\t\tfor (var yoff = yoff0; yoff <= yoff1; yoff += ystep) {\n\t\t\t\tfor (var zoff = zoff0; zoff <= zoff1; zoff += zstep) {\n\t\t\t\t\tvar idx = xoff+yoff+zoff;\n\t\t\t\t\tbins[idx][binLengths[idx]++] = bi;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n    // Put all bodies into the bins\n    for(var i=0; i!==N; i++){\n        var bi = bodies[i];\n        var si = bi.shape;\n\n        switch(si.type){\n        case SPHERE:\n            // Put in bin\n            // check if overlap with other bins\n            var x = bi.position.x,\n                y = bi.position.y,\n                z = bi.position.z;\n            var r = si.radius;\n\n\t\t\taddBoxToBins(x-r, y-r, z-r, x+r, y+r, z+r, bi);\n            break;\n\n        case PLANE:\n            if(si.worldNormalNeedsUpdate){\n                si.computeWorldNormal(bi.quaternion);\n            }\n            var planeNormal = si.worldNormal;\n\n\t\t\t//Relative position from origin of plane object to the first bin\n\t\t\t//Incremented as we iterate through the bins\n\t\t\tvar xreset = xmin + binsizeX*0.5 - bi.position.x,\n\t\t\t\tyreset = ymin + binsizeY*0.5 - bi.position.y,\n\t\t\t\tzreset = zmin + binsizeZ*0.5 - bi.position.z;\n\n            var d = GridBroadphase_collisionPairs_d;\n\t\t\td.set(xreset, yreset, zreset);\n\n\t\t\tfor (var xi = 0, xoff = 0; xi !== nx; xi++, xoff += xstep, d.y = yreset, d.x += binsizeX) {\n\t\t\t\tfor (var yi = 0, yoff = 0; yi !== ny; yi++, yoff += ystep, d.z = zreset, d.y += binsizeY) {\n\t\t\t\t\tfor (var zi = 0, zoff = 0; zi !== nz; zi++, zoff += zstep, d.z += binsizeZ) {\n\t\t\t\t\t\tif (d.dot(planeNormal) < binRadius) {\n\t\t\t\t\t\t\tvar idx = xoff + yoff + zoff;\n\t\t\t\t\t\t\tbins[idx][binLengths[idx]++] = bi;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n            break;\n\n        default:\n\t\t\tif (bi.aabbNeedsUpdate) {\n\t\t\t\tbi.computeAABB();\n\t\t\t}\n\n\t\t\taddBoxToBins(\n\t\t\t\tbi.aabb.lowerBound.x,\n\t\t\t\tbi.aabb.lowerBound.y,\n\t\t\t\tbi.aabb.lowerBound.z,\n\t\t\t\tbi.aabb.upperBound.x,\n\t\t\t\tbi.aabb.upperBound.y,\n\t\t\t\tbi.aabb.upperBound.z,\n\t\t\t\tbi);\n            break;\n        }\n    }\n\n    // Check each bin\n    for(var i=0; i!==Nbins; i++){\n\t\tvar binLength = binLengths[i];\n\t\t//Skip bins with no potential collisions\n\t\tif (binLength > 1) {\n\t\t\tvar bin = bins[i];\n\n\t\t\t// Do N^2 broadphase inside\n\t\t\tfor(var xi=0; xi!==binLength; xi++){\n\t\t\t\tvar bi = bin[xi];\n\t\t\t\tfor(var yi=0; yi!==xi; yi++){\n\t\t\t\t\tvar bj = bin[yi];\n\t\t\t\t\tif(this.needBroadphaseCollision(bi,bj)){\n\t\t\t\t\t\tthis.intersectionTest(bi,bj,pairs1,pairs2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n    }\n\n//\tfor (var zi = 0, zoff=0; zi < nz; zi++, zoff+= zstep) {\n//\t\tconsole.log(\"layer \"+zi);\n//\t\tfor (var yi = 0, yoff=0; yi < ny; yi++, yoff += ystep) {\n//\t\t\tvar row = '';\n//\t\t\tfor (var xi = 0, xoff=0; xi < nx; xi++, xoff += xstep) {\n//\t\t\t\tvar idx = xoff + yoff + zoff;\n//\t\t\t\trow += ' ' + binLengths[idx];\n//\t\t\t}\n//\t\t\tconsole.log(row);\n//\t\t}\n//\t}\n\n    this.makePairsUnique(pairs1,pairs2);\n};\n\n},{\"../math/Vec3\":30,\"../shapes/Shape\":43,\"./Broadphase\":5}],7:[function(_dereq_,module,exports){\nmodule.exports = NaiveBroadphase;\n\nvar Broadphase = _dereq_('./Broadphase');\nvar AABB = _dereq_('./AABB');\n\n/**\n * Naive broadphase implementation, used in lack of better ones.\n * @class NaiveBroadphase\n * @constructor\n * @description The naive broadphase looks at all possible pairs without restriction, therefore it has complexity N^2 (which is bad)\n * @extends Broadphase\n */\nfunction NaiveBroadphase(){\n    Broadphase.apply(this);\n}\nNaiveBroadphase.prototype = new Broadphase();\nNaiveBroadphase.prototype.constructor = NaiveBroadphase;\n\n/**\n * Get all the collision pairs in the physics world\n * @method collisionPairs\n * @param {World} world\n * @param {Array} pairs1\n * @param {Array} pairs2\n */\nNaiveBroadphase.prototype.collisionPairs = function(world,pairs1,pairs2){\n    var bodies = world.bodies,\n        n = bodies.length,\n        i,j,bi,bj;\n\n    // Naive N^2 ftw!\n    for(i=0; i!==n; i++){\n        for(j=0; j!==i; j++){\n\n            bi = bodies[i];\n            bj = bodies[j];\n\n            if(!this.needBroadphaseCollision(bi,bj)){\n                continue;\n            }\n\n            this.intersectionTest(bi,bj,pairs1,pairs2);\n        }\n    }\n};\n\nvar tmpAABB = new AABB();\n\n/**\n * Returns all the bodies within an AABB.\n * @method aabbQuery\n * @param  {World} world\n * @param  {AABB} aabb\n * @param {array} result An array to store resulting bodies in.\n * @return {array}\n */\nNaiveBroadphase.prototype.aabbQuery = function(world, aabb, result){\n    result = result || [];\n\n    for(var i = 0; i < world.bodies.length; i++){\n        var b = world.bodies[i];\n\n        if(b.aabbNeedsUpdate){\n            b.computeAABB();\n        }\n\n        // Ugly hack until Body gets aabb\n        if(b.aabb.overlaps(aabb)){\n            result.push(b);\n        }\n    }\n\n    return result;\n};\n},{\"./AABB\":3,\"./Broadphase\":5}],8:[function(_dereq_,module,exports){\nmodule.exports = ObjectCollisionMatrix;\n\n/**\n * Records what objects are colliding with each other\n * @class ObjectCollisionMatrix\n * @constructor\n */\nfunction ObjectCollisionMatrix() {\n\n    /**\n     * The matrix storage\n     * @property matrix\n     * @type {Object}\n     */\n\tthis.matrix = {};\n}\n\n/**\n * @method get\n * @param  {Number} i\n * @param  {Number} j\n * @return {Number}\n */\nObjectCollisionMatrix.prototype.get = function(i, j) {\n\ti = i.id;\n\tj = j.id;\n    if (j > i) {\n        var temp = j;\n        j = i;\n        i = temp;\n    }\n\treturn i+'-'+j in this.matrix;\n};\n\n/**\n * @method set\n * @param  {Number} i\n * @param  {Number} j\n * @param {Number} value\n */\nObjectCollisionMatrix.prototype.set = function(i, j, value) {\n\ti = i.id;\n\tj = j.id;\n    if (j > i) {\n        var temp = j;\n        j = i;\n        i = temp;\n\t}\n\tif (value) {\n\t\tthis.matrix[i+'-'+j] = true;\n\t}\n\telse {\n\t\tdelete this.matrix[i+'-'+j];\n\t}\n};\n\n/**\n * Empty the matrix\n * @method reset\n */\nObjectCollisionMatrix.prototype.reset = function() {\n\tthis.matrix = {};\n};\n\n/**\n * Set max number of objects\n * @method setNumObjects\n * @param {Number} n\n */\nObjectCollisionMatrix.prototype.setNumObjects = function(n) {\n};\n\n},{}],9:[function(_dereq_,module,exports){\nmodule.exports = Ray;\n\nvar Vec3 = _dereq_('../math/Vec3');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar Transform = _dereq_('../math/Transform');\nvar ConvexPolyhedron = _dereq_('../shapes/ConvexPolyhedron');\nvar Box = _dereq_('../shapes/Box');\nvar RaycastResult = _dereq_('../collision/RaycastResult');\nvar Shape = _dereq_('../shapes/Shape');\nvar AABB = _dereq_('../collision/AABB');\n\n/**\n * A line in 3D space that intersects bodies and return points.\n * @class Ray\n * @constructor\n * @param {Vec3} from\n * @param {Vec3} to\n */\nfunction Ray(from, to){\n    /**\n     * @property {Vec3} from\n     */\n    this.from = from ? from.clone() : new Vec3();\n\n    /**\n     * @property {Vec3} to\n     */\n    this.to = to ? to.clone() : new Vec3();\n\n    /**\n     * @private\n     * @property {Vec3} _direction\n     */\n    this._direction = new Vec3();\n\n    /**\n     * The precision of the ray. Used when checking parallelity etc.\n     * @property {Number} precision\n     */\n    this.precision = 0.0001;\n\n    /**\n     * Set to true if you want the Ray to take .collisionResponse flags into account on bodies and shapes.\n     * @property {Boolean} checkCollisionResponse\n     */\n    this.checkCollisionResponse = true;\n\n    /**\n     * If set to true, the ray skips any hits with normal.dot(rayDirection) < 0.\n     * @property {Boolean} skipBackfaces\n     */\n    this.skipBackfaces = false;\n\n    /**\n     * @property {number} collisionFilterMask\n     * @default -1\n     */\n    this.collisionFilterMask = -1;\n\n    /**\n     * @property {number} collisionFilterGroup\n     * @default -1\n     */\n    this.collisionFilterGroup = -1;\n\n    /**\n     * The intersection mode. Should be Ray.ANY, Ray.ALL or Ray.CLOSEST.\n     * @property {number} mode\n     */\n    this.mode = Ray.ANY;\n\n    /**\n     * Current result object.\n     * @property {RaycastResult} result\n     */\n    this.result = new RaycastResult();\n\n    /**\n     * Will be set to true during intersectWorld() if the ray hit anything.\n     * @property {Boolean} hasHit\n     */\n    this.hasHit = false;\n\n    /**\n     * Current, user-provided result callback. Will be used if mode is Ray.ALL.\n     * @property {Function} callback\n     */\n    this.callback = function(result){};\n}\nRay.prototype.constructor = Ray;\n\nRay.CLOSEST = 1;\nRay.ANY = 2;\nRay.ALL = 4;\n\nvar tmpAABB = new AABB();\nvar tmpArray = [];\n\n/**\n * Do itersection against all bodies in the given World.\n * @method intersectWorld\n * @param  {World} world\n * @param  {object} options\n * @return {Boolean} True if the ray hit anything, otherwise false.\n */\nRay.prototype.intersectWorld = function (world, options) {\n    this.mode = options.mode || Ray.ANY;\n    this.result = options.result || new RaycastResult();\n    this.skipBackfaces = !!options.skipBackfaces;\n    this.collisionFilterMask = typeof(options.collisionFilterMask) !== 'undefined' ? options.collisionFilterMask : -1;\n    this.collisionFilterGroup = typeof(options.collisionFilterGroup) !== 'undefined' ? options.collisionFilterGroup : -1;\n    if(options.from){\n        this.from.copy(options.from);\n    }\n    if(options.to){\n        this.to.copy(options.to);\n    }\n    this.callback = options.callback || function(){};\n    this.hasHit = false;\n\n    this.result.reset();\n    this._updateDirection();\n\n    this.getAABB(tmpAABB);\n    tmpArray.length = 0;\n    world.broadphase.aabbQuery(world, tmpAABB, tmpArray);\n    this.intersectBodies(tmpArray);\n\n    return this.hasHit;\n};\n\nvar v1 = new Vec3(),\n    v2 = new Vec3();\n\n/*\n * As per \"Barycentric Technique\" as named here http://www.blackpawn.com/texts/pointinpoly/default.html But without the division\n */\nRay.pointInTriangle = pointInTriangle;\nfunction pointInTriangle(p, a, b, c) {\n    c.vsub(a,v0);\n    b.vsub(a,v1);\n    p.vsub(a,v2);\n\n    var dot00 = v0.dot( v0 );\n    var dot01 = v0.dot( v1 );\n    var dot02 = v0.dot( v2 );\n    var dot11 = v1.dot( v1 );\n    var dot12 = v1.dot( v2 );\n\n    var u,v;\n\n    return  ( (u = dot11 * dot02 - dot01 * dot12) >= 0 ) &&\n            ( (v = dot00 * dot12 - dot01 * dot02) >= 0 ) &&\n            ( u + v < ( dot00 * dot11 - dot01 * dot01 ) );\n}\n\n/**\n * Shoot a ray at a body, get back information about the hit.\n * @method intersectBody\n * @private\n * @param {Body} body\n * @param {RaycastResult} [result] Deprecated - set the result property of the Ray instead.\n */\nvar intersectBody_xi = new Vec3();\nvar intersectBody_qi = new Quaternion();\nRay.prototype.intersectBody = function (body, result) {\n    if(result){\n        this.result = result;\n        this._updateDirection();\n    }\n    var checkCollisionResponse = this.checkCollisionResponse;\n\n    if(checkCollisionResponse && !body.collisionResponse){\n        return;\n    }\n\n    if((this.collisionFilterGroup & body.collisionFilterMask)===0 || (body.collisionFilterGroup & this.collisionFilterMask)===0){\n        return;\n    }\n\n    var xi = intersectBody_xi;\n    var qi = intersectBody_qi;\n\n    for (var i = 0, N = body.shapes.length; i < N; i++) {\n        var shape = body.shapes[i];\n\n        if(checkCollisionResponse && !shape.collisionResponse){\n            continue; // Skip\n        }\n\n        body.quaternion.mult(body.shapeOrientations[i], qi);\n        body.quaternion.vmult(body.shapeOffsets[i], xi);\n        xi.vadd(body.position, xi);\n\n        this.intersectShape(\n            shape,\n            qi,\n            xi,\n            body\n        );\n\n        if(this.result._shouldStop){\n            break;\n        }\n    }\n};\n\n/**\n * @method intersectBodies\n * @param {Array} bodies An array of Body objects.\n * @param {RaycastResult} [result] Deprecated\n */\nRay.prototype.intersectBodies = function (bodies, result) {\n    if(result){\n        this.result = result;\n        this._updateDirection();\n    }\n\n    for ( var i = 0, l = bodies.length; !this.result._shouldStop && i < l; i ++ ) {\n        this.intersectBody(bodies[i]);\n    }\n};\n\n/**\n * Updates the _direction vector.\n * @private\n * @method _updateDirection\n */\nRay.prototype._updateDirection = function(){\n    this.to.vsub(this.from, this._direction);\n    this._direction.normalize();\n};\n\n/**\n * @method intersectShape\n * @private\n * @param {Shape} shape\n * @param {Quaternion} quat\n * @param {Vec3} position\n * @param {Body} body\n */\nRay.prototype.intersectShape = function(shape, quat, position, body){\n    var from = this.from;\n\n\n    // Checking boundingSphere\n    var distance = distanceFromIntersection(from, this._direction, position);\n    if ( distance > shape.boundingSphereRadius ) {\n        return;\n    }\n\n    var intersectMethod = this[shape.type];\n    if(intersectMethod){\n        intersectMethod.call(this, shape, quat, position, body);\n    }\n};\n\nvar vector = new Vec3();\nvar normal = new Vec3();\nvar intersectPoint = new Vec3();\n\nvar a = new Vec3();\nvar b = new Vec3();\nvar c = new Vec3();\nvar d = new Vec3();\n\nvar tmpRaycastResult = new RaycastResult();\n\n/**\n * @method intersectBox\n * @private\n * @param  {Shape} shape\n * @param  {Quaternion} quat\n * @param  {Vec3} position\n * @param  {Body} body\n */\nRay.prototype.intersectBox = function(shape, quat, position, body){\n    return this.intersectConvex(shape.convexPolyhedronRepresentation, quat, position, body);\n};\nRay.prototype[Shape.types.BOX] = Ray.prototype.intersectBox;\n\n/**\n * @method intersectPlane\n * @private\n * @param  {Shape} shape\n * @param  {Quaternion} quat\n * @param  {Vec3} position\n * @param  {Body} body\n */\nRay.prototype.intersectPlane = function(shape, quat, position, body){\n    var from = this.from;\n    var to = this.to;\n    var direction = this._direction;\n\n    // Get plane normal\n    var worldNormal = new Vec3(0, 0, 1);\n    quat.vmult(worldNormal, worldNormal);\n\n    var len = new Vec3();\n    from.vsub(position, len);\n    var planeToFrom = len.dot(worldNormal);\n    to.vsub(position, len);\n    var planeToTo = len.dot(worldNormal);\n\n    if(planeToFrom * planeToTo > 0){\n        // \"from\" and \"to\" are on the same side of the plane... bail out\n        return;\n    }\n\n    if(from.distanceTo(to) < planeToFrom){\n        return;\n    }\n\n    var n_dot_dir = worldNormal.dot(direction);\n\n    if (Math.abs(n_dot_dir) < this.precision) {\n        // No intersection\n        return;\n    }\n\n    var planePointToFrom = new Vec3();\n    var dir_scaled_with_t = new Vec3();\n    var hitPointWorld = new Vec3();\n\n    from.vsub(position, planePointToFrom);\n    var t = -worldNormal.dot(planePointToFrom) / n_dot_dir;\n    direction.scale(t, dir_scaled_with_t);\n    from.vadd(dir_scaled_with_t, hitPointWorld);\n\n    this.reportIntersection(worldNormal, hitPointWorld, shape, body, -1);\n};\nRay.prototype[Shape.types.PLANE] = Ray.prototype.intersectPlane;\n\n/**\n * Get the world AABB of the ray.\n * @method getAABB\n * @param  {AABB} aabb\n */\nRay.prototype.getAABB = function(result){\n    var to = this.to;\n    var from = this.from;\n    result.lowerBound.x = Math.min(to.x, from.x);\n    result.lowerBound.y = Math.min(to.y, from.y);\n    result.lowerBound.z = Math.min(to.z, from.z);\n    result.upperBound.x = Math.max(to.x, from.x);\n    result.upperBound.y = Math.max(to.y, from.y);\n    result.upperBound.z = Math.max(to.z, from.z);\n};\n\nvar intersectConvexOptions = {\n    faceList: [0]\n};\n\n/**\n * @method intersectHeightfield\n * @private\n * @param  {Shape} shape\n * @param  {Quaternion} quat\n * @param  {Vec3} position\n * @param  {Body} body\n */\nRay.prototype.intersectHeightfield = function(shape, quat, position, body){\n    var data = shape.data,\n        w = shape.elementSize,\n        worldPillarOffset = new Vec3();\n\n    // Convert the ray to local heightfield coordinates\n    var localRay = new Ray(this.from, this.to);\n    Transform.pointToLocalFrame(position, quat, localRay.from, localRay.from);\n    Transform.pointToLocalFrame(position, quat, localRay.to, localRay.to);\n\n    // Get the index of the data points to test against\n    var index = [];\n    var iMinX = null;\n    var iMinY = null;\n    var iMaxX = null;\n    var iMaxY = null;\n\n    var inside = shape.getIndexOfPosition(localRay.from.x, localRay.from.y, index, false);\n    if(inside){\n        iMinX = index[0];\n        iMinY = index[1];\n        iMaxX = index[0];\n        iMaxY = index[1];\n    }\n    inside = shape.getIndexOfPosition(localRay.to.x, localRay.to.y, index, false);\n    if(inside){\n        if (iMinX === null || index[0] < iMinX) { iMinX = index[0]; }\n        if (iMaxX === null || index[0] > iMaxX) { iMaxX = index[0]; }\n        if (iMinY === null || index[1] < iMinY) { iMinY = index[1]; }\n        if (iMaxY === null || index[1] > iMaxY) { iMaxY = index[1]; }\n    }\n\n    if(iMinX === null){\n        return;\n    }\n\n    var minMax = [];\n    shape.getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, minMax);\n    var min = minMax[0];\n    var max = minMax[1];\n\n    // // Bail out if the ray can't touch the bounding box\n    // // TODO\n    // var aabb = new AABB();\n    // this.getAABB(aabb);\n    // if(aabb.intersects()){\n    //     return;\n    // }\n\n    for(var i = iMinX; i <= iMaxX; i++){\n        for(var j = iMinY; j <= iMaxY; j++){\n\n            if(this.result._shouldStop){\n                return;\n            }\n\n            // Lower triangle\n            shape.getConvexTrianglePillar(i, j, false);\n            Transform.pointToWorldFrame(position, quat, shape.pillarOffset, worldPillarOffset);\n            this.intersectConvex(shape.pillarConvex, quat, worldPillarOffset, body, intersectConvexOptions);\n\n            if(this.result._shouldStop){\n                return;\n            }\n\n            // Upper triangle\n            shape.getConvexTrianglePillar(i, j, true);\n            Transform.pointToWorldFrame(position, quat, shape.pillarOffset, worldPillarOffset);\n            this.intersectConvex(shape.pillarConvex, quat, worldPillarOffset, body, intersectConvexOptions);\n        }\n    }\n};\nRay.prototype[Shape.types.HEIGHTFIELD] = Ray.prototype.intersectHeightfield;\n\nvar Ray_intersectSphere_intersectionPoint = new Vec3();\nvar Ray_intersectSphere_normal = new Vec3();\n\n/**\n * @method intersectSphere\n * @private\n * @param  {Shape} shape\n * @param  {Quaternion} quat\n * @param  {Vec3} position\n * @param  {Body} body\n */\nRay.prototype.intersectSphere = function(shape, quat, position, body){\n    var from = this.from,\n        to = this.to,\n        r = shape.radius;\n\n    var a = Math.pow(to.x - from.x, 2) + Math.pow(to.y - from.y, 2) + Math.pow(to.z - from.z, 2);\n    var b = 2 * ((to.x - from.x) * (from.x - position.x) + (to.y - from.y) * (from.y - position.y) + (to.z - from.z) * (from.z - position.z));\n    var c = Math.pow(from.x - position.x, 2) + Math.pow(from.y - position.y, 2) + Math.pow(from.z - position.z, 2) - Math.pow(r, 2);\n\n    var delta = Math.pow(b, 2) - 4 * a * c;\n\n    var intersectionPoint = Ray_intersectSphere_intersectionPoint;\n    var normal = Ray_intersectSphere_normal;\n\n    if(delta < 0){\n        // No intersection\n        return;\n\n    } else if(delta === 0){\n        // single intersection point\n        from.lerp(to, delta, intersectionPoint);\n\n        intersectionPoint.vsub(position, normal);\n        normal.normalize();\n\n        this.reportIntersection(normal, intersectionPoint, shape, body, -1);\n\n    } else {\n        var d1 = (- b - Math.sqrt(delta)) / (2 * a);\n        var d2 = (- b + Math.sqrt(delta)) / (2 * a);\n\n        if(d1 >= 0 && d1 <= 1){\n            from.lerp(to, d1, intersectionPoint);\n            intersectionPoint.vsub(position, normal);\n            normal.normalize();\n            this.reportIntersection(normal, intersectionPoint, shape, body, -1);\n        }\n\n        if(this.result._shouldStop){\n            return;\n        }\n\n        if(d2 >= 0 && d2 <= 1){\n            from.lerp(to, d2, intersectionPoint);\n            intersectionPoint.vsub(position, normal);\n            normal.normalize();\n            this.reportIntersection(normal, intersectionPoint, shape, body, -1);\n        }\n    }\n};\nRay.prototype[Shape.types.SPHERE] = Ray.prototype.intersectSphere;\n\n\nvar intersectConvex_normal = new Vec3();\nvar intersectConvex_minDistNormal = new Vec3();\nvar intersectConvex_minDistIntersect = new Vec3();\nvar intersectConvex_vector = new Vec3();\n\n/**\n * @method intersectConvex\n * @private\n * @param  {Shape} shape\n * @param  {Quaternion} quat\n * @param  {Vec3} position\n * @param  {Body} body\n * @param {object} [options]\n * @param {array} [options.faceList]\n */\nRay.prototype.intersectConvex = function intersectConvex(\n    shape,\n    quat,\n    position,\n    body,\n    options\n){\n    var minDistNormal = intersectConvex_minDistNormal;\n    var normal = intersectConvex_normal;\n    var vector = intersectConvex_vector;\n    var minDistIntersect = intersectConvex_minDistIntersect;\n    var faceList = (options && options.faceList) || null;\n\n    // Checking faces\n    var faces = shape.faces,\n        vertices = shape.vertices,\n        normals = shape.faceNormals;\n    var direction = this._direction;\n\n    var from = this.from;\n    var to = this.to;\n    var fromToDistance = from.distanceTo(to);\n\n    var minDist = -1;\n    var Nfaces = faceList ? faceList.length : faces.length;\n    var result = this.result;\n\n    for (var j = 0; !result._shouldStop && j < Nfaces; j++) {\n        var fi = faceList ? faceList[j] : j;\n\n        var face = faces[fi];\n        var faceNormal = normals[fi];\n        var q = quat;\n        var x = position;\n\n        // determine if ray intersects the plane of the face\n        // note: this works regardless of the direction of the face normal\n\n        // Get plane point in world coordinates...\n        vector.copy(vertices[face[0]]);\n        q.vmult(vector,vector);\n        vector.vadd(x,vector);\n\n        // ...but make it relative to the ray from. We'll fix this later.\n        vector.vsub(from,vector);\n\n        // Get plane normal\n        q.vmult(faceNormal,normal);\n\n        // If this dot product is negative, we have something interesting\n        var dot = direction.dot(normal);\n\n        // Bail out if ray and plane are parallel\n        if ( Math.abs( dot ) < this.precision ){\n            continue;\n        }\n\n        // calc distance to plane\n        var scalar = normal.dot(vector) / dot;\n\n        // if negative distance, then plane is behind ray\n        if (scalar < 0){\n            continue;\n        }\n\n        // if (dot < 0) {\n\n        // Intersection point is from + direction * scalar\n        direction.mult(scalar,intersectPoint);\n        intersectPoint.vadd(from,intersectPoint);\n\n        // a is the point we compare points b and c with.\n        a.copy(vertices[face[0]]);\n        q.vmult(a,a);\n        x.vadd(a,a);\n\n        for(var i = 1; !result._shouldStop && i < face.length - 1; i++){\n            // Transform 3 vertices to world coords\n            b.copy(vertices[face[i]]);\n            c.copy(vertices[face[i+1]]);\n            q.vmult(b,b);\n            q.vmult(c,c);\n            x.vadd(b,b);\n            x.vadd(c,c);\n\n            var distance = intersectPoint.distanceTo(from);\n\n            if(!(pointInTriangle(intersectPoint, a, b, c) || pointInTriangle(intersectPoint, b, a, c)) || distance > fromToDistance){\n                continue;\n            }\n\n            this.reportIntersection(normal, intersectPoint, shape, body, fi);\n        }\n        // }\n    }\n};\nRay.prototype[Shape.types.CONVEXPOLYHEDRON] = Ray.prototype.intersectConvex;\n\nvar intersectTrimesh_normal = new Vec3();\nvar intersectTrimesh_localDirection = new Vec3();\nvar intersectTrimesh_localFrom = new Vec3();\nvar intersectTrimesh_localTo = new Vec3();\nvar intersectTrimesh_worldNormal = new Vec3();\nvar intersectTrimesh_worldIntersectPoint = new Vec3();\nvar intersectTrimesh_localAABB = new AABB();\nvar intersectTrimesh_triangles = [];\nvar intersectTrimesh_treeTransform = new Transform();\n\n/**\n * @method intersectTrimesh\n * @private\n * @param  {Shape} shape\n * @param  {Quaternion} quat\n * @param  {Vec3} position\n * @param  {Body} body\n * @param {object} [options]\n * @todo Optimize by transforming the world to local space first.\n * @todo Use Octree lookup\n */\nRay.prototype.intersectTrimesh = function intersectTrimesh(\n    mesh,\n    quat,\n    position,\n    body,\n    options\n){\n    var normal = intersectTrimesh_normal;\n    var triangles = intersectTrimesh_triangles;\n    var treeTransform = intersectTrimesh_treeTransform;\n    var minDistNormal = intersectConvex_minDistNormal;\n    var vector = intersectConvex_vector;\n    var minDistIntersect = intersectConvex_minDistIntersect;\n    var localAABB = intersectTrimesh_localAABB;\n    var localDirection = intersectTrimesh_localDirection;\n    var localFrom = intersectTrimesh_localFrom;\n    var localTo = intersectTrimesh_localTo;\n    var worldIntersectPoint = intersectTrimesh_worldIntersectPoint;\n    var worldNormal = intersectTrimesh_worldNormal;\n    var faceList = (options && options.faceList) || null;\n\n    // Checking faces\n    var indices = mesh.indices,\n        vertices = mesh.vertices,\n        normals = mesh.faceNormals;\n\n    var from = this.from;\n    var to = this.to;\n    var direction = this._direction;\n\n    var minDist = -1;\n    treeTransform.position.copy(position);\n    treeTransform.quaternion.copy(quat);\n\n    // Transform ray to local space!\n    Transform.vectorToLocalFrame(position, quat, direction, localDirection);\n    //body.vectorToLocalFrame(direction, localDirection);\n    Transform.pointToLocalFrame(position, quat, from, localFrom);\n    //body.pointToLocalFrame(from, localFrom);\n    Transform.pointToLocalFrame(position, quat, to, localTo);\n    //body.pointToLocalFrame(to, localTo);\n    var fromToDistanceSquared = localFrom.distanceSquared(localTo);\n\n    mesh.tree.rayQuery(this, treeTransform, triangles);\n\n    for (var i = 0, N = triangles.length; !this.result._shouldStop && i !== N; i++) {\n        var trianglesIndex = triangles[i];\n\n        mesh.getNormal(trianglesIndex, normal);\n\n        // determine if ray intersects the plane of the face\n        // note: this works regardless of the direction of the face normal\n\n        // Get plane point in world coordinates...\n        mesh.getVertex(indices[trianglesIndex * 3], a);\n\n        // ...but make it relative to the ray from. We'll fix this later.\n        a.vsub(localFrom,vector);\n\n        // Get plane normal\n        // quat.vmult(normal, normal);\n\n        // If this dot product is negative, we have something interesting\n        var dot = localDirection.dot(normal);\n\n        // Bail out if ray and plane are parallel\n        // if (Math.abs( dot ) < this.precision){\n        //     continue;\n        // }\n\n        // calc distance to plane\n        var scalar = normal.dot(vector) / dot;\n\n        // if negative distance, then plane is behind ray\n        if (scalar < 0){\n            continue;\n        }\n\n        // Intersection point is from + direction * scalar\n        localDirection.scale(scalar,intersectPoint);\n        intersectPoint.vadd(localFrom,intersectPoint);\n\n        // Get triangle vertices\n        mesh.getVertex(indices[trianglesIndex * 3 + 1], b);\n        mesh.getVertex(indices[trianglesIndex * 3 + 2], c);\n\n        var squaredDistance = intersectPoint.distanceSquared(localFrom);\n\n        if(!(pointInTriangle(intersectPoint, b, a, c) || pointInTriangle(intersectPoint, a, b, c)) || squaredDistance > fromToDistanceSquared){\n            continue;\n        }\n\n        // transform intersectpoint and normal to world\n        Transform.vectorToWorldFrame(quat, normal, worldNormal);\n        //body.vectorToWorldFrame(normal, worldNormal);\n        Transform.pointToWorldFrame(position, quat, intersectPoint, worldIntersectPoint);\n        //body.pointToWorldFrame(intersectPoint, worldIntersectPoint);\n        this.reportIntersection(worldNormal, worldIntersectPoint, mesh, body, trianglesIndex);\n    }\n    triangles.length = 0;\n};\nRay.prototype[Shape.types.TRIMESH] = Ray.prototype.intersectTrimesh;\n\n\n/**\n * @method reportIntersection\n * @private\n * @param  {Vec3} normal\n * @param  {Vec3} hitPointWorld\n * @param  {Shape} shape\n * @param  {Body} body\n * @return {boolean} True if the intersections should continue\n */\nRay.prototype.reportIntersection = function(normal, hitPointWorld, shape, body, hitFaceIndex){\n    var from = this.from;\n    var to = this.to;\n    var distance = from.distanceTo(hitPointWorld);\n    var result = this.result;\n\n    // Skip back faces?\n    if(this.skipBackfaces && normal.dot(this._direction) > 0){\n        return;\n    }\n\n    result.hitFaceIndex = typeof(hitFaceIndex) !== 'undefined' ? hitFaceIndex : -1;\n\n    switch(this.mode){\n    case Ray.ALL:\n        this.hasHit = true;\n        result.set(\n            from,\n            to,\n            normal,\n            hitPointWorld,\n            shape,\n            body,\n            distance\n        );\n        result.hasHit = true;\n        this.callback(result);\n        break;\n\n    case Ray.CLOSEST:\n\n        // Store if closer than current closest\n        if(distance < result.distance || !result.hasHit){\n            this.hasHit = true;\n            result.hasHit = true;\n            result.set(\n                from,\n                to,\n                normal,\n                hitPointWorld,\n                shape,\n                body,\n                distance\n            );\n        }\n        break;\n\n    case Ray.ANY:\n\n        // Report and stop.\n        this.hasHit = true;\n        result.hasHit = true;\n        result.set(\n            from,\n            to,\n            normal,\n            hitPointWorld,\n            shape,\n            body,\n            distance\n        );\n        result._shouldStop = true;\n        break;\n    }\n};\n\nvar v0 = new Vec3(),\n    intersect = new Vec3();\nfunction distanceFromIntersection(from, direction, position) {\n\n    // v0 is vector from from to position\n    position.vsub(from,v0);\n    var dot = v0.dot(direction);\n\n    // intersect = direction*dot + from\n    direction.mult(dot,intersect);\n    intersect.vadd(from,intersect);\n\n    var distance = position.distanceTo(intersect);\n\n    return distance;\n}\n\n\n},{\"../collision/AABB\":3,\"../collision/RaycastResult\":10,\"../math/Quaternion\":28,\"../math/Transform\":29,\"../math/Vec3\":30,\"../shapes/Box\":37,\"../shapes/ConvexPolyhedron\":38,\"../shapes/Shape\":43}],10:[function(_dereq_,module,exports){\nvar Vec3 = _dereq_('../math/Vec3');\n\nmodule.exports = RaycastResult;\n\n/**\n * Storage for Ray casting data.\n * @class RaycastResult\n * @constructor\n */\nfunction RaycastResult(){\n\n\t/**\n\t * @property {Vec3} rayFromWorld\n\t */\n\tthis.rayFromWorld = new Vec3();\n\n\t/**\n\t * @property {Vec3} rayToWorld\n\t */\n\tthis.rayToWorld = new Vec3();\n\n\t/**\n\t * @property {Vec3} hitNormalWorld\n\t */\n\tthis.hitNormalWorld = new Vec3();\n\n\t/**\n\t * @property {Vec3} hitPointWorld\n\t */\n\tthis.hitPointWorld = new Vec3();\n\n\t/**\n\t * @property {boolean} hasHit\n\t */\n\tthis.hasHit = false;\n\n\t/**\n\t * The hit shape, or null.\n\t * @property {Shape} shape\n\t */\n\tthis.shape = null;\n\n\t/**\n\t * The hit body, or null.\n\t * @property {Body} body\n\t */\n\tthis.body = null;\n\n\t/**\n\t * The index of the hit triangle, if the hit shape was a trimesh.\n\t * @property {number} hitFaceIndex\n\t * @default -1\n\t */\n\tthis.hitFaceIndex = -1;\n\n\t/**\n\t * Distance to the hit. Will be set to -1 if there was no hit.\n\t * @property {number} distance\n\t * @default -1\n\t */\n\tthis.distance = -1;\n\n\t/**\n\t * If the ray should stop traversing the bodies.\n\t * @private\n\t * @property {Boolean} _shouldStop\n\t * @default false\n\t */\n\tthis._shouldStop = false;\n}\n\n/**\n * Reset all result data.\n * @method reset\n */\nRaycastResult.prototype.reset = function () {\n\tthis.rayFromWorld.setZero();\n\tthis.rayToWorld.setZero();\n\tthis.hitNormalWorld.setZero();\n\tthis.hitPointWorld.setZero();\n\tthis.hasHit = false;\n\tthis.shape = null;\n\tthis.body = null;\n\tthis.hitFaceIndex = -1;\n\tthis.distance = -1;\n\tthis._shouldStop = false;\n};\n\n/**\n * @method abort\n */\nRaycastResult.prototype.abort = function(){\n\tthis._shouldStop = true;\n};\n\n/**\n * @method set\n * @param {Vec3} rayFromWorld\n * @param {Vec3} rayToWorld\n * @param {Vec3} hitNormalWorld\n * @param {Vec3} hitPointWorld\n * @param {Shape} shape\n * @param {Body} body\n * @param {number} distance\n */\nRaycastResult.prototype.set = function(\n\trayFromWorld,\n\trayToWorld,\n\thitNormalWorld,\n\thitPointWorld,\n\tshape,\n\tbody,\n\tdistance\n){\n\tthis.rayFromWorld.copy(rayFromWorld);\n\tthis.rayToWorld.copy(rayToWorld);\n\tthis.hitNormalWorld.copy(hitNormalWorld);\n\tthis.hitPointWorld.copy(hitPointWorld);\n\tthis.shape = shape;\n\tthis.body = body;\n\tthis.distance = distance;\n};\n},{\"../math/Vec3\":30}],11:[function(_dereq_,module,exports){\nvar Shape = _dereq_('../shapes/Shape');\nvar Broadphase = _dereq_('../collision/Broadphase');\n\nmodule.exports = SAPBroadphase;\n\n/**\n * Sweep and prune broadphase along one axis.\n *\n * @class SAPBroadphase\n * @constructor\n * @param {World} [world]\n * @extends Broadphase\n */\nfunction SAPBroadphase(world){\n    Broadphase.apply(this);\n\n    /**\n     * List of bodies currently in the broadphase.\n     * @property axisList\n     * @type {Array}\n     */\n    this.axisList = [];\n\n    /**\n     * The world to search in.\n     * @property world\n     * @type {World}\n     */\n    this.world = null;\n\n    /**\n     * Axis to sort the bodies along. Set to 0 for x axis, and 1 for y axis. For best performance, choose an axis that the bodies are spread out more on.\n     * @property axisIndex\n     * @type {Number}\n     */\n    this.axisIndex = 0;\n\n    var axisList = this.axisList;\n\n    this._addBodyHandler = function(e){\n        axisList.push(e.body);\n    };\n\n    this._removeBodyHandler = function(e){\n        var idx = axisList.indexOf(e.body);\n        if(idx !== -1){\n            axisList.splice(idx,1);\n        }\n    };\n\n    if(world){\n        this.setWorld(world);\n    }\n}\nSAPBroadphase.prototype = new Broadphase();\n\n/**\n * Change the world\n * @method setWorld\n * @param  {World} world\n */\nSAPBroadphase.prototype.setWorld = function(world){\n    // Clear the old axis array\n    this.axisList.length = 0;\n\n    // Add all bodies from the new world\n    for(var i=0; i<world.bodies.length; i++){\n        this.axisList.push(world.bodies[i]);\n    }\n\n    // Remove old handlers, if any\n    world.removeEventListener(\"addBody\", this._addBodyHandler);\n    world.removeEventListener(\"removeBody\", this._removeBodyHandler);\n\n    // Add handlers to update the list of bodies.\n    world.addEventListener(\"addBody\", this._addBodyHandler);\n    world.addEventListener(\"removeBody\", this._removeBodyHandler);\n\n    this.world = world;\n    this.dirty = true;\n};\n\n/**\n * @static\n * @method insertionSortX\n * @param  {Array} a\n * @return {Array}\n */\nSAPBroadphase.insertionSortX = function(a) {\n    for(var i=1,l=a.length;i<l;i++) {\n        var v = a[i];\n        for(var j=i - 1;j>=0;j--) {\n            if(a[j].aabb.lowerBound.x <= v.aabb.lowerBound.x){\n                break;\n            }\n            a[j+1] = a[j];\n        }\n        a[j+1] = v;\n    }\n    return a;\n};\n\n/**\n * @static\n * @method insertionSortY\n * @param  {Array} a\n * @return {Array}\n */\nSAPBroadphase.insertionSortY = function(a) {\n    for(var i=1,l=a.length;i<l;i++) {\n        var v = a[i];\n        for(var j=i - 1;j>=0;j--) {\n            if(a[j].aabb.lowerBound.y <= v.aabb.lowerBound.y){\n                break;\n            }\n            a[j+1] = a[j];\n        }\n        a[j+1] = v;\n    }\n    return a;\n};\n\n/**\n * @static\n * @method insertionSortZ\n * @param  {Array} a\n * @return {Array}\n */\nSAPBroadphase.insertionSortZ = function(a) {\n    for(var i=1,l=a.length;i<l;i++) {\n        var v = a[i];\n        for(var j=i - 1;j>=0;j--) {\n            if(a[j].aabb.lowerBound.z <= v.aabb.lowerBound.z){\n                break;\n            }\n            a[j+1] = a[j];\n        }\n        a[j+1] = v;\n    }\n    return a;\n};\n\n/**\n * Collect all collision pairs\n * @method collisionPairs\n * @param  {World} world\n * @param  {Array} p1\n * @param  {Array} p2\n */\nSAPBroadphase.prototype.collisionPairs = function(world,p1,p2){\n    var bodies = this.axisList,\n        N = bodies.length,\n        axisIndex = this.axisIndex,\n        i, j;\n\n    if(this.dirty){\n        this.sortList();\n        this.dirty = false;\n    }\n\n    // Look through the list\n    for(i=0; i !== N; i++){\n        var bi = bodies[i];\n\n        for(j=i+1; j < N; j++){\n            var bj = bodies[j];\n\n            if(!this.needBroadphaseCollision(bi,bj)){\n                continue;\n            }\n\n            if(!SAPBroadphase.checkBounds(bi,bj,axisIndex)){\n                break;\n            }\n\n            this.intersectionTest(bi,bj,p1,p2);\n        }\n    }\n};\n\nSAPBroadphase.prototype.sortList = function(){\n    var axisList = this.axisList;\n    var axisIndex = this.axisIndex;\n    var N = axisList.length;\n\n    // Update AABBs\n    for(var i = 0; i!==N; i++){\n        var bi = axisList[i];\n        if(bi.aabbNeedsUpdate){\n            bi.computeAABB();\n        }\n    }\n\n    // Sort the list\n    if(axisIndex === 0){\n        SAPBroadphase.insertionSortX(axisList);\n    } else if(axisIndex === 1){\n        SAPBroadphase.insertionSortY(axisList);\n    } else if(axisIndex === 2){\n        SAPBroadphase.insertionSortZ(axisList);\n    }\n};\n\n/**\n * Check if the bounds of two bodies overlap, along the given SAP axis.\n * @static\n * @method checkBounds\n * @param  {Body} bi\n * @param  {Body} bj\n * @param  {Number} axisIndex\n * @return {Boolean}\n */\nSAPBroadphase.checkBounds = function(bi, bj, axisIndex){\n    var biPos;\n    var bjPos;\n\n    if(axisIndex === 0){\n        biPos = bi.position.x;\n        bjPos = bj.position.x;\n    } else if(axisIndex === 1){\n        biPos = bi.position.y;\n        bjPos = bj.position.y;\n    } else if(axisIndex === 2){\n        biPos = bi.position.z;\n        bjPos = bj.position.z;\n    }\n\n    var ri = bi.boundingRadius,\n        rj = bj.boundingRadius,\n        boundA1 = biPos - ri,\n        boundA2 = biPos + ri,\n        boundB1 = bjPos - rj,\n        boundB2 = bjPos + rj;\n\n    return boundB1 < boundA2;\n};\n\n/**\n * Computes the variance of the body positions and estimates the best\n * axis to use. Will automatically set property .axisIndex.\n * @method autoDetectAxis\n */\nSAPBroadphase.prototype.autoDetectAxis = function(){\n    var sumX=0,\n        sumX2=0,\n        sumY=0,\n        sumY2=0,\n        sumZ=0,\n        sumZ2=0,\n        bodies = this.axisList,\n        N = bodies.length,\n        invN=1/N;\n\n    for(var i=0; i!==N; i++){\n        var b = bodies[i];\n\n        var centerX = b.position.x;\n        sumX += centerX;\n        sumX2 += centerX*centerX;\n\n        var centerY = b.position.y;\n        sumY += centerY;\n        sumY2 += centerY*centerY;\n\n        var centerZ = b.position.z;\n        sumZ += centerZ;\n        sumZ2 += centerZ*centerZ;\n    }\n\n    var varianceX = sumX2 - sumX*sumX*invN,\n        varianceY = sumY2 - sumY*sumY*invN,\n        varianceZ = sumZ2 - sumZ*sumZ*invN;\n\n    if(varianceX > varianceY){\n        if(varianceX > varianceZ){\n            this.axisIndex = 0;\n        } else{\n            this.axisIndex = 2;\n        }\n    } else if(varianceY > varianceZ){\n        this.axisIndex = 1;\n    } else{\n        this.axisIndex = 2;\n    }\n};\n\n/**\n * Returns all the bodies within an AABB.\n * @method aabbQuery\n * @param  {World} world\n * @param  {AABB} aabb\n * @param {array} result An array to store resulting bodies in.\n * @return {array}\n */\nSAPBroadphase.prototype.aabbQuery = function(world, aabb, result){\n    result = result || [];\n\n    if(this.dirty){\n        this.sortList();\n        this.dirty = false;\n    }\n\n    var axisIndex = this.axisIndex, axis = 'x';\n    if(axisIndex === 1){ axis = 'y'; }\n    if(axisIndex === 2){ axis = 'z'; }\n\n    var axisList = this.axisList;\n    var lower = aabb.lowerBound[axis];\n    var upper = aabb.upperBound[axis];\n    for(var i = 0; i < axisList.length; i++){\n        var b = axisList[i];\n\n        if(b.aabbNeedsUpdate){\n            b.computeAABB();\n        }\n\n        if(b.aabb.overlaps(aabb)){\n            result.push(b);\n        }\n    }\n\n    return result;\n};\n},{\"../collision/Broadphase\":5,\"../shapes/Shape\":43}],12:[function(_dereq_,module,exports){\nmodule.exports = ConeTwistConstraint;\n\nvar Constraint = _dereq_('./Constraint');\nvar PointToPointConstraint = _dereq_('./PointToPointConstraint');\nvar ConeEquation = _dereq_('../equations/ConeEquation');\nvar RotationalEquation = _dereq_('../equations/RotationalEquation');\nvar ContactEquation = _dereq_('../equations/ContactEquation');\nvar Vec3 = _dereq_('../math/Vec3');\n\n/**\n * @class ConeTwistConstraint\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {object} [options]\n * @param {Vec3} [options.pivotA]\n * @param {Vec3} [options.pivotB]\n * @param {Vec3} [options.axisA]\n * @param {Vec3} [options.axisB]\n * @param {Number} [options.maxForce=1e6]\n * @extends PointToPointConstraint\n */\nfunction ConeTwistConstraint(bodyA, bodyB, options){\n    options = options || {};\n    var maxForce = typeof(options.maxForce) !== 'undefined' ? options.maxForce : 1e6;\n\n    // Set pivot point in between\n    var pivotA = options.pivotA ? options.pivotA.clone() : new Vec3();\n    var pivotB = options.pivotB ? options.pivotB.clone() : new Vec3();\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3();\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3();\n\n    PointToPointConstraint.call(this, bodyA, pivotA, bodyB, pivotB, maxForce);\n\n    this.collideConnected = !!options.collideConnected;\n\n    this.angle = typeof(options.angle) !== 'undefined' ? options.angle : 0;\n\n    /**\n     * @property {ConeEquation} coneEquation\n     */\n    var c = this.coneEquation = new ConeEquation(bodyA,bodyB,options);\n\n    /**\n     * @property {RotationalEquation} twistEquation\n     */\n    var t = this.twistEquation = new RotationalEquation(bodyA,bodyB,options);\n    this.twistAngle = typeof(options.twistAngle) !== 'undefined' ? options.twistAngle : 0;\n\n    // Make the cone equation push the bodies toward the cone axis, not outward\n    c.maxForce = 0;\n    c.minForce = -maxForce;\n\n    // Make the twist equation add torque toward the initial position\n    t.maxForce = 0;\n    t.minForce = -maxForce;\n\n    this.equations.push(c, t);\n}\nConeTwistConstraint.prototype = new PointToPointConstraint();\nConeTwistConstraint.constructor = ConeTwistConstraint;\n\nvar ConeTwistConstraint_update_tmpVec1 = new Vec3();\nvar ConeTwistConstraint_update_tmpVec2 = new Vec3();\n\nConeTwistConstraint.prototype.update = function(){\n    var bodyA = this.bodyA,\n        bodyB = this.bodyB,\n        cone = this.coneEquation,\n        twist = this.twistEquation;\n\n    PointToPointConstraint.prototype.update.call(this);\n\n    // Update the axes to the cone constraint\n    bodyA.vectorToWorldFrame(this.axisA, cone.axisA);\n    bodyB.vectorToWorldFrame(this.axisB, cone.axisB);\n\n    // Update the world axes in the twist constraint\n    this.axisA.tangents(twist.axisA, twist.axisA);\n    bodyA.vectorToWorldFrame(twist.axisA, twist.axisA);\n\n    this.axisB.tangents(twist.axisB, twist.axisB);\n    bodyB.vectorToWorldFrame(twist.axisB, twist.axisB);\n\n    cone.angle = this.angle;\n    twist.maxAngle = this.twistAngle;\n};\n\n\n},{\"../equations/ConeEquation\":18,\"../equations/ContactEquation\":19,\"../equations/RotationalEquation\":22,\"../math/Vec3\":30,\"./Constraint\":13,\"./PointToPointConstraint\":17}],13:[function(_dereq_,module,exports){\nmodule.exports = Constraint;\n\nvar Utils = _dereq_('../utils/Utils');\n\n/**\n * Constraint base class\n * @class Constraint\n * @author schteppe\n * @constructor\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {object} [options]\n * @param {boolean} [options.collideConnected=true]\n * @param {boolean} [options.wakeUpBodies=true]\n */\nfunction Constraint(bodyA, bodyB, options){\n    options = Utils.defaults(options,{\n        collideConnected : true,\n        wakeUpBodies : true,\n    });\n\n    /**\n     * Equations to be solved in this constraint\n     * @property equations\n     * @type {Array}\n     */\n    this.equations = [];\n\n    /**\n     * @property {Body} bodyA\n     */\n    this.bodyA = bodyA;\n\n    /**\n     * @property {Body} bodyB\n     */\n    this.bodyB = bodyB;\n\n    /**\n     * @property {Number} id\n     */\n    this.id = Constraint.idCounter++;\n\n    /**\n     * Set to true if you want the bodies to collide when they are connected.\n     * @property collideConnected\n     * @type {boolean}\n     */\n    this.collideConnected = options.collideConnected;\n\n    if(options.wakeUpBodies){\n        if(bodyA){\n            bodyA.wakeUp();\n        }\n        if(bodyB){\n            bodyB.wakeUp();\n        }\n    }\n}\n\n/**\n * Update all the equations with data.\n * @method update\n */\nConstraint.prototype.update = function(){\n    throw new Error(\"method update() not implmemented in this Constraint subclass!\");\n};\n\n/**\n * Enables all equations in the constraint.\n * @method enable\n */\nConstraint.prototype.enable = function(){\n    var eqs = this.equations;\n    for(var i=0; i<eqs.length; i++){\n        eqs[i].enabled = true;\n    }\n};\n\n/**\n * Disables all equations in the constraint.\n * @method disable\n */\nConstraint.prototype.disable = function(){\n    var eqs = this.equations;\n    for(var i=0; i<eqs.length; i++){\n        eqs[i].enabled = false;\n    }\n};\n\nConstraint.idCounter = 0;\n\n},{\"../utils/Utils\":53}],14:[function(_dereq_,module,exports){\nmodule.exports = DistanceConstraint;\n\nvar Constraint = _dereq_('./Constraint');\nvar ContactEquation = _dereq_('../equations/ContactEquation');\n\n/**\n * Constrains two bodies to be at a constant distance from each others center of mass.\n * @class DistanceConstraint\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Number} [distance] The distance to keep. If undefined, it will be set to the current distance between bodyA and bodyB\n * @param {Number} [maxForce=1e6]\n * @extends Constraint\n */\nfunction DistanceConstraint(bodyA,bodyB,distance,maxForce){\n    Constraint.call(this,bodyA,bodyB);\n\n    if(typeof(distance)===\"undefined\") {\n        distance = bodyA.position.distanceTo(bodyB.position);\n    }\n\n    if(typeof(maxForce)===\"undefined\") {\n        maxForce = 1e6;\n    }\n\n    /**\n     * @property {number} distance\n     */\n    this.distance = distance;\n\n    /**\n     * @property {ContactEquation} distanceEquation\n     */\n    var eq = this.distanceEquation = new ContactEquation(bodyA, bodyB);\n    this.equations.push(eq);\n\n    // Make it bidirectional\n    eq.minForce = -maxForce;\n    eq.maxForce =  maxForce;\n}\nDistanceConstraint.prototype = new Constraint();\n\nDistanceConstraint.prototype.update = function(){\n    var bodyA = this.bodyA;\n    var bodyB = this.bodyB;\n    var eq = this.distanceEquation;\n    var halfDist = this.distance * 0.5;\n    var normal = eq.ni;\n\n    bodyB.position.vsub(bodyA.position, normal);\n    normal.normalize();\n    normal.mult(halfDist, eq.ri);\n    normal.mult(-halfDist, eq.rj);\n};\n},{\"../equations/ContactEquation\":19,\"./Constraint\":13}],15:[function(_dereq_,module,exports){\nmodule.exports = HingeConstraint;\n\nvar Constraint = _dereq_('./Constraint');\nvar PointToPointConstraint = _dereq_('./PointToPointConstraint');\nvar RotationalEquation = _dereq_('../equations/RotationalEquation');\nvar RotationalMotorEquation = _dereq_('../equations/RotationalMotorEquation');\nvar ContactEquation = _dereq_('../equations/ContactEquation');\nvar Vec3 = _dereq_('../math/Vec3');\n\n/**\n * Hinge constraint. Think of it as a door hinge. It tries to keep the door in the correct place and with the correct orientation.\n * @class HingeConstraint\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {object} [options]\n * @param {Vec3} [options.pivotA] A point defined locally in bodyA. This defines the offset of axisA.\n * @param {Vec3} [options.axisA] An axis that bodyA can rotate around, defined locally in bodyA.\n * @param {Vec3} [options.pivotB]\n * @param {Vec3} [options.axisB]\n * @param {Number} [options.maxForce=1e6]\n * @extends PointToPointConstraint\n */\nfunction HingeConstraint(bodyA, bodyB, options){\n    options = options || {};\n    var maxForce = typeof(options.maxForce) !== 'undefined' ? options.maxForce : 1e6;\n    var pivotA = options.pivotA ? options.pivotA.clone() : new Vec3();\n    var pivotB = options.pivotB ? options.pivotB.clone() : new Vec3();\n\n    PointToPointConstraint.call(this, bodyA, pivotA, bodyB, pivotB, maxForce);\n\n    /**\n     * Rotation axis, defined locally in bodyA.\n     * @property {Vec3} axisA\n     */\n    var axisA = this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1,0,0);\n    axisA.normalize();\n\n    /**\n     * Rotation axis, defined locally in bodyB.\n     * @property {Vec3} axisB\n     */\n    var axisB = this.axisB = options.axisB ? options.axisB.clone() : new Vec3(1,0,0);\n    axisB.normalize();\n\n    /**\n     * @property {RotationalEquation} rotationalEquation1\n     */\n    var r1 = this.rotationalEquation1 = new RotationalEquation(bodyA,bodyB,options);\n\n    /**\n     * @property {RotationalEquation} rotationalEquation2\n     */\n    var r2 = this.rotationalEquation2 = new RotationalEquation(bodyA,bodyB,options);\n\n    /**\n     * @property {RotationalMotorEquation} motorEquation\n     */\n    var motor = this.motorEquation = new RotationalMotorEquation(bodyA,bodyB,maxForce);\n    motor.enabled = false; // Not enabled by default\n\n    // Equations to be fed to the solver\n    this.equations.push(\n        r1, // rotational1\n        r2, // rotational2\n        motor\n    );\n}\nHingeConstraint.prototype = new PointToPointConstraint();\nHingeConstraint.constructor = HingeConstraint;\n\n/**\n * @method enableMotor\n */\nHingeConstraint.prototype.enableMotor = function(){\n    this.motorEquation.enabled = true;\n};\n\n/**\n * @method disableMotor\n */\nHingeConstraint.prototype.disableMotor = function(){\n    this.motorEquation.enabled = false;\n};\n\n/**\n * @method setMotorSpeed\n * @param {number} speed\n */\nHingeConstraint.prototype.setMotorSpeed = function(speed){\n    this.motorEquation.targetVelocity = speed;\n};\n\n/**\n * @method setMotorMaxForce\n * @param {number} maxForce\n */\nHingeConstraint.prototype.setMotorMaxForce = function(maxForce){\n    this.motorEquation.maxForce = maxForce;\n    this.motorEquation.minForce = -maxForce;\n};\n\nvar HingeConstraint_update_tmpVec1 = new Vec3();\nvar HingeConstraint_update_tmpVec2 = new Vec3();\n\nHingeConstraint.prototype.update = function(){\n    var bodyA = this.bodyA,\n        bodyB = this.bodyB,\n        motor = this.motorEquation,\n        r1 = this.rotationalEquation1,\n        r2 = this.rotationalEquation2,\n        worldAxisA = HingeConstraint_update_tmpVec1,\n        worldAxisB = HingeConstraint_update_tmpVec2;\n\n    var axisA = this.axisA;\n    var axisB = this.axisB;\n\n    PointToPointConstraint.prototype.update.call(this);\n\n    // Get world axes\n    bodyA.quaternion.vmult(axisA, worldAxisA);\n    bodyB.quaternion.vmult(axisB, worldAxisB);\n\n    worldAxisA.tangents(r1.axisA, r2.axisA);\n    r1.axisB.copy(worldAxisB);\n    r2.axisB.copy(worldAxisB);\n\n    if(this.motorEquation.enabled){\n        bodyA.quaternion.vmult(this.axisA, motor.axisA);\n        bodyB.quaternion.vmult(this.axisB, motor.axisB);\n    }\n};\n\n\n},{\"../equations/ContactEquation\":19,\"../equations/RotationalEquation\":22,\"../equations/RotationalMotorEquation\":23,\"../math/Vec3\":30,\"./Constraint\":13,\"./PointToPointConstraint\":17}],16:[function(_dereq_,module,exports){\nmodule.exports = LockConstraint;\n\nvar Constraint = _dereq_('./Constraint');\nvar PointToPointConstraint = _dereq_('./PointToPointConstraint');\nvar RotationalEquation = _dereq_('../equations/RotationalEquation');\nvar RotationalMotorEquation = _dereq_('../equations/RotationalMotorEquation');\nvar ContactEquation = _dereq_('../equations/ContactEquation');\nvar Vec3 = _dereq_('../math/Vec3');\n\n/**\n * Lock constraint. Will remove all degrees of freedom between the bodies.\n * @class LockConstraint\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {object} [options]\n * @param {Number} [options.maxForce=1e6]\n * @extends PointToPointConstraint\n */\nfunction LockConstraint(bodyA, bodyB, options){\n    options = options || {};\n    var maxForce = typeof(options.maxForce) !== 'undefined' ? options.maxForce : 1e6;\n\n    // Set pivot point in between\n    var pivotA = new Vec3();\n    var pivotB = new Vec3();\n    var halfWay = new Vec3();\n    bodyA.position.vadd(bodyB.position, halfWay);\n    halfWay.scale(0.5, halfWay);\n    bodyB.pointToLocalFrame(halfWay, pivotB);\n    bodyA.pointToLocalFrame(halfWay, pivotA);\n    PointToPointConstraint.call(this, bodyA, pivotA, bodyB, pivotB, maxForce);\n\n    /**\n     * @property {RotationalEquation} rotationalEquation1\n     */\n    var r1 = this.rotationalEquation1 = new RotationalEquation(bodyA,bodyB,options);\n\n    /**\n     * @property {RotationalEquation} rotationalEquation2\n     */\n    var r2 = this.rotationalEquation2 = new RotationalEquation(bodyA,bodyB,options);\n\n    /**\n     * @property {RotationalEquation} rotationalEquation3\n     */\n    var r3 = this.rotationalEquation3 = new RotationalEquation(bodyA,bodyB,options);\n\n    this.equations.push(r1, r2, r3);\n}\nLockConstraint.prototype = new PointToPointConstraint();\nLockConstraint.constructor = LockConstraint;\n\nvar LockConstraint_update_tmpVec1 = new Vec3();\nvar LockConstraint_update_tmpVec2 = new Vec3();\n\nLockConstraint.prototype.update = function(){\n    var bodyA = this.bodyA,\n        bodyB = this.bodyB,\n        motor = this.motorEquation,\n        r1 = this.rotationalEquation1,\n        r2 = this.rotationalEquation2,\n        r3 = this.rotationalEquation3,\n        worldAxisA = LockConstraint_update_tmpVec1,\n        worldAxisB = LockConstraint_update_tmpVec2;\n\n    PointToPointConstraint.prototype.update.call(this);\n\n    bodyA.vectorToWorldFrame(Vec3.UNIT_X, r1.axisA);\n    bodyB.vectorToWorldFrame(Vec3.UNIT_Y, r1.axisB);\n\n    bodyA.vectorToWorldFrame(Vec3.UNIT_Y, r2.axisA);\n    bodyB.vectorToWorldFrame(Vec3.UNIT_Z, r2.axisB);\n\n    bodyA.vectorToWorldFrame(Vec3.UNIT_Z, r3.axisA);\n    bodyB.vectorToWorldFrame(Vec3.UNIT_X, r3.axisB);\n};\n\n\n},{\"../equations/ContactEquation\":19,\"../equations/RotationalEquation\":22,\"../equations/RotationalMotorEquation\":23,\"../math/Vec3\":30,\"./Constraint\":13,\"./PointToPointConstraint\":17}],17:[function(_dereq_,module,exports){\nmodule.exports = PointToPointConstraint;\n\nvar Constraint = _dereq_('./Constraint');\nvar ContactEquation = _dereq_('../equations/ContactEquation');\nvar Vec3 = _dereq_('../math/Vec3');\n\n/**\n * Connects two bodies at given offset points.\n * @class PointToPointConstraint\n * @extends Constraint\n * @constructor\n * @param {Body} bodyA\n * @param {Vec3} pivotA The point relative to the center of mass of bodyA which bodyA is constrained to.\n * @param {Body} bodyB Body that will be constrained in a similar way to the same point as bodyA. We will therefore get a link between bodyA and bodyB. If not specified, bodyA will be constrained to a static point.\n * @param {Vec3} pivotB See pivotA.\n * @param {Number} maxForce The maximum force that should be applied to constrain the bodies.\n *\n * @example\n *     var bodyA = new Body({ mass: 1 });\n *     var bodyB = new Body({ mass: 1 });\n *     bodyA.position.set(-1, 0, 0);\n *     bodyB.position.set(1, 0, 0);\n *     bodyA.addShape(shapeA);\n *     bodyB.addShape(shapeB);\n *     world.addBody(bodyA);\n *     world.addBody(bodyB);\n *     var localPivotA = new Vec3(1, 0, 0);\n *     var localPivotB = new Vec3(-1, 0, 0);\n *     var constraint = new PointToPointConstraint(bodyA, localPivotA, bodyB, localPivotB);\n *     world.addConstraint(constraint);\n */\nfunction PointToPointConstraint(bodyA,pivotA,bodyB,pivotB,maxForce){\n    Constraint.call(this,bodyA,bodyB);\n\n    maxForce = typeof(maxForce) !== 'undefined' ? maxForce : 1e6;\n\n    /**\n     * Pivot, defined locally in bodyA.\n     * @property {Vec3} pivotA\n     */\n    this.pivotA = pivotA ? pivotA.clone() : new Vec3();\n\n    /**\n     * Pivot, defined locally in bodyB.\n     * @property {Vec3} pivotB\n     */\n    this.pivotB = pivotB ? pivotB.clone() : new Vec3();\n\n    /**\n     * @property {ContactEquation} equationX\n     */\n    var x = this.equationX = new ContactEquation(bodyA,bodyB);\n\n    /**\n     * @property {ContactEquation} equationY\n     */\n    var y = this.equationY = new ContactEquation(bodyA,bodyB);\n\n    /**\n     * @property {ContactEquation} equationZ\n     */\n    var z = this.equationZ = new ContactEquation(bodyA,bodyB);\n\n    // Equations to be fed to the solver\n    this.equations.push(x, y, z);\n\n    // Make the equations bidirectional\n    x.minForce = y.minForce = z.minForce = -maxForce;\n    x.maxForce = y.maxForce = z.maxForce =  maxForce;\n\n    x.ni.set(1, 0, 0);\n    y.ni.set(0, 1, 0);\n    z.ni.set(0, 0, 1);\n}\nPointToPointConstraint.prototype = new Constraint();\n\nPointToPointConstraint.prototype.update = function(){\n    var bodyA = this.bodyA;\n    var bodyB = this.bodyB;\n    var x = this.equationX;\n    var y = this.equationY;\n    var z = this.equationZ;\n\n    // Rotate the pivots to world space\n    bodyA.quaternion.vmult(this.pivotA,x.ri);\n    bodyB.quaternion.vmult(this.pivotB,x.rj);\n\n    y.ri.copy(x.ri);\n    y.rj.copy(x.rj);\n    z.ri.copy(x.ri);\n    z.rj.copy(x.rj);\n};\n},{\"../equations/ContactEquation\":19,\"../math/Vec3\":30,\"./Constraint\":13}],18:[function(_dereq_,module,exports){\nmodule.exports = ConeEquation;\n\nvar Vec3 = _dereq_('../math/Vec3');\nvar Mat3 = _dereq_('../math/Mat3');\nvar Equation = _dereq_('./Equation');\n\n/**\n * Cone equation. Works to keep the given body world vectors aligned, or tilted within a given angle from each other.\n * @class ConeEquation\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Vec3} [options.axisA] Local axis in A\n * @param {Vec3} [options.axisB] Local axis in B\n * @param {Vec3} [options.angle] The \"cone angle\" to keep\n * @param {number} [options.maxForce=1e6]\n * @extends Equation\n */\nfunction ConeEquation(bodyA, bodyB, options){\n    options = options || {};\n    var maxForce = typeof(options.maxForce) !== 'undefined' ? options.maxForce : 1e6;\n\n    Equation.call(this,bodyA,bodyB,-maxForce, maxForce);\n\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1, 0, 0);\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3(0, 1, 0);\n\n    /**\n     * The cone angle to keep\n     * @property {number} angle\n     */\n    this.angle = typeof(options.angle) !== 'undefined' ? options.angle : 0;\n}\n\nConeEquation.prototype = new Equation();\nConeEquation.prototype.constructor = ConeEquation;\n\nvar tmpVec1 = new Vec3();\nvar tmpVec2 = new Vec3();\n\nConeEquation.prototype.computeB = function(h){\n    var a = this.a,\n        b = this.b,\n\n        ni = this.axisA,\n        nj = this.axisB,\n\n        nixnj = tmpVec1,\n        njxni = tmpVec2,\n\n        GA = this.jacobianElementA,\n        GB = this.jacobianElementB;\n\n    // Caluclate cross products\n    ni.cross(nj, nixnj);\n    nj.cross(ni, njxni);\n\n    // The angle between two vector is:\n    // cos(theta) = a * b / (length(a) * length(b) = { len(a) = len(b) = 1 } = a * b\n\n    // g = a * b\n    // gdot = (b x a) * wi + (a x b) * wj\n    // G = [0 bxa 0 axb]\n    // W = [vi wi vj wj]\n    GA.rotational.copy(njxni);\n    GB.rotational.copy(nixnj);\n\n    var g = Math.cos(this.angle) - ni.dot(nj),\n        GW = this.computeGW(),\n        GiMf = this.computeGiMf();\n\n    var B = - g * a - GW * b - h * GiMf;\n\n    return B;\n};\n\n\n},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],19:[function(_dereq_,module,exports){\nmodule.exports = ContactEquation;\n\nvar Equation = _dereq_('./Equation');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Mat3 = _dereq_('../math/Mat3');\n\n/**\n * Contact/non-penetration constraint equation\n * @class ContactEquation\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @extends Equation\n */\nfunction ContactEquation(bodyA, bodyB, maxForce){\n    maxForce = typeof(maxForce) !== 'undefined' ? maxForce : 1e6;\n    Equation.call(this, bodyA, bodyB, 0, maxForce);\n\n    /**\n     * @property restitution\n     * @type {Number}\n     */\n    this.restitution = 0.0; // \"bounciness\": u1 = -e*u0\n\n    /**\n     * World-oriented vector that goes from the center of bi to the contact point.\n     * @property {Vec3} ri\n     */\n    this.ri = new Vec3();\n\n    /**\n     * World-oriented vector that starts in body j position and goes to the contact point.\n     * @property {Vec3} rj\n     */\n    this.rj = new Vec3();\n\n    /**\n     * Contact normal, pointing out of body i.\n     * @property {Vec3} ni\n     */\n    this.ni = new Vec3();\n}\n\nContactEquation.prototype = new Equation();\nContactEquation.prototype.constructor = ContactEquation;\n\nvar ContactEquation_computeB_temp1 = new Vec3(); // Temp vectors\nvar ContactEquation_computeB_temp2 = new Vec3();\nvar ContactEquation_computeB_temp3 = new Vec3();\nContactEquation.prototype.computeB = function(h){\n    var a = this.a,\n        b = this.b,\n        bi = this.bi,\n        bj = this.bj,\n        ri = this.ri,\n        rj = this.rj,\n        rixn = ContactEquation_computeB_temp1,\n        rjxn = ContactEquation_computeB_temp2,\n\n        vi = bi.velocity,\n        wi = bi.angularVelocity,\n        fi = bi.force,\n        taui = bi.torque,\n\n        vj = bj.velocity,\n        wj = bj.angularVelocity,\n        fj = bj.force,\n        tauj = bj.torque,\n\n        penetrationVec = ContactEquation_computeB_temp3,\n\n        GA = this.jacobianElementA,\n        GB = this.jacobianElementB,\n\n        n = this.ni;\n\n    // Caluclate cross products\n    ri.cross(n,rixn);\n    rj.cross(n,rjxn);\n\n    // g = xj+rj -(xi+ri)\n    // G = [ -ni  -rixn  ni  rjxn ]\n    n.negate(GA.spatial);\n    rixn.negate(GA.rotational);\n    GB.spatial.copy(n);\n    GB.rotational.copy(rjxn);\n\n    // Calculate the penetration vector\n    penetrationVec.copy(bj.position);\n    penetrationVec.vadd(rj,penetrationVec);\n    penetrationVec.vsub(bi.position,penetrationVec);\n    penetrationVec.vsub(ri,penetrationVec);\n\n    var g = n.dot(penetrationVec);\n\n    // Compute iteration\n    var ePlusOne = this.restitution + 1;\n    var GW = ePlusOne * vj.dot(n) - ePlusOne * vi.dot(n) + wj.dot(rjxn) - wi.dot(rixn);\n    var GiMf = this.computeGiMf();\n\n    var B = - g * a - GW * b - h*GiMf;\n\n    return B;\n};\n\nvar ContactEquation_getImpactVelocityAlongNormal_vi = new Vec3();\nvar ContactEquation_getImpactVelocityAlongNormal_vj = new Vec3();\nvar ContactEquation_getImpactVelocityAlongNormal_xi = new Vec3();\nvar ContactEquation_getImpactVelocityAlongNormal_xj = new Vec3();\nvar ContactEquation_getImpactVelocityAlongNormal_relVel = new Vec3();\n\n/**\n * Get the current relative velocity in the contact point.\n * @method getImpactVelocityAlongNormal\n * @return {number}\n */\nContactEquation.prototype.getImpactVelocityAlongNormal = function(){\n    var vi = ContactEquation_getImpactVelocityAlongNormal_vi;\n    var vj = ContactEquation_getImpactVelocityAlongNormal_vj;\n    var xi = ContactEquation_getImpactVelocityAlongNormal_xi;\n    var xj = ContactEquation_getImpactVelocityAlongNormal_xj;\n    var relVel = ContactEquation_getImpactVelocityAlongNormal_relVel;\n\n    this.bi.position.vadd(this.ri, xi);\n    this.bj.position.vadd(this.rj, xj);\n\n    this.bi.getVelocityAtWorldPoint(xi, vi);\n    this.bj.getVelocityAtWorldPoint(xj, vj);\n\n    vi.vsub(vj, relVel);\n\n    return this.ni.dot(relVel);\n};\n\n\n},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],20:[function(_dereq_,module,exports){\nmodule.exports = Equation;\n\nvar JacobianElement = _dereq_('../math/JacobianElement'),\n    Vec3 = _dereq_('../math/Vec3');\n\n/**\n * Equation base class\n * @class Equation\n * @constructor\n * @author schteppe\n * @param {Body} bi\n * @param {Body} bj\n * @param {Number} minForce Minimum (read: negative max) force to be applied by the constraint.\n * @param {Number} maxForce Maximum (read: positive max) force to be applied by the constraint.\n */\nfunction Equation(bi,bj,minForce,maxForce){\n    this.id = Equation.id++;\n\n    /**\n     * @property {number} minForce\n     */\n    this.minForce = typeof(minForce)===\"undefined\" ? -1e6 : minForce;\n\n    /**\n     * @property {number} maxForce\n     */\n    this.maxForce = typeof(maxForce)===\"undefined\" ? 1e6 : maxForce;\n\n    /**\n     * @property bi\n     * @type {Body}\n     */\n    this.bi = bi;\n\n    /**\n     * @property bj\n     * @type {Body}\n     */\n    this.bj = bj;\n\n    /**\n     * SPOOK parameter\n     * @property {number} a\n     */\n    this.a = 0.0;\n\n    /**\n     * SPOOK parameter\n     * @property {number} b\n     */\n    this.b = 0.0;\n\n    /**\n     * SPOOK parameter\n     * @property {number} eps\n     */\n    this.eps = 0.0;\n\n    /**\n     * @property {JacobianElement} jacobianElementA\n     */\n    this.jacobianElementA = new JacobianElement();\n\n    /**\n     * @property {JacobianElement} jacobianElementB\n     */\n    this.jacobianElementB = new JacobianElement();\n\n    /**\n     * @property {boolean} enabled\n     * @default true\n     */\n    this.enabled = true;\n\n    // Set typical spook params\n    this.setSpookParams(1e7,4,1/60);\n}\nEquation.prototype.constructor = Equation;\n\nEquation.id = 0;\n\n/**\n * Recalculates a,b,eps.\n * @method setSpookParams\n */\nEquation.prototype.setSpookParams = function(stiffness,relaxation,timeStep){\n    var d = relaxation,\n        k = stiffness,\n        h = timeStep;\n    this.a = 4.0 / (h * (1 + 4 * d));\n    this.b = (4.0 * d) / (1 + 4 * d);\n    this.eps = 4.0 / (h * h * k * (1 + 4 * d));\n};\n\n/**\n * Computes the RHS of the SPOOK equation\n * @method computeB\n * @return {Number}\n */\nEquation.prototype.computeB = function(a,b,h){\n    var GW = this.computeGW(),\n        Gq = this.computeGq(),\n        GiMf = this.computeGiMf();\n    return - Gq * a - GW * b - GiMf*h;\n};\n\n/**\n * Computes G*q, where q are the generalized body coordinates\n * @method computeGq\n * @return {Number}\n */\nEquation.prototype.computeGq = function(){\n    var GA = this.jacobianElementA,\n        GB = this.jacobianElementB,\n        bi = this.bi,\n        bj = this.bj,\n        xi = bi.position,\n        xj = bj.position;\n    return GA.spatial.dot(xi) + GB.spatial.dot(xj);\n};\n\nvar zero = new Vec3();\n\n/**\n * Computes G*W, where W are the body velocities\n * @method computeGW\n * @return {Number}\n */\nEquation.prototype.computeGW = function(){\n    var GA = this.jacobianElementA,\n        GB = this.jacobianElementB,\n        bi = this.bi,\n        bj = this.bj,\n        vi = bi.velocity,\n        vj = bj.velocity,\n        wi = bi.angularVelocity || zero,\n        wj = bj.angularVelocity || zero;\n    return GA.multiplyVectors(vi,wi) + GB.multiplyVectors(vj,wj);\n};\n\n\n/**\n * Computes G*Wlambda, where W are the body velocities\n * @method computeGWlambda\n * @return {Number}\n */\nEquation.prototype.computeGWlambda = function(){\n    var GA = this.jacobianElementA,\n        GB = this.jacobianElementB,\n        bi = this.bi,\n        bj = this.bj,\n        vi = bi.vlambda,\n        vj = bj.vlambda,\n        wi = bi.wlambda || zero,\n        wj = bj.wlambda || zero;\n    return GA.multiplyVectors(vi,wi) + GB.multiplyVectors(vj,wj);\n};\n\n/**\n * Computes G*inv(M)*f, where M is the mass matrix with diagonal blocks for each body, and f are the forces on the bodies.\n * @method computeGiMf\n * @return {Number}\n */\nvar iMfi = new Vec3(),\n    iMfj = new Vec3(),\n    invIi_vmult_taui = new Vec3(),\n    invIj_vmult_tauj = new Vec3();\nEquation.prototype.computeGiMf = function(){\n    var GA = this.jacobianElementA,\n        GB = this.jacobianElementB,\n        bi = this.bi,\n        bj = this.bj,\n        fi = bi.force,\n        ti = bi.torque,\n        fj = bj.force,\n        tj = bj.torque,\n        invMassi = bi.invMassSolve,\n        invMassj = bj.invMassSolve;\n\n    if(bi.invInertiaWorldSolve){ bi.invInertiaWorldSolve.vmult(ti,invIi_vmult_taui); }\n    else { invIi_vmult_taui.set(0,0,0); }\n    if(bj.invInertiaWorldSolve){ bj.invInertiaWorldSolve.vmult(tj,invIj_vmult_tauj); }\n    else { invIj_vmult_tauj.set(0,0,0); }\n\n    fi.mult(invMassi,iMfi);\n    fj.mult(invMassj,iMfj);\n\n    return GA.multiplyVectors(iMfi,invIi_vmult_taui) + GB.multiplyVectors(iMfj,invIj_vmult_tauj);\n};\n\n/**\n * Computes G*inv(M)*G'\n * @method computeGiMGt\n * @return {Number}\n */\nvar tmp = new Vec3();\nEquation.prototype.computeGiMGt = function(){\n    var GA = this.jacobianElementA,\n        GB = this.jacobianElementB,\n        bi = this.bi,\n        bj = this.bj,\n        invMassi = bi.invMassSolve,\n        invMassj = bj.invMassSolve,\n        invIi = bi.invInertiaWorldSolve,\n        invIj = bj.invInertiaWorldSolve,\n        result = invMassi + invMassj;\n\n    if(invIi){\n        invIi.vmult(GA.rotational,tmp);\n        result += tmp.dot(GA.rotational);\n    }\n\n    if(invIj){\n        invIj.vmult(GB.rotational,tmp);\n        result += tmp.dot(GB.rotational);\n    }\n\n    return  result;\n};\n\nvar addToWlambda_temp = new Vec3(),\n    addToWlambda_Gi = new Vec3(),\n    addToWlambda_Gj = new Vec3(),\n    addToWlambda_ri = new Vec3(),\n    addToWlambda_rj = new Vec3(),\n    addToWlambda_Mdiag = new Vec3();\n\n/**\n * Add constraint velocity to the bodies.\n * @method addToWlambda\n * @param {Number} deltalambda\n */\nEquation.prototype.addToWlambda = function(deltalambda){\n    var GA = this.jacobianElementA,\n        GB = this.jacobianElementB,\n        bi = this.bi,\n        bj = this.bj,\n        temp = addToWlambda_temp;\n\n    // Add to linear velocity\n    // v_lambda += inv(M) * delta_lamba * G\n    GA.spatial.mult(bi.invMassSolve * deltalambda,temp);\n    bi.vlambda.vadd(temp, bi.vlambda);\n\n    GB.spatial.mult(bj.invMassSolve * deltalambda,temp);\n    bj.vlambda.vadd(temp, bj.vlambda);\n\n    // Add to angular velocity\n    if(bi.invInertiaWorldSolve){\n        bi.invInertiaWorldSolve.vmult(GA.rotational,temp);\n        temp.mult(deltalambda,temp);\n        bi.wlambda.vadd(temp,bi.wlambda);\n    }\n\n    if(bj.invInertiaWorldSolve){\n        bj.invInertiaWorldSolve.vmult(GB.rotational,temp);\n        temp.mult(deltalambda,temp);\n        bj.wlambda.vadd(temp,bj.wlambda);\n    }\n};\n\n/**\n * Compute the denominator part of the SPOOK equation: C = G*inv(M)*G' + eps\n * @method computeInvC\n * @param  {Number} eps\n * @return {Number}\n */\nEquation.prototype.computeC = function(){\n    return this.computeGiMGt() + this.eps;\n};\n\n},{\"../math/JacobianElement\":26,\"../math/Vec3\":30}],21:[function(_dereq_,module,exports){\nmodule.exports = FrictionEquation;\n\nvar Equation = _dereq_('./Equation');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Mat3 = _dereq_('../math/Mat3');\n\n/**\n * Constrains the slipping in a contact along a tangent\n * @class FrictionEquation\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Number} slipForce should be +-F_friction = +-mu * F_normal = +-mu * m * g\n * @extends Equation\n */\nfunction FrictionEquation(bodyA, bodyB, slipForce){\n    Equation.call(this,bodyA, bodyB, -slipForce, slipForce);\n    this.ri = new Vec3();\n    this.rj = new Vec3();\n    this.t = new Vec3(); // tangent\n}\n\nFrictionEquation.prototype = new Equation();\nFrictionEquation.prototype.constructor = FrictionEquation;\n\nvar FrictionEquation_computeB_temp1 = new Vec3();\nvar FrictionEquation_computeB_temp2 = new Vec3();\nFrictionEquation.prototype.computeB = function(h){\n    var a = this.a,\n        b = this.b,\n        bi = this.bi,\n        bj = this.bj,\n        ri = this.ri,\n        rj = this.rj,\n        rixt = FrictionEquation_computeB_temp1,\n        rjxt = FrictionEquation_computeB_temp2,\n        t = this.t;\n\n    // Caluclate cross products\n    ri.cross(t,rixt);\n    rj.cross(t,rjxt);\n\n    // G = [-t -rixt t rjxt]\n    // And remember, this is a pure velocity constraint, g is always zero!\n    var GA = this.jacobianElementA,\n        GB = this.jacobianElementB;\n    t.negate(GA.spatial);\n    rixt.negate(GA.rotational);\n    GB.spatial.copy(t);\n    GB.rotational.copy(rjxt);\n\n    var GW = this.computeGW();\n    var GiMf = this.computeGiMf();\n\n    var B = - GW * b - h * GiMf;\n\n    return B;\n};\n\n},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],22:[function(_dereq_,module,exports){\nmodule.exports = RotationalEquation;\n\nvar Vec3 = _dereq_('../math/Vec3');\nvar Mat3 = _dereq_('../math/Mat3');\nvar Equation = _dereq_('./Equation');\n\n/**\n * Rotational constraint. Works to keep the local vectors orthogonal to each other in world space.\n * @class RotationalEquation\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Vec3} [options.axisA]\n * @param {Vec3} [options.axisB]\n * @param {number} [options.maxForce]\n * @extends Equation\n */\nfunction RotationalEquation(bodyA, bodyB, options){\n    options = options || {};\n    var maxForce = typeof(options.maxForce) !== 'undefined' ? options.maxForce : 1e6;\n\n    Equation.call(this,bodyA,bodyB,-maxForce, maxForce);\n\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1, 0, 0);\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3(0, 1, 0);\n\n    this.maxAngle = Math.PI / 2;\n}\n\nRotationalEquation.prototype = new Equation();\nRotationalEquation.prototype.constructor = RotationalEquation;\n\nvar tmpVec1 = new Vec3();\nvar tmpVec2 = new Vec3();\n\nRotationalEquation.prototype.computeB = function(h){\n    var a = this.a,\n        b = this.b,\n\n        ni = this.axisA,\n        nj = this.axisB,\n\n        nixnj = tmpVec1,\n        njxni = tmpVec2,\n\n        GA = this.jacobianElementA,\n        GB = this.jacobianElementB;\n\n    // Caluclate cross products\n    ni.cross(nj, nixnj);\n    nj.cross(ni, njxni);\n\n    // g = ni * nj\n    // gdot = (nj x ni) * wi + (ni x nj) * wj\n    // G = [0 njxni 0 nixnj]\n    // W = [vi wi vj wj]\n    GA.rotational.copy(njxni);\n    GB.rotational.copy(nixnj);\n\n    var g = Math.cos(this.maxAngle) - ni.dot(nj),\n        GW = this.computeGW(),\n        GiMf = this.computeGiMf();\n\n    var B = - g * a - GW * b - h * GiMf;\n\n    return B;\n};\n\n\n},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],23:[function(_dereq_,module,exports){\nmodule.exports = RotationalMotorEquation;\n\nvar Vec3 = _dereq_('../math/Vec3');\nvar Mat3 = _dereq_('../math/Mat3');\nvar Equation = _dereq_('./Equation');\n\n/**\n * Rotational motor constraint. Tries to keep the relative angular velocity of the bodies to a given value.\n * @class RotationalMotorEquation\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Number} maxForce\n * @extends Equation\n */\nfunction RotationalMotorEquation(bodyA, bodyB, maxForce){\n    maxForce = typeof(maxForce)!=='undefined' ? maxForce : 1e6;\n    Equation.call(this,bodyA,bodyB,-maxForce,maxForce);\n\n    /**\n     * World oriented rotational axis\n     * @property {Vec3} axisA\n     */\n    this.axisA = new Vec3();\n\n    /**\n     * World oriented rotational axis\n     * @property {Vec3} axisB\n     */\n    this.axisB = new Vec3(); // World oriented rotational axis\n\n    /**\n     * Motor velocity\n     * @property {Number} targetVelocity\n     */\n    this.targetVelocity = 0;\n}\n\nRotationalMotorEquation.prototype = new Equation();\nRotationalMotorEquation.prototype.constructor = RotationalMotorEquation;\n\nRotationalMotorEquation.prototype.computeB = function(h){\n    var a = this.a,\n        b = this.b,\n        bi = this.bi,\n        bj = this.bj,\n\n        axisA = this.axisA,\n        axisB = this.axisB,\n\n        GA = this.jacobianElementA,\n        GB = this.jacobianElementB;\n\n    // g = 0\n    // gdot = axisA * wi - axisB * wj\n    // gdot = G * W = G * [vi wi vj wj]\n    // =>\n    // G = [0 axisA 0 -axisB]\n\n    GA.rotational.copy(axisA);\n    axisB.negate(GB.rotational);\n\n    var GW = this.computeGW() - this.targetVelocity,\n        GiMf = this.computeGiMf();\n\n    var B = - GW * b - h * GiMf;\n\n    return B;\n};\n\n},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],24:[function(_dereq_,module,exports){\nvar Utils = _dereq_('../utils/Utils');\n\nmodule.exports = ContactMaterial;\n\n/**\n * Defines what happens when two materials meet.\n * @class ContactMaterial\n * @constructor\n * @param {Material} m1\n * @param {Material} m2\n * @param {object} [options]\n * @param {Number} [options.friction=0.3]\n * @param {Number} [options.restitution=0.3]\n * @param {number} [options.contactEquationStiffness=1e7]\n * @param {number} [options.contactEquationRelaxation=3]\n * @param {number} [options.frictionEquationStiffness=1e7]\n * @param {Number} [options.frictionEquationRelaxation=3]\n */\nfunction ContactMaterial(m1, m2, options){\n    options = Utils.defaults(options, {\n        friction: 0.3,\n        restitution: 0.3,\n        contactEquationStiffness: 1e7,\n        contactEquationRelaxation: 3,\n        frictionEquationStiffness: 1e7,\n        frictionEquationRelaxation: 3\n    });\n\n    /**\n     * Identifier of this material\n     * @property {Number} id\n     */\n    this.id = ContactMaterial.idCounter++;\n\n    /**\n     * Participating materials\n     * @property {Array} materials\n     * @todo  Should be .materialA and .materialB instead\n     */\n    this.materials = [m1, m2];\n\n    /**\n     * Friction coefficient\n     * @property {Number} friction\n     */\n    this.friction = options.friction;\n\n    /**\n     * Restitution coefficient\n     * @property {Number} restitution\n     */\n    this.restitution = options.restitution;\n\n    /**\n     * Stiffness of the produced contact equations\n     * @property {Number} contactEquationStiffness\n     */\n    this.contactEquationStiffness = options.contactEquationStiffness;\n\n    /**\n     * Relaxation time of the produced contact equations\n     * @property {Number} contactEquationRelaxation\n     */\n    this.contactEquationRelaxation = options.contactEquationRelaxation;\n\n    /**\n     * Stiffness of the produced friction equations\n     * @property {Number} frictionEquationStiffness\n     */\n    this.frictionEquationStiffness = options.frictionEquationStiffness;\n\n    /**\n     * Relaxation time of the produced friction equations\n     * @property {Number} frictionEquationRelaxation\n     */\n    this.frictionEquationRelaxation = options.frictionEquationRelaxation;\n}\n\nContactMaterial.idCounter = 0;\n\n},{\"../utils/Utils\":53}],25:[function(_dereq_,module,exports){\nmodule.exports = Material;\n\n/**\n * Defines a physics material.\n * @class Material\n * @constructor\n * @param {object} [options]\n * @author schteppe\n */\nfunction Material(options){\n    var name = '';\n    options = options || {};\n\n    // Backwards compatibility fix\n    if(typeof(options) === 'string'){\n        name = options;\n        options = {};\n    } else if(typeof(options) === 'object') {\n        name = '';\n    }\n\n    /**\n     * @property name\n     * @type {String}\n     */\n    this.name = name;\n\n    /**\n     * material id.\n     * @property id\n     * @type {number}\n     */\n    this.id = Material.idCounter++;\n\n    /**\n     * Friction for this material. If non-negative, it will be used instead of the friction given by ContactMaterials. If there's no matching ContactMaterial, the value from .defaultContactMaterial in the World will be used.\n     * @property {number} friction\n     */\n    this.friction = typeof(options.friction) !== 'undefined' ? options.friction : -1;\n\n    /**\n     * Restitution for this material. If non-negative, it will be used instead of the restitution given by ContactMaterials. If there's no matching ContactMaterial, the value from .defaultContactMaterial in the World will be used.\n     * @property {number} restitution\n     */\n    this.restitution = typeof(options.restitution) !== 'undefined' ? options.restitution : -1;\n}\n\nMaterial.idCounter = 0;\n\n},{}],26:[function(_dereq_,module,exports){\nmodule.exports = JacobianElement;\n\nvar Vec3 = _dereq_('./Vec3');\n\n/**\n * An element containing 6 entries, 3 spatial and 3 rotational degrees of freedom.\n * @class JacobianElement\n * @constructor\n */\nfunction JacobianElement(){\n\n    /**\n     * @property {Vec3} spatial\n     */\n    this.spatial = new Vec3();\n\n    /**\n     * @property {Vec3} rotational\n     */\n    this.rotational = new Vec3();\n}\n\n/**\n * Multiply with other JacobianElement\n * @method multiplyElement\n * @param  {JacobianElement} element\n * @return {Number}\n */\nJacobianElement.prototype.multiplyElement = function(element){\n    return element.spatial.dot(this.spatial) + element.rotational.dot(this.rotational);\n};\n\n/**\n * Multiply with two vectors\n * @method multiplyVectors\n * @param  {Vec3} spatial\n * @param  {Vec3} rotational\n * @return {Number}\n */\nJacobianElement.prototype.multiplyVectors = function(spatial,rotational){\n    return spatial.dot(this.spatial) + rotational.dot(this.rotational);\n};\n\n},{\"./Vec3\":30}],27:[function(_dereq_,module,exports){\nmodule.exports = Mat3;\n\nvar Vec3 = _dereq_('./Vec3');\n\n/**\n * A 3x3 matrix.\n * @class Mat3\n * @constructor\n * @param array elements Array of nine elements. Optional.\n * @author schteppe / http://github.com/schteppe\n */\nfunction Mat3(elements){\n    /**\n     * A vector of length 9, containing all matrix elements\n     * @property {Array} elements\n     */\n    if(elements){\n        this.elements = elements;\n    } else {\n        this.elements = [0,0,0,0,0,0,0,0,0];\n    }\n}\n\n/**\n * Sets the matrix to identity\n * @method identity\n * @todo Should perhaps be renamed to setIdentity() to be more clear.\n * @todo Create another function that immediately creates an identity matrix eg. eye()\n */\nMat3.prototype.identity = function(){\n    var e = this.elements;\n    e[0] = 1;\n    e[1] = 0;\n    e[2] = 0;\n\n    e[3] = 0;\n    e[4] = 1;\n    e[5] = 0;\n\n    e[6] = 0;\n    e[7] = 0;\n    e[8] = 1;\n};\n\n/**\n * Set all elements to zero\n * @method setZero\n */\nMat3.prototype.setZero = function(){\n    var e = this.elements;\n    e[0] = 0;\n    e[1] = 0;\n    e[2] = 0;\n    e[3] = 0;\n    e[4] = 0;\n    e[5] = 0;\n    e[6] = 0;\n    e[7] = 0;\n    e[8] = 0;\n};\n\n/**\n * Sets the matrix diagonal elements from a Vec3\n * @method setTrace\n * @param {Vec3} vec3\n */\nMat3.prototype.setTrace = function(vec3){\n    var e = this.elements;\n    e[0] = vec3.x;\n    e[4] = vec3.y;\n    e[8] = vec3.z;\n};\n\n/**\n * Gets the matrix diagonal elements\n * @method getTrace\n * @return {Vec3}\n */\nMat3.prototype.getTrace = function(target){\n    var target = target || new Vec3();\n    var e = this.elements;\n    target.x = e[0];\n    target.y = e[4];\n    target.z = e[8];\n};\n\n/**\n * Matrix-Vector multiplication\n * @method vmult\n * @param {Vec3} v The vector to multiply with\n * @param {Vec3} target Optional, target to save the result in.\n */\nMat3.prototype.vmult = function(v,target){\n    target = target || new Vec3();\n\n    var e = this.elements,\n        x = v.x,\n        y = v.y,\n        z = v.z;\n    target.x = e[0]*x + e[1]*y + e[2]*z;\n    target.y = e[3]*x + e[4]*y + e[5]*z;\n    target.z = e[6]*x + e[7]*y + e[8]*z;\n\n    return target;\n};\n\n/**\n * Matrix-scalar multiplication\n * @method smult\n * @param {Number} s\n */\nMat3.prototype.smult = function(s){\n    for(var i=0; i<this.elements.length; i++){\n        this.elements[i] *= s;\n    }\n};\n\n/**\n * Matrix multiplication\n * @method mmult\n * @param {Mat3} m Matrix to multiply with from left side.\n * @return {Mat3} The result.\n */\nMat3.prototype.mmult = function(m,target){\n    var r = target || new Mat3();\n    for(var i=0; i<3; i++){\n        for(var j=0; j<3; j++){\n            var sum = 0.0;\n            for(var k=0; k<3; k++){\n                sum += m.elements[i+k*3] * this.elements[k+j*3];\n            }\n            r.elements[i+j*3] = sum;\n        }\n    }\n    return r;\n};\n\n/**\n * Scale each column of the matrix\n * @method scale\n * @param {Vec3} v\n * @return {Mat3} The result.\n */\nMat3.prototype.scale = function(v,target){\n    target = target || new Mat3();\n    var e = this.elements,\n        t = target.elements;\n    for(var i=0; i!==3; i++){\n        t[3*i + 0] = v.x * e[3*i + 0];\n        t[3*i + 1] = v.y * e[3*i + 1];\n        t[3*i + 2] = v.z * e[3*i + 2];\n    }\n    return target;\n};\n\n/**\n * Solve Ax=b\n * @method solve\n * @param {Vec3} b The right hand side\n * @param {Vec3} target Optional. Target vector to save in.\n * @return {Vec3} The solution x\n * @todo should reuse arrays\n */\nMat3.prototype.solve = function(b,target){\n    target = target || new Vec3();\n\n    // Construct equations\n    var nr = 3; // num rows\n    var nc = 4; // num cols\n    var eqns = [];\n    for(var i=0; i<nr*nc; i++){\n        eqns.push(0);\n    }\n    var i,j;\n    for(i=0; i<3; i++){\n        for(j=0; j<3; j++){\n            eqns[i+nc*j] = this.elements[i+3*j];\n        }\n    }\n    eqns[3+4*0] = b.x;\n    eqns[3+4*1] = b.y;\n    eqns[3+4*2] = b.z;\n\n    // Compute right upper triangular version of the matrix - Gauss elimination\n    var n = 3, k = n, np;\n    var kp = 4; // num rows\n    var p, els;\n    do {\n        i = k - n;\n        if (eqns[i+nc*i] === 0) {\n            // the pivot is null, swap lines\n            for (j = i + 1; j < k; j++) {\n                if (eqns[i+nc*j] !== 0) {\n                    np = kp;\n                    do {  // do ligne( i ) = ligne( i ) + ligne( k )\n                        p = kp - np;\n                        eqns[p+nc*i] += eqns[p+nc*j];\n                    } while (--np);\n                    break;\n                }\n            }\n        }\n        if (eqns[i+nc*i] !== 0) {\n            for (j = i + 1; j < k; j++) {\n                var multiplier = eqns[i+nc*j] / eqns[i+nc*i];\n                np = kp;\n                do {  // do ligne( k ) = ligne( k ) - multiplier * ligne( i )\n                    p = kp - np;\n                    eqns[p+nc*j] = p <= i ? 0 : eqns[p+nc*j] - eqns[p+nc*i] * multiplier ;\n                } while (--np);\n            }\n        }\n    } while (--n);\n\n    // Get the solution\n    target.z = eqns[2*nc+3] / eqns[2*nc+2];\n    target.y = (eqns[1*nc+3] - eqns[1*nc+2]*target.z) / eqns[1*nc+1];\n    target.x = (eqns[0*nc+3] - eqns[0*nc+2]*target.z - eqns[0*nc+1]*target.y) / eqns[0*nc+0];\n\n    if(isNaN(target.x) || isNaN(target.y) || isNaN(target.z) || target.x===Infinity || target.y===Infinity || target.z===Infinity){\n        throw \"Could not solve equation! Got x=[\"+target.toString()+\"], b=[\"+b.toString()+\"], A=[\"+this.toString()+\"]\";\n    }\n\n    return target;\n};\n\n/**\n * Get an element in the matrix by index. Index starts at 0, not 1!!!\n * @method e\n * @param {Number} row\n * @param {Number} column\n * @param {Number} value Optional. If provided, the matrix element will be set to this value.\n * @return {Number}\n */\nMat3.prototype.e = function( row , column ,value){\n    if(value===undefined){\n        return this.elements[column+3*row];\n    } else {\n        // Set value\n        this.elements[column+3*row] = value;\n    }\n};\n\n/**\n * Copy another matrix into this matrix object.\n * @method copy\n * @param {Mat3} source\n * @return {Mat3} this\n */\nMat3.prototype.copy = function(source){\n    for(var i=0; i < source.elements.length; i++){\n        this.elements[i] = source.elements[i];\n    }\n    return this;\n};\n\n/**\n * Returns a string representation of the matrix.\n * @method toString\n * @return string\n */\nMat3.prototype.toString = function(){\n    var r = \"\";\n    var sep = \",\";\n    for(var i=0; i<9; i++){\n        r += this.elements[i] + sep;\n    }\n    return r;\n};\n\n/**\n * reverse the matrix\n * @method reverse\n * @param {Mat3} target Optional. Target matrix to save in.\n * @return {Mat3} The solution x\n */\nMat3.prototype.reverse = function(target){\n\n    target = target || new Mat3();\n\n    // Construct equations\n    var nr = 3; // num rows\n    var nc = 6; // num cols\n    var eqns = [];\n    for(var i=0; i<nr*nc; i++){\n        eqns.push(0);\n    }\n    var i,j;\n    for(i=0; i<3; i++){\n        for(j=0; j<3; j++){\n            eqns[i+nc*j] = this.elements[i+3*j];\n        }\n    }\n    eqns[3+6*0] = 1;\n    eqns[3+6*1] = 0;\n    eqns[3+6*2] = 0;\n    eqns[4+6*0] = 0;\n    eqns[4+6*1] = 1;\n    eqns[4+6*2] = 0;\n    eqns[5+6*0] = 0;\n    eqns[5+6*1] = 0;\n    eqns[5+6*2] = 1;\n\n    // Compute right upper triangular version of the matrix - Gauss elimination\n    var n = 3, k = n, np;\n    var kp = nc; // num rows\n    var p;\n    do {\n        i = k - n;\n        if (eqns[i+nc*i] === 0) {\n            // the pivot is null, swap lines\n            for (j = i + 1; j < k; j++) {\n                if (eqns[i+nc*j] !== 0) {\n                    np = kp;\n                    do { // do line( i ) = line( i ) + line( k )\n                        p = kp - np;\n                        eqns[p+nc*i] += eqns[p+nc*j];\n                    } while (--np);\n                    break;\n                }\n            }\n        }\n        if (eqns[i+nc*i] !== 0) {\n            for (j = i + 1; j < k; j++) {\n                var multiplier = eqns[i+nc*j] / eqns[i+nc*i];\n                np = kp;\n                do { // do line( k ) = line( k ) - multiplier * line( i )\n                    p = kp - np;\n                    eqns[p+nc*j] = p <= i ? 0 : eqns[p+nc*j] - eqns[p+nc*i] * multiplier ;\n                } while (--np);\n            }\n        }\n    } while (--n);\n\n    // eliminate the upper left triangle of the matrix\n    i = 2;\n    do {\n        j = i-1;\n        do {\n            var multiplier = eqns[i+nc*j] / eqns[i+nc*i];\n            np = nc;\n            do {\n                p = nc - np;\n                eqns[p+nc*j] =  eqns[p+nc*j] - eqns[p+nc*i] * multiplier ;\n            } while (--np);\n        } while (j--);\n    } while (--i);\n\n    // operations on the diagonal\n    i = 2;\n    do {\n        var multiplier = 1 / eqns[i+nc*i];\n        np = nc;\n        do {\n            p = nc - np;\n            eqns[p+nc*i] = eqns[p+nc*i] * multiplier ;\n        } while (--np);\n    } while (i--);\n\n    i = 2;\n    do {\n        j = 2;\n        do {\n            p = eqns[nr+j+nc*i];\n            if( isNaN( p ) || p ===Infinity ){\n                throw \"Could not reverse! A=[\"+this.toString()+\"]\";\n            }\n            target.e( i , j , p );\n        } while (j--);\n    } while (i--);\n\n    return target;\n};\n\n/**\n * Set the matrix from a quaterion\n * @method setRotationFromQuaternion\n * @param {Quaternion} q\n */\nMat3.prototype.setRotationFromQuaternion = function( q ) {\n    var x = q.x, y = q.y, z = q.z, w = q.w,\n        x2 = x + x, y2 = y + y, z2 = z + z,\n        xx = x * x2, xy = x * y2, xz = x * z2,\n        yy = y * y2, yz = y * z2, zz = z * z2,\n        wx = w * x2, wy = w * y2, wz = w * z2,\n        e = this.elements;\n\n    e[3*0 + 0] = 1 - ( yy + zz );\n    e[3*0 + 1] = xy - wz;\n    e[3*0 + 2] = xz + wy;\n\n    e[3*1 + 0] = xy + wz;\n    e[3*1 + 1] = 1 - ( xx + zz );\n    e[3*1 + 2] = yz - wx;\n\n    e[3*2 + 0] = xz - wy;\n    e[3*2 + 1] = yz + wx;\n    e[3*2 + 2] = 1 - ( xx + yy );\n\n    return this;\n};\n\n/**\n * Transpose the matrix\n * @method transpose\n * @param  {Mat3} target Where to store the result.\n * @return {Mat3} The target Mat3, or a new Mat3 if target was omitted.\n */\nMat3.prototype.transpose = function( target ) {\n    target = target || new Mat3();\n\n    var Mt = target.elements,\n        M = this.elements;\n\n    for(var i=0; i!==3; i++){\n        for(var j=0; j!==3; j++){\n            Mt[3*i + j] = M[3*j + i];\n        }\n    }\n\n    return target;\n};\n\n},{\"./Vec3\":30}],28:[function(_dereq_,module,exports){\nmodule.exports = Quaternion;\n\nvar Vec3 = _dereq_('./Vec3');\n\n/**\n * A Quaternion describes a rotation in 3D space. The Quaternion is mathematically defined as Q = x*i + y*j + z*k + w, where (i,j,k) are imaginary basis vectors. (x,y,z) can be seen as a vector related to the axis of rotation, while the real multiplier, w, is related to the amount of rotation.\n * @class Quaternion\n * @constructor\n * @param {Number} x Multiplier of the imaginary basis vector i.\n * @param {Number} y Multiplier of the imaginary basis vector j.\n * @param {Number} z Multiplier of the imaginary basis vector k.\n * @param {Number} w Multiplier of the real part.\n * @see http://en.wikipedia.org/wiki/Quaternion\n */\nfunction Quaternion(x,y,z,w){\n    /**\n     * @property {Number} x\n     */\n    this.x = x!==undefined ? x : 0;\n\n    /**\n     * @property {Number} y\n     */\n    this.y = y!==undefined ? y : 0;\n\n    /**\n     * @property {Number} z\n     */\n    this.z = z!==undefined ? z : 0;\n\n    /**\n     * The multiplier of the real quaternion basis vector.\n     * @property {Number} w\n     */\n    this.w = w!==undefined ? w : 1;\n}\n\n/**\n * Set the value of the quaternion.\n * @method set\n * @param {Number} x\n * @param {Number} y\n * @param {Number} z\n * @param {Number} w\n */\nQuaternion.prototype.set = function(x,y,z,w){\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n};\n\n/**\n * Convert to a readable format\n * @method toString\n * @return string\n */\nQuaternion.prototype.toString = function(){\n    return this.x+\",\"+this.y+\",\"+this.z+\",\"+this.w;\n};\n\n/**\n * Convert to an Array\n * @method toArray\n * @return Array\n */\nQuaternion.prototype.toArray = function(){\n    return [this.x, this.y, this.z, this.w];\n};\n\n/**\n * Set the quaternion components given an axis and an angle.\n * @method setFromAxisAngle\n * @param {Vec3} axis\n * @param {Number} angle in radians\n */\nQuaternion.prototype.setFromAxisAngle = function(axis,angle){\n    var s = Math.sin(angle*0.5);\n    this.x = axis.x * s;\n    this.y = axis.y * s;\n    this.z = axis.z * s;\n    this.w = Math.cos(angle*0.5);\n};\n\n/**\n * Converts the quaternion to axis/angle representation.\n * @method toAxisAngle\n * @param {Vec3} targetAxis Optional. A vector object to reuse for storing the axis.\n * @return Array An array, first elemnt is the axis and the second is the angle in radians.\n */\nQuaternion.prototype.toAxisAngle = function(targetAxis){\n    targetAxis = targetAxis || new Vec3();\n    this.normalize(); // if w>1 acos and sqrt will produce errors, this cant happen if quaternion is normalised\n    var angle = 2 * Math.acos(this.w);\n    var s = Math.sqrt(1-this.w*this.w); // assuming quaternion normalised then w is less than 1, so term always positive.\n    if (s < 0.001) { // test to avoid divide by zero, s is always positive due to sqrt\n        // if s close to zero then direction of axis not important\n        targetAxis.x = this.x; // if it is important that axis is normalised then replace with x=1; y=z=0;\n        targetAxis.y = this.y;\n        targetAxis.z = this.z;\n    } else {\n        targetAxis.x = this.x / s; // normalise axis\n        targetAxis.y = this.y / s;\n        targetAxis.z = this.z / s;\n    }\n    return [targetAxis,angle];\n};\n\nvar sfv_t1 = new Vec3(),\n    sfv_t2 = new Vec3();\n\n/**\n * Set the quaternion value given two vectors. The resulting rotation will be the needed rotation to rotate u to v.\n * @method setFromVectors\n * @param {Vec3} u\n * @param {Vec3} v\n */\nQuaternion.prototype.setFromVectors = function(u,v){\n    if(u.isAntiparallelTo(v)){\n        var t1 = sfv_t1;\n        var t2 = sfv_t2;\n\n        u.tangents(t1,t2);\n        this.setFromAxisAngle(t1,Math.PI);\n    } else {\n        var a = u.cross(v);\n        this.x = a.x;\n        this.y = a.y;\n        this.z = a.z;\n        this.w = Math.sqrt(Math.pow(u.norm(),2) * Math.pow(v.norm(),2)) + u.dot(v);\n        this.normalize();\n    }\n};\n\n/**\n * Quaternion multiplication\n * @method mult\n * @param {Quaternion} q\n * @param {Quaternion} target Optional.\n * @return {Quaternion}\n */\nvar Quaternion_mult_va = new Vec3();\nvar Quaternion_mult_vb = new Vec3();\nvar Quaternion_mult_vaxvb = new Vec3();\nQuaternion.prototype.mult = function(q,target){\n    target = target || new Quaternion();\n    var w = this.w,\n        va = Quaternion_mult_va,\n        vb = Quaternion_mult_vb,\n        vaxvb = Quaternion_mult_vaxvb;\n\n    va.set(this.x,this.y,this.z);\n    vb.set(q.x,q.y,q.z);\n    target.w = w*q.w - va.dot(vb);\n    va.cross(vb,vaxvb);\n\n    target.x = w * vb.x + q.w*va.x + vaxvb.x;\n    target.y = w * vb.y + q.w*va.y + vaxvb.y;\n    target.z = w * vb.z + q.w*va.z + vaxvb.z;\n\n    return target;\n};\n\n/**\n * Get the inverse quaternion rotation.\n * @method inverse\n * @param {Quaternion} target\n * @return {Quaternion}\n */\nQuaternion.prototype.inverse = function(target){\n    var x = this.x, y = this.y, z = this.z, w = this.w;\n    target = target || new Quaternion();\n\n    this.conjugate(target);\n    var inorm2 = 1/(x*x + y*y + z*z + w*w);\n    target.x *= inorm2;\n    target.y *= inorm2;\n    target.z *= inorm2;\n    target.w *= inorm2;\n\n    return target;\n};\n\n/**\n * Get the quaternion conjugate\n * @method conjugate\n * @param {Quaternion} target\n * @return {Quaternion}\n */\nQuaternion.prototype.conjugate = function(target){\n    target = target || new Quaternion();\n\n    target.x = -this.x;\n    target.y = -this.y;\n    target.z = -this.z;\n    target.w = this.w;\n\n    return target;\n};\n\n/**\n * Normalize the quaternion. Note that this changes the values of the quaternion.\n * @method normalize\n */\nQuaternion.prototype.normalize = function(){\n    var l = Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);\n    if ( l === 0 ) {\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n        this.w = 0;\n    } else {\n        l = 1 / l;\n        this.x *= l;\n        this.y *= l;\n        this.z *= l;\n        this.w *= l;\n    }\n};\n\n/**\n * Approximation of quaternion normalization. Works best when quat is already almost-normalized.\n * @method normalizeFast\n * @see http://jsperf.com/fast-quaternion-normalization\n * @author unphased, https://github.com/unphased\n */\nQuaternion.prototype.normalizeFast = function () {\n    var f = (3.0-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2.0;\n    if ( f === 0 ) {\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n        this.w = 0;\n    } else {\n        this.x *= f;\n        this.y *= f;\n        this.z *= f;\n        this.w *= f;\n    }\n};\n\n/**\n * Multiply the quaternion by a vector\n * @method vmult\n * @param {Vec3} v\n * @param {Vec3} target Optional\n * @return {Vec3}\n */\nQuaternion.prototype.vmult = function(v,target){\n    target = target || new Vec3();\n\n    var x = v.x,\n        y = v.y,\n        z = v.z;\n\n    var qx = this.x,\n        qy = this.y,\n        qz = this.z,\n        qw = this.w;\n\n    // q*v\n    var ix =  qw * x + qy * z - qz * y,\n    iy =  qw * y + qz * x - qx * z,\n    iz =  qw * z + qx * y - qy * x,\n    iw = -qx * x - qy * y - qz * z;\n\n    target.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    target.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    target.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\n    return target;\n};\n\n/**\n * Copies value of source to this quaternion.\n * @method copy\n * @param {Quaternion} source\n * @return {Quaternion} this\n */\nQuaternion.prototype.copy = function(source){\n    this.x = source.x;\n    this.y = source.y;\n    this.z = source.z;\n    this.w = source.w;\n    return this;\n};\n\n/**\n * Convert the quaternion to euler angle representation. Order: YZX, as this page describes: http://www.euclideanspace.com/maths/standards/index.htm\n * @method toEuler\n * @param {Vec3} target\n * @param string order Three-character string e.g. \"YZX\", which also is default.\n */\nQuaternion.prototype.toEuler = function(target,order){\n    order = order || \"YZX\";\n\n    var heading, attitude, bank;\n    var x = this.x, y = this.y, z = this.z, w = this.w;\n\n    switch(order){\n    case \"YZX\":\n        var test = x*y + z*w;\n        if (test > 0.499) { // singularity at north pole\n            heading = 2 * Math.atan2(x,w);\n            attitude = Math.PI/2;\n            bank = 0;\n        }\n        if (test < -0.499) { // singularity at south pole\n            heading = -2 * Math.atan2(x,w);\n            attitude = - Math.PI/2;\n            bank = 0;\n        }\n        if(isNaN(heading)){\n            var sqx = x*x;\n            var sqy = y*y;\n            var sqz = z*z;\n            heading = Math.atan2(2*y*w - 2*x*z , 1 - 2*sqy - 2*sqz); // Heading\n            attitude = Math.asin(2*test); // attitude\n            bank = Math.atan2(2*x*w - 2*y*z , 1 - 2*sqx - 2*sqz); // bank\n        }\n        break;\n    default:\n        throw new Error(\"Euler order \"+order+\" not supported yet.\");\n    }\n\n    target.y = heading;\n    target.z = attitude;\n    target.x = bank;\n};\n\n/**\n * See http://www.mathworks.com/matlabcentral/fileexchange/20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/content/SpinCalc.m\n * @method setFromEuler\n * @param {Number} x\n * @param {Number} y\n * @param {Number} z\n * @param {String} order The order to apply angles: 'XYZ' or 'YXZ' or any other combination\n */\nQuaternion.prototype.setFromEuler = function ( x, y, z, order ) {\n    order = order || \"XYZ\";\n\n    var c1 = Math.cos( x / 2 );\n    var c2 = Math.cos( y / 2 );\n    var c3 = Math.cos( z / 2 );\n    var s1 = Math.sin( x / 2 );\n    var s2 = Math.sin( y / 2 );\n    var s3 = Math.sin( z / 2 );\n\n    if ( order === 'XYZ' ) {\n\n        this.x = s1 * c2 * c3 + c1 * s2 * s3;\n        this.y = c1 * s2 * c3 - s1 * c2 * s3;\n        this.z = c1 * c2 * s3 + s1 * s2 * c3;\n        this.w = c1 * c2 * c3 - s1 * s2 * s3;\n\n    } else if ( order === 'YXZ' ) {\n\n        this.x = s1 * c2 * c3 + c1 * s2 * s3;\n        this.y = c1 * s2 * c3 - s1 * c2 * s3;\n        this.z = c1 * c2 * s3 - s1 * s2 * c3;\n        this.w = c1 * c2 * c3 + s1 * s2 * s3;\n\n    } else if ( order === 'ZXY' ) {\n\n        this.x = s1 * c2 * c3 - c1 * s2 * s3;\n        this.y = c1 * s2 * c3 + s1 * c2 * s3;\n        this.z = c1 * c2 * s3 + s1 * s2 * c3;\n        this.w = c1 * c2 * c3 - s1 * s2 * s3;\n\n    } else if ( order === 'ZYX' ) {\n\n        this.x = s1 * c2 * c3 - c1 * s2 * s3;\n        this.y = c1 * s2 * c3 + s1 * c2 * s3;\n        this.z = c1 * c2 * s3 - s1 * s2 * c3;\n        this.w = c1 * c2 * c3 + s1 * s2 * s3;\n\n    } else if ( order === 'YZX' ) {\n\n        this.x = s1 * c2 * c3 + c1 * s2 * s3;\n        this.y = c1 * s2 * c3 + s1 * c2 * s3;\n        this.z = c1 * c2 * s3 - s1 * s2 * c3;\n        this.w = c1 * c2 * c3 - s1 * s2 * s3;\n\n    } else if ( order === 'XZY' ) {\n\n        this.x = s1 * c2 * c3 - c1 * s2 * s3;\n        this.y = c1 * s2 * c3 - s1 * c2 * s3;\n        this.z = c1 * c2 * s3 + s1 * s2 * c3;\n        this.w = c1 * c2 * c3 + s1 * s2 * s3;\n\n    }\n\n    return this;\n\n};\n\nQuaternion.prototype.clone = function(){\n    return new Quaternion(this.x, this.y, this.z, this.w);\n};\n},{\"./Vec3\":30}],29:[function(_dereq_,module,exports){\nvar Vec3 = _dereq_('./Vec3');\nvar Quaternion = _dereq_('./Quaternion');\n\nmodule.exports = Transform;\n\n/**\n * @class Transform\n * @constructor\n */\nfunction Transform(options) {\n    options = options || {};\n\n\t/**\n\t * @property {Vec3} position\n\t */\n\tthis.position = new Vec3();\n    if(options.position){\n        this.position.copy(options.position);\n    }\n\n\t/**\n\t * @property {Quaternion} quaternion\n\t */\n\tthis.quaternion = new Quaternion();\n    if(options.quaternion){\n        this.quaternion.copy(options.quaternion);\n    }\n}\n\nvar tmpQuat = new Quaternion();\n\n/**\n * @static\n * @method pointToLocaFrame\n * @param {Vec3} position\n * @param {Quaternion} quaternion\n * @param {Vec3} worldPoint\n * @param {Vec3} result\n */\nTransform.pointToLocalFrame = function(position, quaternion, worldPoint, result){\n    var result = result || new Vec3();\n    worldPoint.vsub(position, result);\n    quaternion.conjugate(tmpQuat);\n    tmpQuat.vmult(result, result);\n    return result;\n};\n\n/**\n * Get a global point in local transform coordinates.\n * @method pointToLocal\n * @param  {Vec3} point\n * @param  {Vec3} result\n * @return {Vec3} The \"result\" vector object\n */\nTransform.prototype.pointToLocal = function(worldPoint, result){\n    return Transform.pointToLocalFrame(this.position, this.quaternion, worldPoint, result);\n};\n\n/**\n * @static\n * @method pointToWorldFrame\n * @param {Vec3} position\n * @param {Vec3} quaternion\n * @param {Vec3} localPoint\n * @param {Vec3} result\n */\nTransform.pointToWorldFrame = function(position, quaternion, localPoint, result){\n    var result = result || new Vec3();\n    quaternion.vmult(localPoint, result);\n    result.vadd(position, result);\n    return result;\n};\n\n/**\n * Get a local point in global transform coordinates.\n * @method pointToWorld\n * @param  {Vec3} point\n * @param  {Vec3} result\n * @return {Vec3} The \"result\" vector object\n */\nTransform.prototype.pointToWorld = function(localPoint, result){\n    return Transform.pointToWorldFrame(this.position, this.quaternion, localPoint, result);\n};\n\n\nTransform.prototype.vectorToWorldFrame = function(localVector, result){\n    var result = result || new Vec3();\n    this.quaternion.vmult(localVector, result);\n    return result;\n};\n\nTransform.vectorToWorldFrame = function(quaternion, localVector, result){\n    quaternion.vmult(localVector, result);\n    return result;\n};\n\nTransform.vectorToLocalFrame = function(position, quaternion, worldVector, result){\n    var result = result || new Vec3();\n    quaternion.w *= -1;\n    quaternion.vmult(worldVector, result);\n    quaternion.w *= -1;\n    return result;\n};\n\n},{\"./Quaternion\":28,\"./Vec3\":30}],30:[function(_dereq_,module,exports){\nmodule.exports = Vec3;\n\nvar Mat3 = _dereq_('./Mat3');\n\n/**\n * 3-dimensional vector\n * @class Vec3\n * @constructor\n * @param {Number} x\n * @param {Number} y\n * @param {Number} z\n * @author schteppe\n * @example\n *     var v = new Vec3(1, 2, 3);\n *     console.log('x=' + v.x); // x=1\n */\nfunction Vec3(x,y,z){\n    /**\n     * @property x\n     * @type {Number}\n     */\n    this.x = x||0.0;\n\n    /**\n     * @property y\n     * @type {Number}\n     */\n    this.y = y||0.0;\n\n    /**\n     * @property z\n     * @type {Number}\n     */\n    this.z = z||0.0;\n}\n\n/**\n * @static\n * @property {Vec3} ZERO\n */\nVec3.ZERO = new Vec3(0, 0, 0);\n\n/**\n * @static\n * @property {Vec3} UNIT_X\n */\nVec3.UNIT_X = new Vec3(1, 0, 0);\n\n/**\n * @static\n * @property {Vec3} UNIT_Y\n */\nVec3.UNIT_Y = new Vec3(0, 1, 0);\n\n/**\n * @static\n * @property {Vec3} UNIT_Z\n */\nVec3.UNIT_Z = new Vec3(0, 0, 1);\n\n/**\n * Vector cross product\n * @method cross\n * @param {Vec3} v\n * @param {Vec3} target Optional. Target to save in.\n * @return {Vec3}\n */\nVec3.prototype.cross = function(v,target){\n    var vx=v.x, vy=v.y, vz=v.z, x=this.x, y=this.y, z=this.z;\n    target = target || new Vec3();\n\n    target.x = (y * vz) - (z * vy);\n    target.y = (z * vx) - (x * vz);\n    target.z = (x * vy) - (y * vx);\n\n    return target;\n};\n\n/**\n * Set the vectors' 3 elements\n * @method set\n * @param {Number} x\n * @param {Number} y\n * @param {Number} z\n * @return Vec3\n */\nVec3.prototype.set = function(x,y,z){\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n};\n\n/**\n * Set all components of the vector to zero.\n * @method setZero\n */\nVec3.prototype.setZero = function(){\n    this.x = this.y = this.z = 0;\n};\n\n/**\n * Vector addition\n * @method vadd\n * @param {Vec3} v\n * @param {Vec3} target Optional.\n * @return {Vec3}\n */\nVec3.prototype.vadd = function(v,target){\n    if(target){\n        target.x = v.x + this.x;\n        target.y = v.y + this.y;\n        target.z = v.z + this.z;\n    } else {\n        return new Vec3(this.x + v.x,\n                               this.y + v.y,\n                               this.z + v.z);\n    }\n};\n\n/**\n * Vector subtraction\n * @method vsub\n * @param {Vec3} v\n * @param {Vec3} target Optional. Target to save in.\n * @return {Vec3}\n */\nVec3.prototype.vsub = function(v,target){\n    if(target){\n        target.x = this.x - v.x;\n        target.y = this.y - v.y;\n        target.z = this.z - v.z;\n    } else {\n        return new Vec3(this.x-v.x,\n                               this.y-v.y,\n                               this.z-v.z);\n    }\n};\n\n/**\n * Get the cross product matrix a_cross from a vector, such that a x b = a_cross * b = c\n * @method crossmat\n * @see http://www8.cs.umu.se/kurser/TDBD24/VT06/lectures/Lecture6.pdf\n * @return {Mat3}\n */\nVec3.prototype.crossmat = function(){\n    return new Mat3([     0,  -this.z,   this.y,\n                            this.z,        0,  -this.x,\n                           -this.y,   this.x,        0]);\n};\n\n/**\n * Normalize the vector. Note that this changes the values in the vector.\n * @method normalize\n * @return {Number} Returns the norm of the vector\n */\nVec3.prototype.normalize = function(){\n    var x=this.x, y=this.y, z=this.z;\n    var n = Math.sqrt(x*x + y*y + z*z);\n    if(n>0.0){\n        var invN = 1/n;\n        this.x *= invN;\n        this.y *= invN;\n        this.z *= invN;\n    } else {\n        // Make something up\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n    }\n    return n;\n};\n\n/**\n * Get the version of this vector that is of length 1.\n * @method unit\n * @param {Vec3} target Optional target to save in\n * @return {Vec3} Returns the unit vector\n */\nVec3.prototype.unit = function(target){\n    target = target || new Vec3();\n    var x=this.x, y=this.y, z=this.z;\n    var ninv = Math.sqrt(x*x + y*y + z*z);\n    if(ninv>0.0){\n        ninv = 1.0/ninv;\n        target.x = x * ninv;\n        target.y = y * ninv;\n        target.z = z * ninv;\n    } else {\n        target.x = 1;\n        target.y = 0;\n        target.z = 0;\n    }\n    return target;\n};\n\n/**\n * Get the length of the vector\n * @method norm\n * @return {Number}\n * @deprecated Use .length() instead\n */\nVec3.prototype.norm = function(){\n    var x=this.x, y=this.y, z=this.z;\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Get the length of the vector\n * @method length\n * @return {Number}\n */\nVec3.prototype.length = Vec3.prototype.norm;\n\n/**\n * Get the squared length of the vector\n * @method norm2\n * @return {Number}\n * @deprecated Use .lengthSquared() instead.\n */\nVec3.prototype.norm2 = function(){\n    return this.dot(this);\n};\n\n/**\n * Get the squared length of the vector.\n * @method lengthSquared\n * @return {Number}\n */\nVec3.prototype.lengthSquared = Vec3.prototype.norm2;\n\n/**\n * Get distance from this point to another point\n * @method distanceTo\n * @param  {Vec3} p\n * @return {Number}\n */\nVec3.prototype.distanceTo = function(p){\n    var x=this.x, y=this.y, z=this.z;\n    var px=p.x, py=p.y, pz=p.z;\n    return Math.sqrt((px-x)*(px-x)+\n                     (py-y)*(py-y)+\n                     (pz-z)*(pz-z));\n};\n\n/**\n * Get squared distance from this point to another point\n * @method distanceSquared\n * @param  {Vec3} p\n * @return {Number}\n */\nVec3.prototype.distanceSquared = function(p){\n    var x=this.x, y=this.y, z=this.z;\n    var px=p.x, py=p.y, pz=p.z;\n    return (px-x)*(px-x) + (py-y)*(py-y) + (pz-z)*(pz-z);\n};\n\n/**\n * Multiply all the components of the vector with a scalar.\n * @deprecated Use .scale instead\n * @method mult\n * @param {Number} scalar\n * @param {Vec3} target The vector to save the result in.\n * @return {Vec3}\n * @deprecated Use .scale() instead\n */\nVec3.prototype.mult = function(scalar,target){\n    target = target || new Vec3();\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    target.x = scalar * x;\n    target.y = scalar * y;\n    target.z = scalar * z;\n    return target;\n};\n\n/**\n * Multiply the vector with a scalar.\n * @method scale\n * @param {Number} scalar\n * @param {Vec3} target\n * @return {Vec3}\n */\nVec3.prototype.scale = Vec3.prototype.mult;\n\n/**\n * Calculate dot product\n * @method dot\n * @param {Vec3} v\n * @return {Number}\n */\nVec3.prototype.dot = function(v){\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n};\n\n/**\n * @method isZero\n * @return bool\n */\nVec3.prototype.isZero = function(){\n    return this.x===0 && this.y===0 && this.z===0;\n};\n\n/**\n * Make the vector point in the opposite direction.\n * @method negate\n * @param {Vec3} target Optional target to save in\n * @return {Vec3}\n */\nVec3.prototype.negate = function(target){\n    target = target || new Vec3();\n    target.x = -this.x;\n    target.y = -this.y;\n    target.z = -this.z;\n    return target;\n};\n\n/**\n * Compute two artificial tangents to the vector\n * @method tangents\n * @param {Vec3} t1 Vector object to save the first tangent in\n * @param {Vec3} t2 Vector object to save the second tangent in\n */\nvar Vec3_tangents_n = new Vec3();\nvar Vec3_tangents_randVec = new Vec3();\nVec3.prototype.tangents = function(t1,t2){\n    var norm = this.norm();\n    if(norm>0.0){\n        var n = Vec3_tangents_n;\n        var inorm = 1/norm;\n        n.set(this.x*inorm,this.y*inorm,this.z*inorm);\n        var randVec = Vec3_tangents_randVec;\n        if(Math.abs(n.x) < 0.9){\n            randVec.set(1,0,0);\n            n.cross(randVec,t1);\n        } else {\n            randVec.set(0,1,0);\n            n.cross(randVec,t1);\n        }\n        n.cross(t1,t2);\n    } else {\n        // The normal length is zero, make something up\n        t1.set(1, 0, 0);\n        t2.set(0, 1, 0);\n    }\n};\n\n/**\n * Converts to a more readable format\n * @method toString\n * @return string\n */\nVec3.prototype.toString = function(){\n    return this.x+\",\"+this.y+\",\"+this.z;\n};\n\n/**\n * Converts to an array\n * @method toArray\n * @return Array\n */\nVec3.prototype.toArray = function(){\n    return [this.x, this.y, this.z];\n};\n\n/**\n * Copies value of source to this vector.\n * @method copy\n * @param {Vec3} source\n * @return {Vec3} this\n */\nVec3.prototype.copy = function(source){\n    this.x = source.x;\n    this.y = source.y;\n    this.z = source.z;\n    return this;\n};\n\n\n/**\n * Do a linear interpolation between two vectors\n * @method lerp\n * @param {Vec3} v\n * @param {Number} t A number between 0 and 1. 0 will make this function return u, and 1 will make it return v. Numbers in between will generate a vector in between them.\n * @param {Vec3} target\n */\nVec3.prototype.lerp = function(v,t,target){\n    var x=this.x, y=this.y, z=this.z;\n    target.x = x + (v.x-x)*t;\n    target.y = y + (v.y-y)*t;\n    target.z = z + (v.z-z)*t;\n};\n\n/**\n * Check if a vector equals is almost equal to another one.\n * @method almostEquals\n * @param {Vec3} v\n * @param {Number} precision\n * @return bool\n */\nVec3.prototype.almostEquals = function(v,precision){\n    if(precision===undefined){\n        precision = 1e-6;\n    }\n    if( Math.abs(this.x-v.x)>precision ||\n        Math.abs(this.y-v.y)>precision ||\n        Math.abs(this.z-v.z)>precision){\n        return false;\n    }\n    return true;\n};\n\n/**\n * Check if a vector is almost zero\n * @method almostZero\n * @param {Number} precision\n */\nVec3.prototype.almostZero = function(precision){\n    if(precision===undefined){\n        precision = 1e-6;\n    }\n    if( Math.abs(this.x)>precision ||\n        Math.abs(this.y)>precision ||\n        Math.abs(this.z)>precision){\n        return false;\n    }\n    return true;\n};\n\nvar antip_neg = new Vec3();\n\n/**\n * Check if the vector is anti-parallel to another vector.\n * @method isAntiparallelTo\n * @param  {Vec3}  v\n * @param  {Number}  precision Set to zero for exact comparisons\n * @return {Boolean}\n */\nVec3.prototype.isAntiparallelTo = function(v,precision){\n    this.negate(antip_neg);\n    return antip_neg.almostEquals(v,precision);\n};\n\n/**\n * Clone the vector\n * @method clone\n * @return {Vec3}\n */\nVec3.prototype.clone = function(){\n    return new Vec3(this.x, this.y, this.z);\n};\n},{\"./Mat3\":27}],31:[function(_dereq_,module,exports){\nmodule.exports = Body;\n\nvar EventTarget = _dereq_('../utils/EventTarget');\nvar Shape = _dereq_('../shapes/Shape');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Mat3 = _dereq_('../math/Mat3');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar Material = _dereq_('../material/Material');\nvar AABB = _dereq_('../collision/AABB');\nvar Box = _dereq_('../shapes/Box');\n\n/**\n * Base class for all body types.\n * @class Body\n * @constructor\n * @extends EventTarget\n * @param {object} [options]\n * @param {Vec3} [options.position]\n * @param {Vec3} [options.velocity]\n * @param {Vec3} [options.angularVelocity]\n * @param {Quaternion} [options.quaternion]\n * @param {number} [options.mass]\n * @param {Material} [options.material]\n * @param {number} [options.type]\n * @param {number} [options.linearDamping=0.01]\n * @param {number} [options.angularDamping=0.01]\n * @param {boolean} [options.allowSleep=true]\n * @param {number} [options.sleepSpeedLimit=0.1]\n * @param {number} [options.sleepTimeLimit=1]\n * @param {number} [options.collisionFilterGroup=1]\n * @param {number} [options.collisionFilterMask=1]\n * @param {boolean} [options.fixedRotation=false]\n * @param {Body} [options.shape]\n * @example\n *     var body = new Body({\n *         mass: 1\n *     });\n *     var shape = new Sphere(1);\n *     body.addShape(shape);\n *     world.add(body);\n */\nfunction Body(options){\n    options = options || {};\n\n    EventTarget.apply(this);\n\n    this.id = Body.idCounter++;\n\n    /**\n     * Reference to the world the body is living in\n     * @property world\n     * @type {World}\n     */\n    this.world = null;\n\n    /**\n     * Callback function that is used BEFORE stepping the system. Use it to apply forces, for example. Inside the function, \"this\" will refer to this Body object.\n     * @property preStep\n     * @type {Function}\n     * @deprecated Use World events instead\n     */\n    this.preStep = null;\n\n    /**\n     * Callback function that is used AFTER stepping the system. Inside the function, \"this\" will refer to this Body object.\n     * @property postStep\n     * @type {Function}\n     * @deprecated Use World events instead\n     */\n    this.postStep = null;\n\n    this.vlambda = new Vec3();\n\n    /**\n     * @property {Number} collisionFilterGroup\n     */\n    this.collisionFilterGroup = typeof(options.collisionFilterGroup) === 'number' ? options.collisionFilterGroup : 1;\n\n    /**\n     * @property {Number} collisionFilterMask\n     */\n    this.collisionFilterMask = typeof(options.collisionFilterMask) === 'number' ? options.collisionFilterMask : 1;\n\n    /**\n     * Whether to produce contact forces when in contact with other bodies. Note that contacts will be generated, but they will be disabled.\n     * @property {Number} collisionResponse\n     */\n\tthis.collisionResponse = true;\n\n    /**\n     * @property position\n     * @type {Vec3}\n     */\n    this.position = new Vec3();\n\n    if(options.position){\n        this.position.copy(options.position);\n    }\n\n    /**\n     * @property {Vec3} previousPosition\n     */\n    this.previousPosition = new Vec3();\n\n    /**\n     * Initial position of the body\n     * @property initPosition\n     * @type {Vec3}\n     */\n    this.initPosition = new Vec3();\n\n    /**\n     * @property velocity\n     * @type {Vec3}\n     */\n    this.velocity = new Vec3();\n\n    if(options.velocity){\n        this.velocity.copy(options.velocity);\n    }\n\n    /**\n     * @property initVelocity\n     * @type {Vec3}\n     */\n    this.initVelocity = new Vec3();\n\n    /**\n     * Linear force on the body\n     * @property force\n     * @type {Vec3}\n     */\n    this.force = new Vec3();\n\n    var mass = typeof(options.mass) === 'number' ? options.mass : 0;\n\n    /**\n     * @property mass\n     * @type {Number}\n     * @default 0\n     */\n    this.mass = mass;\n\n    /**\n     * @property invMass\n     * @type {Number}\n     */\n    this.invMass = mass > 0 ? 1.0 / mass : 0;\n\n    /**\n     * @property material\n     * @type {Material}\n     */\n    this.material = options.material || null;\n\n    /**\n     * @property linearDamping\n     * @type {Number}\n     */\n    this.linearDamping = typeof(options.linearDamping) === 'number' ? options.linearDamping : 0.01;\n\n    /**\n     * One of: Body.DYNAMIC, Body.STATIC and Body.KINEMATIC.\n     * @property type\n     * @type {Number}\n     */\n    this.type = (mass <= 0.0 ? Body.STATIC : Body.DYNAMIC);\n    if(typeof(options.type) === typeof(Body.STATIC)){\n        this.type = options.type;\n    }\n\n    /**\n     * If true, the body will automatically fall to sleep.\n     * @property allowSleep\n     * @type {Boolean}\n     * @default true\n     */\n    this.allowSleep = typeof(options.allowSleep) !== 'undefined' ? options.allowSleep : true;\n\n    /**\n     * Current sleep state.\n     * @property sleepState\n     * @type {Number}\n     */\n    this.sleepState = 0;\n\n    /**\n     * If the speed (the norm of the velocity) is smaller than this value, the body is considered sleepy.\n     * @property sleepSpeedLimit\n     * @type {Number}\n     * @default 0.1\n     */\n    this.sleepSpeedLimit = typeof(options.sleepSpeedLimit) !== 'undefined' ? options.sleepSpeedLimit : 0.1;\n\n    /**\n     * If the body has been sleepy for this sleepTimeLimit seconds, it is considered sleeping.\n     * @property sleepTimeLimit\n     * @type {Number}\n     * @default 1\n     */\n    this.sleepTimeLimit = typeof(options.sleepTimeLimit) !== 'undefined' ? options.sleepTimeLimit : 1;\n\n    this.timeLastSleepy = 0;\n\n    this._wakeUpAfterNarrowphase = false;\n\n\n    /**\n     * Rotational force on the body, around center of mass\n     * @property {Vec3} torque\n     */\n    this.torque = new Vec3();\n\n    /**\n     * Orientation of the body\n     * @property quaternion\n     * @type {Quaternion}\n     */\n    this.quaternion = new Quaternion();\n\n    if(options.quaternion){\n        this.quaternion.copy(options.quaternion);\n    }\n\n    /**\n     * @property initQuaternion\n     * @type {Quaternion}\n     */\n    this.initQuaternion = new Quaternion();\n\n    /**\n     * @property angularVelocity\n     * @type {Vec3}\n     */\n    this.angularVelocity = new Vec3();\n\n    if(options.angularVelocity){\n        this.angularVelocity.copy(options.angularVelocity);\n    }\n\n    /**\n     * @property initAngularVelocity\n     * @type {Vec3}\n     */\n    this.initAngularVelocity = new Vec3();\n\n    this.interpolatedPosition = new Vec3();\n    this.interpolatedQuaternion = new Quaternion();\n\n    /**\n     * @property shapes\n     * @type {array}\n     */\n    this.shapes = [];\n\n    /**\n     * @property shapeOffsets\n     * @type {array}\n     */\n    this.shapeOffsets = [];\n\n    /**\n     * @property shapeOrientations\n     * @type {array}\n     */\n    this.shapeOrientations = [];\n\n    /**\n     * @property inertia\n     * @type {Vec3}\n     */\n    this.inertia = new Vec3();\n\n    /**\n     * @property {Vec3} invInertia\n     */\n    this.invInertia = new Vec3();\n\n    /**\n     * @property {Mat3} invInertiaWorld\n     */\n    this.invInertiaWorld = new Mat3();\n\n    this.invMassSolve = 0;\n\n    /**\n     * @property {Vec3} invInertiaSolve\n     */\n    this.invInertiaSolve = new Vec3();\n\n    /**\n     * @property {Mat3} invInertiaWorldSolve\n     */\n    this.invInertiaWorldSolve = new Mat3();\n\n    /**\n     * Set to true if you don't want the body to rotate. Make sure to run .updateMassProperties() after changing this.\n     * @property {Boolean} fixedRotation\n     * @default false\n     */\n    this.fixedRotation = typeof(options.fixedRotation) !== \"undefined\" ? options.fixedRotation : false;\n\n    /**\n     * @property {Number} angularDamping\n     */\n    this.angularDamping = typeof(options.angularDamping) !== 'undefined' ? options.angularDamping : 0.01;\n\n    /**\n     * @property aabb\n     * @type {AABB}\n     */\n    this.aabb = new AABB();\n\n    /**\n     * Indicates if the AABB needs to be updated before use.\n     * @property aabbNeedsUpdate\n     * @type {Boolean}\n     */\n    this.aabbNeedsUpdate = true;\n\n    this.wlambda = new Vec3();\n\n    if(options.shape){\n        this.addShape(options.shape);\n    }\n\n    this.updateMassProperties();\n}\nBody.prototype = new EventTarget();\nBody.prototype.constructor = Body;\n\n/**\n * A dynamic body is fully simulated. Can be moved manually by the user, but normally they move according to forces. A dynamic body can collide with all body types. A dynamic body always has finite, non-zero mass.\n * @static\n * @property DYNAMIC\n * @type {Number}\n */\nBody.DYNAMIC = 1;\n\n/**\n * A static body does not move during simulation and behaves as if it has infinite mass. Static bodies can be moved manually by setting the position of the body. The velocity of a static body is always zero. Static bodies do not collide with other static or kinematic bodies.\n * @static\n * @property STATIC\n * @type {Number}\n */\nBody.STATIC = 2;\n\n/**\n * A kinematic body moves under simulation according to its velocity. They do not respond to forces. They can be moved manually, but normally a kinematic body is moved by setting its velocity. A kinematic body behaves as if it has infinite mass. Kinematic bodies do not collide with other static or kinematic bodies.\n * @static\n * @property KINEMATIC\n * @type {Number}\n */\nBody.KINEMATIC = 4;\n\n\n\n/**\n * @static\n * @property AWAKE\n * @type {number}\n */\nBody.AWAKE = 0;\n\n/**\n * @static\n * @property SLEEPY\n * @type {number}\n */\nBody.SLEEPY = 1;\n\n/**\n * @static\n * @property SLEEPING\n * @type {number}\n */\nBody.SLEEPING = 2;\n\nBody.idCounter = 0;\n\n/**\n * Wake the body up.\n * @method wakeUp\n */\nBody.prototype.wakeUp = function(){\n    var s = this.sleepState;\n    this.sleepState = 0;\n    if(s === Body.SLEEPING){\n        this.dispatchEvent({type:\"wakeup\"});\n    }\n};\n\n/**\n * Force body sleep\n * @method sleep\n */\nBody.prototype.sleep = function(){\n    this.sleepState = Body.SLEEPING;\n    this.velocity.set(0,0,0);\n    this.angularVelocity.set(0,0,0);\n};\n\nBody.sleepyEvent = {\n    type: \"sleepy\"\n};\n\nBody.sleepEvent = {\n    type: \"sleep\"\n};\n\n/**\n * Called every timestep to update internal sleep timer and change sleep state if needed.\n * @method sleepTick\n * @param {Number} time The world time in seconds\n */\nBody.prototype.sleepTick = function(time){\n    if(this.allowSleep){\n        var sleepState = this.sleepState;\n        var speedSquared = this.velocity.norm2() + this.angularVelocity.norm2();\n        var speedLimitSquared = Math.pow(this.sleepSpeedLimit,2);\n        if(sleepState===Body.AWAKE && speedSquared < speedLimitSquared){\n            this.sleepState = Body.SLEEPY; // Sleepy\n            this.timeLastSleepy = time;\n            this.dispatchEvent(Body.sleepyEvent);\n        } else if(sleepState===Body.SLEEPY && speedSquared > speedLimitSquared){\n            this.wakeUp(); // Wake up\n        } else if(sleepState===Body.SLEEPY && (time - this.timeLastSleepy ) > this.sleepTimeLimit){\n            this.sleep(); // Sleeping\n            this.dispatchEvent(Body.sleepEvent);\n        }\n    }\n};\n\n/**\n * If the body is sleeping, it should be immovable / have infinite mass during solve. We solve it by having a separate \"solve mass\".\n * @method updateSolveMassProperties\n */\nBody.prototype.updateSolveMassProperties = function(){\n    if(this.sleepState === Body.SLEEPING || this.type === Body.KINEMATIC){\n        this.invMassSolve = 0;\n        this.invInertiaSolve.setZero();\n        this.invInertiaWorldSolve.setZero();\n    } else {\n        this.invMassSolve = this.invMass;\n        this.invInertiaSolve.copy(this.invInertia);\n        this.invInertiaWorldSolve.copy(this.invInertiaWorld);\n    }\n};\n\n/**\n * Convert a world point to local body frame.\n * @method pointToLocalFrame\n * @param  {Vec3} worldPoint\n * @param  {Vec3} result\n * @return {Vec3}\n */\nBody.prototype.pointToLocalFrame = function(worldPoint,result){\n    var result = result || new Vec3();\n    worldPoint.vsub(this.position,result);\n    this.quaternion.conjugate().vmult(result,result);\n    return result;\n};\n\n/**\n * Convert a world vector to local body frame.\n * @method vectorToLocalFrame\n * @param  {Vec3} worldPoint\n * @param  {Vec3} result\n * @return {Vec3}\n */\nBody.prototype.vectorToLocalFrame = function(worldVector, result){\n    var result = result || new Vec3();\n    this.quaternion.conjugate().vmult(worldVector,result);\n    return result;\n};\n\n/**\n * Convert a local body point to world frame.\n * @method pointToWorldFrame\n * @param  {Vec3} localPoint\n * @param  {Vec3} result\n * @return {Vec3}\n */\nBody.prototype.pointToWorldFrame = function(localPoint,result){\n    var result = result || new Vec3();\n    this.quaternion.vmult(localPoint,result);\n    result.vadd(this.position,result);\n    return result;\n};\n\n/**\n * Convert a local body point to world frame.\n * @method vectorToWorldFrame\n * @param  {Vec3} localVector\n * @param  {Vec3} result\n * @return {Vec3}\n */\nBody.prototype.vectorToWorldFrame = function(localVector, result){\n    var result = result || new Vec3();\n    this.quaternion.vmult(localVector, result);\n    return result;\n};\n\nvar tmpVec = new Vec3();\nvar tmpQuat = new Quaternion();\n\n/**\n * Add a shape to the body with a local offset and orientation.\n * @method addShape\n * @param {Shape} shape\n * @param {Vec3} offset\n * @param {Quaternion} quaternion\n * @return {Body} The body object, for chainability.\n */\nBody.prototype.addShape = function(shape, _offset, _orientation){\n    var offset = new Vec3();\n    var orientation = new Quaternion();\n\n    if(_offset){\n        offset.copy(_offset);\n    }\n    if(_orientation){\n        orientation.copy(_orientation);\n    }\n\n    this.shapes.push(shape);\n    this.shapeOffsets.push(offset);\n    this.shapeOrientations.push(orientation);\n    this.updateMassProperties();\n    this.updateBoundingRadius();\n\n    this.aabbNeedsUpdate = true;\n\n    return this;\n};\n\n/**\n * Update the bounding radius of the body. Should be done if any of the shapes are changed.\n * @method updateBoundingRadius\n */\nBody.prototype.updateBoundingRadius = function(){\n    var shapes = this.shapes,\n        shapeOffsets = this.shapeOffsets,\n        N = shapes.length,\n        radius = 0;\n\n    for(var i=0; i!==N; i++){\n        var shape = shapes[i];\n        shape.updateBoundingSphereRadius();\n        var offset = shapeOffsets[i].norm(),\n            r = shape.boundingSphereRadius;\n        if(offset + r > radius){\n            radius = offset + r;\n        }\n    }\n\n    this.boundingRadius = radius;\n};\n\nvar computeAABB_shapeAABB = new AABB();\n\n/**\n * Updates the .aabb\n * @method computeAABB\n * @todo rename to updateAABB()\n */\nBody.prototype.computeAABB = function(){\n    var shapes = this.shapes,\n        shapeOffsets = this.shapeOffsets,\n        shapeOrientations = this.shapeOrientations,\n        N = shapes.length,\n        offset = tmpVec,\n        orientation = tmpQuat,\n        bodyQuat = this.quaternion,\n        aabb = this.aabb,\n        shapeAABB = computeAABB_shapeAABB;\n\n    for(var i=0; i!==N; i++){\n        var shape = shapes[i];\n\n        // Get shape world quaternion\n        shapeOrientations[i].mult(bodyQuat, orientation);\n\n        // Get shape world position\n        orientation.vmult(shapeOffsets[i], offset);\n        offset.vadd(this.position, offset);\n\n        // vec2.rotate(offset, shapeOffsets[i], bodyAngle);\n        // vec2.add(offset, offset, this.position);\n\n        // Get shape AABB\n        shape.calculateWorldAABB(offset, orientation, shapeAABB.lowerBound, shapeAABB.upperBound);\n\n        if(i === 0){\n            aabb.copy(shapeAABB);\n        } else {\n            aabb.extend(shapeAABB);\n        }\n    }\n\n    this.aabbNeedsUpdate = false;\n};\n\nvar uiw_m1 = new Mat3(),\n    uiw_m2 = new Mat3(),\n    uiw_m3 = new Mat3();\n\n/**\n * Update .inertiaWorld and .invInertiaWorld\n * @method updateInertiaWorld\n */\nBody.prototype.updateInertiaWorld = function(force){\n    var I = this.invInertia;\n    if (I.x === I.y && I.y === I.z && !force) {\n        // If inertia M = s*I, where I is identity and s a scalar, then\n        //    R*M*R' = R*(s*I)*R' = s*R*I*R' = s*R*R' = s*I = M\n        // where R is the rotation matrix.\n        // In other words, we don't have to transform the inertia if all\n        // inertia diagonal entries are equal.\n    } else {\n        var m1 = uiw_m1,\n            m2 = uiw_m2,\n            m3 = uiw_m3;\n        m1.setRotationFromQuaternion(this.quaternion);\n        m1.transpose(m2);\n        m1.scale(I,m1);\n        m1.mmult(m2,this.invInertiaWorld);\n        //m3.getTrace(this.invInertiaWorld);\n    }\n\n    /*\n    this.quaternion.vmult(this.inertia,this.inertiaWorld);\n    this.quaternion.vmult(this.invInertia,this.invInertiaWorld);\n    */\n};\n\n/**\n * Apply force to a world point. This could for example be a point on the Body surface. Applying force this way will add to Body.force and Body.torque.\n * @method applyForce\n * @param  {Vec3} force The amount of force to add.\n * @param  {Vec3} worldPoint A world point to apply the force on.\n */\nvar Body_applyForce_r = new Vec3();\nvar Body_applyForce_rotForce = new Vec3();\nBody.prototype.applyForce = function(force,worldPoint){\n    if(this.type !== Body.DYNAMIC){\n        return;\n    }\n\n    // Compute point position relative to the body center\n    var r = Body_applyForce_r;\n    worldPoint.vsub(this.position,r);\n\n    // Compute produced rotational force\n    var rotForce = Body_applyForce_rotForce;\n    r.cross(force,rotForce);\n\n    // Add linear force\n    this.force.vadd(force,this.force);\n\n    // Add rotational force\n    this.torque.vadd(rotForce,this.torque);\n};\n\n/**\n * Apply force to a local point in the body.\n * @method applyLocalForce\n * @param  {Vec3} force The force vector to apply, defined locally in the body frame.\n * @param  {Vec3} localPoint A local point in the body to apply the force on.\n */\nvar Body_applyLocalForce_worldForce = new Vec3();\nvar Body_applyLocalForce_worldPoint = new Vec3();\nBody.prototype.applyLocalForce = function(localForce, localPoint){\n    if(this.type !== Body.DYNAMIC){\n        return;\n    }\n\n    var worldForce = Body_applyLocalForce_worldForce;\n    var worldPoint = Body_applyLocalForce_worldPoint;\n\n    // Transform the force vector to world space\n    this.vectorToWorldFrame(localForce, worldForce);\n    this.pointToWorldFrame(localPoint, worldPoint);\n\n    this.applyForce(worldForce, worldPoint);\n};\n\n/**\n * Apply impulse to a world point. This could for example be a point on the Body surface. An impulse is a force added to a body during a short period of time (impulse = force * time). Impulses will be added to Body.velocity and Body.angularVelocity.\n * @method applyImpulse\n * @param  {Vec3} impulse The amount of impulse to add.\n * @param  {Vec3} worldPoint A world point to apply the force on.\n */\nvar Body_applyImpulse_r = new Vec3();\nvar Body_applyImpulse_velo = new Vec3();\nvar Body_applyImpulse_rotVelo = new Vec3();\nBody.prototype.applyImpulse = function(impulse, worldPoint){\n    if(this.type !== Body.DYNAMIC){\n        return;\n    }\n\n    // Compute point position relative to the body center\n    var r = Body_applyImpulse_r;\n    worldPoint.vsub(this.position,r);\n\n    // Compute produced central impulse velocity\n    var velo = Body_applyImpulse_velo;\n    velo.copy(impulse);\n    velo.mult(this.invMass,velo);\n\n    // Add linear impulse\n    this.velocity.vadd(velo, this.velocity);\n\n    // Compute produced rotational impulse velocity\n    var rotVelo = Body_applyImpulse_rotVelo;\n    r.cross(impulse,rotVelo);\n\n    /*\n    rotVelo.x *= this.invInertia.x;\n    rotVelo.y *= this.invInertia.y;\n    rotVelo.z *= this.invInertia.z;\n    */\n    this.invInertiaWorld.vmult(rotVelo,rotVelo);\n\n    // Add rotational Impulse\n    this.angularVelocity.vadd(rotVelo, this.angularVelocity);\n};\n\n/**\n * Apply locally-defined impulse to a local point in the body.\n * @method applyLocalImpulse\n * @param  {Vec3} force The force vector to apply, defined locally in the body frame.\n * @param  {Vec3} localPoint A local point in the body to apply the force on.\n */\nvar Body_applyLocalImpulse_worldImpulse = new Vec3();\nvar Body_applyLocalImpulse_worldPoint = new Vec3();\nBody.prototype.applyLocalImpulse = function(localImpulse, localPoint){\n    if(this.type !== Body.DYNAMIC){\n        return;\n    }\n\n    var worldImpulse = Body_applyLocalImpulse_worldImpulse;\n    var worldPoint = Body_applyLocalImpulse_worldPoint;\n\n    // Transform the force vector to world space\n    this.vectorToWorldFrame(localImpulse, worldImpulse);\n    this.pointToWorldFrame(localPoint, worldPoint);\n\n    this.applyImpulse(worldImpulse, worldPoint);\n};\n\nvar Body_updateMassProperties_halfExtents = new Vec3();\n\n/**\n * Should be called whenever you change the body shape or mass.\n * @method updateMassProperties\n */\nBody.prototype.updateMassProperties = function(){\n    var halfExtents = Body_updateMassProperties_halfExtents;\n\n    this.invMass = this.mass > 0 ? 1.0 / this.mass : 0;\n    var I = this.inertia;\n    var fixed = this.fixedRotation;\n\n    // Approximate with AABB box\n    this.computeAABB();\n    halfExtents.set(\n        (this.aabb.upperBound.x-this.aabb.lowerBound.x) / 2,\n        (this.aabb.upperBound.y-this.aabb.lowerBound.y) / 2,\n        (this.aabb.upperBound.z-this.aabb.lowerBound.z) / 2\n    );\n    Box.calculateInertia(halfExtents, this.mass, I);\n\n    this.invInertia.set(\n        I.x > 0 && !fixed ? 1.0 / I.x : 0,\n        I.y > 0 && !fixed ? 1.0 / I.y : 0,\n        I.z > 0 && !fixed ? 1.0 / I.z : 0\n    );\n    this.updateInertiaWorld(true);\n};\n\n/**\n * Get world velocity of a point in the body.\n * @method getVelocityAtWorldPoint\n * @param  {Vec3} worldPoint\n * @param  {Vec3} result\n * @return {Vec3} The result vector.\n */\nBody.prototype.getVelocityAtWorldPoint = function(worldPoint, result){\n    var r = new Vec3();\n    worldPoint.vsub(this.position, r);\n    this.angularVelocity.cross(r, result);\n    this.velocity.vadd(result, result);\n    return result;\n};\n\n},{\"../collision/AABB\":3,\"../material/Material\":25,\"../math/Mat3\":27,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../shapes/Box\":37,\"../shapes/Shape\":43,\"../utils/EventTarget\":49}],32:[function(_dereq_,module,exports){\nvar Body = _dereq_('./Body');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar RaycastResult = _dereq_('../collision/RaycastResult');\nvar Ray = _dereq_('../collision/Ray');\nvar WheelInfo = _dereq_('../objects/WheelInfo');\n\nmodule.exports = RaycastVehicle;\n\n/**\n * Vehicle helper class that casts rays from the wheel positions towards the ground and applies forces.\n * @class RaycastVehicle\n * @constructor\n * @param {object} [options]\n * @param {Body} [options.chassisBody] The car chassis body.\n * @param {integer} [options.indexRightAxis] Axis to use for right. x=0, y=1, z=2\n * @param {integer} [options.indexLeftAxis]\n * @param {integer} [options.indexUpAxis]\n */\nfunction RaycastVehicle(options){\n\n    /**\n     * @property {Body} chassisBody\n     */\n    this.chassisBody = options.chassisBody;\n\n    /**\n     * An array of WheelInfo objects.\n     * @property {array} wheelInfos\n     */\n    this.wheelInfos = [];\n\n    /**\n     * Will be set to true if the car is sliding.\n     * @property {boolean} sliding\n     */\n    this.sliding = false;\n\n    /**\n     * @property {World} world\n     */\n    this.world = null;\n\n    /**\n     * Index of the right axis, 0=x, 1=y, 2=z\n     * @property {integer} indexRightAxis\n     * @default 1\n     */\n    this.indexRightAxis = typeof(options.indexRightAxis) !== 'undefined' ? options.indexRightAxis : 1;\n\n    /**\n     * Index of the forward axis, 0=x, 1=y, 2=z\n     * @property {integer} indexForwardAxis\n     * @default 0\n     */\n    this.indexForwardAxis = typeof(options.indexForwardAxis) !== 'undefined' ? options.indexForwardAxis : 0;\n\n    /**\n     * Index of the up axis, 0=x, 1=y, 2=z\n     * @property {integer} indexUpAxis\n     * @default 2\n     */\n    this.indexUpAxis = typeof(options.indexUpAxis) !== 'undefined' ? options.indexUpAxis : 2;\n}\n\nvar tmpVec1 = new Vec3();\nvar tmpVec2 = new Vec3();\nvar tmpVec3 = new Vec3();\nvar tmpVec4 = new Vec3();\nvar tmpVec5 = new Vec3();\nvar tmpVec6 = new Vec3();\nvar tmpRay = new Ray();\n\n/**\n * Add a wheel. For information about the options, see WheelInfo.\n * @method addWheel\n * @param {object} [options]\n */\nRaycastVehicle.prototype.addWheel = function(options){\n    options = options || {};\n\n    var info = new WheelInfo(options);\n    var index = this.wheelInfos.length;\n    this.wheelInfos.push(info);\n\n    return index;\n};\n\n/**\n * Set the steering value of a wheel.\n * @method setSteeringValue\n * @param {number} value\n * @param {integer} wheelIndex\n */\nRaycastVehicle.prototype.setSteeringValue = function(value, wheelIndex){\n    var wheel = this.wheelInfos[wheelIndex];\n    wheel.steering = value;\n};\n\nvar torque = new Vec3();\n\n/**\n * Set the wheel force to apply on one of the wheels each time step\n * @method applyEngineForce\n * @param  {number} value\n * @param  {integer} wheelIndex\n */\nRaycastVehicle.prototype.applyEngineForce = function(value, wheelIndex){\n    this.wheelInfos[wheelIndex].engineForce = value;\n};\n\n/**\n * Set the braking force of a wheel\n * @method setBrake\n * @param {number} brake\n * @param {integer} wheelIndex\n */\nRaycastVehicle.prototype.setBrake = function(brake, wheelIndex){\n    this.wheelInfos[wheelIndex].brake = brake;\n};\n\n/**\n * Add the vehicle including its constraints to the world.\n * @method addToWorld\n * @param {World} world\n */\nRaycastVehicle.prototype.addToWorld = function(world){\n    var constraints = this.constraints;\n    world.add(this.chassisBody);\n    var that = this;\n    this.preStepCallback = function(){\n        that.updateVehicle(world.dt);\n    };\n    world.addEventListener('preStep', this.preStepCallback);\n    this.world = world;\n};\n\n/**\n * Get one of the wheel axles, world-oriented.\n * @private\n * @method getVehicleAxisWorld\n * @param  {integer} axisIndex\n * @param  {Vec3} result\n */\nRaycastVehicle.prototype.getVehicleAxisWorld = function(axisIndex, result){\n    result.set(\n        axisIndex === 0 ? 1 : 0,\n        axisIndex === 1 ? 1 : 0,\n        axisIndex === 2 ? 1 : 0\n    );\n    this.chassisBody.vectorToWorldFrame(result, result);\n};\n\nRaycastVehicle.prototype.updateVehicle = function(timeStep){\n    var wheelInfos = this.wheelInfos;\n    var numWheels = wheelInfos.length;\n    var chassisBody = this.chassisBody;\n\n    for (var i = 0; i < numWheels; i++) {\n        this.updateWheelTransform(i);\n    }\n\n    this.currentVehicleSpeedKmHour = 3.6 * chassisBody.velocity.norm();\n\n    var forwardWorld = new Vec3();\n    this.getVehicleAxisWorld(this.indexForwardAxis, forwardWorld);\n\n    if (forwardWorld.dot(chassisBody.velocity) < 0){\n        this.currentVehicleSpeedKmHour *= -1;\n    }\n\n    // simulate suspension\n    for (var i = 0; i < numWheels; i++) {\n        this.castRay(wheelInfos[i]);\n    }\n\n    this.updateSuspension(timeStep);\n\n    var impulse = new Vec3();\n    var relpos = new Vec3();\n    for (var i = 0; i < numWheels; i++) {\n        //apply suspension force\n        var wheel = wheelInfos[i];\n        var suspensionForce = wheel.suspensionForce;\n        if (suspensionForce > wheel.maxSuspensionForce) {\n            suspensionForce = wheel.maxSuspensionForce;\n        }\n        wheel.raycastResult.hitNormalWorld.scale(suspensionForce * timeStep, impulse);\n\n        wheel.raycastResult.hitPointWorld.vsub(chassisBody.position, relpos);\n        chassisBody.applyImpulse(impulse, wheel.raycastResult.hitPointWorld/*relpos*/);\n    }\n\n    this.updateFriction(timeStep);\n\n    var hitNormalWorldScaledWithProj = new Vec3();\n    var fwd  = new Vec3();\n    var vel = new Vec3();\n    for (i = 0; i < numWheels; i++) {\n        var wheel = wheelInfos[i];\n        //var relpos = new Vec3();\n        //wheel.chassisConnectionPointWorld.vsub(chassisBody.position, relpos);\n        chassisBody.getVelocityAtWorldPoint(wheel.chassisConnectionPointWorld, vel);\n\n        // Hack to get the rotation in the correct direction\n        var m = 1;\n        switch(this.indexUpAxis){\n        case 1:\n            m = -1;\n            break;\n        }\n\n        if (wheel.isInContact) {\n\n            this.getVehicleAxisWorld(this.indexForwardAxis, fwd);\n            var proj = fwd.dot(wheel.raycastResult.hitNormalWorld);\n            wheel.raycastResult.hitNormalWorld.scale(proj, hitNormalWorldScaledWithProj);\n\n            fwd.vsub(hitNormalWorldScaledWithProj, fwd);\n\n            var proj2 = fwd.dot(vel);\n            wheel.deltaRotation = m * proj2 * timeStep / wheel.radius;\n        }\n\n        if((wheel.sliding || !wheel.isInContact) && wheel.engineForce !== 0 && wheel.useCustomSlidingRotationalSpeed){\n            // Apply custom rotation when accelerating and sliding\n            wheel.deltaRotation = (wheel.engineForce > 0 ? 1 : -1) * wheel.customSlidingRotationalSpeed * timeStep;\n        }\n\n        // Lock wheels\n        if(Math.abs(wheel.brake) > Math.abs(wheel.engineForce)){\n            wheel.deltaRotation = 0;\n        }\n\n        wheel.rotation += wheel.deltaRotation; // Use the old value\n        wheel.deltaRotation *= 0.99; // damping of rotation when not in contact\n    }\n};\n\nRaycastVehicle.prototype.updateSuspension = function(deltaTime) {\n    var chassisBody = this.chassisBody;\n    var chassisMass = chassisBody.mass;\n    var wheelInfos = this.wheelInfos;\n    var numWheels = wheelInfos.length;\n\n    for (var w_it = 0; w_it < numWheels; w_it++){\n        var wheel = wheelInfos[w_it];\n\n        if (wheel.isInContact){\n            var force;\n\n            // Spring\n            var susp_length = wheel.suspensionRestLength;\n            var current_length = wheel.suspensionLength;\n            var length_diff = (susp_length - current_length);\n\n            force = wheel.suspensionStiffness * length_diff * wheel.clippedInvContactDotSuspension;\n\n            // Damper\n            var projected_rel_vel = wheel.suspensionRelativeVelocity;\n            var susp_damping;\n            if (projected_rel_vel < 0) {\n                susp_damping = wheel.dampingCompression;\n            } else {\n                susp_damping = wheel.dampingRelaxation;\n            }\n            force -= susp_damping * projected_rel_vel;\n\n            wheel.suspensionForce = force * chassisMass;\n            if (wheel.suspensionForce < 0) {\n                wheel.suspensionForce = 0;\n            }\n        } else {\n            wheel.suspensionForce = 0;\n        }\n    }\n};\n\n/**\n * Remove the vehicle including its constraints from the world.\n * @method removeFromWorld\n * @param {World} world\n */\nRaycastVehicle.prototype.removeFromWorld = function(world){\n    var constraints = this.constraints;\n    world.remove(this.chassisBody);\n    world.removeEventListener('preStep', this.preStepCallback);\n    this.world = null;\n};\n\nvar castRay_rayvector = new Vec3();\nvar castRay_target = new Vec3();\nRaycastVehicle.prototype.castRay = function(wheel) {\n    var rayvector = castRay_rayvector;\n    var target = castRay_target;\n\n    this.updateWheelTransformWorld(wheel);\n    var chassisBody = this.chassisBody;\n\n    var depth = -1;\n\n    var raylen = wheel.suspensionRestLength + wheel.radius;\n\n    wheel.directionWorld.scale(raylen, rayvector);\n    var source = wheel.chassisConnectionPointWorld;\n    source.vadd(rayvector, target);\n    var raycastResult = wheel.raycastResult;\n\n    var param = 0;\n\n    raycastResult.reset();\n    // Turn off ray collision with the chassis temporarily\n    var oldState = chassisBody.collisionResponse;\n    chassisBody.collisionResponse = false;\n\n    // Cast ray against world\n    this.world.rayTest(source, target, raycastResult);\n    chassisBody.collisionResponse = oldState;\n\n    var object = raycastResult.body;\n\n    wheel.raycastResult.groundObject = 0;\n\n    if (object) {\n        depth = raycastResult.distance;\n        wheel.raycastResult.hitNormalWorld  = raycastResult.hitNormalWorld;\n        wheel.isInContact = true;\n\n        var hitDistance = raycastResult.distance;\n        wheel.suspensionLength = hitDistance - wheel.radius;\n\n        // clamp on max suspension travel\n        var minSuspensionLength = wheel.suspensionRestLength - wheel.maxSuspensionTravel;\n        var maxSuspensionLength = wheel.suspensionRestLength + wheel.maxSuspensionTravel;\n        if (wheel.suspensionLength < minSuspensionLength) {\n            wheel.suspensionLength = minSuspensionLength;\n        }\n        if (wheel.suspensionLength > maxSuspensionLength) {\n            wheel.suspensionLength = maxSuspensionLength;\n            wheel.raycastResult.reset();\n        }\n\n        var denominator = wheel.raycastResult.hitNormalWorld.dot(wheel.directionWorld);\n\n        var chassis_velocity_at_contactPoint = new Vec3();\n        chassisBody.getVelocityAtWorldPoint(wheel.raycastResult.hitPointWorld, chassis_velocity_at_contactPoint);\n\n        var projVel = wheel.raycastResult.hitNormalWorld.dot( chassis_velocity_at_contactPoint );\n\n        if (denominator >= -0.1) {\n            wheel.suspensionRelativeVelocity = 0;\n            wheel.clippedInvContactDotSuspension = 1 / 0.1;\n        } else {\n            var inv = -1 / denominator;\n            wheel.suspensionRelativeVelocity = projVel * inv;\n            wheel.clippedInvContactDotSuspension = inv;\n        }\n\n    } else {\n\n        //put wheel info as in rest position\n        wheel.suspensionLength = wheel.suspensionRestLength + 0 * wheel.maxSuspensionTravel;\n        wheel.suspensionRelativeVelocity = 0.0;\n        wheel.directionWorld.scale(-1, wheel.raycastResult.hitNormalWorld);\n        wheel.clippedInvContactDotSuspension = 1.0;\n    }\n\n    return depth;\n};\n\nRaycastVehicle.prototype.updateWheelTransformWorld = function(wheel){\n    wheel.isInContact = false;\n    var chassisBody = this.chassisBody;\n    chassisBody.pointToWorldFrame(wheel.chassisConnectionPointLocal, wheel.chassisConnectionPointWorld);\n    chassisBody.vectorToWorldFrame(wheel.directionLocal, wheel.directionWorld);\n    chassisBody.vectorToWorldFrame(wheel.axleLocal, wheel.axleWorld);\n};\n\n\n/**\n * Update one of the wheel transform.\n * Note when rendering wheels: during each step, wheel transforms are updated BEFORE the chassis; ie. their position becomes invalid after the step. Thus when you render wheels, you must update wheel transforms before rendering them. See raycastVehicle demo for an example.\n * @method updateWheelTransform\n * @param {integer} wheelIndex The wheel index to update.\n */\nRaycastVehicle.prototype.updateWheelTransform = function(wheelIndex){\n    var up = tmpVec4;\n    var right = tmpVec5;\n    var fwd = tmpVec6;\n\n    var wheel = this.wheelInfos[wheelIndex];\n    this.updateWheelTransformWorld(wheel);\n\n    wheel.directionLocal.scale(-1, up);\n    right.copy(wheel.axleLocal);\n    up.cross(right, fwd);\n    fwd.normalize();\n    right.normalize();\n\n    // Rotate around steering over the wheelAxle\n    var steering = wheel.steering;\n    var steeringOrn = new Quaternion();\n    steeringOrn.setFromAxisAngle(up, steering);\n\n    var rotatingOrn = new Quaternion();\n    rotatingOrn.setFromAxisAngle(right, wheel.rotation);\n\n    // World rotation of the wheel\n    var q = wheel.worldTransform.quaternion;\n    this.chassisBody.quaternion.mult(steeringOrn, q);\n    q.mult(rotatingOrn, q);\n\n    q.normalize();\n\n    // world position of the wheel\n    var p = wheel.worldTransform.position;\n    p.copy(wheel.directionWorld);\n    p.scale(wheel.suspensionLength, p);\n    p.vadd(wheel.chassisConnectionPointWorld, p);\n};\n\nvar directions = [\n    new Vec3(1, 0, 0),\n    new Vec3(0, 1, 0),\n    new Vec3(0, 0, 1)\n];\n\n/**\n * Get the world transform of one of the wheels\n * @method getWheelTransformWorld\n * @param  {integer} wheelIndex\n * @return {Transform}\n */\nRaycastVehicle.prototype.getWheelTransformWorld = function(wheelIndex) {\n    return this.wheelInfos[wheelIndex].worldTransform;\n};\n\n\nvar updateFriction_surfNormalWS_scaled_proj = new Vec3();\nvar updateFriction_axle = [];\nvar updateFriction_forwardWS = [];\nvar sideFrictionStiffness2 = 1;\nRaycastVehicle.prototype.updateFriction = function(timeStep) {\n    var surfNormalWS_scaled_proj = updateFriction_surfNormalWS_scaled_proj;\n\n    //calculate the impulse, so that the wheels don't move sidewards\n    var wheelInfos = this.wheelInfos;\n    var numWheels = wheelInfos.length;\n    var chassisBody = this.chassisBody;\n    var forwardWS = updateFriction_forwardWS;\n    var axle = updateFriction_axle;\n\n    var numWheelsOnGround = 0;\n\n    for (var i = 0; i < numWheels; i++) {\n        var wheel = wheelInfos[i];\n\n        var groundObject = wheel.raycastResult.body;\n        if (groundObject){\n            numWheelsOnGround++;\n        }\n\n        wheel.sideImpulse = 0;\n        wheel.forwardImpulse = 0;\n        if(!forwardWS[i]){\n            forwardWS[i] = new Vec3();\n        }\n        if(!axle[i]){\n            axle[i] = new Vec3();\n        }\n    }\n\n    for (var i = 0; i < numWheels; i++){\n        var wheel = wheelInfos[i];\n\n        var groundObject = wheel.raycastResult.body;\n\n        if (groundObject) {\n            var axlei = axle[i];\n            var wheelTrans = this.getWheelTransformWorld(i);\n\n            // Get world axle\n            wheelTrans.vectorToWorldFrame(directions[this.indexRightAxis], axlei);\n\n            var surfNormalWS = wheel.raycastResult.hitNormalWorld;\n            var proj = axlei.dot(surfNormalWS);\n            surfNormalWS.scale(proj, surfNormalWS_scaled_proj);\n            axlei.vsub(surfNormalWS_scaled_proj, axlei);\n            axlei.normalize();\n\n            surfNormalWS.cross(axlei, forwardWS[i]);\n            forwardWS[i].normalize();\n\n            wheel.sideImpulse = resolveSingleBilateral(\n                chassisBody,\n                wheel.raycastResult.hitPointWorld,\n                groundObject,\n                wheel.raycastResult.hitPointWorld,\n                axlei\n            );\n\n            wheel.sideImpulse *= sideFrictionStiffness2;\n        }\n    }\n\n    var sideFactor = 1;\n    var fwdFactor = 0.5;\n\n    this.sliding = false;\n    for (var i = 0; i < numWheels; i++) {\n        var wheel = wheelInfos[i];\n        var groundObject = wheel.raycastResult.body;\n\n        var rollingFriction = 0;\n\n        wheel.slipInfo = 1;\n        if (groundObject) {\n            var defaultRollingFrictionImpulse = 0;\n            var maxImpulse = wheel.brake ? wheel.brake : defaultRollingFrictionImpulse;\n\n            // btWheelContactPoint contactPt(chassisBody,groundObject,wheelInfraycastInfo.hitPointWorld,forwardWS[wheel],maxImpulse);\n            // rollingFriction = calcRollingFriction(contactPt);\n            rollingFriction = calcRollingFriction(chassisBody, groundObject, wheel.raycastResult.hitPointWorld, forwardWS[i], maxImpulse);\n\n            rollingFriction += wheel.engineForce * timeStep;\n\n            // rollingFriction = 0;\n            var factor = maxImpulse / rollingFriction;\n            wheel.slipInfo *= factor;\n        }\n\n        //switch between active rolling (throttle), braking and non-active rolling friction (nthrottle/break)\n\n        wheel.forwardImpulse = 0;\n        wheel.skidInfo = 1;\n\n        if (groundObject) {\n            wheel.skidInfo = 1;\n\n            var maximp = wheel.suspensionForce * timeStep * wheel.frictionSlip;\n            var maximpSide = maximp;\n\n            var maximpSquared = maximp * maximpSide;\n\n            wheel.forwardImpulse = rollingFriction;//wheelInfo.engineForce* timeStep;\n\n            var x = wheel.forwardImpulse * fwdFactor;\n            var y = wheel.sideImpulse * sideFactor;\n\n            var impulseSquared = x * x + y * y;\n\n            wheel.sliding = false;\n            if (impulseSquared > maximpSquared) {\n                this.sliding = true;\n                wheel.sliding = true;\n\n                var factor = maximp / Math.sqrt(impulseSquared);\n\n                wheel.skidInfo *= factor;\n            }\n        }\n    }\n\n    if (this.sliding) {\n        for (var i = 0; i < numWheels; i++) {\n            var wheel = wheelInfos[i];\n            if (wheel.sideImpulse !== 0) {\n                if (wheel.skidInfo < 1){\n                    wheel.forwardImpulse *= wheel.skidInfo;\n                    wheel.sideImpulse *= wheel.skidInfo;\n                }\n            }\n        }\n    }\n\n    // apply the impulses\n    for (var i = 0; i < numWheels; i++) {\n        var wheel = wheelInfos[i];\n\n        var rel_pos = new Vec3();\n        //wheel.raycastResult.hitPointWorld.vsub(chassisBody.position, rel_pos);\n        // cannons applyimpulse is using world coord for the position\n        rel_pos.copy(wheel.raycastResult.hitPointWorld);\n\n        if (wheel.forwardImpulse !== 0) {\n            var impulse = new Vec3();\n            forwardWS[i].scale(wheel.forwardImpulse, impulse);\n            chassisBody.applyImpulse(impulse, rel_pos);\n        }\n\n        if (wheel.sideImpulse !== 0){\n            var groundObject = wheel.raycastResult.body;\n\n            var rel_pos2 = new Vec3();\n            //wheel.raycastResult.hitPointWorld.vsub(groundObject.position, rel_pos2);\n            rel_pos2.copy(wheel.raycastResult.hitPointWorld);\n            var sideImp = new Vec3();\n            axle[i].scale(wheel.sideImpulse, sideImp);\n\n            // Scale the relative position in the up direction with rollInfluence.\n            // If rollInfluence is 1, the impulse will be applied on the hitPoint (easy to roll over), if it is zero it will be applied in the same plane as the center of mass (not easy to roll over).\n            chassisBody.pointToLocalFrame(rel_pos, rel_pos);\n            rel_pos['xyz'[this.indexUpAxis]] *= wheel.rollInfluence;\n            chassisBody.pointToWorldFrame(rel_pos, rel_pos);\n            chassisBody.applyImpulse(sideImp, rel_pos);\n\n            //apply friction impulse on the ground\n            sideImp.scale(-1, sideImp);\n            groundObject.applyImpulse(sideImp, rel_pos2);\n        }\n    }\n};\n\nvar calcRollingFriction_vel1 = new Vec3();\nvar calcRollingFriction_vel2 = new Vec3();\nvar calcRollingFriction_vel = new Vec3();\n\nfunction calcRollingFriction(body0, body1, frictionPosWorld, frictionDirectionWorld, maxImpulse) {\n    var j1 = 0;\n    var contactPosWorld = frictionPosWorld;\n\n    // var rel_pos1 = new Vec3();\n    // var rel_pos2 = new Vec3();\n    var vel1 = calcRollingFriction_vel1;\n    var vel2 = calcRollingFriction_vel2;\n    var vel = calcRollingFriction_vel;\n    // contactPosWorld.vsub(body0.position, rel_pos1);\n    // contactPosWorld.vsub(body1.position, rel_pos2);\n\n    body0.getVelocityAtWorldPoint(contactPosWorld, vel1);\n    body1.getVelocityAtWorldPoint(contactPosWorld, vel2);\n    vel1.vsub(vel2, vel);\n\n    var vrel = frictionDirectionWorld.dot(vel);\n\n    var denom0 = computeImpulseDenominator(body0, frictionPosWorld, frictionDirectionWorld);\n    var denom1 = computeImpulseDenominator(body1, frictionPosWorld, frictionDirectionWorld);\n    var relaxation = 1;\n    var jacDiagABInv = relaxation / (denom0 + denom1);\n\n    // calculate j that moves us to zero relative velocity\n    j1 = -vrel * jacDiagABInv;\n\n    if (maxImpulse < j1) {\n        j1 = maxImpulse;\n    }\n    if (j1 < -maxImpulse) {\n        j1 = -maxImpulse;\n    }\n\n    return j1;\n}\n\nvar computeImpulseDenominator_r0 = new Vec3();\nvar computeImpulseDenominator_c0 = new Vec3();\nvar computeImpulseDenominator_vec = new Vec3();\nvar computeImpulseDenominator_m = new Vec3();\nfunction computeImpulseDenominator(body, pos, normal) {\n    var r0 = computeImpulseDenominator_r0;\n    var c0 = computeImpulseDenominator_c0;\n    var vec = computeImpulseDenominator_vec;\n    var m = computeImpulseDenominator_m;\n\n    pos.vsub(body.position, r0);\n    r0.cross(normal, c0);\n    body.invInertiaWorld.vmult(c0, m);\n    m.cross(r0, vec);\n\n    return body.invMass + normal.dot(vec);\n}\n\n\nvar resolveSingleBilateral_vel1 = new Vec3();\nvar resolveSingleBilateral_vel2 = new Vec3();\nvar resolveSingleBilateral_vel = new Vec3();\n\n//bilateral constraint between two dynamic objects\nfunction resolveSingleBilateral(body1, pos1, body2, pos2, normal, impulse){\n    var normalLenSqr = normal.norm2();\n    if (normalLenSqr > 1.1){\n        return 0; // no impulse\n    }\n    // var rel_pos1 = new Vec3();\n    // var rel_pos2 = new Vec3();\n    // pos1.vsub(body1.position, rel_pos1);\n    // pos2.vsub(body2.position, rel_pos2);\n\n    var vel1 = resolveSingleBilateral_vel1;\n    var vel2 = resolveSingleBilateral_vel2;\n    var vel = resolveSingleBilateral_vel;\n    body1.getVelocityAtWorldPoint(pos1, vel1);\n    body2.getVelocityAtWorldPoint(pos2, vel2);\n\n    vel1.vsub(vel2, vel);\n\n    var rel_vel = normal.dot(vel);\n\n    var contactDamping = 0.2;\n    var massTerm = 1 / (body1.invMass + body2.invMass);\n    var impulse = - contactDamping * rel_vel * massTerm;\n\n    return impulse;\n}\n},{\"../collision/Ray\":9,\"../collision/RaycastResult\":10,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/WheelInfo\":36,\"./Body\":31}],33:[function(_dereq_,module,exports){\nvar Body = _dereq_('./Body');\nvar Sphere = _dereq_('../shapes/Sphere');\nvar Box = _dereq_('../shapes/Box');\nvar Vec3 = _dereq_('../math/Vec3');\nvar HingeConstraint = _dereq_('../constraints/HingeConstraint');\n\nmodule.exports = RigidVehicle;\n\n/**\n * Simple vehicle helper class with spherical rigid body wheels.\n * @class RigidVehicle\n * @constructor\n * @param {Body} [options.chassisBody]\n */\nfunction RigidVehicle(options){\n    this.wheelBodies = [];\n\n    /**\n     * @property coordinateSystem\n     * @type {Vec3}\n     */\n    this.coordinateSystem = typeof(options.coordinateSystem)==='undefined' ? new Vec3(1, 2, 3) : options.coordinateSystem.clone();\n\n    /**\n     * @property {Body} chassisBody\n     */\n    this.chassisBody = options.chassisBody;\n\n    if(!this.chassisBody){\n        // No chassis body given. Create it!\n        var chassisShape = new Box(new Vec3(5, 2, 0.5));\n        this.chassisBody = new Body(1, chassisShape);\n    }\n\n    /**\n     * @property constraints\n     * @type {Array}\n     */\n    this.constraints = [];\n\n    this.wheelAxes = [];\n    this.wheelForces = [];\n}\n\n/**\n * Add a wheel\n * @method addWheel\n * @param {object} options\n * @param {boolean} [options.isFrontWheel]\n * @param {Vec3} [options.position] Position of the wheel, locally in the chassis body.\n * @param {Vec3} [options.direction] Slide direction of the wheel along the suspension.\n * @param {Vec3} [options.axis] Axis of rotation of the wheel, locally defined in the chassis.\n * @param {Body} [options.body] The wheel body.\n */\nRigidVehicle.prototype.addWheel = function(options){\n    options = options || {};\n    var wheelBody = options.body;\n    if(!wheelBody){\n        wheelBody =  new Body(1, new Sphere(1.2));\n    }\n    this.wheelBodies.push(wheelBody);\n    this.wheelForces.push(0);\n\n    // Position constrain wheels\n    var zero = new Vec3();\n    var position = typeof(options.position) !== 'undefined' ? options.position.clone() : new Vec3();\n\n    // Set position locally to the chassis\n    var worldPosition = new Vec3();\n    this.chassisBody.pointToWorldFrame(position, worldPosition);\n    wheelBody.position.set(worldPosition.x, worldPosition.y, worldPosition.z);\n\n    // Constrain wheel\n    var axis = typeof(options.axis) !== 'undefined' ? options.axis.clone() : new Vec3(0, 1, 0);\n    this.wheelAxes.push(axis);\n\n    var hingeConstraint = new HingeConstraint(this.chassisBody, wheelBody, {\n        pivotA: position,\n        axisA: axis,\n        pivotB: Vec3.ZERO,\n        axisB: axis,\n        collideConnected: false\n    });\n    this.constraints.push(hingeConstraint);\n\n    return this.wheelBodies.length - 1;\n};\n\n/**\n * Set the steering value of a wheel.\n * @method setSteeringValue\n * @param {number} value\n * @param {integer} wheelIndex\n * @todo check coordinateSystem\n */\nRigidVehicle.prototype.setSteeringValue = function(value, wheelIndex){\n    // Set angle of the hinge axis\n    var axis = this.wheelAxes[wheelIndex];\n\n    var c = Math.cos(value),\n        s = Math.sin(value),\n        x = axis.x,\n        y = axis.y;\n    this.constraints[wheelIndex].axisA.set(\n        c*x -s*y,\n        s*x +c*y,\n        0\n    );\n};\n\n/**\n * Set the target rotational speed of the hinge constraint.\n * @method setMotorSpeed\n * @param {number} value\n * @param {integer} wheelIndex\n */\nRigidVehicle.prototype.setMotorSpeed = function(value, wheelIndex){\n    var hingeConstraint = this.constraints[wheelIndex];\n    hingeConstraint.enableMotor();\n    hingeConstraint.motorTargetVelocity = value;\n};\n\n/**\n * Set the target rotational speed of the hinge constraint.\n * @method disableMotor\n * @param {number} value\n * @param {integer} wheelIndex\n */\nRigidVehicle.prototype.disableMotor = function(wheelIndex){\n    var hingeConstraint = this.constraints[wheelIndex];\n    hingeConstraint.disableMotor();\n};\n\nvar torque = new Vec3();\n\n/**\n * Set the wheel force to apply on one of the wheels each time step\n * @method setWheelForce\n * @param  {number} value\n * @param  {integer} wheelIndex\n */\nRigidVehicle.prototype.setWheelForce = function(value, wheelIndex){\n    this.wheelForces[wheelIndex] = value;\n};\n\n/**\n * Apply a torque on one of the wheels.\n * @method applyWheelForce\n * @param  {number} value\n * @param  {integer} wheelIndex\n */\nRigidVehicle.prototype.applyWheelForce = function(value, wheelIndex){\n    var axis = this.wheelAxes[wheelIndex];\n    var wheelBody = this.wheelBodies[wheelIndex];\n    var bodyTorque = wheelBody.torque;\n\n    axis.scale(value, torque);\n    wheelBody.vectorToWorldFrame(torque, torque);\n    bodyTorque.vadd(torque, bodyTorque);\n};\n\n/**\n * Add the vehicle including its constraints to the world.\n * @method addToWorld\n * @param {World} world\n */\nRigidVehicle.prototype.addToWorld = function(world){\n    var constraints = this.constraints;\n    var bodies = this.wheelBodies.concat([this.chassisBody]);\n\n    for (var i = 0; i < bodies.length; i++) {\n        world.add(bodies[i]);\n    }\n\n    for (var i = 0; i < constraints.length; i++) {\n        world.addConstraint(constraints[i]);\n    }\n\n    world.addEventListener('preStep', this._update.bind(this));\n};\n\nRigidVehicle.prototype._update = function(){\n    var wheelForces = this.wheelForces;\n    for (var i = 0; i < wheelForces.length; i++) {\n        this.applyWheelForce(wheelForces[i], i);\n    }\n};\n\n/**\n * Remove the vehicle including its constraints from the world.\n * @method removeFromWorld\n * @param {World} world\n */\nRigidVehicle.prototype.removeFromWorld = function(world){\n    var constraints = this.constraints;\n    var bodies = this.wheelBodies.concat([this.chassisBody]);\n\n    for (var i = 0; i < bodies.length; i++) {\n        world.remove(bodies[i]);\n    }\n\n    for (var i = 0; i < constraints.length; i++) {\n        world.removeConstraint(constraints[i]);\n    }\n};\n\nvar worldAxis = new Vec3();\n\n/**\n * Get current rotational velocity of a wheel\n * @method getWheelSpeed\n * @param {integer} wheelIndex\n */\nRigidVehicle.prototype.getWheelSpeed = function(wheelIndex){\n    var axis = this.wheelAxes[wheelIndex];\n    var wheelBody = this.wheelBodies[wheelIndex];\n    var w = wheelBody.angularVelocity;\n    this.chassisBody.vectorToWorldFrame(axis, worldAxis);\n    return w.dot(worldAxis);\n};\n\n},{\"../constraints/HingeConstraint\":15,\"../math/Vec3\":30,\"../shapes/Box\":37,\"../shapes/Sphere\":44,\"./Body\":31}],34:[function(_dereq_,module,exports){\nmodule.exports = SPHSystem;\n\nvar Shape = _dereq_('../shapes/Shape');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar Particle = _dereq_('../shapes/Particle');\nvar Body = _dereq_('../objects/Body');\nvar Material = _dereq_('../material/Material');\n\n/**\n * Smoothed-particle hydrodynamics system\n * @class SPHSystem\n * @constructor\n */\nfunction SPHSystem(){\n    this.particles = [];\n\t\n    /**\n     * Density of the system (kg/m3).\n     * @property {number} density\n     */\n    this.density = 1;\n\t\n    /**\n     * Distance below which two particles are considered to be neighbors.\n     * It should be adjusted so there are about 15-20 neighbor particles within this radius.\n     * @property {number} smoothingRadius\n     */\n    this.smoothingRadius = 1;\n    this.speedOfSound = 1;\n\t\n    /**\n     * Viscosity of the system.\n     * @property {number} viscosity\n     */\n    this.viscosity = 0.01;\n    this.eps = 0.000001;\n\n    // Stuff Computed per particle\n    this.pressures = [];\n    this.densities = [];\n    this.neighbors = [];\n}\n\n/**\n * Add a particle to the system.\n * @method add\n * @param {Body} particle\n */\nSPHSystem.prototype.add = function(particle){\n    this.particles.push(particle);\n    if(this.neighbors.length < this.particles.length){\n        this.neighbors.push([]);\n    }\n};\n\n/**\n * Remove a particle from the system.\n * @method remove\n * @param {Body} particle\n */\nSPHSystem.prototype.remove = function(particle){\n    var idx = this.particles.indexOf(particle);\n    if(idx !== -1){\n        this.particles.splice(idx,1);\n        if(this.neighbors.length > this.particles.length){\n            this.neighbors.pop();\n        }\n    }\n};\n\n/**\n * Get neighbors within smoothing volume, save in the array neighbors\n * @method getNeighbors\n * @param {Body} particle\n * @param {Array} neighbors\n */\nvar SPHSystem_getNeighbors_dist = new Vec3();\nSPHSystem.prototype.getNeighbors = function(particle,neighbors){\n    var N = this.particles.length,\n        id = particle.id,\n        R2 = this.smoothingRadius * this.smoothingRadius,\n        dist = SPHSystem_getNeighbors_dist;\n    for(var i=0; i!==N; i++){\n        var p = this.particles[i];\n        p.position.vsub(particle.position,dist);\n        if(id!==p.id && dist.norm2() < R2){\n            neighbors.push(p);\n        }\n    }\n};\n\n// Temp vectors for calculation\nvar SPHSystem_update_dist = new Vec3(),\n    SPHSystem_update_a_pressure = new Vec3(),\n    SPHSystem_update_a_visc = new Vec3(),\n    SPHSystem_update_gradW = new Vec3(),\n    SPHSystem_update_r_vec = new Vec3(),\n    SPHSystem_update_u = new Vec3(); // Relative velocity\nSPHSystem.prototype.update = function(){\n    var N = this.particles.length,\n        dist = SPHSystem_update_dist,\n        cs = this.speedOfSound,\n        eps = this.eps;\n\n    for(var i=0; i!==N; i++){\n        var p = this.particles[i]; // Current particle\n        var neighbors = this.neighbors[i];\n\n        // Get neighbors\n        neighbors.length = 0;\n        this.getNeighbors(p,neighbors);\n        neighbors.push(this.particles[i]); // Add current too\n        var numNeighbors = neighbors.length;\n\n        // Accumulate density for the particle\n        var sum = 0.0;\n        for(var j=0; j!==numNeighbors; j++){\n\n            //printf(\"Current particle has position %f %f %f\\n\",objects[id].pos.x(),objects[id].pos.y(),objects[id].pos.z());\n            p.position.vsub(neighbors[j].position, dist);\n            var len = dist.norm();\n\n            var weight = this.w(len);\n            sum += neighbors[j].mass * weight;\n        }\n\n        // Save\n        this.densities[i] = sum;\n        this.pressures[i] = cs * cs * (this.densities[i] - this.density);\n    }\n\n    // Add forces\n\n    // Sum to these accelerations\n    var a_pressure= SPHSystem_update_a_pressure;\n    var a_visc =    SPHSystem_update_a_visc;\n    var gradW =     SPHSystem_update_gradW;\n    var r_vec =     SPHSystem_update_r_vec;\n    var u =         SPHSystem_update_u;\n\n    for(var i=0; i!==N; i++){\n\n        var particle = this.particles[i];\n\n        a_pressure.set(0,0,0);\n        a_visc.set(0,0,0);\n\n        // Init vars\n        var Pij;\n        var nabla;\n        var Vij;\n\n        // Sum up for all other neighbors\n        var neighbors = this.neighbors[i];\n        var numNeighbors = neighbors.length;\n\n        //printf(\"Neighbors: \");\n        for(var j=0; j!==numNeighbors; j++){\n\n            var neighbor = neighbors[j];\n            //printf(\"%d \",nj);\n\n            // Get r once for all..\n            particle.position.vsub(neighbor.position,r_vec);\n            var r = r_vec.norm();\n\n            // Pressure contribution\n            Pij = -neighbor.mass * (this.pressures[i] / (this.densities[i]*this.densities[i] + eps) + this.pressures[j] / (this.densities[j]*this.densities[j] + eps));\n            this.gradw(r_vec, gradW);\n            // Add to pressure acceleration\n            gradW.mult(Pij , gradW);\n            a_pressure.vadd(gradW, a_pressure);\n\n            // Viscosity contribution\n            neighbor.velocity.vsub(particle.velocity, u);\n            u.mult( 1.0 / (0.0001+this.densities[i] * this.densities[j]) * this.viscosity * neighbor.mass , u );\n            nabla = this.nablaw(r);\n            u.mult(nabla,u);\n            // Add to viscosity acceleration\n            a_visc.vadd( u, a_visc );\n        }\n\n        // Calculate force\n        a_visc.mult(particle.mass, a_visc);\n        a_pressure.mult(particle.mass, a_pressure);\n\n        // Add force to particles\n        particle.force.vadd(a_visc, particle.force);\n        particle.force.vadd(a_pressure, particle.force);\n    }\n};\n\n// Calculate the weight using the W(r) weightfunction\nSPHSystem.prototype.w = function(r){\n    // 315\n    var h = this.smoothingRadius;\n    return 315.0/(64.0*Math.PI*Math.pow(h,9)) * Math.pow(h*h-r*r,3);\n};\n\n// calculate gradient of the weight function\nSPHSystem.prototype.gradw = function(rVec,resultVec){\n    var r = rVec.norm(),\n        h = this.smoothingRadius;\n    rVec.mult(945.0/(32.0*Math.PI*Math.pow(h,9)) * Math.pow((h*h-r*r),2) , resultVec);\n};\n\n// Calculate nabla(W)\nSPHSystem.prototype.nablaw = function(r){\n    var h = this.smoothingRadius;\n    var nabla = 945.0/(32.0*Math.PI*Math.pow(h,9)) * (h*h-r*r)*(7*r*r - 3*h*h);\n    return nabla;\n};\n\n},{\"../material/Material\":25,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/Body\":31,\"../shapes/Particle\":41,\"../shapes/Shape\":43}],35:[function(_dereq_,module,exports){\nvar Vec3 = _dereq_('../math/Vec3');\n\nmodule.exports = Spring;\n\n/**\n * A spring, connecting two bodies.\n *\n * @class Spring\n * @constructor\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Object} [options]\n * @param {number} [options.restLength]   A number > 0. Default: 1\n * @param {number} [options.stiffness]    A number >= 0. Default: 100\n * @param {number} [options.damping]      A number >= 0. Default: 1\n * @param {Vec3}  [options.worldAnchorA] Where to hook the spring to body A, in world coordinates.\n * @param {Vec3}  [options.worldAnchorB]\n * @param {Vec3}  [options.localAnchorA] Where to hook the spring to body A, in local body coordinates.\n * @param {Vec3}  [options.localAnchorB]\n */\nfunction Spring(bodyA,bodyB,options){\n    options = options || {};\n\n    /**\n     * Rest length of the spring.\n     * @property restLength\n     * @type {number}\n     */\n    this.restLength = typeof(options.restLength) === \"number\" ? options.restLength : 1;\n\n    /**\n     * Stiffness of the spring.\n     * @property stiffness\n     * @type {number}\n     */\n    this.stiffness = options.stiffness || 100;\n\n    /**\n     * Damping of the spring.\n     * @property damping\n     * @type {number}\n     */\n    this.damping = options.damping || 1;\n\n    /**\n     * First connected body.\n     * @property bodyA\n     * @type {Body}\n     */\n    this.bodyA = bodyA;\n\n    /**\n     * Second connected body.\n     * @property bodyB\n     * @type {Body}\n     */\n    this.bodyB = bodyB;\n\n    /**\n     * Anchor for bodyA in local bodyA coordinates.\n     * @property localAnchorA\n     * @type {Vec3}\n     */\n    this.localAnchorA = new Vec3();\n\n    /**\n     * Anchor for bodyB in local bodyB coordinates.\n     * @property localAnchorB\n     * @type {Vec3}\n     */\n    this.localAnchorB = new Vec3();\n\n    if(options.localAnchorA){\n        this.localAnchorA.copy(options.localAnchorA);\n    }\n    if(options.localAnchorB){\n        this.localAnchorB.copy(options.localAnchorB);\n    }\n    if(options.worldAnchorA){\n        this.setWorldAnchorA(options.worldAnchorA);\n    }\n    if(options.worldAnchorB){\n        this.setWorldAnchorB(options.worldAnchorB);\n    }\n}\n\n/**\n * Set the anchor point on body A, using world coordinates.\n * @method setWorldAnchorA\n * @param {Vec3} worldAnchorA\n */\nSpring.prototype.setWorldAnchorA = function(worldAnchorA){\n    this.bodyA.pointToLocalFrame(worldAnchorA,this.localAnchorA);\n};\n\n/**\n * Set the anchor point on body B, using world coordinates.\n * @method setWorldAnchorB\n * @param {Vec3} worldAnchorB\n */\nSpring.prototype.setWorldAnchorB = function(worldAnchorB){\n    this.bodyB.pointToLocalFrame(worldAnchorB,this.localAnchorB);\n};\n\n/**\n * Get the anchor point on body A, in world coordinates.\n * @method getWorldAnchorA\n * @param {Vec3} result The vector to store the result in.\n */\nSpring.prototype.getWorldAnchorA = function(result){\n    this.bodyA.pointToWorldFrame(this.localAnchorA,result);\n};\n\n/**\n * Get the anchor point on body B, in world coordinates.\n * @method getWorldAnchorB\n * @param {Vec3} result The vector to store the result in.\n */\nSpring.prototype.getWorldAnchorB = function(result){\n    this.bodyB.pointToWorldFrame(this.localAnchorB,result);\n};\n\nvar applyForce_r =              new Vec3(),\n    applyForce_r_unit =         new Vec3(),\n    applyForce_u =              new Vec3(),\n    applyForce_f =              new Vec3(),\n    applyForce_worldAnchorA =   new Vec3(),\n    applyForce_worldAnchorB =   new Vec3(),\n    applyForce_ri =             new Vec3(),\n    applyForce_rj =             new Vec3(),\n    applyForce_ri_x_f =         new Vec3(),\n    applyForce_rj_x_f =         new Vec3(),\n    applyForce_tmp =            new Vec3();\n\n/**\n * Apply the spring force to the connected bodies.\n * @method applyForce\n */\nSpring.prototype.applyForce = function(){\n    var k = this.stiffness,\n        d = this.damping,\n        l = this.restLength,\n        bodyA = this.bodyA,\n        bodyB = this.bodyB,\n        r = applyForce_r,\n        r_unit = applyForce_r_unit,\n        u = applyForce_u,\n        f = applyForce_f,\n        tmp = applyForce_tmp;\n\n    var worldAnchorA = applyForce_worldAnchorA,\n        worldAnchorB = applyForce_worldAnchorB,\n        ri = applyForce_ri,\n        rj = applyForce_rj,\n        ri_x_f = applyForce_ri_x_f,\n        rj_x_f = applyForce_rj_x_f;\n\n    // Get world anchors\n    this.getWorldAnchorA(worldAnchorA);\n    this.getWorldAnchorB(worldAnchorB);\n\n    // Get offset points\n    worldAnchorA.vsub(bodyA.position,ri);\n    worldAnchorB.vsub(bodyB.position,rj);\n\n    // Compute distance vector between world anchor points\n    worldAnchorB.vsub(worldAnchorA,r);\n    var rlen = r.norm();\n    r_unit.copy(r);\n    r_unit.normalize();\n\n    // Compute relative velocity of the anchor points, u\n    bodyB.velocity.vsub(bodyA.velocity,u);\n    // Add rotational velocity\n\n    bodyB.angularVelocity.cross(rj,tmp);\n    u.vadd(tmp,u);\n    bodyA.angularVelocity.cross(ri,tmp);\n    u.vsub(tmp,u);\n\n    // F = - k * ( x - L ) - D * ( u )\n    r_unit.mult(-k*(rlen-l) - d*u.dot(r_unit), f);\n\n    // Add forces to bodies\n    bodyA.force.vsub(f,bodyA.force);\n    bodyB.force.vadd(f,bodyB.force);\n\n    // Angular force\n    ri.cross(f,ri_x_f);\n    rj.cross(f,rj_x_f);\n    bodyA.torque.vsub(ri_x_f,bodyA.torque);\n    bodyB.torque.vadd(rj_x_f,bodyB.torque);\n};\n\n},{\"../math/Vec3\":30}],36:[function(_dereq_,module,exports){\nvar Vec3 = _dereq_('../math/Vec3');\nvar Transform = _dereq_('../math/Transform');\nvar RaycastResult = _dereq_('../collision/RaycastResult');\nvar Utils = _dereq_('../utils/Utils');\n\nmodule.exports = WheelInfo;\n\n/**\n * @class WheelInfo\n * @constructor\n * @param {Object} [options]\n *\n * @param {Vec3} [options.chassisConnectionPointLocal]\n * @param {Vec3} [options.chassisConnectionPointWorld]\n * @param {Vec3} [options.directionLocal]\n * @param {Vec3} [options.directionWorld]\n * @param {Vec3} [options.axleLocal]\n * @param {Vec3} [options.axleWorld]\n * @param {number} [options.suspensionRestLength=1]\n * @param {number} [options.suspensionMaxLength=2]\n * @param {number} [options.radius=1]\n * @param {number} [options.suspensionStiffness=100]\n * @param {number} [options.dampingCompression=10]\n * @param {number} [options.dampingRelaxation=10]\n * @param {number} [options.frictionSlip=10000]\n * @param {number} [options.steering=0]\n * @param {number} [options.rotation=0]\n * @param {number} [options.deltaRotation=0]\n * @param {number} [options.rollInfluence=0.01]\n * @param {number} [options.maxSuspensionForce]\n * @param {boolean} [options.isFrontWheel=true]\n * @param {number} [options.clippedInvContactDotSuspension=1]\n * @param {number} [options.suspensionRelativeVelocity=0]\n * @param {number} [options.suspensionForce=0]\n * @param {number} [options.skidInfo=0]\n * @param {number} [options.suspensionLength=0]\n * @param {number} [options.maxSuspensionTravel=1]\n * @param {boolean} [options.useCustomSlidingRotationalSpeed=false]\n * @param {number} [options.customSlidingRotationalSpeed=-0.1]\n */\nfunction WheelInfo(options){\n    options = Utils.defaults(options, {\n        chassisConnectionPointLocal: new Vec3(),\n        chassisConnectionPointWorld: new Vec3(),\n        directionLocal: new Vec3(),\n        directionWorld: new Vec3(),\n        axleLocal: new Vec3(),\n        axleWorld: new Vec3(),\n        suspensionRestLength: 1,\n        suspensionMaxLength: 2,\n        radius: 1,\n        suspensionStiffness: 100,\n        dampingCompression: 10,\n        dampingRelaxation: 10,\n        frictionSlip: 10000,\n        steering: 0,\n        rotation: 0,\n        deltaRotation: 0,\n        rollInfluence: 0.01,\n        maxSuspensionForce: Number.MAX_VALUE,\n        isFrontWheel: true,\n        clippedInvContactDotSuspension: 1,\n        suspensionRelativeVelocity: 0,\n        suspensionForce: 0,\n        skidInfo: 0,\n        suspensionLength: 0,\n        maxSuspensionTravel: 1,\n        useCustomSlidingRotationalSpeed: false,\n        customSlidingRotationalSpeed: -0.1\n    });\n\n    /**\n     * Max travel distance of the suspension, in meters.\n     * @property {number} maxSuspensionTravel\n     */\n    this.maxSuspensionTravel = options.maxSuspensionTravel;\n\n    /**\n     * Speed to apply to the wheel rotation when the wheel is sliding.\n     * @property {number} customSlidingRotationalSpeed\n     */\n    this.customSlidingRotationalSpeed = options.customSlidingRotationalSpeed;\n\n    /**\n     * If the customSlidingRotationalSpeed should be used.\n     * @property {Boolean} useCustomSlidingRotationalSpeed\n     */\n    this.useCustomSlidingRotationalSpeed = options.useCustomSlidingRotationalSpeed;\n\n    /**\n     * @property {Boolean} sliding\n     */\n    this.sliding = false;\n\n    /**\n     * Connection point, defined locally in the chassis body frame.\n     * @property {Vec3} chassisConnectionPointLocal\n     */\n    this.chassisConnectionPointLocal = options.chassisConnectionPointLocal.clone();\n\n    /**\n     * @property {Vec3} chassisConnectionPointWorld\n     */\n    this.chassisConnectionPointWorld = options.chassisConnectionPointWorld.clone();\n\n    /**\n     * @property {Vec3} directionLocal\n     */\n    this.directionLocal = options.directionLocal.clone();\n\n    /**\n     * @property {Vec3} directionWorld\n     */\n    this.directionWorld = options.directionWorld.clone();\n\n    /**\n     * @property {Vec3} axleLocal\n     */\n    this.axleLocal = options.axleLocal.clone();\n\n    /**\n     * @property {Vec3} axleWorld\n     */\n    this.axleWorld = options.axleWorld.clone();\n\n    /**\n     * @property {number} suspensionRestLength\n     */\n    this.suspensionRestLength = options.suspensionRestLength;\n\n    /**\n     * @property {number} suspensionMaxLength\n     */\n    this.suspensionMaxLength = options.suspensionMaxLength;\n\n    /**\n     * @property {number} radius\n     */\n    this.radius = options.radius;\n\n    /**\n     * @property {number} suspensionStiffness\n     */\n    this.suspensionStiffness = options.suspensionStiffness;\n\n    /**\n     * @property {number} dampingCompression\n     */\n    this.dampingCompression = options.dampingCompression;\n\n    /**\n     * @property {number} dampingRelaxation\n     */\n    this.dampingRelaxation = options.dampingRelaxation;\n\n    /**\n     * @property {number} frictionSlip\n     */\n    this.frictionSlip = options.frictionSlip;\n\n    /**\n     * @property {number} steering\n     */\n    this.steering = 0;\n\n    /**\n     * Rotation value, in radians.\n     * @property {number} rotation\n     */\n    this.rotation = 0;\n\n    /**\n     * @property {number} deltaRotation\n     */\n    this.deltaRotation = 0;\n\n    /**\n     * @property {number} rollInfluence\n     */\n    this.rollInfluence = options.rollInfluence;\n\n    /**\n     * @property {number} maxSuspensionForce\n     */\n    this.maxSuspensionForce = options.maxSuspensionForce;\n\n    /**\n     * @property {number} engineForce\n     */\n    this.engineForce = 0;\n\n    /**\n     * @property {number} brake\n     */\n    this.brake = 0;\n\n    /**\n     * @property {number} isFrontWheel\n     */\n    this.isFrontWheel = options.isFrontWheel;\n\n    /**\n     * @property {number} clippedInvContactDotSuspension\n     */\n    this.clippedInvContactDotSuspension = 1;\n\n    /**\n     * @property {number} suspensionRelativeVelocity\n     */\n    this.suspensionRelativeVelocity = 0;\n\n    /**\n     * @property {number} suspensionForce\n     */\n    this.suspensionForce = 0;\n\n    /**\n     * @property {number} skidInfo\n     */\n    this.skidInfo = 0;\n\n    /**\n     * @property {number} suspensionLength\n     */\n    this.suspensionLength = 0;\n\n    /**\n     * @property {number} sideImpulse\n     */\n    this.sideImpulse = 0;\n\n    /**\n     * @property {number} forwardImpulse\n     */\n    this.forwardImpulse = 0;\n\n    /**\n     * The result from raycasting\n     * @property {RaycastResult} raycastResult\n     */\n    this.raycastResult = new RaycastResult();\n\n    /**\n     * Wheel world transform\n     * @property {Transform} worldTransform\n     */\n    this.worldTransform = new Transform();\n\n    /**\n     * @property {boolean} isInContact\n     */\n    this.isInContact = false;\n}\n\nvar chassis_velocity_at_contactPoint = new Vec3();\nvar relpos = new Vec3();\nvar chassis_velocity_at_contactPoint = new Vec3();\nWheelInfo.prototype.updateWheel = function(chassis){\n    var raycastResult = this.raycastResult;\n\n    if (this.isInContact){\n        var project= raycastResult.hitNormalWorld.dot(raycastResult.directionWorld);\n        raycastResult.hitPointWorld.vsub(chassis.position, relpos);\n        chassis.getVelocityAtWorldPoint(relpos, chassis_velocity_at_contactPoint);\n        var projVel = raycastResult.hitNormalWorld.dot( chassis_velocity_at_contactPoint );\n        if (project >= -0.1) {\n            this.suspensionRelativeVelocity = 0.0;\n            this.clippedInvContactDotSuspension = 1.0 / 0.1;\n        } else {\n            var inv = -1 / project;\n            this.suspensionRelativeVelocity = projVel * inv;\n            this.clippedInvContactDotSuspension = inv;\n        }\n\n    } else {\n        // Not in contact : position wheel in a nice (rest length) position\n        raycastResult.suspensionLength = this.suspensionRestLength;\n        this.suspensionRelativeVelocity = 0.0;\n        raycastResult.directionWorld.scale(-1, raycastResult.hitNormalWorld);\n        this.clippedInvContactDotSuspension = 1.0;\n    }\n};\n},{\"../collision/RaycastResult\":10,\"../math/Transform\":29,\"../math/Vec3\":30,\"../utils/Utils\":53}],37:[function(_dereq_,module,exports){\nmodule.exports = Box;\n\nvar Shape = _dereq_('./Shape');\nvar Vec3 = _dereq_('../math/Vec3');\nvar ConvexPolyhedron = _dereq_('./ConvexPolyhedron');\n\n/**\n * A 3d box shape.\n * @class Box\n * @constructor\n * @param {Vec3} halfExtents\n * @author schteppe\n * @extends Shape\n */\nfunction Box(halfExtents){\n    Shape.call(this);\n\n    this.type = Shape.types.BOX;\n\n    /**\n     * @property halfExtents\n     * @type {Vec3}\n     */\n    this.halfExtents = halfExtents;\n\n    /**\n     * Used by the contact generator to make contacts with other convex polyhedra for example\n     * @property convexPolyhedronRepresentation\n     * @type {ConvexPolyhedron}\n     */\n    this.convexPolyhedronRepresentation = null;\n\n    this.updateConvexPolyhedronRepresentation();\n    this.updateBoundingSphereRadius();\n}\nBox.prototype = new Shape();\nBox.prototype.constructor = Box;\n\n/**\n * Updates the local convex polyhedron representation used for some collisions.\n * @method updateConvexPolyhedronRepresentation\n */\nBox.prototype.updateConvexPolyhedronRepresentation = function(){\n    var sx = this.halfExtents.x;\n    var sy = this.halfExtents.y;\n    var sz = this.halfExtents.z;\n    var V = Vec3;\n\n    var vertices = [\n        new V(-sx,-sy,-sz),\n        new V( sx,-sy,-sz),\n        new V( sx, sy,-sz),\n        new V(-sx, sy,-sz),\n        new V(-sx,-sy, sz),\n        new V( sx,-sy, sz),\n        new V( sx, sy, sz),\n        new V(-sx, sy, sz)\n    ];\n\n    var indices = [\n        [3,2,1,0], // -z\n        [4,5,6,7], // +z\n        [5,4,0,1], // -y\n        [2,3,7,6], // +y\n        [0,4,7,3], // -x\n        [1,2,6,5], // +x\n    ];\n\n    var axes = [\n        new V(0, 0, 1),\n        new V(0, 1, 0),\n        new V(1, 0, 0)\n    ];\n\n    var h = new ConvexPolyhedron(vertices, indices);\n    this.convexPolyhedronRepresentation = h;\n    h.material = this.material;\n};\n\n/**\n * @method calculateLocalInertia\n * @param  {Number} mass\n * @param  {Vec3} target\n * @return {Vec3}\n */\nBox.prototype.calculateLocalInertia = function(mass,target){\n    target = target || new Vec3();\n    Box.calculateInertia(this.halfExtents, mass, target);\n    return target;\n};\n\nBox.calculateInertia = function(halfExtents,mass,target){\n    var e = halfExtents;\n    target.x = 1.0 / 12.0 * mass * (   2*e.y*2*e.y + 2*e.z*2*e.z );\n    target.y = 1.0 / 12.0 * mass * (   2*e.x*2*e.x + 2*e.z*2*e.z );\n    target.z = 1.0 / 12.0 * mass * (   2*e.y*2*e.y + 2*e.x*2*e.x );\n};\n\n/**\n * Get the box 6 side normals\n * @method getSideNormals\n * @param {array}      sixTargetVectors An array of 6 vectors, to store the resulting side normals in.\n * @param {Quaternion} quat             Orientation to apply to the normal vectors. If not provided, the vectors will be in respect to the local frame.\n * @return {array}\n */\nBox.prototype.getSideNormals = function(sixTargetVectors,quat){\n    var sides = sixTargetVectors;\n    var ex = this.halfExtents;\n    sides[0].set(  ex.x,     0,     0);\n    sides[1].set(     0,  ex.y,     0);\n    sides[2].set(     0,     0,  ex.z);\n    sides[3].set( -ex.x,     0,     0);\n    sides[4].set(     0, -ex.y,     0);\n    sides[5].set(     0,     0, -ex.z);\n\n    if(quat!==undefined){\n        for(var i=0; i!==sides.length; i++){\n            quat.vmult(sides[i],sides[i]);\n        }\n    }\n\n    return sides;\n};\n\nBox.prototype.volume = function(){\n    return 8.0 * this.halfExtents.x * this.halfExtents.y * this.halfExtents.z;\n};\n\nBox.prototype.updateBoundingSphereRadius = function(){\n    this.boundingSphereRadius = this.halfExtents.norm();\n};\n\nvar worldCornerTempPos = new Vec3();\nvar worldCornerTempNeg = new Vec3();\nBox.prototype.forEachWorldCorner = function(pos,quat,callback){\n\n    var e = this.halfExtents;\n    var corners = [[  e.x,  e.y,  e.z],\n                   [ -e.x,  e.y,  e.z],\n                   [ -e.x, -e.y,  e.z],\n                   [ -e.x, -e.y, -e.z],\n                   [  e.x, -e.y, -e.z],\n                   [  e.x,  e.y, -e.z],\n                   [ -e.x,  e.y, -e.z],\n                   [  e.x, -e.y,  e.z]];\n    for(var i=0; i<corners.length; i++){\n        worldCornerTempPos.set(corners[i][0],corners[i][1],corners[i][2]);\n        quat.vmult(worldCornerTempPos,worldCornerTempPos);\n        pos.vadd(worldCornerTempPos,worldCornerTempPos);\n        callback(worldCornerTempPos.x,\n                 worldCornerTempPos.y,\n                 worldCornerTempPos.z);\n    }\n};\n\nvar worldCornersTemp = [\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3()\n];\nBox.prototype.calculateWorldAABB = function(pos,quat,min,max){\n\n    var e = this.halfExtents;\n    worldCornersTemp[0].set(e.x, e.y, e.z);\n    worldCornersTemp[1].set(-e.x,  e.y, e.z);\n    worldCornersTemp[2].set(-e.x, -e.y, e.z);\n    worldCornersTemp[3].set(-e.x, -e.y, -e.z);\n    worldCornersTemp[4].set(e.x, -e.y, -e.z);\n    worldCornersTemp[5].set(e.x,  e.y, -e.z);\n    worldCornersTemp[6].set(-e.x,  e.y, -e.z);\n    worldCornersTemp[7].set(e.x, -e.y,  e.z);\n\n    var wc = worldCornersTemp[0];\n    quat.vmult(wc, wc);\n    pos.vadd(wc, wc);\n    max.copy(wc);\n    min.copy(wc);\n    for(var i=1; i<8; i++){\n        var wc = worldCornersTemp[i];\n        quat.vmult(wc, wc);\n        pos.vadd(wc, wc);\n        var x = wc.x;\n        var y = wc.y;\n        var z = wc.z;\n        if(x > max.x){\n            max.x = x;\n        }\n        if(y > max.y){\n            max.y = y;\n        }\n        if(z > max.z){\n            max.z = z;\n        }\n\n        if(x < min.x){\n            min.x = x;\n        }\n        if(y < min.y){\n            min.y = y;\n        }\n        if(z < min.z){\n            min.z = z;\n        }\n    }\n\n    // Get each axis max\n    // min.set(Infinity,Infinity,Infinity);\n    // max.set(-Infinity,-Infinity,-Infinity);\n    // this.forEachWorldCorner(pos,quat,function(x,y,z){\n    //     if(x > max.x){\n    //         max.x = x;\n    //     }\n    //     if(y > max.y){\n    //         max.y = y;\n    //     }\n    //     if(z > max.z){\n    //         max.z = z;\n    //     }\n\n    //     if(x < min.x){\n    //         min.x = x;\n    //     }\n    //     if(y < min.y){\n    //         min.y = y;\n    //     }\n    //     if(z < min.z){\n    //         min.z = z;\n    //     }\n    // });\n};\n\n},{\"../math/Vec3\":30,\"./ConvexPolyhedron\":38,\"./Shape\":43}],38:[function(_dereq_,module,exports){\nmodule.exports = ConvexPolyhedron;\n\nvar Shape = _dereq_('./Shape');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar Transform = _dereq_('../math/Transform');\n\n/**\n * A set of polygons describing a convex shape.\n * @class ConvexPolyhedron\n * @constructor\n * @extends Shape\n * @description The shape MUST be convex for the code to work properly. No polygons may be coplanar (contained\n * in the same 3D plane), instead these should be merged into one polygon.\n *\n * @param {array} points An array of Vec3's\n * @param {array} faces Array of integer arrays, describing which vertices that is included in each face.\n *\n * @author qiao / https://github.com/qiao (original author, see https://github.com/qiao/three.js/commit/85026f0c769e4000148a67d45a9e9b9c5108836f)\n * @author schteppe / https://github.com/schteppe\n * @see http://www.altdevblogaday.com/2011/05/13/contact-generation-between-3d-convex-meshes/\n * @see http://bullet.googlecode.com/svn/trunk/src/BulletCollision/NarrowPhaseCollision/btPolyhedralContactClipping.cpp\n *\n * @todo Move the clipping functions to ContactGenerator?\n * @todo Automatically merge coplanar polygons in constructor.\n */\nfunction ConvexPolyhedron(points, faces, uniqueAxes) {\n    var that = this;\n    Shape.call(this);\n    this.type = Shape.types.CONVEXPOLYHEDRON;\n\n    /**\n     * Array of Vec3\n     * @property vertices\n     * @type {Array}\n     */\n    this.vertices = points||[];\n\n    this.worldVertices = []; // World transformed version of .vertices\n    this.worldVerticesNeedsUpdate = true;\n\n    /**\n     * Array of integer arrays, indicating which vertices each face consists of\n     * @property faces\n     * @type {Array}\n     */\n    this.faces = faces||[];\n\n    /**\n     * Array of Vec3\n     * @property faceNormals\n     * @type {Array}\n     */\n    this.faceNormals = [];\n    this.computeNormals();\n\n    this.worldFaceNormalsNeedsUpdate = true;\n    this.worldFaceNormals = []; // World transformed version of .faceNormals\n\n    /**\n     * Array of Vec3\n     * @property uniqueEdges\n     * @type {Array}\n     */\n    this.uniqueEdges = [];\n\n    /**\n     * If given, these locally defined, normalized axes are the only ones being checked when doing separating axis check.\n     * @property {Array} uniqueAxes\n     */\n    this.uniqueAxes = uniqueAxes ? uniqueAxes.slice() : null;\n\n    this.computeEdges();\n    this.updateBoundingSphereRadius();\n}\nConvexPolyhedron.prototype = new Shape();\nConvexPolyhedron.prototype.constructor = ConvexPolyhedron;\n\nvar computeEdges_tmpEdge = new Vec3();\n/**\n * Computes uniqueEdges\n * @method computeEdges\n */\nConvexPolyhedron.prototype.computeEdges = function(){\n    var faces = this.faces;\n    var vertices = this.vertices;\n    var nv = vertices.length;\n    var edges = this.uniqueEdges;\n\n    edges.length = 0;\n\n    var edge = computeEdges_tmpEdge;\n\n    for(var i=0; i !== faces.length; i++){\n        var face = faces[i];\n        var numVertices = face.length;\n        for(var j = 0; j !== numVertices; j++){\n            var k = ( j+1 ) % numVertices;\n            vertices[face[j]].vsub(vertices[face[k]], edge);\n            edge.normalize();\n            var found = false;\n            for(var p=0; p !== edges.length; p++){\n                if (edges[p].almostEquals(edge) || edges[p].almostEquals(edge)){\n                    found = true;\n                    break;\n                }\n            }\n\n            if (!found){\n                edges.push(edge.clone());\n            }\n        }\n    }\n};\n\n/**\n * Compute the normals of the faces. Will reuse existing Vec3 objects in the .faceNormals array if they exist.\n * @method computeNormals\n */\nConvexPolyhedron.prototype.computeNormals = function(){\n    this.faceNormals.length = this.faces.length;\n\n    // Generate normals\n    for(var i=0; i<this.faces.length; i++){\n\n        // Check so all vertices exists for this face\n        for(var j=0; j<this.faces[i].length; j++){\n            if(!this.vertices[this.faces[i][j]]){\n                throw new Error(\"Vertex \"+this.faces[i][j]+\" not found!\");\n            }\n        }\n\n        var n = this.faceNormals[i] || new Vec3();\n        this.getFaceNormal(i,n);\n        n.negate(n);\n        this.faceNormals[i] = n;\n        var vertex = this.vertices[this.faces[i][0]];\n        if(n.dot(vertex) < 0){\n            console.error(\".faceNormals[\" + i + \"] = Vec3(\"+n.toString()+\") looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.\");\n            for(var j=0; j<this.faces[i].length; j++){\n                console.warn(\".vertices[\"+this.faces[i][j]+\"] = Vec3(\"+this.vertices[this.faces[i][j]].toString()+\")\");\n            }\n        }\n    }\n};\n\n/**\n * Get face normal given 3 vertices\n * @static\n * @method getFaceNormal\n * @param {Vec3} va\n * @param {Vec3} vb\n * @param {Vec3} vc\n * @param {Vec3} target\n */\nvar cb = new Vec3();\nvar ab = new Vec3();\nConvexPolyhedron.computeNormal = function ( va, vb, vc, target ) {\n    vb.vsub(va,ab);\n    vc.vsub(vb,cb);\n    cb.cross(ab,target);\n    if ( !target.isZero() ) {\n        target.normalize();\n    }\n};\n\n/**\n * Compute the normal of a face from its vertices\n * @method getFaceNormal\n * @param  {Number} i\n * @param  {Vec3} target\n */\nConvexPolyhedron.prototype.getFaceNormal = function(i,target){\n    var f = this.faces[i];\n    var va = this.vertices[f[0]];\n    var vb = this.vertices[f[1]];\n    var vc = this.vertices[f[2]];\n    return ConvexPolyhedron.computeNormal(va,vb,vc,target);\n};\n\n/**\n * @method clipAgainstHull\n * @param {Vec3} posA\n * @param {Quaternion} quatA\n * @param {ConvexPolyhedron} hullB\n * @param {Vec3} posB\n * @param {Quaternion} quatB\n * @param {Vec3} separatingNormal\n * @param {Number} minDist Clamp distance\n * @param {Number} maxDist\n * @param {array} result The an array of contact point objects, see clipFaceAgainstHull\n * @see http://bullet.googlecode.com/svn/trunk/src/BulletCollision/NarrowPhaseCollision/btPolyhedralContactClipping.cpp\n */\nvar cah_WorldNormal = new Vec3();\nConvexPolyhedron.prototype.clipAgainstHull = function(posA,quatA,hullB,posB,quatB,separatingNormal,minDist,maxDist,result){\n    var WorldNormal = cah_WorldNormal;\n    var hullA = this;\n    var curMaxDist = maxDist;\n    var closestFaceB = -1;\n    var dmax = -Number.MAX_VALUE;\n    for(var face=0; face < hullB.faces.length; face++){\n        WorldNormal.copy(hullB.faceNormals[face]);\n        quatB.vmult(WorldNormal,WorldNormal);\n        //posB.vadd(WorldNormal,WorldNormal);\n        var d = WorldNormal.dot(separatingNormal);\n        if (d > dmax){\n            dmax = d;\n            closestFaceB = face;\n        }\n    }\n    var worldVertsB1 = [];\n    var polyB = hullB.faces[closestFaceB];\n    var numVertices = polyB.length;\n    for(var e0=0; e0<numVertices; e0++){\n        var b = hullB.vertices[polyB[e0]];\n        var worldb = new Vec3();\n        worldb.copy(b);\n        quatB.vmult(worldb,worldb);\n        posB.vadd(worldb,worldb);\n        worldVertsB1.push(worldb);\n    }\n\n    if (closestFaceB>=0){\n        this.clipFaceAgainstHull(separatingNormal,\n                                 posA,\n                                 quatA,\n                                 worldVertsB1,\n                                 minDist,\n                                 maxDist,\n                                 result);\n    }\n};\n\n/**\n * Find the separating axis between this hull and another\n * @method findSeparatingAxis\n * @param {ConvexPolyhedron} hullB\n * @param {Vec3} posA\n * @param {Quaternion} quatA\n * @param {Vec3} posB\n * @param {Quaternion} quatB\n * @param {Vec3} target The target vector to save the axis in\n * @return {bool} Returns false if a separation is found, else true\n */\nvar fsa_faceANormalWS3 = new Vec3(),\n    fsa_Worldnormal1 = new Vec3(),\n    fsa_deltaC = new Vec3(),\n    fsa_worldEdge0 = new Vec3(),\n    fsa_worldEdge1 = new Vec3(),\n    fsa_Cross = new Vec3();\nConvexPolyhedron.prototype.findSeparatingAxis = function(hullB,posA,quatA,posB,quatB,target, faceListA, faceListB){\n    var faceANormalWS3 = fsa_faceANormalWS3,\n        Worldnormal1 = fsa_Worldnormal1,\n        deltaC = fsa_deltaC,\n        worldEdge0 = fsa_worldEdge0,\n        worldEdge1 = fsa_worldEdge1,\n        Cross = fsa_Cross;\n\n    var dmin = Number.MAX_VALUE;\n    var hullA = this;\n    var curPlaneTests=0;\n\n    if(!hullA.uniqueAxes){\n\n        var numFacesA = faceListA ? faceListA.length : hullA.faces.length;\n\n        // Test face normals from hullA\n        for(var i=0; i<numFacesA; i++){\n            var fi = faceListA ? faceListA[i] : i;\n\n            // Get world face normal\n            faceANormalWS3.copy(hullA.faceNormals[fi]);\n            quatA.vmult(faceANormalWS3,faceANormalWS3);\n\n            var d = hullA.testSepAxis(faceANormalWS3, hullB, posA, quatA, posB, quatB);\n            if(d===false){\n                return false;\n            }\n\n            if(d<dmin){\n                dmin = d;\n                target.copy(faceANormalWS3);\n            }\n        }\n\n    } else {\n\n        // Test unique axes\n        for(var i = 0; i !== hullA.uniqueAxes.length; i++){\n\n            // Get world axis\n            quatA.vmult(hullA.uniqueAxes[i],faceANormalWS3);\n\n            var d = hullA.testSepAxis(faceANormalWS3, hullB, posA, quatA, posB, quatB);\n            if(d===false){\n                return false;\n            }\n\n            if(d<dmin){\n                dmin = d;\n                target.copy(faceANormalWS3);\n            }\n        }\n    }\n\n    if(!hullB.uniqueAxes){\n\n        // Test face normals from hullB\n        var numFacesB = faceListB ? faceListB.length : hullB.faces.length;\n        for(var i=0;i<numFacesB;i++){\n\n            var fi = faceListB ? faceListB[i] : i;\n\n            Worldnormal1.copy(hullB.faceNormals[fi]);\n            quatB.vmult(Worldnormal1,Worldnormal1);\n            curPlaneTests++;\n            var d = hullA.testSepAxis(Worldnormal1, hullB,posA,quatA,posB,quatB);\n            if(d===false){\n                return false;\n            }\n\n            if(d<dmin){\n                dmin = d;\n                target.copy(Worldnormal1);\n            }\n        }\n    } else {\n\n        // Test unique axes in B\n        for(var i = 0; i !== hullB.uniqueAxes.length; i++){\n            quatB.vmult(hullB.uniqueAxes[i],Worldnormal1);\n\n            curPlaneTests++;\n            var d = hullA.testSepAxis(Worldnormal1, hullB,posA,quatA,posB,quatB);\n            if(d===false){\n                return false;\n            }\n\n            if(d<dmin){\n                dmin = d;\n                target.copy(Worldnormal1);\n            }\n        }\n    }\n\n    // Test edges\n    for(var e0=0; e0 !== hullA.uniqueEdges.length; e0++){\n\n        // Get world edge\n        quatA.vmult(hullA.uniqueEdges[e0],worldEdge0);\n\n        for(var e1=0; e1 !== hullB.uniqueEdges.length; e1++){\n\n            // Get world edge 2\n            quatB.vmult(hullB.uniqueEdges[e1], worldEdge1);\n            worldEdge0.cross(worldEdge1,Cross);\n\n            if(!Cross.almostZero()){\n                Cross.normalize();\n                var dist = hullA.testSepAxis(Cross, hullB, posA, quatA, posB, quatB);\n                if(dist === false){\n                    return false;\n                }\n                if(dist < dmin){\n                    dmin = dist;\n                    target.copy(Cross);\n                }\n            }\n        }\n    }\n\n    posB.vsub(posA,deltaC);\n    if((deltaC.dot(target))>0.0){\n        target.negate(target);\n    }\n\n    return true;\n};\n\nvar maxminA=[], maxminB=[];\n\n/**\n * Test separating axis against two hulls. Both hulls are projected onto the axis and the overlap size is returned if there is one.\n * @method testSepAxis\n * @param {Vec3} axis\n * @param {ConvexPolyhedron} hullB\n * @param {Vec3} posA\n * @param {Quaternion} quatA\n * @param {Vec3} posB\n * @param {Quaternion} quatB\n * @return {number} The overlap depth, or FALSE if no penetration.\n */\nConvexPolyhedron.prototype.testSepAxis = function(axis, hullB, posA, quatA, posB, quatB){\n    var hullA=this;\n    ConvexPolyhedron.project(hullA, axis, posA, quatA, maxminA);\n    ConvexPolyhedron.project(hullB, axis, posB, quatB, maxminB);\n    var maxA = maxminA[0];\n    var minA = maxminA[1];\n    var maxB = maxminB[0];\n    var minB = maxminB[1];\n    if(maxA<minB || maxB<minA){\n        return false; // Separated\n    }\n    var d0 = maxA - minB;\n    var d1 = maxB - minA;\n    var depth = d0<d1 ? d0:d1;\n    return depth;\n};\n\nvar cli_aabbmin = new Vec3(),\n    cli_aabbmax = new Vec3();\n\n/**\n * @method calculateLocalInertia\n * @param  {Number} mass\n * @param  {Vec3} target\n */\nConvexPolyhedron.prototype.calculateLocalInertia = function(mass,target){\n    // Approximate with box inertia\n    // Exact inertia calculation is overkill, but see http://geometrictools.com/Documentation/PolyhedralMassProperties.pdf for the correct way to do it\n    this.computeLocalAABB(cli_aabbmin,cli_aabbmax);\n    var x = cli_aabbmax.x - cli_aabbmin.x,\n        y = cli_aabbmax.y - cli_aabbmin.y,\n        z = cli_aabbmax.z - cli_aabbmin.z;\n    target.x = 1.0 / 12.0 * mass * ( 2*y*2*y + 2*z*2*z );\n    target.y = 1.0 / 12.0 * mass * ( 2*x*2*x + 2*z*2*z );\n    target.z = 1.0 / 12.0 * mass * ( 2*y*2*y + 2*x*2*x );\n};\n\n/**\n * @method getPlaneConstantOfFace\n * @param  {Number} face_i Index of the face\n * @return {Number}\n */\nConvexPolyhedron.prototype.getPlaneConstantOfFace = function(face_i){\n    var f = this.faces[face_i];\n    var n = this.faceNormals[face_i];\n    var v = this.vertices[f[0]];\n    var c = -n.dot(v);\n    return c;\n};\n\n/**\n * Clip a face against a hull.\n * @method clipFaceAgainstHull\n * @param {Vec3} separatingNormal\n * @param {Vec3} posA\n * @param {Quaternion} quatA\n * @param {Array} worldVertsB1 An array of Vec3 with vertices in the world frame.\n * @param {Number} minDist Distance clamping\n * @param {Number} maxDist\n * @param Array result Array to store resulting contact points in. Will be objects with properties: point, depth, normal. These are represented in world coordinates.\n */\nvar cfah_faceANormalWS = new Vec3(),\n    cfah_edge0 = new Vec3(),\n    cfah_WorldEdge0 = new Vec3(),\n    cfah_worldPlaneAnormal1 = new Vec3(),\n    cfah_planeNormalWS1 = new Vec3(),\n    cfah_worldA1 = new Vec3(),\n    cfah_localPlaneNormal = new Vec3(),\n    cfah_planeNormalWS = new Vec3();\nConvexPolyhedron.prototype.clipFaceAgainstHull = function(separatingNormal, posA, quatA, worldVertsB1, minDist, maxDist,result){\n    var faceANormalWS = cfah_faceANormalWS,\n        edge0 = cfah_edge0,\n        WorldEdge0 = cfah_WorldEdge0,\n        worldPlaneAnormal1 = cfah_worldPlaneAnormal1,\n        planeNormalWS1 = cfah_planeNormalWS1,\n        worldA1 = cfah_worldA1,\n        localPlaneNormal = cfah_localPlaneNormal,\n        planeNormalWS = cfah_planeNormalWS;\n\n    var hullA = this;\n    var worldVertsB2 = [];\n    var pVtxIn = worldVertsB1;\n    var pVtxOut = worldVertsB2;\n    // Find the face with normal closest to the separating axis\n    var closestFaceA = -1;\n    var dmin = Number.MAX_VALUE;\n    for(var face=0; face<hullA.faces.length; face++){\n        faceANormalWS.copy(hullA.faceNormals[face]);\n        quatA.vmult(faceANormalWS,faceANormalWS);\n        //posA.vadd(faceANormalWS,faceANormalWS);\n        var d = faceANormalWS.dot(separatingNormal);\n        if (d < dmin){\n            dmin = d;\n            closestFaceA = face;\n        }\n    }\n    if (closestFaceA < 0){\n        // console.log(\"--- did not find any closest face... ---\");\n        return;\n    }\n    //console.log(\"closest A: \",closestFaceA);\n    // Get the face and construct connected faces\n    var polyA = hullA.faces[closestFaceA];\n    polyA.connectedFaces = [];\n    for(var i=0; i<hullA.faces.length; i++){\n        for(var j=0; j<hullA.faces[i].length; j++){\n            if(polyA.indexOf(hullA.faces[i][j])!==-1 /* Sharing a vertex*/ && i!==closestFaceA /* Not the one we are looking for connections from */ && polyA.connectedFaces.indexOf(i)===-1 /* Not already added */ ){\n                polyA.connectedFaces.push(i);\n            }\n        }\n    }\n    // Clip the polygon to the back of the planes of all faces of hull A, that are adjacent to the witness face\n    var numContacts = pVtxIn.length;\n    var numVerticesA = polyA.length;\n    var res = [];\n    for(var e0=0; e0<numVerticesA; e0++){\n        var a = hullA.vertices[polyA[e0]];\n        var b = hullA.vertices[polyA[(e0+1)%numVerticesA]];\n        a.vsub(b,edge0);\n        WorldEdge0.copy(edge0);\n        quatA.vmult(WorldEdge0,WorldEdge0);\n        posA.vadd(WorldEdge0,WorldEdge0);\n        worldPlaneAnormal1.copy(this.faceNormals[closestFaceA]);//transA.getBasis()* btVector3(polyA.m_plane[0],polyA.m_plane[1],polyA.m_plane[2]);\n        quatA.vmult(worldPlaneAnormal1,worldPlaneAnormal1);\n        posA.vadd(worldPlaneAnormal1,worldPlaneAnormal1);\n        WorldEdge0.cross(worldPlaneAnormal1,planeNormalWS1);\n        planeNormalWS1.negate(planeNormalWS1);\n        worldA1.copy(a);\n        quatA.vmult(worldA1,worldA1);\n        posA.vadd(worldA1,worldA1);\n        var planeEqWS1 = -worldA1.dot(planeNormalWS1);\n        var planeEqWS;\n        if(true){\n            var otherFace = polyA.connectedFaces[e0];\n            localPlaneNormal.copy(this.faceNormals[otherFace]);\n            var localPlaneEq = this.getPlaneConstantOfFace(otherFace);\n\n            planeNormalWS.copy(localPlaneNormal);\n            quatA.vmult(planeNormalWS,planeNormalWS);\n            //posA.vadd(planeNormalWS,planeNormalWS);\n            var planeEqWS = localPlaneEq - planeNormalWS.dot(posA);\n        } else  {\n            planeNormalWS.copy(planeNormalWS1);\n            planeEqWS = planeEqWS1;\n        }\n\n        // Clip face against our constructed plane\n        this.clipFaceAgainstPlane(pVtxIn, pVtxOut, planeNormalWS, planeEqWS);\n\n        // Throw away all clipped points, but save the reamining until next clip\n        while(pVtxIn.length){\n            pVtxIn.shift();\n        }\n        while(pVtxOut.length){\n            pVtxIn.push(pVtxOut.shift());\n        }\n    }\n\n    //console.log(\"Resulting points after clip:\",pVtxIn);\n\n    // only keep contact points that are behind the witness face\n    localPlaneNormal.copy(this.faceNormals[closestFaceA]);\n\n    var localPlaneEq = this.getPlaneConstantOfFace(closestFaceA);\n    planeNormalWS.copy(localPlaneNormal);\n    quatA.vmult(planeNormalWS,planeNormalWS);\n\n    var planeEqWS = localPlaneEq - planeNormalWS.dot(posA);\n    for (var i=0; i<pVtxIn.length; i++){\n        var depth = planeNormalWS.dot(pVtxIn[i]) + planeEqWS; //???\n        /*console.log(\"depth calc from normal=\",planeNormalWS.toString(),\" and constant \"+planeEqWS+\" and vertex \",pVtxIn[i].toString(),\" gives \"+depth);*/\n        if (depth <=minDist){\n            console.log(\"clamped: depth=\"+depth+\" to minDist=\"+(minDist+\"\"));\n            depth = minDist;\n        }\n\n        if (depth <=maxDist){\n            var point = pVtxIn[i];\n            if(depth<=0){\n                /*console.log(\"Got contact point \",point.toString(),\n                  \", depth=\",depth,\n                  \"contact normal=\",separatingNormal.toString(),\n                  \"plane\",planeNormalWS.toString(),\n                  \"planeConstant\",planeEqWS);*/\n                var p = {\n                    point:point,\n                    normal:planeNormalWS,\n                    depth: depth,\n                };\n                result.push(p);\n            }\n        }\n    }\n};\n\n/**\n * Clip a face in a hull against the back of a plane.\n * @method clipFaceAgainstPlane\n * @param {Array} inVertices\n * @param {Array} outVertices\n * @param {Vec3} planeNormal\n * @param {Number} planeConstant The constant in the mathematical plane equation\n */\nConvexPolyhedron.prototype.clipFaceAgainstPlane = function(inVertices,outVertices, planeNormal, planeConstant){\n    var n_dot_first, n_dot_last;\n    var numVerts = inVertices.length;\n\n    if(numVerts < 2){\n        return outVertices;\n    }\n\n    var firstVertex = inVertices[inVertices.length-1],\n        lastVertex =   inVertices[0];\n\n    n_dot_first = planeNormal.dot(firstVertex) + planeConstant;\n\n    for(var vi = 0; vi < numVerts; vi++){\n        lastVertex = inVertices[vi];\n        n_dot_last = planeNormal.dot(lastVertex) + planeConstant;\n        if(n_dot_first < 0){\n            if(n_dot_last < 0){\n                // Start < 0, end < 0, so output lastVertex\n                var newv = new Vec3();\n                newv.copy(lastVertex);\n                outVertices.push(newv);\n            } else {\n                // Start < 0, end >= 0, so output intersection\n                var newv = new Vec3();\n                firstVertex.lerp(lastVertex,\n                                 n_dot_first / (n_dot_first - n_dot_last),\n                                 newv);\n                outVertices.push(newv);\n            }\n        } else {\n            if(n_dot_last<0){\n                // Start >= 0, end < 0 so output intersection and end\n                var newv = new Vec3();\n                firstVertex.lerp(lastVertex,\n                                 n_dot_first / (n_dot_first - n_dot_last),\n                                 newv);\n                outVertices.push(newv);\n                outVertices.push(lastVertex);\n            }\n        }\n        firstVertex = lastVertex;\n        n_dot_first = n_dot_last;\n    }\n    return outVertices;\n};\n\n// Updates .worldVertices and sets .worldVerticesNeedsUpdate to false.\nConvexPolyhedron.prototype.computeWorldVertices = function(position,quat){\n    var N = this.vertices.length;\n    while(this.worldVertices.length < N){\n        this.worldVertices.push( new Vec3() );\n    }\n\n    var verts = this.vertices,\n        worldVerts = this.worldVertices;\n    for(var i=0; i!==N; i++){\n        quat.vmult( verts[i] , worldVerts[i] );\n        position.vadd( worldVerts[i] , worldVerts[i] );\n    }\n\n    this.worldVerticesNeedsUpdate = false;\n};\n\nvar computeLocalAABB_worldVert = new Vec3();\nConvexPolyhedron.prototype.computeLocalAABB = function(aabbmin,aabbmax){\n    var n = this.vertices.length,\n        vertices = this.vertices,\n        worldVert = computeLocalAABB_worldVert;\n\n    aabbmin.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n    aabbmax.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n\n    for(var i=0; i<n; i++){\n        var v = vertices[i];\n        if     (v.x < aabbmin.x){\n            aabbmin.x = v.x;\n        } else if(v.x > aabbmax.x){\n            aabbmax.x = v.x;\n        }\n        if     (v.y < aabbmin.y){\n            aabbmin.y = v.y;\n        } else if(v.y > aabbmax.y){\n            aabbmax.y = v.y;\n        }\n        if     (v.z < aabbmin.z){\n            aabbmin.z = v.z;\n        } else if(v.z > aabbmax.z){\n            aabbmax.z = v.z;\n        }\n    }\n};\n\n/**\n * Updates .worldVertices and sets .worldVerticesNeedsUpdate to false.\n * @method computeWorldFaceNormals\n * @param  {Quaternion} quat\n */\nConvexPolyhedron.prototype.computeWorldFaceNormals = function(quat){\n    var N = this.faceNormals.length;\n    while(this.worldFaceNormals.length < N){\n        this.worldFaceNormals.push( new Vec3() );\n    }\n\n    var normals = this.faceNormals,\n        worldNormals = this.worldFaceNormals;\n    for(var i=0; i!==N; i++){\n        quat.vmult( normals[i] , worldNormals[i] );\n    }\n\n    this.worldFaceNormalsNeedsUpdate = false;\n};\n\n/**\n * @method updateBoundingSphereRadius\n */\nConvexPolyhedron.prototype.updateBoundingSphereRadius = function(){\n    // Assume points are distributed with local (0,0,0) as center\n    var max2 = 0;\n    var verts = this.vertices;\n    for(var i=0, N=verts.length; i!==N; i++) {\n        var norm2 = verts[i].norm2();\n        if(norm2 > max2){\n            max2 = norm2;\n        }\n    }\n    this.boundingSphereRadius = Math.sqrt(max2);\n};\n\nvar tempWorldVertex = new Vec3();\n\n/**\n * @method calculateWorldAABB\n * @param {Vec3}        pos\n * @param {Quaternion}  quat\n * @param {Vec3}        min\n * @param {Vec3}        max\n */\nConvexPolyhedron.prototype.calculateWorldAABB = function(pos,quat,min,max){\n    var n = this.vertices.length, verts = this.vertices;\n    var minx,miny,minz,maxx,maxy,maxz;\n    for(var i=0; i<n; i++){\n        tempWorldVertex.copy(verts[i]);\n        quat.vmult(tempWorldVertex,tempWorldVertex);\n        pos.vadd(tempWorldVertex,tempWorldVertex);\n        var v = tempWorldVertex;\n        if     (v.x < minx || minx===undefined){\n            minx = v.x;\n        } else if(v.x > maxx || maxx===undefined){\n            maxx = v.x;\n        }\n\n        if     (v.y < miny || miny===undefined){\n            miny = v.y;\n        } else if(v.y > maxy || maxy===undefined){\n            maxy = v.y;\n        }\n\n        if     (v.z < minz || minz===undefined){\n            minz = v.z;\n        } else if(v.z > maxz || maxz===undefined){\n            maxz = v.z;\n        }\n    }\n    min.set(minx,miny,minz);\n    max.set(maxx,maxy,maxz);\n};\n\n/**\n * Get approximate convex volume\n * @method volume\n * @return {Number}\n */\nConvexPolyhedron.prototype.volume = function(){\n    return 4.0 * Math.PI * this.boundingSphereRadius / 3.0;\n};\n\n/**\n * Get an average of all the vertices positions\n * @method getAveragePointLocal\n * @param  {Vec3} target\n * @return {Vec3}\n */\nConvexPolyhedron.prototype.getAveragePointLocal = function(target){\n    target = target || new Vec3();\n    var n = this.vertices.length,\n        verts = this.vertices;\n    for(var i=0; i<n; i++){\n        target.vadd(verts[i],target);\n    }\n    target.mult(1/n,target);\n    return target;\n};\n\n/**\n * Transform all local points. Will change the .vertices\n * @method transformAllPoints\n * @param  {Vec3} offset\n * @param  {Quaternion} quat\n */\nConvexPolyhedron.prototype.transformAllPoints = function(offset,quat){\n    var n = this.vertices.length,\n        verts = this.vertices;\n\n    // Apply rotation\n    if(quat){\n        // Rotate vertices\n        for(var i=0; i<n; i++){\n            var v = verts[i];\n            quat.vmult(v,v);\n        }\n        // Rotate face normals\n        for(var i=0; i<this.faceNormals.length; i++){\n            var v = this.faceNormals[i];\n            quat.vmult(v,v);\n        }\n        /*\n        // Rotate edges\n        for(var i=0; i<this.uniqueEdges.length; i++){\n            var v = this.uniqueEdges[i];\n            quat.vmult(v,v);\n        }*/\n    }\n\n    // Apply offset\n    if(offset){\n        for(var i=0; i<n; i++){\n            var v = verts[i];\n            v.vadd(offset,v);\n        }\n    }\n};\n\n/**\n * Checks whether p is inside the polyhedra. Must be in local coords. The point lies outside of the convex hull of the other points if and only if the direction of all the vectors from it to those other points are on less than one half of a sphere around it.\n * @method pointIsInside\n * @param  {Vec3} p      A point given in local coordinates\n * @return {Boolean}\n */\nvar ConvexPolyhedron_pointIsInside = new Vec3();\nvar ConvexPolyhedron_vToP = new Vec3();\nvar ConvexPolyhedron_vToPointInside = new Vec3();\nConvexPolyhedron.prototype.pointIsInside = function(p){\n    var n = this.vertices.length,\n        verts = this.vertices,\n        faces = this.faces,\n        normals = this.faceNormals;\n    var positiveResult = null;\n    var N = this.faces.length;\n    var pointInside = ConvexPolyhedron_pointIsInside;\n    this.getAveragePointLocal(pointInside);\n    for(var i=0; i<N; i++){\n        var numVertices = this.faces[i].length;\n        var n = normals[i];\n        var v = verts[faces[i][0]]; // We only need one point in the face\n\n        // This dot product determines which side of the edge the point is\n        var vToP = ConvexPolyhedron_vToP;\n        p.vsub(v,vToP);\n        var r1 = n.dot(vToP);\n\n        var vToPointInside = ConvexPolyhedron_vToPointInside;\n        pointInside.vsub(v,vToPointInside);\n        var r2 = n.dot(vToPointInside);\n\n        if((r1<0 && r2>0) || (r1>0 && r2<0)){\n            return false; // Encountered some other sign. Exit.\n        } else {\n        }\n    }\n\n    // If we got here, all dot products were of the same sign.\n    return positiveResult ? 1 : -1;\n};\n\n/**\n * Get max and min dot product of a convex hull at position (pos,quat) projected onto an axis. Results are saved in the array maxmin.\n * @static\n * @method project\n * @param {ConvexPolyhedron} hull\n * @param {Vec3} axis\n * @param {Vec3} pos\n * @param {Quaternion} quat\n * @param {array} result result[0] and result[1] will be set to maximum and minimum, respectively.\n */\nvar project_worldVertex = new Vec3();\nvar project_localAxis = new Vec3();\nvar project_localOrigin = new Vec3();\nConvexPolyhedron.project = function(hull, axis, pos, quat, result){\n    var n = hull.vertices.length,\n        worldVertex = project_worldVertex,\n        localAxis = project_localAxis,\n        max = 0,\n        min = 0,\n        localOrigin = project_localOrigin,\n        vs = hull.vertices;\n\n    localOrigin.setZero();\n\n    // Transform the axis to local\n    Transform.vectorToLocalFrame(pos, quat, axis, localAxis);\n    Transform.pointToLocalFrame(pos, quat, localOrigin, localOrigin);\n    var add = localOrigin.dot(localAxis);\n\n    min = max = vs[0].dot(localAxis);\n\n    for(var i = 1; i < n; i++){\n        var val = vs[i].dot(localAxis);\n\n        if(val > max){\n            max = val;\n        }\n\n        if(val < min){\n            min = val;\n        }\n    }\n\n    min -= add;\n    max -= add;\n\n    if(min > max){\n        // Inconsistent - swap\n        var temp = min;\n        min = max;\n        max = temp;\n    }\n    // Output\n    result[0] = max;\n    result[1] = min;\n};\n\n},{\"../math/Quaternion\":28,\"../math/Transform\":29,\"../math/Vec3\":30,\"./Shape\":43}],39:[function(_dereq_,module,exports){\nmodule.exports = Cylinder;\n\nvar Shape = _dereq_('./Shape');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar ConvexPolyhedron = _dereq_('./ConvexPolyhedron');\n\n/**\n * @class Cylinder\n * @constructor\n * @extends ConvexPolyhedron\n * @author schteppe / https://github.com/schteppe\n * @param {Number} radiusTop\n * @param {Number} radiusBottom\n * @param {Number} height\n * @param {Number} numSegments The number of segments to build the cylinder out of\n */\nfunction Cylinder( radiusTop, radiusBottom, height , numSegments ) {\n    var N = numSegments,\n        verts = [],\n        axes = [],\n        faces = [],\n        bottomface = [],\n        topface = [],\n        cos = Math.cos,\n        sin = Math.sin;\n\n    // First bottom point\n    verts.push(new Vec3(radiusBottom*cos(0),\n                               radiusBottom*sin(0),\n                               -height*0.5));\n    bottomface.push(0);\n\n    // First top point\n    verts.push(new Vec3(radiusTop*cos(0),\n                               radiusTop*sin(0),\n                               height*0.5));\n    topface.push(1);\n\n    for(var i=0; i<N; i++){\n        var theta = 2*Math.PI/N * (i+1);\n        var thetaN = 2*Math.PI/N * (i+0.5);\n        if(i<N-1){\n            // Bottom\n            verts.push(new Vec3(radiusBottom*cos(theta),\n                                       radiusBottom*sin(theta),\n                                       -height*0.5));\n            bottomface.push(2*i+2);\n            // Top\n            verts.push(new Vec3(radiusTop*cos(theta),\n                                       radiusTop*sin(theta),\n                                       height*0.5));\n            topface.push(2*i+3);\n\n            // Face\n            faces.push([2*i+2, 2*i+3, 2*i+1,2*i]);\n        } else {\n            faces.push([0,1, 2*i+1, 2*i]); // Connect\n        }\n\n        // Axis: we can cut off half of them if we have even number of segments\n        if(N % 2 === 1 || i < N / 2){\n            axes.push(new Vec3(cos(thetaN), sin(thetaN), 0));\n        }\n    }\n    faces.push(topface);\n    axes.push(new Vec3(0,0,1));\n\n    // Reorder bottom face\n    var temp = [];\n    for(var i=0; i<bottomface.length; i++){\n        temp.push(bottomface[bottomface.length - i - 1]);\n    }\n    faces.push(temp);\n\n    this.type = Shape.types.CONVEXPOLYHEDRON;\n    ConvexPolyhedron.call( this, verts, faces, axes );\n}\n\nCylinder.prototype = new ConvexPolyhedron();\n\n},{\"../math/Quaternion\":28,\"../math/Vec3\":30,\"./ConvexPolyhedron\":38,\"./Shape\":43}],40:[function(_dereq_,module,exports){\nvar Shape = _dereq_('./Shape');\nvar ConvexPolyhedron = _dereq_('./ConvexPolyhedron');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Utils = _dereq_('../utils/Utils');\n\nmodule.exports = Heightfield;\n\n/**\n * Heightfield shape class. Height data is given as an array. These data points are spread out evenly with a given distance.\n * @class Heightfield\n * @extends Shape\n * @constructor\n * @param {Array} data An array of Y values that will be used to construct the terrain.\n * @param {object} options\n * @param {Number} [options.minValue] Minimum value of the data points in the data array. Will be computed automatically if not given.\n * @param {Number} [options.maxValue] Maximum value.\n * @param {Number} [options.elementSize=0.1] World spacing between the data points in X direction.\n * @todo Should be possible to use along all axes, not just y\n *\n * @example\n *     // Generate some height data (y-values).\n *     var data = [];\n *     for(var i = 0; i < 1000; i++){\n *         var y = 0.5 * Math.cos(0.2 * i);\n *         data.push(y);\n *     }\n *\n *     // Create the heightfield shape\n *     var heightfieldShape = new Heightfield(data, {\n *         elementSize: 1 // Distance between the data points in X and Y directions\n *     });\n *     var heightfieldBody = new Body();\n *     heightfieldBody.addShape(heightfieldShape);\n *     world.addBody(heightfieldBody);\n */\nfunction Heightfield(data, options){\n    options = Utils.defaults(options, {\n        maxValue : null,\n        minValue : null,\n        elementSize : 1\n    });\n\n    /**\n     * An array of numbers, or height values, that are spread out along the x axis.\n     * @property {array} data\n     */\n    this.data = data;\n\n    /**\n     * Max value of the data\n     * @property {number} maxValue\n     */\n    this.maxValue = options.maxValue;\n\n    /**\n     * Max value of the data\n     * @property {number} minValue\n     */\n    this.minValue = options.minValue;\n\n    /**\n     * The width of each element\n     * @property {number} elementSize\n     * @todo elementSizeX and Y\n     */\n    this.elementSize = options.elementSize;\n\n    if(options.minValue === null){\n        this.updateMinValue();\n    }\n    if(options.maxValue === null){\n        this.updateMaxValue();\n    }\n\n    this.cacheEnabled = true;\n\n    Shape.call(this);\n\n    this.pillarConvex = new ConvexPolyhedron();\n    this.pillarOffset = new Vec3();\n\n    this.type = Shape.types.HEIGHTFIELD;\n    this.updateBoundingSphereRadius();\n\n    // \"i_j_isUpper\" => { convex: ..., offset: ... }\n    // for example:\n    // _cachedPillars[\"0_2_1\"]\n    this._cachedPillars = {};\n}\nHeightfield.prototype = new Shape();\n\n/**\n * Call whenever you change the data array.\n * @method update\n */\nHeightfield.prototype.update = function(){\n    this._cachedPillars = {};\n};\n\n/**\n * Update the .minValue property\n * @method updateMinValue\n */\nHeightfield.prototype.updateMinValue = function(){\n    var data = this.data;\n    var minValue = data[0][0];\n    for(var i=0; i !== data.length; i++){\n        for(var j=0; j !== data[i].length; j++){\n            var v = data[i][j];\n            if(v < minValue){\n                minValue = v;\n            }\n        }\n    }\n    this.minValue = minValue;\n};\n\n/**\n * Update the .maxValue property\n * @method updateMaxValue\n */\nHeightfield.prototype.updateMaxValue = function(){\n    var data = this.data;\n    var maxValue = data[0][0];\n    for(var i=0; i !== data.length; i++){\n        for(var j=0; j !== data[i].length; j++){\n            var v = data[i][j];\n            if(v > maxValue){\n                maxValue = v;\n            }\n        }\n    }\n    this.maxValue = maxValue;\n};\n\n/**\n * Set the height value at an index. Don't forget to update maxValue and minValue after you're done.\n * @method setHeightValueAtIndex\n * @param {integer} xi\n * @param {integer} yi\n * @param {number} value\n */\nHeightfield.prototype.setHeightValueAtIndex = function(xi, yi, value){\n    var data = this.data;\n    data[xi][yi] = value;\n\n    // Invalidate cache\n    this.clearCachedConvexTrianglePillar(xi, yi, false);\n    if(xi > 0){\n        this.clearCachedConvexTrianglePillar(xi - 1, yi, true);\n        this.clearCachedConvexTrianglePillar(xi - 1, yi, false);\n    }\n    if(yi > 0){\n        this.clearCachedConvexTrianglePillar(xi, yi - 1, true);\n        this.clearCachedConvexTrianglePillar(xi, yi - 1, false);\n    }\n    if(yi > 0 && xi > 0){\n        this.clearCachedConvexTrianglePillar(xi - 1, yi - 1, true);\n    }\n};\n\n/**\n * Get max/min in a rectangle in the matrix data\n * @method getRectMinMax\n * @param  {integer} iMinX\n * @param  {integer} iMinY\n * @param  {integer} iMaxX\n * @param  {integer} iMaxY\n * @param  {array} [result] An array to store the results in.\n * @return {array} The result array, if it was passed in. Minimum will be at position 0 and max at 1.\n */\nHeightfield.prototype.getRectMinMax = function (iMinX, iMinY, iMaxX, iMaxY, result) {\n    result = result || [];\n\n    // Get max and min of the data\n    var data = this.data,\n        max = this.minValue; // Set first value\n    for(var i = iMinX; i <= iMaxX; i++){\n        for(var j = iMinY; j <= iMaxY; j++){\n            var height = data[i][j];\n            if(height > max){\n                max = height;\n            }\n        }\n    }\n\n    result[0] = this.minValue;\n    result[1] = max;\n};\n\n/**\n * Get the index of a local position on the heightfield. The indexes indicate the rectangles, so if your terrain is made of N x N height data points, you will have rectangle indexes ranging from 0 to N-1.\n * @method getIndexOfPosition\n * @param  {number} x\n * @param  {number} y\n * @param  {array} result Two-element array\n * @param  {boolean} clamp If the position should be clamped to the heightfield edge.\n * @return {boolean}\n */\nHeightfield.prototype.getIndexOfPosition = function (x, y, result, clamp) {\n\n    // Get the index of the data points to test against\n    var w = this.elementSize;\n    var data = this.data;\n    var xi = Math.floor(x / w);\n    var yi = Math.floor(y / w);\n\n    result[0] = xi;\n    result[1] = yi;\n\n    if(clamp){\n        // Clamp index to edges\n        if(xi < 0){ xi = 0; }\n        if(yi < 0){ yi = 0; }\n        if(xi >= data.length - 1){ xi = data.length - 1; }\n        if(yi >= data[0].length - 1){ yi = data[0].length - 1; }\n    }\n\n    // Bail out if we are out of the terrain\n    if(xi < 0 || yi < 0 || xi >= data.length-1 || yi >= data[0].length-1){\n        return false;\n    }\n\n    return true;\n};\n\nHeightfield.prototype.getHeightAt = function(x, y, edgeClamp){\n    var idx = [];\n    this.getIndexOfPosition(x, y, idx, edgeClamp);\n\n    // TODO: get upper or lower triangle, then use barycentric interpolation to get the height in the triangle.\n    var minmax = [];\n    this.getRectMinMax(idx[0], idx[1] + 1, idx[0], idx[1] + 1, minmax);\n\n    return (minmax[0] + minmax[1]) / 2; // average\n};\n\nHeightfield.prototype.getCacheConvexTrianglePillarKey = function(xi, yi, getUpperTriangle){\n    return xi + '_' + yi + '_' + (getUpperTriangle ? 1 : 0);\n};\n\nHeightfield.prototype.getCachedConvexTrianglePillar = function(xi, yi, getUpperTriangle){\n    return this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)];\n};\n\nHeightfield.prototype.setCachedConvexTrianglePillar = function(xi, yi, getUpperTriangle, convex, offset){\n    this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)] = {\n        convex: convex,\n        offset: offset\n    };\n};\n\nHeightfield.prototype.clearCachedConvexTrianglePillar = function(xi, yi, getUpperTriangle){\n    delete this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)];\n};\n\n/**\n * Get a triangle in the terrain in the form of a triangular convex shape.\n * @method getConvexTrianglePillar\n * @param  {integer} i\n * @param  {integer} j\n * @param  {boolean} getUpperTriangle\n */\nHeightfield.prototype.getConvexTrianglePillar = function(xi, yi, getUpperTriangle){\n    var result = this.pillarConvex;\n    var offsetResult = this.pillarOffset;\n\n    if(this.cacheEnabled){\n        var data = this.getCachedConvexTrianglePillar(xi, yi, getUpperTriangle);\n        if(data){\n            this.pillarConvex = data.convex;\n            this.pillarOffset = data.offset;\n            return;\n        }\n\n        result = new ConvexPolyhedron();\n        offsetResult = new Vec3();\n\n        this.pillarConvex = result;\n        this.pillarOffset = offsetResult;\n    }\n\n    var data = this.data;\n    var elementSize = this.elementSize;\n    var faces = result.faces;\n\n    // Reuse verts if possible\n    result.vertices.length = 6;\n    for (var i = 0; i < 6; i++) {\n        if(!result.vertices[i]){\n            result.vertices[i] = new Vec3();\n        }\n    }\n\n    // Reuse faces if possible\n    faces.length = 5;\n    for (var i = 0; i < 5; i++) {\n        if(!faces[i]){\n            faces[i] = [];\n        }\n    }\n\n    var verts = result.vertices;\n\n    var h = (Math.min(\n        data[xi][yi],\n        data[xi+1][yi],\n        data[xi][yi+1],\n        data[xi+1][yi+1]\n    ) - this.minValue ) / 2 + this.minValue;\n\n    if (!getUpperTriangle) {\n\n        // Center of the triangle pillar - all polygons are given relative to this one\n        offsetResult.set(\n            (xi + 0.25) * elementSize, // sort of center of a triangle\n            (yi + 0.25) * elementSize,\n            h // vertical center\n        );\n\n        // Top triangle verts\n        verts[0].set(\n            -0.25 * elementSize,\n            -0.25 * elementSize,\n            data[xi][yi] - h\n        );\n        verts[1].set(\n            0.75 * elementSize,\n            -0.25 * elementSize,\n            data[xi + 1][yi] - h\n        );\n        verts[2].set(\n            -0.25 * elementSize,\n            0.75 * elementSize,\n            data[xi][yi + 1] - h\n        );\n\n        // bottom triangle verts\n        verts[3].set(\n            -0.25 * elementSize,\n            -0.25 * elementSize,\n            -h-1\n        );\n        verts[4].set(\n            0.75 * elementSize,\n            -0.25 * elementSize,\n            -h-1\n        );\n        verts[5].set(\n            -0.25 * elementSize,\n            0.75  * elementSize,\n            -h-1\n        );\n\n        // top triangle\n        faces[0][0] = 0;\n        faces[0][1] = 1;\n        faces[0][2] = 2;\n\n        // bottom triangle\n        faces[1][0] = 5;\n        faces[1][1] = 4;\n        faces[1][2] = 3;\n\n        // -x facing quad\n        faces[2][0] = 0;\n        faces[2][1] = 2;\n        faces[2][2] = 5;\n        faces[2][3] = 3;\n\n        // -y facing quad\n        faces[3][0] = 1;\n        faces[3][1] = 0;\n        faces[3][2] = 3;\n        faces[3][3] = 4;\n\n        // +xy facing quad\n        faces[4][0] = 4;\n        faces[4][1] = 5;\n        faces[4][2] = 2;\n        faces[4][3] = 1;\n\n\n    } else {\n\n        // Center of the triangle pillar - all polygons are given relative to this one\n        offsetResult.set(\n            (xi + 0.75) * elementSize, // sort of center of a triangle\n            (yi + 0.75) * elementSize,\n            h // vertical center\n        );\n\n        // Top triangle verts\n        verts[0].set(\n            0.25 * elementSize,\n            0.25 * elementSize,\n            data[xi + 1][yi + 1] - h\n        );\n        verts[1].set(\n            -0.75 * elementSize,\n            0.25 * elementSize,\n            data[xi][yi + 1] - h\n        );\n        verts[2].set(\n            0.25 * elementSize,\n            -0.75 * elementSize,\n            data[xi + 1][yi] - h\n        );\n\n        // bottom triangle verts\n        verts[3].set(\n            0.25 * elementSize,\n            0.25 * elementSize,\n            - h-1\n        );\n        verts[4].set(\n            -0.75 * elementSize,\n            0.25 * elementSize,\n            - h-1\n        );\n        verts[5].set(\n            0.25 * elementSize,\n            -0.75 * elementSize,\n            - h-1\n        );\n\n        // Top triangle\n        faces[0][0] = 0;\n        faces[0][1] = 1;\n        faces[0][2] = 2;\n\n        // bottom triangle\n        faces[1][0] = 5;\n        faces[1][1] = 4;\n        faces[1][2] = 3;\n\n        // +x facing quad\n        faces[2][0] = 2;\n        faces[2][1] = 5;\n        faces[2][2] = 3;\n        faces[2][3] = 0;\n\n        // +y facing quad\n        faces[3][0] = 3;\n        faces[3][1] = 4;\n        faces[3][2] = 1;\n        faces[3][3] = 0;\n\n        // -xy facing quad\n        faces[4][0] = 1;\n        faces[4][1] = 4;\n        faces[4][2] = 5;\n        faces[4][3] = 2;\n    }\n\n    result.computeNormals();\n    result.computeEdges();\n    result.updateBoundingSphereRadius();\n\n    this.setCachedConvexTrianglePillar(xi, yi, getUpperTriangle, result, offsetResult);\n};\n\nHeightfield.prototype.calculateLocalInertia = function(mass, target){\n    target = target || new Vec3();\n    target.set(0, 0, 0);\n    return target;\n};\n\nHeightfield.prototype.volume = function(){\n    return Number.MAX_VALUE; // The terrain is infinite\n};\n\nHeightfield.prototype.calculateWorldAABB = function(pos, quat, min, max){\n    // TODO: do it properly\n    min.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n    max.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n};\n\nHeightfield.prototype.updateBoundingSphereRadius = function(){\n    // Use the bounding box of the min/max values\n    var data = this.data,\n        s = this.elementSize;\n    this.boundingSphereRadius = new Vec3(data.length * s, data[0].length * s, Math.max(Math.abs(this.maxValue), Math.abs(this.minValue))).norm();\n};\n\n},{\"../math/Vec3\":30,\"../utils/Utils\":53,\"./ConvexPolyhedron\":38,\"./Shape\":43}],41:[function(_dereq_,module,exports){\nmodule.exports = Particle;\n\nvar Shape = _dereq_('./Shape');\nvar Vec3 = _dereq_('../math/Vec3');\n\n/**\n * Particle shape.\n * @class Particle\n * @constructor\n * @author schteppe\n * @extends Shape\n */\nfunction Particle(){\n    Shape.call(this);\n\n    this.type = Shape.types.PARTICLE;\n}\nParticle.prototype = new Shape();\nParticle.prototype.constructor = Particle;\n\n/**\n * @method calculateLocalInertia\n * @param  {Number} mass\n * @param  {Vec3} target\n * @return {Vec3}\n */\nParticle.prototype.calculateLocalInertia = function(mass,target){\n    target = target || new Vec3();\n    target.set(0, 0, 0);\n    return target;\n};\n\nParticle.prototype.volume = function(){\n    return 0;\n};\n\nParticle.prototype.updateBoundingSphereRadius = function(){\n    this.boundingSphereRadius = 0;\n};\n\nParticle.prototype.calculateWorldAABB = function(pos,quat,min,max){\n    // Get each axis max\n    min.copy(pos);\n    max.copy(pos);\n};\n\n},{\"../math/Vec3\":30,\"./Shape\":43}],42:[function(_dereq_,module,exports){\nmodule.exports = Plane;\n\nvar Shape = _dereq_('./Shape');\nvar Vec3 = _dereq_('../math/Vec3');\n\n/**\n * A plane, facing in the Z direction. The plane has its surface at z=0 and everything below z=0 is assumed to be solid plane. To make the plane face in some other direction than z, you must put it inside a RigidBody and rotate that body. See the demos.\n * @class Plane\n * @constructor\n * @extends Shape\n * @author schteppe\n */\nfunction Plane(){\n    Shape.call(this);\n    this.type = Shape.types.PLANE;\n\n    // World oriented normal\n    this.worldNormal = new Vec3();\n    this.worldNormalNeedsUpdate = true;\n\n    this.boundingSphereRadius = Number.MAX_VALUE;\n}\nPlane.prototype = new Shape();\nPlane.prototype.constructor = Plane;\n\nPlane.prototype.computeWorldNormal = function(quat){\n    var n = this.worldNormal;\n    n.set(0,0,1);\n    quat.vmult(n,n);\n    this.worldNormalNeedsUpdate = false;\n};\n\nPlane.prototype.calculateLocalInertia = function(mass,target){\n    target = target || new Vec3();\n    return target;\n};\n\nPlane.prototype.volume = function(){\n    return Number.MAX_VALUE; // The plane is infinite...\n};\n\nvar tempNormal = new Vec3();\nPlane.prototype.calculateWorldAABB = function(pos, quat, min, max){\n    // The plane AABB is infinite, except if the normal is pointing along any axis\n    tempNormal.set(0,0,1); // Default plane normal is z\n    quat.vmult(tempNormal,tempNormal);\n    var maxVal = Number.MAX_VALUE;\n    min.set(-maxVal, -maxVal, -maxVal);\n    max.set(maxVal, maxVal, maxVal);\n\n    if(tempNormal.x === 1){ max.x = pos.x; }\n    if(tempNormal.y === 1){ max.y = pos.y; }\n    if(tempNormal.z === 1){ max.z = pos.z; }\n\n    if(tempNormal.x === -1){ min.x = pos.x; }\n    if(tempNormal.y === -1){ min.y = pos.y; }\n    if(tempNormal.z === -1){ min.z = pos.z; }\n};\n\nPlane.prototype.updateBoundingSphereRadius = function(){\n    this.boundingSphereRadius = Number.MAX_VALUE;\n};\n},{\"../math/Vec3\":30,\"./Shape\":43}],43:[function(_dereq_,module,exports){\nmodule.exports = Shape;\n\nvar Shape = _dereq_('./Shape');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar Material = _dereq_('../material/Material');\n\n/**\n * Base class for shapes\n * @class Shape\n * @constructor\n * @author schteppe\n * @todo Should have a mechanism for caching bounding sphere radius instead of calculating it each time\n */\nfunction Shape(){\n\n    /**\n     * Identifyer of the Shape.\n     * @property {number} id\n     */\n    this.id = Shape.idCounter++;\n\n    /**\n     * The type of this shape. Must be set to an int > 0 by subclasses.\n     * @property type\n     * @type {Number}\n     * @see Shape.types\n     */\n    this.type = 0;\n\n    /**\n     * The local bounding sphere radius of this shape.\n     * @property {Number} boundingSphereRadius\n     */\n    this.boundingSphereRadius = 0;\n\n    /**\n     * Whether to produce contact forces when in contact with other bodies. Note that contacts will be generated, but they will be disabled.\n     * @property {boolean} collisionResponse\n     */\n    this.collisionResponse = true;\n\n    /**\n     * @property {Material} material\n     */\n    this.material = null;\n}\nShape.prototype.constructor = Shape;\n\n/**\n * Computes the bounding sphere radius. The result is stored in the property .boundingSphereRadius\n * @method updateBoundingSphereRadius\n * @return {Number}\n */\nShape.prototype.updateBoundingSphereRadius = function(){\n    throw \"computeBoundingSphereRadius() not implemented for shape type \"+this.type;\n};\n\n/**\n * Get the volume of this shape\n * @method volume\n * @return {Number}\n */\nShape.prototype.volume = function(){\n    throw \"volume() not implemented for shape type \"+this.type;\n};\n\n/**\n * Calculates the inertia in the local frame for this shape.\n * @method calculateLocalInertia\n * @return {Vec3}\n * @see http://en.wikipedia.org/wiki/List_of_moments_of_inertia\n */\nShape.prototype.calculateLocalInertia = function(mass,target){\n    throw \"calculateLocalInertia() not implemented for shape type \"+this.type;\n};\n\nShape.idCounter = 0;\n\n/**\n * The available shape types.\n * @static\n * @property types\n * @type {Object}\n */\nShape.types = {\n    SPHERE:1,\n    PLANE:2,\n    BOX:4,\n    COMPOUND:8,\n    CONVEXPOLYHEDRON:16,\n    HEIGHTFIELD:32,\n    PARTICLE:64,\n    CYLINDER:128,\n    TRIMESH:256\n};\n\n\n},{\"../material/Material\":25,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"./Shape\":43}],44:[function(_dereq_,module,exports){\nmodule.exports = Sphere;\n\nvar Shape = _dereq_('./Shape');\nvar Vec3 = _dereq_('../math/Vec3');\n\n/**\n * Spherical shape\n * @class Sphere\n * @constructor\n * @extends Shape\n * @param {Number} radius The radius of the sphere, a non-negative number.\n * @author schteppe / http://github.com/schteppe\n */\nfunction Sphere(radius){\n    Shape.call(this);\n\n    /**\n     * @property {Number} radius\n     */\n    this.radius = radius!==undefined ? Number(radius) : 1.0;\n    this.type = Shape.types.SPHERE;\n\n    if(this.radius < 0){\n        throw new Error('The sphere radius cannot be negative.');\n    }\n\n    this.updateBoundingSphereRadius();\n}\nSphere.prototype = new Shape();\nSphere.prototype.constructor = Sphere;\n\nSphere.prototype.calculateLocalInertia = function(mass,target){\n    target = target || new Vec3();\n    var I = 2.0*mass*this.radius*this.radius/5.0;\n    target.x = I;\n    target.y = I;\n    target.z = I;\n    return target;\n};\n\nSphere.prototype.volume = function(){\n    return 4.0 * Math.PI * this.radius / 3.0;\n};\n\nSphere.prototype.updateBoundingSphereRadius = function(){\n    this.boundingSphereRadius = this.radius;\n};\n\nSphere.prototype.calculateWorldAABB = function(pos,quat,min,max){\n    var r = this.radius;\n    var axes = ['x','y','z'];\n    for(var i=0; i<axes.length; i++){\n        var ax = axes[i];\n        min[ax] = pos[ax] - r;\n        max[ax] = pos[ax] + r;\n    }\n};\n\n},{\"../math/Vec3\":30,\"./Shape\":43}],45:[function(_dereq_,module,exports){\nmodule.exports = Trimesh;\n\nvar Shape = _dereq_('./Shape');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar Transform = _dereq_('../math/Transform');\nvar AABB = _dereq_('../collision/AABB');\nvar Octree = _dereq_('../utils/Octree');\n\n/**\n * @class Trimesh\n * @constructor\n * @param {array} vertices\n * @param {array} indices\n * @extends Shape\n * @example\n *     // How to make a mesh with a single triangle\n *     var vertices = [\n *         0, 0, 0, // vertex 0\n *         1, 0, 0, // vertex 1\n *         0, 1, 0  // vertex 2\n *     ];\n *     var indices = [\n *         0, 1, 2  // triangle 0\n *     ];\n *     var trimeshShape = new Trimesh(vertices, indices);\n */\nfunction Trimesh(vertices, indices) {\n    Shape.call(this);\n    this.type = Shape.types.TRIMESH;\n\n    /**\n     * @property vertices\n     * @type {Array}\n     */\n    this.vertices = new Float32Array(vertices);\n\n    /**\n     * Array of integers, indicating which vertices each triangle consists of. The length of this array is thus 3 times the number of triangles.\n     * @property indices\n     * @type {Array}\n     */\n    this.indices = new Int16Array(indices);\n\n    /**\n     * The normals data.\n     * @property normals\n     * @type {Array}\n     */\n    this.normals = new Float32Array(indices.length);\n\n    /**\n     * The local AABB of the mesh.\n     * @property aabb\n     * @type {Array}\n     */\n    this.aabb = new AABB();\n\n    /**\n     * References to vertex pairs, making up all unique edges in the trimesh.\n     * @property {array} edges\n     */\n    this.edges = null;\n\n    /**\n     * Local scaling of the mesh. Use .setScale() to set it.\n     * @property {Vec3} scale\n     */\n    this.scale = new Vec3(1, 1, 1);\n\n    /**\n     * The indexed triangles. Use .updateTree() to update it.\n     * @property {Octree} tree\n     */\n    this.tree = new Octree();\n\n    this.updateEdges();\n    this.updateNormals();\n    this.updateAABB();\n    this.updateBoundingSphereRadius();\n    this.updateTree();\n}\nTrimesh.prototype = new Shape();\nTrimesh.prototype.constructor = Trimesh;\n\nvar computeNormals_n = new Vec3();\n\n/**\n * @method updateTree\n */\nTrimesh.prototype.updateTree = function(){\n    var tree = this.tree;\n\n    tree.reset();\n    tree.aabb.copy(this.aabb);\n    var scale = this.scale; // The local mesh AABB is scaled, but the octree AABB should be unscaled\n    tree.aabb.lowerBound.x *= 1 / scale.x;\n    tree.aabb.lowerBound.y *= 1 / scale.y;\n    tree.aabb.lowerBound.z *= 1 / scale.z;\n    tree.aabb.upperBound.x *= 1 / scale.x;\n    tree.aabb.upperBound.y *= 1 / scale.y;\n    tree.aabb.upperBound.z *= 1 / scale.z;\n\n    // Insert all triangles\n    var triangleAABB = new AABB();\n    var a = new Vec3();\n    var b = new Vec3();\n    var c = new Vec3();\n    var points = [a, b, c];\n    for (var i = 0; i < this.indices.length / 3; i++) {\n        //this.getTriangleVertices(i, a, b, c);\n\n        // Get unscaled triangle verts\n        var i3 = i * 3;\n        this._getUnscaledVertex(this.indices[i3], a);\n        this._getUnscaledVertex(this.indices[i3 + 1], b);\n        this._getUnscaledVertex(this.indices[i3 + 2], c);\n\n        triangleAABB.setFromPoints(points);\n        tree.insert(triangleAABB, i);\n    }\n    tree.removeEmptyNodes();\n};\n\nvar unscaledAABB = new AABB();\n\n/**\n * Get triangles in a local AABB from the trimesh.\n * @method getTrianglesInAABB\n * @param  {AABB} aabb\n * @param  {array} result An array of integers, referencing the queried triangles.\n */\nTrimesh.prototype.getTrianglesInAABB = function(aabb, result){\n    unscaledAABB.copy(aabb);\n\n    // Scale it to local\n    var scale = this.scale;\n    var isx = scale.x;\n    var isy = scale.y;\n    var isz = scale.z;\n    var l = unscaledAABB.lowerBound;\n    var u = unscaledAABB.upperBound;\n    l.x /= isx;\n    l.y /= isy;\n    l.z /= isz;\n    u.x /= isx;\n    u.y /= isy;\n    u.z /= isz;\n\n    return this.tree.aabbQuery(unscaledAABB, result);\n};\n\n/**\n * @method setScale\n * @param {Vec3} scale\n */\nTrimesh.prototype.setScale = function(scale){\n    var wasUniform = this.scale.x === this.scale.y === this.scale.z;\n    var isUniform = scale.x === scale.y === scale.z;\n\n    if(!(wasUniform && isUniform)){\n        // Non-uniform scaling. Need to update normals.\n        this.updateNormals();\n    }\n    this.scale.copy(scale);\n    this.updateAABB();\n    this.updateBoundingSphereRadius();\n};\n\n/**\n * Compute the normals of the faces. Will save in the .normals array.\n * @method updateNormals\n */\nTrimesh.prototype.updateNormals = function(){\n    var n = computeNormals_n;\n\n    // Generate normals\n    var normals = this.normals;\n    for(var i=0; i < this.indices.length / 3; i++){\n        var i3 = i * 3;\n\n        var a = this.indices[i3],\n            b = this.indices[i3 + 1],\n            c = this.indices[i3 + 2];\n\n        this.getVertex(a, va);\n        this.getVertex(b, vb);\n        this.getVertex(c, vc);\n\n        Trimesh.computeNormal(vb, va, vc, n);\n\n        normals[i3] = n.x;\n        normals[i3 + 1] = n.y;\n        normals[i3 + 2] = n.z;\n    }\n};\n\n/**\n * Update the .edges property\n * @method updateEdges\n */\nTrimesh.prototype.updateEdges = function(){\n    var edges = {};\n    var add = function(indexA, indexB){\n        var key = a < b ? a + '_' + b : b + '_' + a;\n        edges[key] = true;\n    };\n    for(var i=0; i < this.indices.length / 3; i++){\n        var i3 = i * 3;\n        var a = this.indices[i3],\n            b = this.indices[i3 + 1],\n            c = this.indices[i3 + 2];\n        add(a,b);\n        add(b,c);\n        add(c,a);\n    }\n    var keys = Object.keys(edges);\n    this.edges = new Int16Array(keys.length * 2);\n    for (var i = 0; i < keys.length; i++) {\n        var indices = keys[i].split('_');\n        this.edges[2 * i] = parseInt(indices[0], 10);\n        this.edges[2 * i + 1] = parseInt(indices[1], 10);\n    }\n};\n\n/**\n * Get an edge vertex\n * @method getEdgeVertex\n * @param  {number} edgeIndex\n * @param  {number} firstOrSecond 0 or 1, depending on which one of the vertices you need.\n * @param  {Vec3} vertexStore Where to store the result\n */\nTrimesh.prototype.getEdgeVertex = function(edgeIndex, firstOrSecond, vertexStore){\n    var vertexIndex = this.edges[edgeIndex * 2 + (firstOrSecond ? 1 : 0)];\n    this.getVertex(vertexIndex, vertexStore);\n};\n\nvar getEdgeVector_va = new Vec3();\nvar getEdgeVector_vb = new Vec3();\n\n/**\n * Get a vector along an edge.\n * @method getEdgeVector\n * @param  {number} edgeIndex\n * @param  {Vec3} vectorStore\n */\nTrimesh.prototype.getEdgeVector = function(edgeIndex, vectorStore){\n    var va = getEdgeVector_va;\n    var vb = getEdgeVector_vb;\n    this.getEdgeVertex(edgeIndex, 0, va);\n    this.getEdgeVertex(edgeIndex, 1, vb);\n    vb.vsub(va, vectorStore);\n};\n\n/**\n * Get face normal given 3 vertices\n * @static\n * @method computeNormal\n * @param {Vec3} va\n * @param {Vec3} vb\n * @param {Vec3} vc\n * @param {Vec3} target\n */\nvar cb = new Vec3();\nvar ab = new Vec3();\nTrimesh.computeNormal = function ( va, vb, vc, target ) {\n    vb.vsub(va,ab);\n    vc.vsub(vb,cb);\n    cb.cross(ab,target);\n    if ( !target.isZero() ) {\n        target.normalize();\n    }\n};\n\nvar va = new Vec3();\nvar vb = new Vec3();\nvar vc = new Vec3();\n\n/**\n * Get vertex i.\n * @method getVertex\n * @param  {number} i\n * @param  {Vec3} out\n * @return {Vec3} The \"out\" vector object\n */\nTrimesh.prototype.getVertex = function(i, out){\n    var scale = this.scale;\n    this._getUnscaledVertex(i, out);\n    out.x *= scale.x;\n    out.y *= scale.y;\n    out.z *= scale.z;\n    return out;\n};\n\n/**\n * Get raw vertex i\n * @private\n * @method _getUnscaledVertex\n * @param  {number} i\n * @param  {Vec3} out\n * @return {Vec3} The \"out\" vector object\n */\nTrimesh.prototype._getUnscaledVertex = function(i, out){\n    var i3 = i * 3;\n    var vertices = this.vertices;\n    return out.set(\n        vertices[i3],\n        vertices[i3 + 1],\n        vertices[i3 + 2]\n    );\n};\n\n/**\n * Get a vertex from the trimesh,transformed by the given position and quaternion.\n * @method getWorldVertex\n * @param  {number} i\n * @param  {Vec3} pos\n * @param  {Quaternion} quat\n * @param  {Vec3} out\n * @return {Vec3} The \"out\" vector object\n */\nTrimesh.prototype.getWorldVertex = function(i, pos, quat, out){\n    this.getVertex(i, out);\n    Transform.pointToWorldFrame(pos, quat, out, out);\n    return out;\n};\n\n/**\n * Get the three vertices for triangle i.\n * @method getTriangleVertices\n * @param  {number} i\n * @param  {Vec3} a\n * @param  {Vec3} b\n * @param  {Vec3} c\n */\nTrimesh.prototype.getTriangleVertices = function(i, a, b, c){\n    var i3 = i * 3;\n    this.getVertex(this.indices[i3], a);\n    this.getVertex(this.indices[i3 + 1], b);\n    this.getVertex(this.indices[i3 + 2], c);\n};\n\n/**\n * Compute the normal of triangle i.\n * @method getNormal\n * @param  {Number} i\n * @param  {Vec3} target\n * @return {Vec3} The \"target\" vector object\n */\nTrimesh.prototype.getNormal = function(i, target){\n    var i3 = i * 3;\n    return target.set(\n        this.normals[i3],\n        this.normals[i3 + 1],\n        this.normals[i3 + 2]\n    );\n};\n\nvar cli_aabb = new AABB();\n\n/**\n * @method calculateLocalInertia\n * @param  {Number} mass\n * @param  {Vec3} target\n * @return {Vec3} The \"target\" vector object\n */\nTrimesh.prototype.calculateLocalInertia = function(mass,target){\n    // Approximate with box inertia\n    // Exact inertia calculation is overkill, but see http://geometrictools.com/Documentation/PolyhedralMassProperties.pdf for the correct way to do it\n    this.computeLocalAABB(cli_aabb);\n    var x = cli_aabb.upperBound.x - cli_aabb.lowerBound.x,\n        y = cli_aabb.upperBound.y - cli_aabb.lowerBound.y,\n        z = cli_aabb.upperBound.z - cli_aabb.lowerBound.z;\n    return target.set(\n        1.0 / 12.0 * mass * ( 2*y*2*y + 2*z*2*z ),\n        1.0 / 12.0 * mass * ( 2*x*2*x + 2*z*2*z ),\n        1.0 / 12.0 * mass * ( 2*y*2*y + 2*x*2*x )\n    );\n};\n\nvar computeLocalAABB_worldVert = new Vec3();\n\n/**\n * Compute the local AABB for the trimesh\n * @method computeLocalAABB\n * @param  {AABB} aabb\n */\nTrimesh.prototype.computeLocalAABB = function(aabb){\n    var l = aabb.lowerBound,\n        u = aabb.upperBound,\n        n = this.vertices.length,\n        vertices = this.vertices,\n        v = computeLocalAABB_worldVert;\n\n    this.getVertex(0, v);\n    l.copy(v);\n    u.copy(v);\n\n    for(var i=0; i !== n; i++){\n        this.getVertex(i, v);\n\n        if(v.x < l.x){\n            l.x = v.x;\n        } else if(v.x > u.x){\n            u.x = v.x;\n        }\n\n        if(v.y < l.y){\n            l.y = v.y;\n        } else if(v.y > u.y){\n            u.y = v.y;\n        }\n\n        if(v.z < l.z){\n            l.z = v.z;\n        } else if(v.z > u.z){\n            u.z = v.z;\n        }\n    }\n};\n\n\n/**\n * Update the .aabb property\n * @method updateAABB\n */\nTrimesh.prototype.updateAABB = function(){\n    this.computeLocalAABB(this.aabb);\n};\n\n/**\n * Will update the .boundingSphereRadius property\n * @method updateBoundingSphereRadius\n */\nTrimesh.prototype.updateBoundingSphereRadius = function(){\n    // Assume points are distributed with local (0,0,0) as center\n    var max2 = 0;\n    var vertices = this.vertices;\n    var v = new Vec3();\n    for(var i=0, N=vertices.length / 3; i !== N; i++) {\n        this.getVertex(i, v);\n        var norm2 = v.norm2();\n        if(norm2 > max2){\n            max2 = norm2;\n        }\n    }\n    this.boundingSphereRadius = Math.sqrt(max2);\n};\n\nvar tempWorldVertex = new Vec3();\nvar calculateWorldAABB_frame = new Transform();\nvar calculateWorldAABB_aabb = new AABB();\n\n/**\n * @method calculateWorldAABB\n * @param {Vec3}        pos\n * @param {Quaternion}  quat\n * @param {Vec3}        min\n * @param {Vec3}        max\n */\nTrimesh.prototype.calculateWorldAABB = function(pos,quat,min,max){\n    /*\n    var n = this.vertices.length / 3,\n        verts = this.vertices;\n    var minx,miny,minz,maxx,maxy,maxz;\n\n    var v = tempWorldVertex;\n    for(var i=0; i<n; i++){\n        this.getVertex(i, v);\n        quat.vmult(v, v);\n        pos.vadd(v, v);\n        if (v.x < minx || minx===undefined){\n            minx = v.x;\n        } else if(v.x > maxx || maxx===undefined){\n            maxx = v.x;\n        }\n\n        if (v.y < miny || miny===undefined){\n            miny = v.y;\n        } else if(v.y > maxy || maxy===undefined){\n            maxy = v.y;\n        }\n\n        if (v.z < minz || minz===undefined){\n            minz = v.z;\n        } else if(v.z > maxz || maxz===undefined){\n            maxz = v.z;\n        }\n    }\n    min.set(minx,miny,minz);\n    max.set(maxx,maxy,maxz);\n    */\n\n    // Faster approximation using local AABB\n    var frame = calculateWorldAABB_frame;\n    var result = calculateWorldAABB_aabb;\n    frame.position = pos;\n    frame.quaternion = quat;\n    this.aabb.toWorldFrame(frame, result);\n    min.copy(result.lowerBound);\n    max.copy(result.upperBound);\n};\n\n/**\n * Get approximate volume\n * @method volume\n * @return {Number}\n */\nTrimesh.prototype.volume = function(){\n    return 4.0 * Math.PI * this.boundingSphereRadius / 3.0;\n};\n\n/**\n * Create a Trimesh instance, shaped as a torus.\n * @static\n * @method createTorus\n * @param  {number} [radius=1]\n * @param  {number} [tube=0.5]\n * @param  {number} [radialSegments=8]\n * @param  {number} [tubularSegments=6]\n * @param  {number} [arc=6.283185307179586]\n * @return {Trimesh} A torus\n */\nTrimesh.createTorus = function (radius, tube, radialSegments, tubularSegments, arc) {\n    radius = radius || 1;\n    tube = tube || 0.5;\n    radialSegments = radialSegments || 8;\n    tubularSegments = tubularSegments || 6;\n    arc = arc || Math.PI * 2;\n\n    var vertices = [];\n    var indices = [];\n\n    for ( var j = 0; j <= radialSegments; j ++ ) {\n        for ( var i = 0; i <= tubularSegments; i ++ ) {\n            var u = i / tubularSegments * arc;\n            var v = j / radialSegments * Math.PI * 2;\n\n            var x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n            var y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n            var z = tube * Math.sin( v );\n\n            vertices.push( x, y, z );\n        }\n    }\n\n    for ( var j = 1; j <= radialSegments; j ++ ) {\n        for ( var i = 1; i <= tubularSegments; i ++ ) {\n            var a = ( tubularSegments + 1 ) * j + i - 1;\n            var b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n            var c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n            var d = ( tubularSegments + 1 ) * j + i;\n\n            indices.push(a, b, d);\n            indices.push(b, c, d);\n        }\n    }\n\n    return new Trimesh(vertices, indices);\n};\n\n},{\"../collision/AABB\":3,\"../math/Quaternion\":28,\"../math/Transform\":29,\"../math/Vec3\":30,\"../utils/Octree\":50,\"./Shape\":43}],46:[function(_dereq_,module,exports){\nmodule.exports = GSSolver;\n\nvar Vec3 = _dereq_('../math/Vec3');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar Solver = _dereq_('./Solver');\n\n/**\n * Constraint equation Gauss-Seidel solver.\n * @class GSSolver\n * @constructor\n * @todo The spook parameters should be specified for each constraint, not globally.\n * @author schteppe / https://github.com/schteppe\n * @see https://www8.cs.umu.se/kurser/5DV058/VT09/lectures/spooknotes.pdf\n * @extends Solver\n */\nfunction GSSolver(){\n    Solver.call(this);\n\n    /**\n     * The number of solver iterations determines quality of the constraints in the world. The more iterations, the more correct simulation. More iterations need more computations though. If you have a large gravity force in your world, you will need more iterations.\n     * @property iterations\n     * @type {Number}\n     * @todo write more about solver and iterations in the wiki\n     */\n    this.iterations = 10;\n\n    /**\n     * When tolerance is reached, the system is assumed to be converged.\n     * @property tolerance\n     * @type {Number}\n     */\n    this.tolerance = 1e-7;\n}\nGSSolver.prototype = new Solver();\n\nvar GSSolver_solve_lambda = []; // Just temporary number holders that we want to reuse each solve.\nvar GSSolver_solve_invCs = [];\nvar GSSolver_solve_Bs = [];\nGSSolver.prototype.solve = function(dt,world){\n    var iter = 0,\n        maxIter = this.iterations,\n        tolSquared = this.tolerance*this.tolerance,\n        equations = this.equations,\n        Neq = equations.length,\n        bodies = world.bodies,\n        Nbodies = bodies.length,\n        h = dt,\n        q, B, invC, deltalambda, deltalambdaTot, GWlambda, lambdaj;\n\n    // Update solve mass\n    if(Neq !== 0){\n        for(var i=0; i!==Nbodies; i++){\n            bodies[i].updateSolveMassProperties();\n        }\n    }\n\n    // Things that does not change during iteration can be computed once\n    var invCs = GSSolver_solve_invCs,\n        Bs = GSSolver_solve_Bs,\n        lambda = GSSolver_solve_lambda;\n    invCs.length = Neq;\n    Bs.length = Neq;\n    lambda.length = Neq;\n    for(var i=0; i!==Neq; i++){\n        var c = equations[i];\n        lambda[i] = 0.0;\n        Bs[i] = c.computeB(h);\n        invCs[i] = 1.0 / c.computeC();\n    }\n\n    if(Neq !== 0){\n\n        // Reset vlambda\n        for(var i=0; i!==Nbodies; i++){\n            var b=bodies[i],\n                vlambda=b.vlambda,\n                wlambda=b.wlambda;\n            vlambda.set(0,0,0);\n            if(wlambda){\n                wlambda.set(0,0,0);\n            }\n        }\n\n        // Iterate over equations\n        for(iter=0; iter!==maxIter; iter++){\n\n            // Accumulate the total error for each iteration.\n            deltalambdaTot = 0.0;\n\n            for(var j=0; j!==Neq; j++){\n\n                var c = equations[j];\n\n                // Compute iteration\n                B = Bs[j];\n                invC = invCs[j];\n                lambdaj = lambda[j];\n                GWlambda = c.computeGWlambda();\n                deltalambda = invC * ( B - GWlambda - c.eps * lambdaj );\n\n                // Clamp if we are not within the min/max interval\n                if(lambdaj + deltalambda < c.minForce){\n                    deltalambda = c.minForce - lambdaj;\n                } else if(lambdaj + deltalambda > c.maxForce){\n                    deltalambda = c.maxForce - lambdaj;\n                }\n                lambda[j] += deltalambda;\n\n                deltalambdaTot += deltalambda > 0.0 ? deltalambda : -deltalambda; // abs(deltalambda)\n\n                c.addToWlambda(deltalambda);\n            }\n\n            // If the total error is small enough - stop iterate\n            if(deltalambdaTot*deltalambdaTot < tolSquared){\n                break;\n            }\n        }\n\n        // Add result to velocity\n        for(var i=0; i!==Nbodies; i++){\n            var b=bodies[i],\n                v=b.velocity,\n                w=b.angularVelocity;\n            v.vadd(b.vlambda, v);\n            if(w){\n                w.vadd(b.wlambda, w);\n            }\n        }\n    }\n\n    return iter;\n};\n\n},{\"../math/Quaternion\":28,\"../math/Vec3\":30,\"./Solver\":47}],47:[function(_dereq_,module,exports){\nmodule.exports = Solver;\n\n/**\n * Constraint equation solver base class.\n * @class Solver\n * @constructor\n * @author schteppe / https://github.com/schteppe\n */\nfunction Solver(){\n    /**\n     * All equations to be solved\n     * @property {Array} equations\n     */\n    this.equations = [];\n}\n\n/**\n * Should be implemented in subclasses!\n * @method solve\n * @param  {Number} dt\n * @param  {World} world\n */\nSolver.prototype.solve = function(dt,world){\n    // Should return the number of iterations done!\n    return 0;\n};\n\n/**\n * Add an equation\n * @method addEquation\n * @param {Equation} eq\n */\nSolver.prototype.addEquation = function(eq){\n    if (eq.enabled) {\n        this.equations.push(eq);\n    }\n};\n\n/**\n * Remove an equation\n * @method removeEquation\n * @param {Equation} eq\n */\nSolver.prototype.removeEquation = function(eq){\n    var eqs = this.equations;\n    var i = eqs.indexOf(eq);\n    if(i !== -1){\n        eqs.splice(i,1);\n    }\n};\n\n/**\n * Add all equations\n * @method removeAllEquations\n */\nSolver.prototype.removeAllEquations = function(){\n    this.equations.length = 0;\n};\n\n\n},{}],48:[function(_dereq_,module,exports){\nmodule.exports = SplitSolver;\n\nvar Vec3 = _dereq_('../math/Vec3');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar Solver = _dereq_('./Solver');\nvar Body = _dereq_('../objects/Body');\n\n/**\n * Splits the equations into islands and solves them independently. Can improve performance.\n * @class SplitSolver\n * @constructor\n * @extends Solver\n * @param {Solver} subsolver\n */\nfunction SplitSolver(subsolver){\n    Solver.call(this);\n    this.iterations = 10;\n    this.tolerance = 1e-7;\n    this.subsolver = subsolver;\n    this.nodes = [];\n    this.nodePool = [];\n\n    // Create needed nodes, reuse if possible\n    while(this.nodePool.length < 128){\n        this.nodePool.push(this.createNode());\n    }\n}\nSplitSolver.prototype = new Solver();\n\n// Returns the number of subsystems\nvar SplitSolver_solve_nodes = []; // All allocated node objects\nvar SplitSolver_solve_nodePool = []; // All allocated node objects\nvar SplitSolver_solve_eqs = [];   // Temp array\nvar SplitSolver_solve_bds = [];   // Temp array\nvar SplitSolver_solve_dummyWorld = {bodies:[]}; // Temp object\n\nvar STATIC = Body.STATIC;\nfunction getUnvisitedNode(nodes){\n    var Nnodes = nodes.length;\n    for(var i=0; i!==Nnodes; i++){\n        var node = nodes[i];\n        if(!node.visited && !(node.body.type & STATIC)){\n            return node;\n        }\n    }\n    return false;\n}\n\nvar queue = [];\nfunction bfs(root,visitFunc,bds,eqs){\n    queue.push(root);\n    root.visited = true;\n    visitFunc(root,bds,eqs);\n    while(queue.length) {\n        var node = queue.pop();\n        // Loop over unvisited child nodes\n        var child;\n        while((child = getUnvisitedNode(node.children))) {\n            child.visited = true;\n            visitFunc(child,bds,eqs);\n            queue.push(child);\n        }\n    }\n}\n\nfunction visitFunc(node,bds,eqs){\n    bds.push(node.body);\n    var Neqs = node.eqs.length;\n    for(var i=0; i!==Neqs; i++){\n        var eq = node.eqs[i];\n        if(eqs.indexOf(eq) === -1){\n            eqs.push(eq);\n        }\n    }\n}\n\nSplitSolver.prototype.createNode = function(){\n    return { body:null, children:[], eqs:[], visited:false };\n};\n\n/**\n * Solve the subsystems\n * @method solve\n * @param  {Number} dt\n * @param  {World} world\n */\nSplitSolver.prototype.solve = function(dt,world){\n    var nodes=SplitSolver_solve_nodes,\n        nodePool=this.nodePool,\n        bodies=world.bodies,\n        equations=this.equations,\n        Neq=equations.length,\n        Nbodies=bodies.length,\n        subsolver=this.subsolver;\n\n    // Create needed nodes, reuse if possible\n    while(nodePool.length < Nbodies){\n        nodePool.push(this.createNode());\n    }\n    nodes.length = Nbodies;\n    for (var i = 0; i < Nbodies; i++) {\n        nodes[i] = nodePool[i];\n    }\n\n    // Reset node values\n    for(var i=0; i!==Nbodies; i++){\n        var node = nodes[i];\n        node.body = bodies[i];\n        node.children.length = 0;\n        node.eqs.length = 0;\n        node.visited = false;\n    }\n    for(var k=0; k!==Neq; k++){\n        var eq=equations[k],\n            i=bodies.indexOf(eq.bi),\n            j=bodies.indexOf(eq.bj),\n            ni=nodes[i],\n            nj=nodes[j];\n        ni.children.push(nj);\n        ni.eqs.push(eq);\n        nj.children.push(ni);\n        nj.eqs.push(eq);\n    }\n\n    var child, n=0, eqs=SplitSolver_solve_eqs;\n\n    subsolver.tolerance = this.tolerance;\n    subsolver.iterations = this.iterations;\n\n    var dummyWorld = SplitSolver_solve_dummyWorld;\n    while((child = getUnvisitedNode(nodes))){\n        eqs.length = 0;\n        dummyWorld.bodies.length = 0;\n        bfs(child, visitFunc, dummyWorld.bodies, eqs);\n\n        var Neqs = eqs.length;\n\n        eqs = eqs.sort(sortById);\n\n        for(var i=0; i!==Neqs; i++){\n            subsolver.addEquation(eqs[i]);\n        }\n\n        var iter = subsolver.solve(dt,dummyWorld);\n        subsolver.removeAllEquations();\n        n++;\n    }\n\n    return n;\n};\n\nfunction sortById(a, b){\n    return b.id - a.id;\n}\n},{\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/Body\":31,\"./Solver\":47}],49:[function(_dereq_,module,exports){\n/**\n * Base class for objects that dispatches events.\n * @class EventTarget\n * @constructor\n */\nvar EventTarget = function () {\n\n};\n\nmodule.exports = EventTarget;\n\nEventTarget.prototype = {\n    constructor: EventTarget,\n\n    /**\n     * Add an event listener\n     * @method addEventListener\n     * @param  {String} type\n     * @param  {Function} listener\n     * @return {EventTarget} The self object, for chainability.\n     */\n    addEventListener: function ( type, listener ) {\n        if ( this._listeners === undefined ){ this._listeners = {}; }\n        var listeners = this._listeners;\n        if ( listeners[ type ] === undefined ) {\n            listeners[ type ] = [];\n        }\n        if ( listeners[ type ].indexOf( listener ) === - 1 ) {\n            listeners[ type ].push( listener );\n        }\n        return this;\n    },\n\n    /**\n     * Check if an event listener is added\n     * @method hasEventListener\n     * @param  {String} type\n     * @param  {Function} listener\n     * @return {Boolean}\n     */\n    hasEventListener: function ( type, listener ) {\n        if ( this._listeners === undefined ){ return false; }\n        var listeners = this._listeners;\n        if ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\n            return true;\n        }\n        return false;\n    },\n\n    /**\n     * Remove an event listener\n     * @method removeEventListener\n     * @param  {String} type\n     * @param  {Function} listener\n     * @return {EventTarget} The self object, for chainability.\n     */\n    removeEventListener: function ( type, listener ) {\n        if ( this._listeners === undefined ){ return this; }\n        var listeners = this._listeners;\n        if ( listeners[type] === undefined ){ return this; }\n        var index = listeners[ type ].indexOf( listener );\n        if ( index !== - 1 ) {\n            listeners[ type ].splice( index, 1 );\n        }\n        return this;\n    },\n\n    /**\n     * Emit an event.\n     * @method dispatchEvent\n     * @param  {Object} event\n     * @param  {String} event.type\n     * @return {EventTarget} The self object, for chainability.\n     */\n    dispatchEvent: function ( event ) {\n        if ( this._listeners === undefined ){ return this; }\n        var listeners = this._listeners;\n        var listenerArray = listeners[ event.type ];\n        if ( listenerArray !== undefined ) {\n            event.target = this;\n            for ( var i = 0, l = listenerArray.length; i < l; i ++ ) {\n                listenerArray[ i ].call( this, event );\n            }\n        }\n        return this;\n    }\n};\n\n},{}],50:[function(_dereq_,module,exports){\nvar AABB = _dereq_('../collision/AABB');\nvar Vec3 = _dereq_('../math/Vec3');\n\nmodule.exports = Octree;\n\n/**\n * @class OctreeNode\n * @param {object} [options]\n * @param {Octree} [options.root]\n * @param {AABB} [options.aabb]\n */\nfunction OctreeNode(options){\n    options = options || {};\n\n    /**\n     * The root node\n     * @property {OctreeNode} root\n     */\n    this.root = options.root || null;\n\n    /**\n     * Boundary of this node\n     * @property {AABB} aabb\n     */\n    this.aabb = options.aabb ? options.aabb.clone() : new AABB();\n\n    /**\n     * Contained data at the current node level.\n     * @property {Array} data\n     */\n    this.data = [];\n\n    /**\n     * Children to this node\n     * @property {Array} children\n     */\n    this.children = [];\n}\n\n/**\n * @class Octree\n * @param {AABB} aabb The total AABB of the tree\n * @param {object} [options]\n * @param {number} [options.maxDepth=8]\n * @extends OctreeNode\n */\nfunction Octree(aabb, options){\n    options = options || {};\n    options.root = null;\n    options.aabb = aabb;\n    OctreeNode.call(this, options);\n\n    /**\n     * Maximum subdivision depth\n     * @property {number} maxDepth\n     */\n    this.maxDepth = typeof(options.maxDepth) !== 'undefined' ? options.maxDepth : 8;\n}\nOctree.prototype = new OctreeNode();\n\nOctreeNode.prototype.reset = function(aabb, options){\n    this.children.length = this.data.length = 0;\n};\n\n/**\n * Insert data into this node\n * @method insert\n * @param  {AABB} aabb\n * @param  {object} elementData\n * @return {boolean} True if successful, otherwise false\n */\nOctreeNode.prototype.insert = function(aabb, elementData, level){\n    var nodeData = this.data;\n    level = level || 0;\n\n    // Ignore objects that do not belong in this node\n    if (!this.aabb.contains(aabb)){\n        return false; // object cannot be added\n    }\n\n    var children = this.children;\n\n    if(level < (this.maxDepth || this.root.maxDepth)){\n        // Subdivide if there are no children yet\n        var subdivided = false;\n        if (!children.length){\n            this.subdivide();\n            subdivided = true;\n        }\n\n        // add to whichever node will accept it\n        for (var i = 0; i !== 8; i++) {\n            if (children[i].insert(aabb, elementData, level + 1)){\n                return true;\n            }\n        }\n\n        if(subdivided){\n            // No children accepted! Might as well just remove em since they contain none\n            children.length = 0;\n        }\n    }\n\n    // Too deep, or children didnt want it. add it in current node\n    nodeData.push(elementData);\n\n    return true;\n};\n\nvar halfDiagonal = new Vec3();\n\n/**\n * Create 8 equally sized children nodes and put them in the .children array.\n * @method subdivide\n */\nOctreeNode.prototype.subdivide = function() {\n    var aabb = this.aabb;\n    var l = aabb.lowerBound;\n    var u = aabb.upperBound;\n\n    var children = this.children;\n\n    children.push(\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,0,0) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,0,0) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,1,0) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,1,1) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,1,1) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,0,1) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,0,1) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,1,0) }) })\n    );\n\n    u.vsub(l, halfDiagonal);\n    halfDiagonal.scale(0.5, halfDiagonal);\n\n    var root = this.root || this;\n\n    for (var i = 0; i !== 8; i++) {\n        var child = children[i];\n\n        // Set current node as root\n        child.root = root;\n\n        // Compute bounds\n        var lowerBound = child.aabb.lowerBound;\n        lowerBound.x *= halfDiagonal.x;\n        lowerBound.y *= halfDiagonal.y;\n        lowerBound.z *= halfDiagonal.z;\n\n        lowerBound.vadd(l, lowerBound);\n\n        // Upper bound is always lower bound + halfDiagonal\n        lowerBound.vadd(halfDiagonal, child.aabb.upperBound);\n    }\n};\n\n/**\n * Get all data, potentially within an AABB\n * @method aabbQuery\n * @param  {AABB} aabb\n * @param  {array} result\n * @return {array} The \"result\" object\n */\nOctreeNode.prototype.aabbQuery = function(aabb, result) {\n\n    var nodeData = this.data;\n\n    // abort if the range does not intersect this node\n    // if (!this.aabb.overlaps(aabb)){\n    //     return result;\n    // }\n\n    // Add objects at this level\n    // Array.prototype.push.apply(result, nodeData);\n\n    // Add child data\n    // @todo unwrap recursion into a queue / loop, that's faster in JS\n    var children = this.children;\n\n\n    // for (var i = 0, N = this.children.length; i !== N; i++) {\n    //     children[i].aabbQuery(aabb, result);\n    // }\n\n    var queue = [this];\n    while (queue.length) {\n        var node = queue.pop();\n        if (node.aabb.overlaps(aabb)){\n            Array.prototype.push.apply(result, node.data);\n        }\n        Array.prototype.push.apply(queue, node.children);\n    }\n\n    return result;\n};\n\nvar tmpAABB = new AABB();\n\n/**\n * Get all data, potentially intersected by a ray.\n * @method rayQuery\n * @param  {Ray} ray\n * @param  {Transform} treeTransform\n * @param  {array} result\n * @return {array} The \"result\" object\n */\nOctreeNode.prototype.rayQuery = function(ray, treeTransform, result) {\n\n    // Use aabb query for now.\n    // @todo implement real ray query which needs less lookups\n    ray.getAABB(tmpAABB);\n    tmpAABB.toLocalFrame(treeTransform, tmpAABB);\n    this.aabbQuery(tmpAABB, result);\n\n    return result;\n};\n\n/**\n * @method removeEmptyNodes\n */\nOctreeNode.prototype.removeEmptyNodes = function() {\n    var queue = [this];\n    while (queue.length) {\n        var node = queue.pop();\n        for (var i = node.children.length - 1; i >= 0; i--) {\n            if(!node.children[i].data.length){\n                node.children.splice(i, 1);\n            }\n        }\n        Array.prototype.push.apply(queue, node.children);\n    }\n};\n\n},{\"../collision/AABB\":3,\"../math/Vec3\":30}],51:[function(_dereq_,module,exports){\nmodule.exports = Pool;\n\n/**\n * For pooling objects that can be reused.\n * @class Pool\n * @constructor\n */\nfunction Pool(){\n    /**\n     * The pooled objects\n     * @property {Array} objects\n     */\n    this.objects = [];\n\n    /**\n     * Constructor of the objects\n     * @property {mixed} type\n     */\n    this.type = Object;\n}\n\n/**\n * Release an object after use\n * @method release\n * @param {Object} obj\n */\nPool.prototype.release = function(){\n    var Nargs = arguments.length;\n    for(var i=0; i!==Nargs; i++){\n        this.objects.push(arguments[i]);\n    }\n};\n\n/**\n * Get an object\n * @method get\n * @return {mixed}\n */\nPool.prototype.get = function(){\n    if(this.objects.length===0){\n        return this.constructObject();\n    } else {\n        return this.objects.pop();\n    }\n};\n\n/**\n * Construct an object. Should be implmented in each subclass.\n * @method constructObject\n * @return {mixed}\n */\nPool.prototype.constructObject = function(){\n    throw new Error(\"constructObject() not implemented in this Pool subclass yet!\");\n};\n\n},{}],52:[function(_dereq_,module,exports){\nmodule.exports = TupleDictionary;\n\n/**\n * @class TupleDictionary\n * @constructor\n */\nfunction TupleDictionary() {\n\n    /**\n     * The data storage\n     * @property data\n     * @type {Object}\n     */\n    this.data = { keys:[] };\n}\n\n/**\n * @method get\n * @param  {Number} i\n * @param  {Number} j\n * @return {Number}\n */\nTupleDictionary.prototype.get = function(i, j) {\n    if (i > j) {\n        // swap\n        var temp = j;\n        j = i;\n        i = temp;\n    }\n    return this.data[i+'-'+j];\n};\n\n/**\n * @method set\n * @param  {Number} i\n * @param  {Number} j\n * @param {Number} value\n */\nTupleDictionary.prototype.set = function(i, j, value) {\n    if (i > j) {\n        var temp = j;\n        j = i;\n        i = temp;\n    }\n    var key = i+'-'+j;\n\n    // Check if key already exists\n    if(!this.get(i,j)){\n        this.data.keys.push(key);\n    }\n\n    this.data[key] = value;\n};\n\n/**\n * @method reset\n */\nTupleDictionary.prototype.reset = function() {\n    var data = this.data,\n        keys = data.keys;\n    while(keys.length > 0){\n        var key = keys.pop();\n        delete data[key];\n    }\n};\n\n},{}],53:[function(_dereq_,module,exports){\nfunction Utils(){}\n\nmodule.exports = Utils;\n\n/**\n * Extend an options object with default values.\n * @static\n * @method defaults\n * @param  {object} options The options object. May be falsy: in this case, a new object is created and returned.\n * @param  {object} defaults An object containing default values.\n * @return {object} The modified options object.\n */\nUtils.defaults = function(options, defaults){\n    options = options || {};\n\n    for(var key in defaults){\n        if(!(key in options)){\n            options[key] = defaults[key];\n        }\n    }\n\n    return options;\n};\n\n},{}],54:[function(_dereq_,module,exports){\nmodule.exports = Vec3Pool;\n\nvar Vec3 = _dereq_('../math/Vec3');\nvar Pool = _dereq_('./Pool');\n\n/**\n * @class Vec3Pool\n * @constructor\n * @extends Pool\n */\nfunction Vec3Pool(){\n    Pool.call(this);\n    this.type = Vec3;\n}\nVec3Pool.prototype = new Pool();\n\n/**\n * Construct a vector\n * @method constructObject\n * @return {Vec3}\n */\nVec3Pool.prototype.constructObject = function(){\n    return new Vec3();\n};\n\n},{\"../math/Vec3\":30,\"./Pool\":51}],55:[function(_dereq_,module,exports){\nmodule.exports = Narrowphase;\n\nvar AABB = _dereq_('../collision/AABB');\nvar Shape = _dereq_('../shapes/Shape');\nvar Ray = _dereq_('../collision/Ray');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Transform = _dereq_('../math/Transform');\nvar ConvexPolyhedron = _dereq_('../shapes/ConvexPolyhedron');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar Solver = _dereq_('../solver/Solver');\nvar Vec3Pool = _dereq_('../utils/Vec3Pool');\nvar ContactEquation = _dereq_('../equations/ContactEquation');\nvar FrictionEquation = _dereq_('../equations/FrictionEquation');\n\n/**\n * Helper class for the World. Generates ContactEquations.\n * @class Narrowphase\n * @constructor\n * @todo Sphere-ConvexPolyhedron contacts\n * @todo Contact reduction\n * @todo  should move methods to prototype\n */\nfunction Narrowphase(world){\n\n    /**\n     * Internal storage of pooled contact points.\n     * @property {Array} contactPointPool\n     */\n    this.contactPointPool = [];\n\n    this.frictionEquationPool = [];\n\n    this.result = [];\n    this.frictionResult = [];\n\n    /**\n     * Pooled vectors.\n     * @property {Vec3Pool} v3pool\n     */\n    this.v3pool = new Vec3Pool();\n\n    this.world = world;\n    this.currentContactMaterial = null;\n\n    /**\n     * @property {Boolean} enableFrictionReduction\n     */\n    this.enableFrictionReduction = false;\n}\n\n/**\n * Make a contact object, by using the internal pool or creating a new one.\n * @method createContactEquation\n * @return {ContactEquation}\n */\nNarrowphase.prototype.createContactEquation = function(bi, bj, si, sj, rsi, rsj){\n    var c;\n    if(this.contactPointPool.length){\n        c = this.contactPointPool.pop();\n        c.bi = bi;\n        c.bj = bj;\n    } else {\n        c = new ContactEquation(bi, bj);\n    }\n\n    c.enabled = bi.collisionResponse && bj.collisionResponse && si.collisionResponse && sj.collisionResponse;\n\n    var cm = this.currentContactMaterial;\n\n    c.restitution = cm.restitution;\n\n    c.setSpookParams(\n        cm.contactEquationStiffness,\n        cm.contactEquationRelaxation,\n        this.world.dt\n    );\n\n    var matA = si.material || bi.material;\n    var matB = sj.material || bj.material;\n    if(matA && matB && matA.restitution >= 0 && matB.restitution >= 0){\n        c.restitution = matA.restitution * matB.restitution;\n    }\n\n    c.si = rsi || si;\n    c.sj = rsj || sj;\n\n    return c;\n};\n\nNarrowphase.prototype.createFrictionEquationsFromContact = function(contactEquation, outArray){\n    var bodyA = contactEquation.bi;\n    var bodyB = contactEquation.bj;\n    var shapeA = contactEquation.si;\n    var shapeB = contactEquation.sj;\n\n    var world = this.world;\n    var cm = this.currentContactMaterial;\n\n    // If friction or restitution were specified in the material, use them\n    var friction = cm.friction;\n    var matA = shapeA.material || bodyA.material;\n    var matB = shapeB.material || bodyB.material;\n    if(matA && matB && matA.friction >= 0 && matB.friction >= 0){\n        friction = matA.friction * matB.friction;\n    }\n\n    if(friction > 0){\n\n        // Create 2 tangent equations\n        var mug = friction * world.gravity.length();\n        var reducedMass = (bodyA.invMass + bodyB.invMass);\n        if(reducedMass > 0){\n            reducedMass = 1/reducedMass;\n        }\n        var pool = this.frictionEquationPool;\n        var c1 = pool.length ? pool.pop() : new FrictionEquation(bodyA,bodyB,mug*reducedMass);\n        var c2 = pool.length ? pool.pop() : new FrictionEquation(bodyA,bodyB,mug*reducedMass);\n\n        c1.bi = c2.bi = bodyA;\n        c1.bj = c2.bj = bodyB;\n        c1.minForce = c2.minForce = -mug*reducedMass;\n        c1.maxForce = c2.maxForce = mug*reducedMass;\n\n        // Copy over the relative vectors\n        c1.ri.copy(contactEquation.ri);\n        c1.rj.copy(contactEquation.rj);\n        c2.ri.copy(contactEquation.ri);\n        c2.rj.copy(contactEquation.rj);\n\n        // Construct tangents\n        contactEquation.ni.tangents(c1.t, c2.t);\n\n        // Set spook params\n        c1.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, world.dt);\n        c2.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, world.dt);\n\n        c1.enabled = c2.enabled = contactEquation.enabled;\n\n        outArray.push(c1, c2);\n\n        return true;\n    }\n\n    return false;\n};\n\nvar averageNormal = new Vec3();\nvar averageContactPointA = new Vec3();\nvar averageContactPointB = new Vec3();\n\n// Take the average N latest contact point on the plane.\nNarrowphase.prototype.createFrictionFromAverage = function(numContacts){\n    // The last contactEquation\n    var c = this.result[this.result.length - 1];\n\n    // Create the result: two \"average\" friction equations\n    if (!this.createFrictionEquationsFromContact(c, this.frictionResult) || numContacts === 1) {\n        return;\n    }\n\n    var f1 = this.frictionResult[this.frictionResult.length - 2];\n    var f2 = this.frictionResult[this.frictionResult.length - 1];\n\n    averageNormal.setZero();\n    averageContactPointA.setZero();\n    averageContactPointB.setZero();\n\n    var bodyA = c.bi;\n    var bodyB = c.bj;\n    for(var i=0; i!==numContacts; i++){\n        c = this.result[this.result.length - 1 - i];\n        if(c.bodyA !== bodyA){\n            averageNormal.vadd(c.ni, averageNormal); // vec2.add(eq.t, eq.t, c.normalA);\n            averageContactPointA.vadd(c.ri, averageContactPointA); // vec2.add(eq.contactPointA, eq.contactPointA, c.contactPointA);\n            averageContactPointB.vadd(c.rj, averageContactPointB);\n        } else {\n            averageNormal.vsub(c.ni, averageNormal); // vec2.sub(eq.t, eq.t, c.normalA);\n            averageContactPointA.vadd(c.rj, averageContactPointA); // vec2.add(eq.contactPointA, eq.contactPointA, c.contactPointA);\n            averageContactPointB.vadd(c.ri, averageContactPointB);\n        }\n    }\n\n    var invNumContacts = 1 / numContacts;\n    averageContactPointA.scale(invNumContacts, f1.ri); // vec2.scale(eq.contactPointA, eq.contactPointA, invNumContacts);\n    averageContactPointB.scale(invNumContacts, f1.rj); // vec2.scale(eq.contactPointB, eq.contactPointB, invNumContacts);\n    f2.ri.copy(f1.ri); // Should be the same\n    f2.rj.copy(f1.rj);\n    averageNormal.normalize();\n    averageNormal.tangents(f1.t, f2.t);\n    // return eq;\n};\n\n\nvar tmpVec1 = new Vec3();\nvar tmpVec2 = new Vec3();\nvar tmpQuat1 = new Quaternion();\nvar tmpQuat2 = new Quaternion();\n\n/**\n * Generate all contacts between a list of body pairs\n * @method getContacts\n * @param {array} p1 Array of body indices\n * @param {array} p2 Array of body indices\n * @param {World} world\n * @param {array} result Array to store generated contacts\n * @param {array} oldcontacts Optional. Array of reusable contact objects\n */\nNarrowphase.prototype.getContacts = function(p1, p2, world, result, oldcontacts, frictionResult, frictionPool){\n    // Save old contact objects\n    this.contactPointPool = oldcontacts;\n    this.frictionEquationPool = frictionPool;\n    this.result = result;\n    this.frictionResult = frictionResult;\n\n    var qi = tmpQuat1;\n    var qj = tmpQuat2;\n    var xi = tmpVec1;\n    var xj = tmpVec2;\n\n    for(var k=0, N=p1.length; k!==N; k++){\n\n        // Get current collision bodies\n        var bi = p1[k],\n            bj = p2[k];\n\n        // Get contact material\n        var bodyContactMaterial = null;\n        if(bi.material && bj.material){\n            bodyContactMaterial = world.getContactMaterial(bi.material,bj.material) || null;\n        }\n\n        for (var i = 0; i < bi.shapes.length; i++) {\n            bi.quaternion.mult(bi.shapeOrientations[i], qi);\n            bi.quaternion.vmult(bi.shapeOffsets[i], xi);\n            xi.vadd(bi.position, xi);\n            var si = bi.shapes[i];\n\n            for (var j = 0; j < bj.shapes.length; j++) {\n\n                // Compute world transform of shapes\n                bj.quaternion.mult(bj.shapeOrientations[j], qj);\n                bj.quaternion.vmult(bj.shapeOffsets[j], xj);\n                xj.vadd(bj.position, xj);\n                var sj = bj.shapes[j];\n\n                if(xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius){\n                    continue;\n                }\n\n                // Get collision material\n                var shapeContactMaterial = null;\n                if(si.material && sj.material){\n                    shapeContactMaterial = world.getContactMaterial(si.material,sj.material) || null;\n                }\n\n                this.currentContactMaterial = shapeContactMaterial || bodyContactMaterial || world.defaultContactMaterial;\n\n                // Get contacts\n                var resolver = this[si.type | sj.type];\n                if(resolver){\n                    if (si.type < sj.type) {\n                        resolver.call(this, si, sj, xi, xj, qi, qj, bi, bj, si, sj);\n                    } else {\n                        resolver.call(this, sj, si, xj, xi, qj, qi, bj, bi, si, sj);\n                    }\n                }\n            }\n        }\n    }\n};\n\nvar numWarnings = 0;\nvar maxWarnings = 10;\n\nfunction warn(msg){\n    if(numWarnings > maxWarnings){\n        return;\n    }\n\n    numWarnings++;\n\n    console.warn(msg);\n}\n\nNarrowphase.prototype[Shape.types.BOX | Shape.types.BOX] =\nNarrowphase.prototype.boxBox = function(si,sj,xi,xj,qi,qj,bi,bj){\n    si.convexPolyhedronRepresentation.material = si.material;\n    sj.convexPolyhedronRepresentation.material = sj.material;\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n    sj.convexPolyhedronRepresentation.collisionResponse = sj.collisionResponse;\n    this.convexConvex(si.convexPolyhedronRepresentation,sj.convexPolyhedronRepresentation,xi,xj,qi,qj,bi,bj,si,sj);\n};\n\nNarrowphase.prototype[Shape.types.BOX | Shape.types.CONVEXPOLYHEDRON] =\nNarrowphase.prototype.boxConvex = function(si,sj,xi,xj,qi,qj,bi,bj){\n    si.convexPolyhedronRepresentation.material = si.material;\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n    this.convexConvex(si.convexPolyhedronRepresentation,sj,xi,xj,qi,qj,bi,bj,si,sj);\n};\n\nNarrowphase.prototype[Shape.types.BOX | Shape.types.PARTICLE] =\nNarrowphase.prototype.boxParticle = function(si,sj,xi,xj,qi,qj,bi,bj){\n    si.convexPolyhedronRepresentation.material = si.material;\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n    this.convexParticle(si.convexPolyhedronRepresentation,sj,xi,xj,qi,qj,bi,bj,si,sj);\n};\n\n/**\n * @method sphereSphere\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.SPHERE] =\nNarrowphase.prototype.sphereSphere = function(si,sj,xi,xj,qi,qj,bi,bj){\n    // We will have only one contact in this case\n    var r = this.createContactEquation(bi,bj,si,sj);\n\n    // Contact normal\n    xj.vsub(xi, r.ni);\n    r.ni.normalize();\n\n    // Contact point locations\n    r.ri.copy(r.ni);\n    r.rj.copy(r.ni);\n    r.ri.mult(si.radius, r.ri);\n    r.rj.mult(-sj.radius, r.rj);\n\n    r.ri.vadd(xi, r.ri);\n    r.ri.vsub(bi.position, r.ri);\n\n    r.rj.vadd(xj, r.rj);\n    r.rj.vsub(bj.position, r.rj);\n\n    this.result.push(r);\n\n    this.createFrictionEquationsFromContact(r, this.frictionResult);\n};\n\n/**\n * @method planeTrimesh\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nvar planeTrimesh_normal = new Vec3();\nvar planeTrimesh_relpos = new Vec3();\nvar planeTrimesh_projected = new Vec3();\nNarrowphase.prototype[Shape.types.PLANE | Shape.types.TRIMESH] =\nNarrowphase.prototype.planeTrimesh = function(\n    planeShape,\n    trimeshShape,\n    planePos,\n    trimeshPos,\n    planeQuat,\n    trimeshQuat,\n    planeBody,\n    trimeshBody\n){\n    // Make contacts!\n    var v = new Vec3();\n\n    var normal = planeTrimesh_normal;\n    normal.set(0,0,1);\n    planeQuat.vmult(normal,normal); // Turn normal according to plane\n\n    for(var i=0; i<trimeshShape.vertices.length / 3; i++){\n\n        // Get world vertex from trimesh\n        trimeshShape.getVertex(i, v);\n\n        // Safe up\n        var v2 = new Vec3();\n        v2.copy(v);\n        Transform.pointToWorldFrame(trimeshPos, trimeshQuat, v2, v);\n\n        // Check plane side\n        var relpos = planeTrimesh_relpos;\n        v.vsub(planePos, relpos);\n        var dot = normal.dot(relpos);\n\n        if(dot <= 0.0){\n            var r = this.createContactEquation(planeBody,trimeshBody,planeShape,trimeshShape);\n\n            r.ni.copy(normal); // Contact normal is the plane normal\n\n            // Get vertex position projected on plane\n            var projected = planeTrimesh_projected;\n            normal.scale(relpos.dot(normal), projected);\n            v.vsub(projected,projected);\n\n            // ri is the projected world position minus plane position\n            r.ri.copy(projected);\n            r.ri.vsub(planeBody.position, r.ri);\n\n            r.rj.copy(v);\n            r.rj.vsub(trimeshBody.position, r.rj);\n\n            // Store result\n            this.result.push(r);\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\n        }\n    }\n};\n\n/**\n * @method sphereTrimesh\n * @param  {Shape}      sphereShape\n * @param  {Shape}      trimeshShape\n * @param  {Vec3}       spherePos\n * @param  {Vec3}       trimeshPos\n * @param  {Quaternion} sphereQuat\n * @param  {Quaternion} trimeshQuat\n * @param  {Body}       sphereBody\n * @param  {Body}       trimeshBody\n */\nvar sphereTrimesh_normal = new Vec3();\nvar sphereTrimesh_relpos = new Vec3();\nvar sphereTrimesh_projected = new Vec3();\nvar sphereTrimesh_v = new Vec3();\nvar sphereTrimesh_v2 = new Vec3();\nvar sphereTrimesh_edgeVertexA = new Vec3();\nvar sphereTrimesh_edgeVertexB = new Vec3();\nvar sphereTrimesh_edgeVector = new Vec3();\nvar sphereTrimesh_edgeVectorUnit = new Vec3();\nvar sphereTrimesh_localSpherePos = new Vec3();\nvar sphereTrimesh_tmp = new Vec3();\nvar sphereTrimesh_va = new Vec3();\nvar sphereTrimesh_vb = new Vec3();\nvar sphereTrimesh_vc = new Vec3();\nvar sphereTrimesh_localSphereAABB = new AABB();\nvar sphereTrimesh_triangles = [];\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.TRIMESH] =\nNarrowphase.prototype.sphereTrimesh = function (\n    sphereShape,\n    trimeshShape,\n    spherePos,\n    trimeshPos,\n    sphereQuat,\n    trimeshQuat,\n    sphereBody,\n    trimeshBody\n) {\n\n    var edgeVertexA = sphereTrimesh_edgeVertexA;\n    var edgeVertexB = sphereTrimesh_edgeVertexB;\n    var edgeVector = sphereTrimesh_edgeVector;\n    var edgeVectorUnit = sphereTrimesh_edgeVectorUnit;\n    var localSpherePos = sphereTrimesh_localSpherePos;\n    var tmp = sphereTrimesh_tmp;\n    var localSphereAABB = sphereTrimesh_localSphereAABB;\n    var v2 = sphereTrimesh_v2;\n    var relpos = sphereTrimesh_relpos;\n    var triangles = sphereTrimesh_triangles;\n\n    // Convert sphere position to local in the trimesh\n    Transform.pointToLocalFrame(trimeshPos, trimeshQuat, spherePos, localSpherePos);\n\n    // Get the aabb of the sphere locally in the trimesh\n    var sphereRadius = sphereShape.radius;\n    localSphereAABB.lowerBound.set(\n        localSpherePos.x - sphereRadius,\n        localSpherePos.y - sphereRadius,\n        localSpherePos.z - sphereRadius\n    );\n    localSphereAABB.upperBound.set(\n        localSpherePos.x + sphereRadius,\n        localSpherePos.y + sphereRadius,\n        localSpherePos.z + sphereRadius\n    );\n\n    trimeshShape.getTrianglesInAABB(localSphereAABB, triangles);\n    //for (var i = 0; i < trimeshShape.indices.length / 3; i++) triangles.push(i); // All\n\n    // Vertices\n    var v = sphereTrimesh_v;\n    var radiusSquared = sphereShape.radius * sphereShape.radius;\n    for(var i=0; i<triangles.length; i++){\n        for (var j = 0; j < 3; j++) {\n\n            trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + j], v);\n\n            // Check vertex overlap in sphere\n            v.vsub(localSpherePos, relpos);\n\n            if(relpos.norm2() <= radiusSquared){\n\n                // Safe up\n                v2.copy(v);\n                Transform.pointToWorldFrame(trimeshPos, trimeshQuat, v2, v);\n\n                v.vsub(spherePos, relpos);\n\n                var r = this.createContactEquation(sphereBody,trimeshBody,sphereShape,trimeshShape);\n                r.ni.copy(relpos);\n                r.ni.normalize();\n\n                // ri is the vector from sphere center to the sphere surface\n                r.ri.copy(r.ni);\n                r.ri.scale(sphereShape.radius, r.ri);\n                r.ri.vadd(spherePos, r.ri);\n                r.ri.vsub(sphereBody.position, r.ri);\n\n                r.rj.copy(v);\n                r.rj.vsub(trimeshBody.position, r.rj);\n\n                // Store result\n                this.result.push(r);\n                this.createFrictionEquationsFromContact(r, this.frictionResult);\n            }\n        }\n    }\n\n    // Check all edges\n    for(var i=0; i<triangles.length; i++){\n        for (var j = 0; j < 3; j++) {\n\n            trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + j], edgeVertexA);\n            trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + ((j+1)%3)], edgeVertexB);\n            edgeVertexB.vsub(edgeVertexA, edgeVector);\n\n            // Project sphere position to the edge\n            localSpherePos.vsub(edgeVertexB, tmp);\n            var positionAlongEdgeB = tmp.dot(edgeVector);\n\n            localSpherePos.vsub(edgeVertexA, tmp);\n            var positionAlongEdgeA = tmp.dot(edgeVector);\n\n            if(positionAlongEdgeA > 0 && positionAlongEdgeB < 0){\n\n                // Now check the orthogonal distance from edge to sphere center\n                localSpherePos.vsub(edgeVertexA, tmp);\n\n                edgeVectorUnit.copy(edgeVector);\n                edgeVectorUnit.normalize();\n                positionAlongEdgeA = tmp.dot(edgeVectorUnit);\n\n                edgeVectorUnit.scale(positionAlongEdgeA, tmp);\n                tmp.vadd(edgeVertexA, tmp);\n\n                // tmp is now the sphere center position projected to the edge, defined locally in the trimesh frame\n                var dist = tmp.distanceTo(localSpherePos);\n                if(dist < sphereShape.radius){\n                    var r = this.createContactEquation(sphereBody, trimeshBody, sphereShape, trimeshShape);\n\n                    tmp.vsub(localSpherePos, r.ni);\n                    r.ni.normalize();\n                    r.ni.scale(sphereShape.radius, r.ri);\n\n                    Transform.pointToWorldFrame(trimeshPos, trimeshQuat, tmp, tmp);\n                    tmp.vsub(trimeshBody.position, r.rj);\n\n                    Transform.vectorToWorldFrame(trimeshQuat, r.ni, r.ni);\n                    Transform.vectorToWorldFrame(trimeshQuat, r.ri, r.ri);\n\n                    this.result.push(r);\n                    this.createFrictionEquationsFromContact(r, this.frictionResult);\n                }\n            }\n        }\n    }\n\n    // Triangle faces\n    var va = sphereTrimesh_va;\n    var vb = sphereTrimesh_vb;\n    var vc = sphereTrimesh_vc;\n    var normal = sphereTrimesh_normal;\n    for(var i=0, N = triangles.length; i !== N; i++){\n        trimeshShape.getTriangleVertices(triangles[i], va, vb, vc);\n        trimeshShape.getNormal(triangles[i], normal);\n        localSpherePos.vsub(va, tmp);\n        var dist = tmp.dot(normal);\n        normal.scale(dist, tmp);\n        localSpherePos.vsub(tmp, tmp);\n\n        // tmp is now the sphere position projected to the triangle plane\n        dist = tmp.distanceTo(localSpherePos);\n        if(Ray.pointInTriangle(tmp, va, vb, vc) && dist < sphereShape.radius){\n            var r = this.createContactEquation(sphereBody, trimeshBody, sphereShape, trimeshShape);\n\n            tmp.vsub(localSpherePos, r.ni);\n            r.ni.normalize();\n            r.ni.scale(sphereShape.radius, r.ri);\n\n            Transform.pointToWorldFrame(trimeshPos, trimeshQuat, tmp, tmp);\n            tmp.vsub(trimeshBody.position, r.rj);\n\n            Transform.vectorToWorldFrame(trimeshQuat, r.ni, r.ni);\n            Transform.vectorToWorldFrame(trimeshQuat, r.ri, r.ri);\n\n            this.result.push(r);\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\n        }\n    }\n\n    triangles.length = 0;\n};\n\nvar point_on_plane_to_sphere = new Vec3();\nvar plane_to_sphere_ortho = new Vec3();\n\n/**\n * @method spherePlane\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.PLANE] =\nNarrowphase.prototype.spherePlane = function(si,sj,xi,xj,qi,qj,bi,bj){\n    // We will have one contact in this case\n    var r = this.createContactEquation(bi,bj,si,sj);\n\n    // Contact normal\n    r.ni.set(0,0,1);\n    qj.vmult(r.ni, r.ni);\n    r.ni.negate(r.ni); // body i is the sphere, flip normal\n    r.ni.normalize(); // Needed?\n\n    // Vector from sphere center to contact point\n    r.ni.mult(si.radius, r.ri);\n\n    // Project down sphere on plane\n    xi.vsub(xj, point_on_plane_to_sphere);\n    r.ni.mult(r.ni.dot(point_on_plane_to_sphere), plane_to_sphere_ortho);\n    point_on_plane_to_sphere.vsub(plane_to_sphere_ortho,r.rj); // The sphere position projected to plane\n\n    if(-point_on_plane_to_sphere.dot(r.ni) <= si.radius){\n\n        // Make it relative to the body\n        var ri = r.ri;\n        var rj = r.rj;\n        ri.vadd(xi, ri);\n        ri.vsub(bi.position, ri);\n        rj.vadd(xj, rj);\n        rj.vsub(bj.position, rj);\n\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n    }\n};\n\n// See http://bulletphysics.com/Bullet/BulletFull/SphereTriangleDetector_8cpp_source.html\nvar pointInPolygon_edge = new Vec3();\nvar pointInPolygon_edge_x_normal = new Vec3();\nvar pointInPolygon_vtp = new Vec3();\nfunction pointInPolygon(verts, normal, p){\n    var positiveResult = null;\n    var N = verts.length;\n    for(var i=0; i!==N; i++){\n        var v = verts[i];\n\n        // Get edge to the next vertex\n        var edge = pointInPolygon_edge;\n        verts[(i+1) % (N)].vsub(v,edge);\n\n        // Get cross product between polygon normal and the edge\n        var edge_x_normal = pointInPolygon_edge_x_normal;\n        //var edge_x_normal = new Vec3();\n        edge.cross(normal,edge_x_normal);\n\n        // Get vector between point and current vertex\n        var vertex_to_p = pointInPolygon_vtp;\n        p.vsub(v,vertex_to_p);\n\n        // This dot product determines which side of the edge the point is\n        var r = edge_x_normal.dot(vertex_to_p);\n\n        // If all such dot products have same sign, we are inside the polygon.\n        if(positiveResult===null || (r>0 && positiveResult===true) || (r<=0 && positiveResult===false)){\n            if(positiveResult===null){\n                positiveResult = r>0;\n            }\n            continue;\n        } else {\n            return false; // Encountered some other sign. Exit.\n        }\n    }\n\n    // If we got here, all dot products were of the same sign.\n    return true;\n}\n\nvar box_to_sphere = new Vec3();\nvar sphereBox_ns = new Vec3();\nvar sphereBox_ns1 = new Vec3();\nvar sphereBox_ns2 = new Vec3();\nvar sphereBox_sides = [new Vec3(),new Vec3(),new Vec3(),new Vec3(),new Vec3(),new Vec3()];\nvar sphereBox_sphere_to_corner = new Vec3();\nvar sphereBox_side_ns = new Vec3();\nvar sphereBox_side_ns1 = new Vec3();\nvar sphereBox_side_ns2 = new Vec3();\n\n/**\n * @method sphereBox\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.BOX] =\nNarrowphase.prototype.sphereBox = function(si,sj,xi,xj,qi,qj,bi,bj){\n    var v3pool = this.v3pool;\n\n    // we refer to the box as body j\n    var sides = sphereBox_sides;\n    xi.vsub(xj,box_to_sphere);\n    sj.getSideNormals(sides,qj);\n    var R =     si.radius;\n    var penetrating_sides = [];\n\n    // Check side (plane) intersections\n    var found = false;\n\n    // Store the resulting side penetration info\n    var side_ns = sphereBox_side_ns;\n    var side_ns1 = sphereBox_side_ns1;\n    var side_ns2 = sphereBox_side_ns2;\n    var side_h = null;\n    var side_penetrations = 0;\n    var side_dot1 = 0;\n    var side_dot2 = 0;\n    var side_distance = null;\n    for(var idx=0,nsides=sides.length; idx!==nsides && found===false; idx++){\n        // Get the plane side normal (ns)\n        var ns = sphereBox_ns;\n        ns.copy(sides[idx]);\n\n        var h = ns.norm();\n        ns.normalize();\n\n        // The normal/distance dot product tells which side of the plane we are\n        var dot = box_to_sphere.dot(ns);\n\n        if(dot<h+R && dot>0){\n            // Intersects plane. Now check the other two dimensions\n            var ns1 = sphereBox_ns1;\n            var ns2 = sphereBox_ns2;\n            ns1.copy(sides[(idx+1)%3]);\n            ns2.copy(sides[(idx+2)%3]);\n            var h1 = ns1.norm();\n            var h2 = ns2.norm();\n            ns1.normalize();\n            ns2.normalize();\n            var dot1 = box_to_sphere.dot(ns1);\n            var dot2 = box_to_sphere.dot(ns2);\n            if(dot1<h1 && dot1>-h1 && dot2<h2 && dot2>-h2){\n                var dist = Math.abs(dot-h-R);\n                if(side_distance===null || dist < side_distance){\n                    side_distance = dist;\n                    side_dot1 = dot1;\n                    side_dot2 = dot2;\n                    side_h = h;\n                    side_ns.copy(ns);\n                    side_ns1.copy(ns1);\n                    side_ns2.copy(ns2);\n                    side_penetrations++;\n                }\n            }\n        }\n    }\n    if(side_penetrations){\n        found = true;\n        var r = this.createContactEquation(bi,bj,si,sj);\n        side_ns.mult(-R,r.ri); // Sphere r\n        r.ni.copy(side_ns);\n        r.ni.negate(r.ni); // Normal should be out of sphere\n        side_ns.mult(side_h,side_ns);\n        side_ns1.mult(side_dot1,side_ns1);\n        side_ns.vadd(side_ns1,side_ns);\n        side_ns2.mult(side_dot2,side_ns2);\n        side_ns.vadd(side_ns2,r.rj);\n\n        // Make relative to bodies\n        r.ri.vadd(xi, r.ri);\n        r.ri.vsub(bi.position, r.ri);\n        r.rj.vadd(xj, r.rj);\n        r.rj.vsub(bj.position, r.rj);\n\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n    }\n\n    // Check corners\n    var rj = v3pool.get();\n    var sphere_to_corner = sphereBox_sphere_to_corner;\n    for(var j=0; j!==2 && !found; j++){\n        for(var k=0; k!==2 && !found; k++){\n            for(var l=0; l!==2 && !found; l++){\n                rj.set(0,0,0);\n                if(j){\n                    rj.vadd(sides[0],rj);\n                } else {\n                    rj.vsub(sides[0],rj);\n                }\n                if(k){\n                    rj.vadd(sides[1],rj);\n                } else {\n                    rj.vsub(sides[1],rj);\n                }\n                if(l){\n                    rj.vadd(sides[2],rj);\n                } else {\n                    rj.vsub(sides[2],rj);\n                }\n\n                // World position of corner\n                xj.vadd(rj,sphere_to_corner);\n                sphere_to_corner.vsub(xi,sphere_to_corner);\n\n                if(sphere_to_corner.norm2() < R*R){\n                    found = true;\n                    var r = this.createContactEquation(bi,bj,si,sj);\n                    r.ri.copy(sphere_to_corner);\n                    r.ri.normalize();\n                    r.ni.copy(r.ri);\n                    r.ri.mult(R,r.ri);\n                    r.rj.copy(rj);\n\n                    // Make relative to bodies\n                    r.ri.vadd(xi, r.ri);\n                    r.ri.vsub(bi.position, r.ri);\n                    r.rj.vadd(xj, r.rj);\n                    r.rj.vsub(bj.position, r.rj);\n\n                    this.result.push(r);\n                    this.createFrictionEquationsFromContact(r, this.frictionResult);\n                }\n            }\n        }\n    }\n    v3pool.release(rj);\n    rj = null;\n\n    // Check edges\n    var edgeTangent = v3pool.get();\n    var edgeCenter = v3pool.get();\n    var r = v3pool.get(); // r = edge center to sphere center\n    var orthogonal = v3pool.get();\n    var dist = v3pool.get();\n    var Nsides = sides.length;\n    for(var j=0; j!==Nsides && !found; j++){\n        for(var k=0; k!==Nsides && !found; k++){\n            if(j%3 !== k%3){\n                // Get edge tangent\n                sides[k].cross(sides[j],edgeTangent);\n                edgeTangent.normalize();\n                sides[j].vadd(sides[k], edgeCenter);\n                r.copy(xi);\n                r.vsub(edgeCenter,r);\n                r.vsub(xj,r);\n                var orthonorm = r.dot(edgeTangent); // distance from edge center to sphere center in the tangent direction\n                edgeTangent.mult(orthonorm,orthogonal); // Vector from edge center to sphere center in the tangent direction\n\n                // Find the third side orthogonal to this one\n                var l = 0;\n                while(l===j%3 || l===k%3){\n                    l++;\n                }\n\n                // vec from edge center to sphere projected to the plane orthogonal to the edge tangent\n                dist.copy(xi);\n                dist.vsub(orthogonal,dist);\n                dist.vsub(edgeCenter,dist);\n                dist.vsub(xj,dist);\n\n                // Distances in tangent direction and distance in the plane orthogonal to it\n                var tdist = Math.abs(orthonorm);\n                var ndist = dist.norm();\n\n                if(tdist < sides[l].norm() && ndist<R){\n                    found = true;\n                    var res = this.createContactEquation(bi,bj,si,sj);\n                    edgeCenter.vadd(orthogonal,res.rj); // box rj\n                    res.rj.copy(res.rj);\n                    dist.negate(res.ni);\n                    res.ni.normalize();\n\n                    res.ri.copy(res.rj);\n                    res.ri.vadd(xj,res.ri);\n                    res.ri.vsub(xi,res.ri);\n                    res.ri.normalize();\n                    res.ri.mult(R,res.ri);\n\n                    // Make relative to bodies\n                    res.ri.vadd(xi, res.ri);\n                    res.ri.vsub(bi.position, res.ri);\n                    res.rj.vadd(xj, res.rj);\n                    res.rj.vsub(bj.position, res.rj);\n\n                    this.result.push(res);\n                    this.createFrictionEquationsFromContact(res, this.frictionResult);\n                }\n            }\n        }\n    }\n    v3pool.release(edgeTangent,edgeCenter,r,orthogonal,dist);\n};\n\nvar convex_to_sphere = new Vec3();\nvar sphereConvex_edge = new Vec3();\nvar sphereConvex_edgeUnit = new Vec3();\nvar sphereConvex_sphereToCorner = new Vec3();\nvar sphereConvex_worldCorner = new Vec3();\nvar sphereConvex_worldNormal = new Vec3();\nvar sphereConvex_worldPoint = new Vec3();\nvar sphereConvex_worldSpherePointClosestToPlane = new Vec3();\nvar sphereConvex_penetrationVec = new Vec3();\nvar sphereConvex_sphereToWorldPoint = new Vec3();\n\n/**\n * @method sphereConvex\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.CONVEXPOLYHEDRON] =\nNarrowphase.prototype.sphereConvex = function(si,sj,xi,xj,qi,qj,bi,bj){\n    var v3pool = this.v3pool;\n    xi.vsub(xj,convex_to_sphere);\n    var normals = sj.faceNormals;\n    var faces = sj.faces;\n    var verts = sj.vertices;\n    var R =     si.radius;\n    var penetrating_sides = [];\n\n    // if(convex_to_sphere.norm2() > si.boundingSphereRadius + sj.boundingSphereRadius){\n    //     return;\n    // }\n\n    // Check corners\n    for(var i=0; i!==verts.length; i++){\n        var v = verts[i];\n\n        // World position of corner\n        var worldCorner = sphereConvex_worldCorner;\n        qj.vmult(v,worldCorner);\n        xj.vadd(worldCorner,worldCorner);\n        var sphere_to_corner = sphereConvex_sphereToCorner;\n        worldCorner.vsub(xi, sphere_to_corner);\n        if(sphere_to_corner.norm2() < R * R){\n            found = true;\n            var r = this.createContactEquation(bi,bj,si,sj);\n            r.ri.copy(sphere_to_corner);\n            r.ri.normalize();\n            r.ni.copy(r.ri);\n            r.ri.mult(R,r.ri);\n            worldCorner.vsub(xj,r.rj);\n\n            // Should be relative to the body.\n            r.ri.vadd(xi, r.ri);\n            r.ri.vsub(bi.position, r.ri);\n\n            // Should be relative to the body.\n            r.rj.vadd(xj, r.rj);\n            r.rj.vsub(bj.position, r.rj);\n\n            this.result.push(r);\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\n            return;\n        }\n    }\n\n    // Check side (plane) intersections\n    var found = false;\n    for(var i=0, nfaces=faces.length; i!==nfaces && found===false; i++){\n        var normal = normals[i];\n        var face = faces[i];\n\n        // Get world-transformed normal of the face\n        var worldNormal = sphereConvex_worldNormal;\n        qj.vmult(normal,worldNormal);\n\n        // Get a world vertex from the face\n        var worldPoint = sphereConvex_worldPoint;\n        qj.vmult(verts[face[0]],worldPoint);\n        worldPoint.vadd(xj,worldPoint);\n\n        // Get a point on the sphere, closest to the face normal\n        var worldSpherePointClosestToPlane = sphereConvex_worldSpherePointClosestToPlane;\n        worldNormal.mult(-R, worldSpherePointClosestToPlane);\n        xi.vadd(worldSpherePointClosestToPlane, worldSpherePointClosestToPlane);\n\n        // Vector from a face point to the closest point on the sphere\n        var penetrationVec = sphereConvex_penetrationVec;\n        worldSpherePointClosestToPlane.vsub(worldPoint,penetrationVec);\n\n        // The penetration. Negative value means overlap.\n        var penetration = penetrationVec.dot(worldNormal);\n\n        var worldPointToSphere = sphereConvex_sphereToWorldPoint;\n        xi.vsub(worldPoint, worldPointToSphere);\n\n        if(penetration < 0 && worldPointToSphere.dot(worldNormal)>0){\n            // Intersects plane. Now check if the sphere is inside the face polygon\n            var faceVerts = []; // Face vertices, in world coords\n            for(var j=0, Nverts=face.length; j!==Nverts; j++){\n                var worldVertex = v3pool.get();\n                qj.vmult(verts[face[j]], worldVertex);\n                xj.vadd(worldVertex,worldVertex);\n                faceVerts.push(worldVertex);\n            }\n\n            if(pointInPolygon(faceVerts,worldNormal,xi)){ // Is the sphere center in the face polygon?\n                found = true;\n                var r = this.createContactEquation(bi,bj,si,sj);\n\n                worldNormal.mult(-R, r.ri); // Contact offset, from sphere center to contact\n                worldNormal.negate(r.ni); // Normal pointing out of sphere\n\n                var penetrationVec2 = v3pool.get();\n                worldNormal.mult(-penetration, penetrationVec2);\n                var penetrationSpherePoint = v3pool.get();\n                worldNormal.mult(-R, penetrationSpherePoint);\n\n                //xi.vsub(xj).vadd(penetrationSpherePoint).vadd(penetrationVec2 , r.rj);\n                xi.vsub(xj,r.rj);\n                r.rj.vadd(penetrationSpherePoint,r.rj);\n                r.rj.vadd(penetrationVec2 , r.rj);\n\n                // Should be relative to the body.\n                r.rj.vadd(xj, r.rj);\n                r.rj.vsub(bj.position, r.rj);\n\n                // Should be relative to the body.\n                r.ri.vadd(xi, r.ri);\n                r.ri.vsub(bi.position, r.ri);\n\n                v3pool.release(penetrationVec2);\n                v3pool.release(penetrationSpherePoint);\n\n                this.result.push(r);\n                this.createFrictionEquationsFromContact(r, this.frictionResult);\n\n                // Release world vertices\n                for(var j=0, Nfaceverts=faceVerts.length; j!==Nfaceverts; j++){\n                    v3pool.release(faceVerts[j]);\n                }\n\n                return; // We only expect *one* face contact\n            } else {\n                // Edge?\n                for(var j=0; j!==face.length; j++){\n\n                    // Get two world transformed vertices\n                    var v1 = v3pool.get();\n                    var v2 = v3pool.get();\n                    qj.vmult(verts[face[(j+1)%face.length]], v1);\n                    qj.vmult(verts[face[(j+2)%face.length]], v2);\n                    xj.vadd(v1, v1);\n                    xj.vadd(v2, v2);\n\n                    // Construct edge vector\n                    var edge = sphereConvex_edge;\n                    v2.vsub(v1,edge);\n\n                    // Construct the same vector, but normalized\n                    var edgeUnit = sphereConvex_edgeUnit;\n                    edge.unit(edgeUnit);\n\n                    // p is xi projected onto the edge\n                    var p = v3pool.get();\n                    var v1_to_xi = v3pool.get();\n                    xi.vsub(v1, v1_to_xi);\n                    var dot = v1_to_xi.dot(edgeUnit);\n                    edgeUnit.mult(dot, p);\n                    p.vadd(v1, p);\n\n                    // Compute a vector from p to the center of the sphere\n                    var xi_to_p = v3pool.get();\n                    p.vsub(xi, xi_to_p);\n\n                    // Collision if the edge-sphere distance is less than the radius\n                    // AND if p is in between v1 and v2\n                    if(dot > 0 && dot*dot<edge.norm2() && xi_to_p.norm2() < R*R){ // Collision if the edge-sphere distance is less than the radius\n                        // Edge contact!\n                        var r = this.createContactEquation(bi,bj,si,sj);\n                        p.vsub(xj,r.rj);\n\n                        p.vsub(xi,r.ni);\n                        r.ni.normalize();\n\n                        r.ni.mult(R,r.ri);\n\n                        // Should be relative to the body.\n                        r.rj.vadd(xj, r.rj);\n                        r.rj.vsub(bj.position, r.rj);\n\n                        // Should be relative to the body.\n                        r.ri.vadd(xi, r.ri);\n                        r.ri.vsub(bi.position, r.ri);\n\n                        this.result.push(r);\n                        this.createFrictionEquationsFromContact(r, this.frictionResult);\n\n                        // Release world vertices\n                        for(var j=0, Nfaceverts=faceVerts.length; j!==Nfaceverts; j++){\n                            v3pool.release(faceVerts[j]);\n                        }\n\n                        v3pool.release(v1);\n                        v3pool.release(v2);\n                        v3pool.release(p);\n                        v3pool.release(xi_to_p);\n                        v3pool.release(v1_to_xi);\n\n                        return;\n                    }\n\n                    v3pool.release(v1);\n                    v3pool.release(v2);\n                    v3pool.release(p);\n                    v3pool.release(xi_to_p);\n                    v3pool.release(v1_to_xi);\n                }\n            }\n\n            // Release world vertices\n            for(var j=0, Nfaceverts=faceVerts.length; j!==Nfaceverts; j++){\n                v3pool.release(faceVerts[j]);\n            }\n        }\n    }\n};\n\nvar planeBox_normal = new Vec3();\nvar plane_to_corner = new Vec3();\n\n/**\n * @method planeBox\n * @param  {Array}      result\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.PLANE | Shape.types.BOX] =\nNarrowphase.prototype.planeBox = function(si,sj,xi,xj,qi,qj,bi,bj){\n    sj.convexPolyhedronRepresentation.material = sj.material;\n    sj.convexPolyhedronRepresentation.collisionResponse = sj.collisionResponse;\n    this.planeConvex(si,sj.convexPolyhedronRepresentation,xi,xj,qi,qj,bi,bj);\n};\n\nvar planeConvex_v = new Vec3();\nvar planeConvex_normal = new Vec3();\nvar planeConvex_relpos = new Vec3();\nvar planeConvex_projected = new Vec3();\n\n/**\n * @method planeConvex\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.PLANE | Shape.types.CONVEXPOLYHEDRON] =\nNarrowphase.prototype.planeConvex = function(\n    planeShape,\n    convexShape,\n    planePosition,\n    convexPosition,\n    planeQuat,\n    convexQuat,\n    planeBody,\n    convexBody\n){\n    // Simply return the points behind the plane.\n    var worldVertex = planeConvex_v,\n        worldNormal = planeConvex_normal;\n    worldNormal.set(0,0,1);\n    planeQuat.vmult(worldNormal,worldNormal); // Turn normal according to plane orientation\n\n    var numContacts = 0;\n    var relpos = planeConvex_relpos;\n    for(var i = 0; i !== convexShape.vertices.length; i++){\n\n        // Get world convex vertex\n        worldVertex.copy(convexShape.vertices[i]);\n        convexQuat.vmult(worldVertex, worldVertex);\n        convexPosition.vadd(worldVertex, worldVertex);\n        worldVertex.vsub(planePosition, relpos);\n\n        var dot = worldNormal.dot(relpos);\n        if(dot <= 0.0){\n\n            var r = this.createContactEquation(planeBody, convexBody, planeShape, convexShape);\n\n            // Get vertex position projected on plane\n            var projected = planeConvex_projected;\n            worldNormal.mult(worldNormal.dot(relpos),projected);\n            worldVertex.vsub(projected, projected);\n            projected.vsub(planePosition, r.ri); // From plane to vertex projected on plane\n\n            r.ni.copy(worldNormal); // Contact normal is the plane normal out from plane\n\n            // rj is now just the vector from the convex center to the vertex\n            worldVertex.vsub(convexPosition, r.rj);\n\n            // Make it relative to the body\n            r.ri.vadd(planePosition, r.ri);\n            r.ri.vsub(planeBody.position, r.ri);\n            r.rj.vadd(convexPosition, r.rj);\n            r.rj.vsub(convexBody.position, r.rj);\n\n            this.result.push(r);\n            numContacts++;\n            if(!this.enableFrictionReduction){\n                this.createFrictionEquationsFromContact(r, this.frictionResult);\n            }\n        }\n    }\n\n    if(this.enableFrictionReduction && numContacts){\n        this.createFrictionFromAverage(numContacts);\n    }\n};\n\nvar convexConvex_sepAxis = new Vec3();\nvar convexConvex_q = new Vec3();\n\n/**\n * @method convexConvex\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.CONVEXPOLYHEDRON] =\nNarrowphase.prototype.convexConvex = function(si,sj,xi,xj,qi,qj,bi,bj,rsi,rsj,faceListA,faceListB){\n    var sepAxis = convexConvex_sepAxis;\n\n    if(xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius){\n        return;\n    }\n\n    if(si.findSeparatingAxis(sj,xi,qi,xj,qj,sepAxis,faceListA,faceListB)){\n        var res = [];\n        var q = convexConvex_q;\n        si.clipAgainstHull(xi,qi,sj,xj,qj,sepAxis,-100,100,res);\n        var numContacts = 0;\n        for(var j = 0; j !== res.length; j++){\n            var r = this.createContactEquation(bi,bj,si,sj,rsi,rsj),\n                ri = r.ri,\n                rj = r.rj;\n            sepAxis.negate(r.ni);\n            res[j].normal.negate(q);\n            q.mult(res[j].depth, q);\n            res[j].point.vadd(q, ri);\n            rj.copy(res[j].point);\n\n            // Contact points are in world coordinates. Transform back to relative\n            ri.vsub(xi,ri);\n            rj.vsub(xj,rj);\n\n            // Make relative to bodies\n            ri.vadd(xi, ri);\n            ri.vsub(bi.position, ri);\n            rj.vadd(xj, rj);\n            rj.vsub(bj.position, rj);\n\n            this.result.push(r);\n            numContacts++;\n            if(!this.enableFrictionReduction){\n                this.createFrictionEquationsFromContact(r, this.frictionResult);\n            }\n        }\n        if(this.enableFrictionReduction && numContacts){\n            this.createFrictionFromAverage(numContacts);\n        }\n    }\n};\n\n\n/**\n * @method convexTrimesh\n * @param  {Array}      result\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\n// Narrowphase.prototype[Shape.types.CONVEXPOLYHEDRON | Shape.types.TRIMESH] =\n// Narrowphase.prototype.convexTrimesh = function(si,sj,xi,xj,qi,qj,bi,bj,rsi,rsj,faceListA,faceListB){\n//     var sepAxis = convexConvex_sepAxis;\n\n//     if(xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius){\n//         return;\n//     }\n\n//     // Construct a temp hull for each triangle\n//     var hullB = new ConvexPolyhedron();\n\n//     hullB.faces = [[0,1,2]];\n//     var va = new Vec3();\n//     var vb = new Vec3();\n//     var vc = new Vec3();\n//     hullB.vertices = [\n//         va,\n//         vb,\n//         vc\n//     ];\n\n//     for (var i = 0; i < sj.indices.length / 3; i++) {\n\n//         var triangleNormal = new Vec3();\n//         sj.getNormal(i, triangleNormal);\n//         hullB.faceNormals = [triangleNormal];\n\n//         sj.getTriangleVertices(i, va, vb, vc);\n\n//         var d = si.testSepAxis(triangleNormal, hullB, xi, qi, xj, qj);\n//         if(!d){\n//             triangleNormal.scale(-1, triangleNormal);\n//             d = si.testSepAxis(triangleNormal, hullB, xi, qi, xj, qj);\n\n//             if(!d){\n//                 continue;\n//             }\n//         }\n\n//         var res = [];\n//         var q = convexConvex_q;\n//         si.clipAgainstHull(xi,qi,hullB,xj,qj,triangleNormal,-100,100,res);\n//         for(var j = 0; j !== res.length; j++){\n//             var r = this.createContactEquation(bi,bj,si,sj,rsi,rsj),\n//                 ri = r.ri,\n//                 rj = r.rj;\n//             r.ni.copy(triangleNormal);\n//             r.ni.negate(r.ni);\n//             res[j].normal.negate(q);\n//             q.mult(res[j].depth, q);\n//             res[j].point.vadd(q, ri);\n//             rj.copy(res[j].point);\n\n//             // Contact points are in world coordinates. Transform back to relative\n//             ri.vsub(xi,ri);\n//             rj.vsub(xj,rj);\n\n//             // Make relative to bodies\n//             ri.vadd(xi, ri);\n//             ri.vsub(bi.position, ri);\n//             rj.vadd(xj, rj);\n//             rj.vsub(bj.position, rj);\n\n//             result.push(r);\n//         }\n//     }\n// };\n\nvar particlePlane_normal = new Vec3();\nvar particlePlane_relpos = new Vec3();\nvar particlePlane_projected = new Vec3();\n\n/**\n * @method particlePlane\n * @param  {Array}      result\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.PLANE | Shape.types.PARTICLE] =\nNarrowphase.prototype.planeParticle = function(sj,si,xj,xi,qj,qi,bj,bi){\n    var normal = particlePlane_normal;\n    normal.set(0,0,1);\n    bj.quaternion.vmult(normal,normal); // Turn normal according to plane orientation\n    var relpos = particlePlane_relpos;\n    xi.vsub(bj.position,relpos);\n    var dot = normal.dot(relpos);\n    if(dot <= 0.0){\n        var r = this.createContactEquation(bi,bj,si,sj);\n        r.ni.copy(normal); // Contact normal is the plane normal\n        r.ni.negate(r.ni);\n        r.ri.set(0,0,0); // Center of particle\n\n        // Get particle position projected on plane\n        var projected = particlePlane_projected;\n        normal.mult(normal.dot(xi),projected);\n        xi.vsub(projected,projected);\n        //projected.vadd(bj.position,projected);\n\n        // rj is now the projected world position minus plane position\n        r.rj.copy(projected);\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n    }\n};\n\nvar particleSphere_normal = new Vec3();\n\n/**\n * @method particleSphere\n * @param  {Array}      result\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.PARTICLE | Shape.types.SPHERE] =\nNarrowphase.prototype.sphereParticle = function(sj,si,xj,xi,qj,qi,bj,bi){\n    // The normal is the unit vector from sphere center to particle center\n    var normal = particleSphere_normal;\n    normal.set(0,0,1);\n    xi.vsub(xj,normal);\n    var lengthSquared = normal.norm2();\n\n    if(lengthSquared <= sj.radius * sj.radius){\n        var r = this.createContactEquation(bi,bj,si,sj);\n        normal.normalize();\n        r.rj.copy(normal);\n        r.rj.mult(sj.radius,r.rj);\n        r.ni.copy(normal); // Contact normal\n        r.ni.negate(r.ni);\n        r.ri.set(0,0,0); // Center of particle\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n    }\n};\n\n// WIP\nvar cqj = new Quaternion();\nvar convexParticle_local = new Vec3();\nvar convexParticle_normal = new Vec3();\nvar convexParticle_penetratedFaceNormal = new Vec3();\nvar convexParticle_vertexToParticle = new Vec3();\nvar convexParticle_worldPenetrationVec = new Vec3();\n\n/**\n * @method convexParticle\n * @param  {Array}      result\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.PARTICLE | Shape.types.CONVEXPOLYHEDRON] =\nNarrowphase.prototype.convexParticle = function(sj,si,xj,xi,qj,qi,bj,bi){\n    var penetratedFaceIndex = -1;\n    var penetratedFaceNormal = convexParticle_penetratedFaceNormal;\n    var worldPenetrationVec = convexParticle_worldPenetrationVec;\n    var minPenetration = null;\n    var numDetectedFaces = 0;\n\n    // Convert particle position xi to local coords in the convex\n    var local = convexParticle_local;\n    local.copy(xi);\n    local.vsub(xj,local); // Convert position to relative the convex origin\n    qj.conjugate(cqj);\n    cqj.vmult(local,local);\n\n    if(sj.pointIsInside(local)){\n\n        if(sj.worldVerticesNeedsUpdate){\n            sj.computeWorldVertices(xj,qj);\n        }\n        if(sj.worldFaceNormalsNeedsUpdate){\n            sj.computeWorldFaceNormals(qj);\n        }\n\n        // For each world polygon in the polyhedra\n        for(var i=0,nfaces=sj.faces.length; i!==nfaces; i++){\n\n            // Construct world face vertices\n            var verts = [ sj.worldVertices[ sj.faces[i][0] ] ];\n            var normal = sj.worldFaceNormals[i];\n\n            // Check how much the particle penetrates the polygon plane.\n            xi.vsub(verts[0],convexParticle_vertexToParticle);\n            var penetration = -normal.dot(convexParticle_vertexToParticle);\n            if(minPenetration===null || Math.abs(penetration)<Math.abs(minPenetration)){\n                minPenetration = penetration;\n                penetratedFaceIndex = i;\n                penetratedFaceNormal.copy(normal);\n                numDetectedFaces++;\n            }\n        }\n\n        if(penetratedFaceIndex!==-1){\n            // Setup contact\n            var r = this.createContactEquation(bi,bj,si,sj);\n            penetratedFaceNormal.mult(minPenetration, worldPenetrationVec);\n\n            // rj is the particle position projected to the face\n            worldPenetrationVec.vadd(xi,worldPenetrationVec);\n            worldPenetrationVec.vsub(xj,worldPenetrationVec);\n            r.rj.copy(worldPenetrationVec);\n            //var projectedToFace = xi.vsub(xj).vadd(worldPenetrationVec);\n            //projectedToFace.copy(r.rj);\n\n            //qj.vmult(r.rj,r.rj);\n            penetratedFaceNormal.negate( r.ni ); // Contact normal\n            r.ri.set(0,0,0); // Center of particle\n\n            var ri = r.ri,\n                rj = r.rj;\n\n            // Make relative to bodies\n            ri.vadd(xi, ri);\n            ri.vsub(bi.position, ri);\n            rj.vadd(xj, rj);\n            rj.vsub(bj.position, rj);\n\n            this.result.push(r);\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\n        } else {\n            console.warn(\"Point found inside convex, but did not find penetrating face!\");\n        }\n    }\n};\n\nNarrowphase.prototype[Shape.types.BOX | Shape.types.HEIGHTFIELD] =\nNarrowphase.prototype.boxHeightfield = function (si,sj,xi,xj,qi,qj,bi,bj){\n    si.convexPolyhedronRepresentation.material = si.material;\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n    this.convexHeightfield(si.convexPolyhedronRepresentation,sj,xi,xj,qi,qj,bi,bj);\n};\n\nvar convexHeightfield_tmp1 = new Vec3();\nvar convexHeightfield_tmp2 = new Vec3();\nvar convexHeightfield_faceList = [0];\n\n/**\n * @method convexHeightfield\n */\nNarrowphase.prototype[Shape.types.CONVEXPOLYHEDRON | Shape.types.HEIGHTFIELD] =\nNarrowphase.prototype.convexHeightfield = function (\n    convexShape,\n    hfShape,\n    convexPos,\n    hfPos,\n    convexQuat,\n    hfQuat,\n    convexBody,\n    hfBody\n){\n    var data = hfShape.data,\n        w = hfShape.elementSize,\n        radius = convexShape.boundingSphereRadius,\n        worldPillarOffset = convexHeightfield_tmp2,\n        faceList = convexHeightfield_faceList;\n\n    // Get sphere position to heightfield local!\n    var localConvexPos = convexHeightfield_tmp1;\n    Transform.pointToLocalFrame(hfPos, hfQuat, convexPos, localConvexPos);\n\n    // Get the index of the data points to test against\n    var iMinX = Math.floor((localConvexPos.x - radius) / w) - 1,\n        iMaxX = Math.ceil((localConvexPos.x + radius) / w) + 1,\n        iMinY = Math.floor((localConvexPos.y - radius) / w) - 1,\n        iMaxY = Math.ceil((localConvexPos.y + radius) / w) + 1;\n\n    // Bail out if we are out of the terrain\n    if(iMaxX < 0 || iMaxY < 0 || iMinX > data.length || iMinY > data[0].length){\n        return;\n    }\n\n    // Clamp index to edges\n    if(iMinX < 0){ iMinX = 0; }\n    if(iMaxX < 0){ iMaxX = 0; }\n    if(iMinY < 0){ iMinY = 0; }\n    if(iMaxY < 0){ iMaxY = 0; }\n    if(iMinX >= data.length){ iMinX = data.length - 1; }\n    if(iMaxX >= data.length){ iMaxX = data.length - 1; }\n    if(iMaxY >= data[0].length){ iMaxY = data[0].length - 1; }\n    if(iMinY >= data[0].length){ iMinY = data[0].length - 1; }\n\n    var minMax = [];\n    hfShape.getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, minMax);\n    var min = minMax[0];\n    var max = minMax[1];\n\n    // Bail out if we're cant touch the bounding height box\n    if(localConvexPos.z - radius > max || localConvexPos.z + radius < min){\n        return;\n    }\n\n    for(var i = iMinX; i < iMaxX; i++){\n        for(var j = iMinY; j < iMaxY; j++){\n\n            // Lower triangle\n            hfShape.getConvexTrianglePillar(i, j, false);\n            Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n            if (convexPos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + convexShape.boundingSphereRadius) {\n                this.convexConvex(convexShape, hfShape.pillarConvex, convexPos, worldPillarOffset, convexQuat, hfQuat, convexBody, hfBody, null, null, faceList, null);\n            }\n\n            // Upper triangle\n            hfShape.getConvexTrianglePillar(i, j, true);\n            Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n            if (convexPos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + convexShape.boundingSphereRadius) {\n                this.convexConvex(convexShape, hfShape.pillarConvex, convexPos, worldPillarOffset, convexQuat, hfQuat, convexBody, hfBody, null, null, faceList, null);\n            }\n        }\n    }\n};\n\nvar sphereHeightfield_tmp1 = new Vec3();\nvar sphereHeightfield_tmp2 = new Vec3();\n\n/**\n * @method sphereHeightfield\n */\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.HEIGHTFIELD] =\nNarrowphase.prototype.sphereHeightfield = function (\n    sphereShape,\n    hfShape,\n    spherePos,\n    hfPos,\n    sphereQuat,\n    hfQuat,\n    sphereBody,\n    hfBody\n){\n    var data = hfShape.data,\n        radius = sphereShape.radius,\n        w = hfShape.elementSize,\n        worldPillarOffset = sphereHeightfield_tmp2;\n\n    // Get sphere position to heightfield local!\n    var localSpherePos = sphereHeightfield_tmp1;\n    Transform.pointToLocalFrame(hfPos, hfQuat, spherePos, localSpherePos);\n\n    // Get the index of the data points to test against\n    var iMinX = Math.floor((localSpherePos.x - radius) / w) - 1,\n        iMaxX = Math.ceil((localSpherePos.x + radius) / w) + 1,\n        iMinY = Math.floor((localSpherePos.y - radius) / w) - 1,\n        iMaxY = Math.ceil((localSpherePos.y + radius) / w) + 1;\n\n    // Bail out if we are out of the terrain\n    if(iMaxX < 0 || iMaxY < 0 || iMinX > data.length || iMaxY > data[0].length){\n        return;\n    }\n\n    // Clamp index to edges\n    if(iMinX < 0){ iMinX = 0; }\n    if(iMaxX < 0){ iMaxX = 0; }\n    if(iMinY < 0){ iMinY = 0; }\n    if(iMaxY < 0){ iMaxY = 0; }\n    if(iMinX >= data.length){ iMinX = data.length - 1; }\n    if(iMaxX >= data.length){ iMaxX = data.length - 1; }\n    if(iMaxY >= data[0].length){ iMaxY = data[0].length - 1; }\n    if(iMinY >= data[0].length){ iMinY = data[0].length - 1; }\n\n    var minMax = [];\n    hfShape.getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, minMax);\n    var min = minMax[0];\n    var max = minMax[1];\n\n    // Bail out if we're cant touch the bounding height box\n    if(localSpherePos.z - radius > max || localSpherePos.z + radius < min){\n        return;\n    }\n\n    var result = this.result;\n    for(var i = iMinX; i < iMaxX; i++){\n        for(var j = iMinY; j < iMaxY; j++){\n\n            var numContactsBefore = result.length;\n\n            // Lower triangle\n            hfShape.getConvexTrianglePillar(i, j, false);\n            Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n            if (spherePos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + sphereShape.boundingSphereRadius) {\n                this.sphereConvex(sphereShape, hfShape.pillarConvex, spherePos, worldPillarOffset, sphereQuat, hfQuat, sphereBody, hfBody);\n            }\n\n            // Upper triangle\n            hfShape.getConvexTrianglePillar(i, j, true);\n            Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n            if (spherePos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + sphereShape.boundingSphereRadius) {\n                this.sphereConvex(sphereShape, hfShape.pillarConvex, spherePos, worldPillarOffset, sphereQuat, hfQuat, sphereBody, hfBody);\n            }\n\n            var numContacts = result.length - numContactsBefore;\n\n            if(numContacts > 2){\n                return;\n            }\n            /*\n            // Skip all but 1\n            for (var k = 0; k < numContacts - 1; k++) {\n                result.pop();\n            }\n            */\n        }\n    }\n};\n\n},{\"../collision/AABB\":3,\"../collision/Ray\":9,\"../equations/ContactEquation\":19,\"../equations/FrictionEquation\":21,\"../math/Quaternion\":28,\"../math/Transform\":29,\"../math/Vec3\":30,\"../shapes/ConvexPolyhedron\":38,\"../shapes/Shape\":43,\"../solver/Solver\":47,\"../utils/Vec3Pool\":54}],56:[function(_dereq_,module,exports){\n/* global performance */\n\nmodule.exports = World;\n\nvar Shape = _dereq_('../shapes/Shape');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar GSSolver = _dereq_('../solver/GSSolver');\nvar Vec3Pool = _dereq_('../utils/Vec3Pool');\nvar ContactEquation = _dereq_('../equations/ContactEquation');\nvar FrictionEquation = _dereq_('../equations/FrictionEquation');\nvar Narrowphase = _dereq_('./Narrowphase');\nvar EventTarget = _dereq_('../utils/EventTarget');\nvar ArrayCollisionMatrix = _dereq_('../collision/ArrayCollisionMatrix');\nvar Material = _dereq_('../material/Material');\nvar ContactMaterial = _dereq_('../material/ContactMaterial');\nvar Body = _dereq_('../objects/Body');\nvar TupleDictionary = _dereq_('../utils/TupleDictionary');\nvar RaycastResult = _dereq_('../collision/RaycastResult');\nvar AABB = _dereq_('../collision/AABB');\nvar Ray = _dereq_('../collision/Ray');\nvar NaiveBroadphase = _dereq_('../collision/NaiveBroadphase');\n\n/**\n * The physics world\n * @class World\n * @constructor\n * @extends EventTarget\n */\nfunction World(){\n    EventTarget.apply(this);\n\n    /**\n     * Currently / last used timestep. Is set to -1 if not available. This value is updated before each internal step, which means that it is \"fresh\" inside event callbacks.\n     * @property {Number} dt\n     */\n    this.dt = -1;\n\n    /**\n     * Makes bodies go to sleep when they've been inactive\n     * @property allowSleep\n     * @type {Boolean}\n     */\n    this.allowSleep = false;\n\n    /**\n     * All the current contacts (instances of ContactEquation) in the world.\n     * @property contacts\n     * @type {Array}\n     */\n    this.contacts = [];\n    this.frictionEquations = [];\n\n    /**\n     * How often to normalize quaternions. Set to 0 for every step, 1 for every second etc.. A larger value increases performance. If bodies tend to explode, set to a smaller value (zero to be sure nothing can go wrong).\n     * @property quatNormalizeSkip\n     * @type {Number}\n     */\n    this.quatNormalizeSkip = 0;\n\n    /**\n     * Set to true to use fast quaternion normalization. It is often enough accurate to use. If bodies tend to explode, set to false.\n     * @property quatNormalizeFast\n     * @type {Boolean}\n     * @see Quaternion.normalizeFast\n     * @see Quaternion.normalize\n     */\n    this.quatNormalizeFast = false;\n\n    /**\n     * The wall-clock time since simulation start\n     * @property time\n     * @type {Number}\n     */\n    this.time = 0.0;\n\n    /**\n     * Number of timesteps taken since start\n     * @property stepnumber\n     * @type {Number}\n     */\n    this.stepnumber = 0;\n\n    /// Default and last timestep sizes\n    this.default_dt = 1/60;\n\n    this.nextId = 0;\n    /**\n     * @property gravity\n     * @type {Vec3}\n     */\n    this.gravity = new Vec3();\n\n    /**\n     * @property broadphase\n     * @type {Broadphase}\n     */\n    this.broadphase = new NaiveBroadphase();\n\n    /**\n     * @property bodies\n     * @type {Array}\n     */\n    this.bodies = [];\n\n    /**\n     * @property solver\n     * @type {Solver}\n     */\n    this.solver = new GSSolver();\n\n    /**\n     * @property constraints\n     * @type {Array}\n     */\n    this.constraints = [];\n\n    /**\n     * @property narrowphase\n     * @type {Narrowphase}\n     */\n    this.narrowphase = new Narrowphase(this);\n\n    /**\n     * @property {ArrayCollisionMatrix} collisionMatrix\n\t * @type {ArrayCollisionMatrix}\n\t */\n\tthis.collisionMatrix = new ArrayCollisionMatrix();\n\n    /**\n     * CollisionMatrix from the previous step.\n     * @property {ArrayCollisionMatrix} collisionMatrixPrevious\n\t * @type {ArrayCollisionMatrix}\n\t */\n\tthis.collisionMatrixPrevious = new ArrayCollisionMatrix();\n\n    /**\n     * All added materials\n     * @property materials\n     * @type {Array}\n     */\n    this.materials = [];\n\n    /**\n     * @property contactmaterials\n     * @type {Array}\n     */\n    this.contactmaterials = [];\n\n    /**\n     * Used to look up a ContactMaterial given two instances of Material.\n     * @property {TupleDictionary} contactMaterialTable\n     */\n    this.contactMaterialTable = new TupleDictionary();\n\n    this.defaultMaterial = new Material(\"default\");\n\n    /**\n     * This contact material is used if no suitable contactmaterial is found for a contact.\n     * @property defaultContactMaterial\n     * @type {ContactMaterial}\n     */\n    this.defaultContactMaterial = new ContactMaterial(this.defaultMaterial, this.defaultMaterial, { friction: 0.3, restitution: 0.0 });\n\n    /**\n     * @property doProfiling\n     * @type {Boolean}\n     */\n    this.doProfiling = false;\n\n    /**\n     * @property profile\n     * @type {Object}\n     */\n    this.profile = {\n        solve:0,\n        makeContactConstraints:0,\n        broadphase:0,\n        integrate:0,\n        narrowphase:0,\n    };\n\n    /**\n     * @property subsystems\n     * @type {Array}\n     */\n    this.subsystems = [];\n\n    this.addBodyEvent = {\n        type:\"addBody\",\n        body : null,\n    };\n\n    this.removeBodyEvent = {\n        type:\"removeBody\",\n        body : null,\n    };\n}\nWorld.prototype = new EventTarget();\n\n// Temp stuff\nvar tmpAABB1 = new AABB();\nvar tmpArray1 = [];\nvar tmpRay = new Ray();\n\n/**\n * Get the contact material between materials m1 and m2\n * @method getContactMaterial\n * @param {Material} m1\n * @param {Material} m2\n * @return {ContactMaterial} The contact material if it was found.\n */\nWorld.prototype.getContactMaterial = function(m1,m2){\n    return this.contactMaterialTable.get(m1.id,m2.id); //this.contactmaterials[this.mats2cmat[i+j*this.materials.length]];\n};\n\n/**\n * Get number of objects in the world.\n * @method numObjects\n * @return {Number}\n * @deprecated\n */\nWorld.prototype.numObjects = function(){\n    return this.bodies.length;\n};\n\n/**\n * Store old collision state info\n * @method collisionMatrixTick\n */\nWorld.prototype.collisionMatrixTick = function(){\n\tvar temp = this.collisionMatrixPrevious;\n\tthis.collisionMatrixPrevious = this.collisionMatrix;\n\tthis.collisionMatrix = temp;\n\tthis.collisionMatrix.reset();\n};\n\n/**\n * Add a rigid body to the simulation.\n * @method add\n * @param {Body} body\n * @todo If the simulation has not yet started, why recrete and copy arrays for each body? Accumulate in dynamic arrays in this case.\n * @todo Adding an array of bodies should be possible. This would save some loops too\n * @deprecated Use .addBody instead\n */\nWorld.prototype.add = World.prototype.addBody = function(body){\n    if(this.bodies.indexOf(body) !== -1){\n        return;\n    }\n    body.index = this.bodies.length;\n    this.bodies.push(body);\n    body.world = this;\n    body.initPosition.copy(body.position);\n    body.initVelocity.copy(body.velocity);\n    body.timeLastSleepy = this.time;\n    if(body instanceof Body){\n        body.initAngularVelocity.copy(body.angularVelocity);\n        body.initQuaternion.copy(body.quaternion);\n    }\n\tthis.collisionMatrix.setNumObjects(this.bodies.length);\n    this.addBodyEvent.body = body;\n    this.dispatchEvent(this.addBodyEvent);\n};\n\n/**\n * Add a constraint to the simulation.\n * @method addConstraint\n * @param {Constraint} c\n */\nWorld.prototype.addConstraint = function(c){\n    this.constraints.push(c);\n};\n\n/**\n * Removes a constraint\n * @method removeConstraint\n * @param {Constraint} c\n */\nWorld.prototype.removeConstraint = function(c){\n    var idx = this.constraints.indexOf(c);\n    if(idx!==-1){\n        this.constraints.splice(idx,1);\n    }\n};\n\n/**\n * Raycast test\n * @method rayTest\n * @param {Vec3} from\n * @param {Vec3} to\n * @param {Function|RaycastResult} result\n * @deprecated Use .raycastAll, .raycastClosest or .raycastAny instead.\n */\nWorld.prototype.rayTest = function(from, to, result){\n    if(result instanceof RaycastResult){\n        // Do raycastclosest\n        this.raycastClosest(from, to, {\n            skipBackfaces: true\n        }, result);\n    } else {\n        // Do raycastAll\n        this.raycastAll(from, to, {\n            skipBackfaces: true\n        }, result);\n    }\n};\n\n/**\n * Ray cast against all bodies. The provided callback will be executed for each hit with a RaycastResult as single argument.\n * @method raycastAll\n * @param  {Vec3} from\n * @param  {Vec3} to\n * @param  {Object} options\n * @param  {number} [options.collisionFilterMask=-1]\n * @param  {number} [options.collisionFilterGroup=-1]\n * @param  {boolean} [options.skipBackfaces=false]\n * @param  {boolean} [options.checkCollisionResponse=true]\n * @param  {Function} callback\n * @return {boolean} True if any body was hit.\n */\nWorld.prototype.raycastAll = function(from, to, options, callback){\n    options.mode = Ray.ALL;\n    options.from = from;\n    options.to = to;\n    options.callback = callback;\n    return tmpRay.intersectWorld(this, options);\n};\n\n/**\n * Ray cast, and stop at the first result. Note that the order is random - but the method is fast.\n * @method raycastAny\n * @param  {Vec3} from\n * @param  {Vec3} to\n * @param  {Object} options\n * @param  {number} [options.collisionFilterMask=-1]\n * @param  {number} [options.collisionFilterGroup=-1]\n * @param  {boolean} [options.skipBackfaces=false]\n * @param  {boolean} [options.checkCollisionResponse=true]\n * @param  {RaycastResult} result\n * @return {boolean} True if any body was hit.\n */\nWorld.prototype.raycastAny = function(from, to, options, result){\n    options.mode = Ray.ANY;\n    options.from = from;\n    options.to = to;\n    options.result = result;\n    return tmpRay.intersectWorld(this, options);\n};\n\n/**\n * Ray cast, and return information of the closest hit.\n * @method raycastClosest\n * @param  {Vec3} from\n * @param  {Vec3} to\n * @param  {Object} options\n * @param  {number} [options.collisionFilterMask=-1]\n * @param  {number} [options.collisionFilterGroup=-1]\n * @param  {boolean} [options.skipBackfaces=false]\n * @param  {boolean} [options.checkCollisionResponse=true]\n * @param  {RaycastResult} result\n * @return {boolean} True if any body was hit.\n */\nWorld.prototype.raycastClosest = function(from, to, options, result){\n    options.mode = Ray.CLOSEST;\n    options.from = from;\n    options.to = to;\n    options.result = result;\n    return tmpRay.intersectWorld(this, options);\n};\n\n/**\n * Remove a rigid body from the simulation.\n * @method remove\n * @param {Body} body\n * @deprecated Use .removeBody instead\n */\nWorld.prototype.remove = function(body){\n    body.world = null;\n    var n = this.bodies.length-1,\n        bodies = this.bodies,\n        idx = bodies.indexOf(body);\n    if(idx !== -1){\n        bodies.splice(idx, 1); // Todo: should use a garbage free method\n\n        // Recompute index\n        for(var i=0; i!==bodies.length; i++){\n            bodies[i].index = i;\n        }\n\n        this.collisionMatrix.setNumObjects(n);\n        this.removeBodyEvent.body = body;\n        this.dispatchEvent(this.removeBodyEvent);\n    }\n};\n\n/**\n * Remove a rigid body from the simulation.\n * @method removeBody\n * @param {Body} body\n */\nWorld.prototype.removeBody = World.prototype.remove;\n\n/**\n * Adds a material to the World.\n * @method addMaterial\n * @param {Material} m\n * @todo Necessary?\n */\nWorld.prototype.addMaterial = function(m){\n    this.materials.push(m);\n};\n\n/**\n * Adds a contact material to the World\n * @method addContactMaterial\n * @param {ContactMaterial} cmat\n */\nWorld.prototype.addContactMaterial = function(cmat) {\n\n    // Add contact material\n    this.contactmaterials.push(cmat);\n\n    // Add current contact material to the material table\n    this.contactMaterialTable.set(cmat.materials[0].id,cmat.materials[1].id,cmat);\n};\n\n// performance.now()\nif(typeof performance === 'undefined'){\n    performance = {};\n}\nif(!performance.now){\n    var nowOffset = Date.now();\n    if (performance.timing && performance.timing.navigationStart){\n        nowOffset = performance.timing.navigationStart;\n    }\n    performance.now = function(){\n        return Date.now() - nowOffset;\n    };\n}\n\nvar step_tmp1 = new Vec3();\n\n/**\n * Step the physics world forward in time.\n *\n * There are two modes. The simple mode is fixed timestepping without interpolation. In this case you only use the first argument. The second case uses interpolation. In that you also provide the time since the function was last used, as well as the maximum fixed timesteps to take.\n *\n * @method step\n * @param {Number} dt                       The fixed time step size to use.\n * @param {Number} [timeSinceLastCalled]    The time elapsed since the function was last called.\n * @param {Number} [maxSubSteps=10]         Maximum number of fixed steps to take per function call.\n *\n * @example\n *     // fixed timestepping without interpolation\n *     world.step(1/60);\n *\n * @see http://bulletphysics.org/mediawiki-1.5.8/index.php/Stepping_The_World\n */\nWorld.prototype.step = function(dt, timeSinceLastCalled, maxSubSteps){\n    maxSubSteps = maxSubSteps || 10;\n    timeSinceLastCalled = timeSinceLastCalled || 0;\n\n    if(timeSinceLastCalled === 0){ // Fixed, simple stepping\n\n        this.internalStep(dt);\n\n        // Increment time\n        this.time += dt;\n\n    } else {\n\n        // Compute the number of fixed steps we should have taken since the last step\n        var internalSteps = Math.floor((this.time + timeSinceLastCalled) / dt) - Math.floor(this.time / dt);\n        internalSteps = Math.min(internalSteps,maxSubSteps);\n\n        // Do some fixed steps to catch up\n        var t0 = performance.now();\n        for(var i=0; i!==internalSteps; i++){\n            this.internalStep(dt);\n            if(performance.now() - t0 > dt * 1000){\n                // We are slower than real-time. Better bail out.\n                break;\n            }\n        }\n\n        // Increment internal clock\n        this.time += timeSinceLastCalled;\n\n        // Compute \"Left over\" time step\n        var h = this.time % dt;\n        var h_div_dt = h / dt;\n        var interpvelo = step_tmp1;\n        var bodies = this.bodies;\n\n        for(var j=0; j !== bodies.length; j++){\n            var b = bodies[j];\n            if(b.type !== Body.STATIC && b.sleepState !== Body.SLEEPING){\n\n                // Interpolate\n                b.position.vsub(b.previousPosition, interpvelo);\n                interpvelo.scale(h_div_dt, interpvelo);\n                b.position.vadd(interpvelo, b.interpolatedPosition);\n\n                // TODO: interpolate quaternion\n                // b.interpolatedAngle = b.angle + (b.angle - b.previousAngle) * h_div_dt;\n\n            } else {\n\n                // For static bodies, just copy. Who else will do it?\n                b.interpolatedPosition.copy(b.position);\n                b.interpolatedQuaternion.copy(b.quaternion);\n            }\n        }\n    }\n};\n\n/**\n * Step the simulation\n * @method step\n * @param {Number} dt\n */\nvar World_step_postStepEvent = {type:\"postStep\"}, // Reusable event objects to save memory\n    World_step_preStepEvent = {type:\"preStep\"},\n    World_step_collideEvent = {type:\"collide\", body:null, contact:null },\n    World_step_oldContacts = [], // Pools for unused objects\n    World_step_frictionEquationPool = [],\n    World_step_p1 = [], // Reusable arrays for collision pairs\n    World_step_p2 = [],\n    World_step_gvec = new Vec3(), // Temporary vectors and quats\n    World_step_vi = new Vec3(),\n    World_step_vj = new Vec3(),\n    World_step_wi = new Vec3(),\n    World_step_wj = new Vec3(),\n    World_step_t1 = new Vec3(),\n    World_step_t2 = new Vec3(),\n    World_step_rixn = new Vec3(),\n    World_step_rjxn = new Vec3(),\n    World_step_step_q = new Quaternion(),\n    World_step_step_w = new Quaternion(),\n    World_step_step_wq = new Quaternion(),\n    invI_tau_dt = new Vec3();\nWorld.prototype.internalStep = function(dt){\n    this.dt = dt;\n\n    var world = this,\n        that = this,\n        contacts = this.contacts,\n        p1 = World_step_p1,\n        p2 = World_step_p2,\n        N = this.numObjects(),\n        bodies = this.bodies,\n        solver = this.solver,\n        gravity = this.gravity,\n        doProfiling = this.doProfiling,\n        profile = this.profile,\n        DYNAMIC = Body.DYNAMIC,\n        profilingStart,\n        constraints = this.constraints,\n        frictionEquationPool = World_step_frictionEquationPool,\n        gnorm = gravity.norm(),\n        gx = gravity.x,\n        gy = gravity.y,\n        gz = gravity.z,\n        i=0;\n\n    if(doProfiling){\n        profilingStart = performance.now();\n    }\n\n    // Add gravity to all objects\n    for(i=0; i!==N; i++){\n        var bi = bodies[i];\n        if(bi.type & DYNAMIC){ // Only for dynamic bodies\n            var f = bi.force, m = bi.mass;\n            f.x += m*gx;\n            f.y += m*gy;\n            f.z += m*gz;\n        }\n    }\n\n    // Update subsystems\n    for(var i=0, Nsubsystems=this.subsystems.length; i!==Nsubsystems; i++){\n        this.subsystems[i].update();\n    }\n\n    // Collision detection\n    if(doProfiling){ profilingStart = performance.now(); }\n    p1.length = 0; // Clean up pair arrays from last step\n    p2.length = 0;\n    this.broadphase.collisionPairs(this,p1,p2);\n    if(doProfiling){ profile.broadphase = performance.now() - profilingStart; }\n\n    // Remove constrained pairs with collideConnected == false\n    var Nconstraints = constraints.length;\n    for(i=0; i!==Nconstraints; i++){\n        var c = constraints[i];\n        if(!c.collideConnected){\n            for(var j = p1.length-1; j>=0; j-=1){\n                if( (c.bodyA === p1[j] && c.bodyB === p2[j]) ||\n                    (c.bodyB === p1[j] && c.bodyA === p2[j])){\n                    p1.splice(j, 1);\n                    p2.splice(j, 1);\n                }\n            }\n        }\n    }\n\n    this.collisionMatrixTick();\n\n    // Generate contacts\n    if(doProfiling){ profilingStart = performance.now(); }\n    var oldcontacts = World_step_oldContacts;\n    var NoldContacts = contacts.length;\n\n    for(i=0; i!==NoldContacts; i++){\n        oldcontacts.push(contacts[i]);\n    }\n    contacts.length = 0;\n\n    // Transfer FrictionEquation from current list to the pool for reuse\n    var NoldFrictionEquations = this.frictionEquations.length;\n    for(i=0; i!==NoldFrictionEquations; i++){\n        frictionEquationPool.push(this.frictionEquations[i]);\n    }\n    this.frictionEquations.length = 0;\n\n    this.narrowphase.getContacts(\n        p1,\n        p2,\n        this,\n        contacts,\n        oldcontacts, // To be reused\n        this.frictionEquations,\n        frictionEquationPool\n    );\n\n    if(doProfiling){\n        profile.narrowphase = performance.now() - profilingStart;\n    }\n\n    // Loop over all collisions\n    if(doProfiling){\n        profilingStart = performance.now();\n    }\n\n    // Add all friction eqs\n    for (var i = 0; i < this.frictionEquations.length; i++) {\n        solver.addEquation(this.frictionEquations[i]);\n    }\n\n    var ncontacts = contacts.length;\n    for(var k=0; k!==ncontacts; k++){\n\n        // Current contact\n        var c = contacts[k];\n\n        // Get current collision indeces\n        var bi = c.bi,\n            bj = c.bj,\n            si = c.si,\n            sj = c.sj;\n\n        // Get collision properties\n        var cm;\n        if(bi.material && bj.material){\n            cm = this.getContactMaterial(bi.material,bj.material) || this.defaultContactMaterial;\n        } else {\n            cm = this.defaultContactMaterial;\n        }\n\n        // c.enabled = bi.collisionResponse && bj.collisionResponse && si.collisionResponse && sj.collisionResponse;\n\n        var mu = cm.friction;\n        // c.restitution = cm.restitution;\n\n        // If friction or restitution were specified in the material, use them\n        if(bi.material && bj.material){\n            if(bi.material.friction >= 0 && bj.material.friction >= 0){\n                mu = bi.material.friction * bj.material.friction;\n            }\n\n            if(bi.material.restitution >= 0 && bj.material.restitution >= 0){\n                c.restitution = bi.material.restitution * bj.material.restitution;\n            }\n        }\n\n\t\t// c.setSpookParams(\n  //           cm.contactEquationStiffness,\n  //           cm.contactEquationRelaxation,\n  //           dt\n  //       );\n\n\t\tsolver.addEquation(c);\n\n\t\t// // Add friction constraint equation\n\t\t// if(mu > 0){\n\n\t\t// \t// Create 2 tangent equations\n\t\t// \tvar mug = mu * gnorm;\n\t\t// \tvar reducedMass = (bi.invMass + bj.invMass);\n\t\t// \tif(reducedMass > 0){\n\t\t// \t\treducedMass = 1/reducedMass;\n\t\t// \t}\n\t\t// \tvar pool = frictionEquationPool;\n\t\t// \tvar c1 = pool.length ? pool.pop() : new FrictionEquation(bi,bj,mug*reducedMass);\n\t\t// \tvar c2 = pool.length ? pool.pop() : new FrictionEquation(bi,bj,mug*reducedMass);\n\t\t// \tthis.frictionEquations.push(c1, c2);\n\n\t\t// \tc1.bi = c2.bi = bi;\n\t\t// \tc1.bj = c2.bj = bj;\n\t\t// \tc1.minForce = c2.minForce = -mug*reducedMass;\n\t\t// \tc1.maxForce = c2.maxForce = mug*reducedMass;\n\n\t\t// \t// Copy over the relative vectors\n\t\t// \tc1.ri.copy(c.ri);\n\t\t// \tc1.rj.copy(c.rj);\n\t\t// \tc2.ri.copy(c.ri);\n\t\t// \tc2.rj.copy(c.rj);\n\n\t\t// \t// Construct tangents\n\t\t// \tc.ni.tangents(c1.t, c2.t);\n\n  //           // Set spook params\n  //           c1.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, dt);\n  //           c2.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, dt);\n\n  //           c1.enabled = c2.enabled = c.enabled;\n\n\t\t// \t// Add equations to solver\n\t\t// \tsolver.addEquation(c1);\n\t\t// \tsolver.addEquation(c2);\n\t\t// }\n\n        if( bi.allowSleep &&\n            bi.type === Body.DYNAMIC &&\n            bi.sleepState  === Body.SLEEPING &&\n            bj.sleepState  === Body.AWAKE &&\n            bj.type !== Body.STATIC\n        ){\n            var speedSquaredB = bj.velocity.norm2() + bj.angularVelocity.norm2();\n            var speedLimitSquaredB = Math.pow(bj.sleepSpeedLimit,2);\n            if(speedSquaredB >= speedLimitSquaredB*2){\n                bi._wakeUpAfterNarrowphase = true;\n            }\n        }\n\n        if( bj.allowSleep &&\n            bj.type === Body.DYNAMIC &&\n            bj.sleepState  === Body.SLEEPING &&\n            bi.sleepState  === Body.AWAKE &&\n            bi.type !== Body.STATIC\n        ){\n            var speedSquaredA = bi.velocity.norm2() + bi.angularVelocity.norm2();\n            var speedLimitSquaredA = Math.pow(bi.sleepSpeedLimit,2);\n            if(speedSquaredA >= speedLimitSquaredA*2){\n                bj._wakeUpAfterNarrowphase = true;\n            }\n        }\n\n        // Now we know that i and j are in contact. Set collision matrix state\n\t\tthis.collisionMatrix.set(bi, bj, true);\n\n        if (!this.collisionMatrixPrevious.get(bi, bj)) {\n            // First contact!\n            // We reuse the collideEvent object, otherwise we will end up creating new objects for each new contact, even if there's no event listener attached.\n            World_step_collideEvent.body = bj;\n            World_step_collideEvent.contact = c;\n            bi.dispatchEvent(World_step_collideEvent);\n\n            World_step_collideEvent.body = bi;\n            bj.dispatchEvent(World_step_collideEvent);\n        }\n    }\n    if(doProfiling){\n        profile.makeContactConstraints = performance.now() - profilingStart;\n        profilingStart = performance.now();\n    }\n\n    // Wake up bodies\n    for(i=0; i!==N; i++){\n        var bi = bodies[i];\n        if(bi._wakeUpAfterNarrowphase){\n            bi.wakeUp();\n            bi._wakeUpAfterNarrowphase = false;\n        }\n    }\n\n    // Add user-added constraints\n    var Nconstraints = constraints.length;\n    for(i=0; i!==Nconstraints; i++){\n        var c = constraints[i];\n        c.update();\n        for(var j=0, Neq=c.equations.length; j!==Neq; j++){\n            var eq = c.equations[j];\n            solver.addEquation(eq);\n        }\n    }\n\n    // Solve the constrained system\n    solver.solve(dt,this);\n\n    if(doProfiling){\n        profile.solve = performance.now() - profilingStart;\n    }\n\n    // Remove all contacts from solver\n    solver.removeAllEquations();\n\n    // Apply damping, see http://code.google.com/p/bullet/issues/detail?id=74 for details\n    var pow = Math.pow;\n    for(i=0; i!==N; i++){\n        var bi = bodies[i];\n        if(bi.type & DYNAMIC){ // Only for dynamic bodies\n            var ld = pow(1.0 - bi.linearDamping,dt);\n            var v = bi.velocity;\n            v.mult(ld,v);\n            var av = bi.angularVelocity;\n            if(av){\n                var ad = pow(1.0 - bi.angularDamping,dt);\n                av.mult(ad,av);\n            }\n        }\n    }\n\n    this.dispatchEvent(World_step_preStepEvent);\n\n    // Invoke pre-step callbacks\n    for(i=0; i!==N; i++){\n        var bi = bodies[i];\n        if(bi.preStep){\n            bi.preStep.call(bi);\n        }\n    }\n\n    // Leap frog\n    // vnew = v + h*f/m\n    // xnew = x + h*vnew\n    if(doProfiling){\n        profilingStart = performance.now();\n    }\n    var q = World_step_step_q;\n    var w = World_step_step_w;\n    var wq = World_step_step_wq;\n    var stepnumber = this.stepnumber;\n    var DYNAMIC_OR_KINEMATIC = Body.DYNAMIC | Body.KINEMATIC;\n    var quatNormalize = stepnumber % (this.quatNormalizeSkip+1) === 0;\n    var quatNormalizeFast = this.quatNormalizeFast;\n    var half_dt = dt * 0.5;\n    var PLANE = Shape.types.PLANE,\n        CONVEX = Shape.types.CONVEXPOLYHEDRON;\n\n    for(i=0; i!==N; i++){\n        var b = bodies[i],\n            force = b.force,\n            tau = b.torque;\n        if((b.type & DYNAMIC_OR_KINEMATIC) && b.sleepState !== Body.SLEEPING){ // Only for dynamic\n            var velo = b.velocity,\n                angularVelo = b.angularVelocity,\n                pos = b.position,\n                quat = b.quaternion,\n                invMass = b.invMass,\n                invInertia = b.invInertiaWorld;\n\n            velo.x += force.x * invMass * dt;\n            velo.y += force.y * invMass * dt;\n            velo.z += force.z * invMass * dt;\n\n            if(b.angularVelocity){\n                invInertia.vmult(tau,invI_tau_dt);\n                invI_tau_dt.mult(dt,invI_tau_dt);\n                invI_tau_dt.vadd(angularVelo,angularVelo);\n            }\n\n            // Use new velocity  - leap frog\n            pos.x += velo.x * dt;\n            pos.y += velo.y * dt;\n            pos.z += velo.z * dt;\n\n            if(b.angularVelocity){\n                w.set(angularVelo.x, angularVelo.y, angularVelo.z, 0);\n                w.mult(quat,wq);\n                quat.x += half_dt * wq.x;\n                quat.y += half_dt * wq.y;\n                quat.z += half_dt * wq.z;\n                quat.w += half_dt * wq.w;\n                if(quatNormalize){\n                    if(quatNormalizeFast){\n                        quat.normalizeFast();\n                    } else {\n                        quat.normalize();\n                    }\n                }\n            }\n\n            if(b.aabb){\n                b.aabbNeedsUpdate = true;\n            }\n\n            // Update world inertia\n            if(b.updateInertiaWorld){\n                b.updateInertiaWorld();\n            }\n        }\n    }\n    this.clearForces();\n\n    this.broadphase.dirty = true;\n\n    if(doProfiling){\n        profile.integrate = performance.now() - profilingStart;\n    }\n\n    // Update world time\n    this.time += dt;\n    this.stepnumber += 1;\n\n    this.dispatchEvent(World_step_postStepEvent);\n\n    // Invoke post-step callbacks\n    for(i=0; i!==N; i++){\n        var bi = bodies[i];\n        var postStep = bi.postStep;\n        if(postStep){\n            postStep.call(bi);\n        }\n    }\n\n    // Sleeping update\n    if(this.allowSleep){\n        for(i=0; i!==N; i++){\n            bodies[i].sleepTick(this.time);\n        }\n    }\n};\n\n/**\n * Sets all body forces in the world to zero.\n * @method clearForces\n */\nWorld.prototype.clearForces = function(){\n    var bodies = this.bodies;\n    var N = bodies.length;\n    for(var i=0; i !== N; i++){\n        var b = bodies[i],\n            force = b.force,\n            tau = b.torque;\n\n        b.force.set(0,0,0);\n        b.torque.set(0,0,0);\n    }\n};\n\n},{\"../collision/AABB\":3,\"../collision/ArrayCollisionMatrix\":4,\"../collision/NaiveBroadphase\":7,\"../collision/Ray\":9,\"../collision/RaycastResult\":10,\"../equations/ContactEquation\":19,\"../equations/FrictionEquation\":21,\"../material/ContactMaterial\":24,\"../material/Material\":25,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/Body\":31,\"../shapes/Shape\":43,\"../solver/GSSolver\":46,\"../utils/EventTarget\":49,\"../utils/TupleDictionary\":52,\"../utils/Vec3Pool\":54,\"./Narrowphase\":55}]},{},[2])\n(2)\n});"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":219,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":220,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":221,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":222,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":223,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":224,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":225,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":226,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":227,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":228,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":229,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":230,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":231,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":232,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":233,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":234,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":235,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":236,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":237,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":238,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":239,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":240,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":241,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":242,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":243,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":244,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":245,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":246,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":247,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":248,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":249,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":250,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":251,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":252,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":253,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":254,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":255,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":256,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":257,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":258,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":259,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":260,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":261,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":262,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":263,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":264,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":265,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":266,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":267,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":268,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":269,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":270,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":271,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":272,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":273,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":274,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":275,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":276,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":277,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":278,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":279,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":280,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":281,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":282,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":283,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":284,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":285,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":286,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":287,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":288,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":289,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":290,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":291,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":292,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":293,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":294,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":295,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":296,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":297,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":298,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":299,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":300,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":301,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":302,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":303,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":304,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":305,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":306,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":307,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":308,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":309,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":310,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":311,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":312,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":313,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":314,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":315,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":316,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":317,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":318,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":319,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":320,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":321,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":322,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":323,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":324,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":325,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":326,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":327,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":328,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":329,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":330,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":331,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":332,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":333,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":334,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":335,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":336,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":337,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":338,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":339,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":340,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":341,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":342,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":343,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":344,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":345,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":346,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":347,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":348,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":349,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":350,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":351,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":352,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":353,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":354,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":355,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":356,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":357,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":358,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":359,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":360,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":361,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":362,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":363,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":364,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":365,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":366,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":367,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":368,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":369,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":370,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":371,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":372,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":373,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":374,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":375,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":376,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":377,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":378,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":379,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":380,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":381,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":382,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":383,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":384,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":385,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":386,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":387,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":388,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":389,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":390,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":391,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":392,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":393,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":394,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":395,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":396,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":397,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":398,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":399,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":400,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":401,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":402,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":403,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":404,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":405,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":406,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":407,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":408,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":409,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":410,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":411,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":412,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":413,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":414,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":415,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":416,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":417,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":418,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":419,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":420,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":421,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":422,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":423,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":424,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":425,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":426,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":427,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":428,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":429,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":430,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":431,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":432,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":433,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":434,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":435,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":436,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":437,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":438,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":439,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":440,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":441,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":442,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":443,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":444,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":445,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":446,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":447,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":448,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":449,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":450,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":451,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":452,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":453,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":454,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":455,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":456,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":457,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":458,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":459,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":460,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":461,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":462,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":463,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":464,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":465,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":466,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":467,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":468,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":469,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":470,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":471,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":472,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":473,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":474,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":475,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":476,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":477,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":478,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":479,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":480,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":481,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":482,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":483,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":484,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":485,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":486,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":487,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":488,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":489,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":490,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":491,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":492,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":493,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":494,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":495,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":496,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":497,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":498,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":499,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":500,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":501,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":502,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":503,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":504,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":505,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":506,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":507,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":508,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":509,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":510,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":511,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":512,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":513,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":514,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":515,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":516,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":517,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":518,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":519,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":520,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":521,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":522,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":523,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":524,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":525,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":526,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":527,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":528,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":529,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":530,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":531,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":532,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":533,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":534,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":535,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":536,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":537,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":538,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":539,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":540,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":541,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":542,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":543,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":544,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":545,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":546,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":547,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":548,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":549,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":550,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":551,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":552,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":553,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":554,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":555,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":556,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":557,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":558,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":559,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":560,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":561,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":562,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":563,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":564,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":565,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":566,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":567,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":568,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":569,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":570,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":571,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":572,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":573,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":574,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":575,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":576,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":577,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":578,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":579,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":580,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":581,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":582,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":583,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":584,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":585,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":586,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":587,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":588,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":589,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":590,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":591,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":592,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":593,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":594,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":595,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":596,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":597,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":598,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":599,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":600,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":601,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":602,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":603,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":604,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":605,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":606,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":607,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":608,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":609,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":610,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":611,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":612,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":613,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":614,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":615,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":616,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":617,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":618,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":619,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":620,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":621,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":622,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":623,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":624,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":625,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":626,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":627,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":628,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":629,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":630,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":631,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":632,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":633,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":634,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":635,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":636,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":637,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":638,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":639,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":640,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":641,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":642,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":643,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":644,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":645,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":646,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":647,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":648,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":649,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":650,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":651,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":652,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":653,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":654,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":655,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":656,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":657,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":658,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":659,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":660,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":661,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":662,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":663,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":664,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":665,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":666,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":667,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":668,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":669,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":670,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":671,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":672,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":673,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":674,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":675,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":676,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":677,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":678,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":679,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":680,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":681,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":682,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":683,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":684,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":685,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":686,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":687,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":688,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":689,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":690,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":691,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":692,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":693,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":694,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":695,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":696,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":697,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":698,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":699,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":700,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":701,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":702,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":703,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":704,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":705,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":706,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":707,"column":0},"generated":{"line":709,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":708,"column":0},"generated":{"line":710,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":709,"column":0},"generated":{"line":711,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":710,"column":0},"generated":{"line":712,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":711,"column":0},"generated":{"line":713,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":712,"column":0},"generated":{"line":714,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":713,"column":0},"generated":{"line":715,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":714,"column":0},"generated":{"line":716,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":715,"column":0},"generated":{"line":717,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":716,"column":0},"generated":{"line":718,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":717,"column":0},"generated":{"line":719,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":718,"column":0},"generated":{"line":720,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":719,"column":0},"generated":{"line":721,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":720,"column":0},"generated":{"line":722,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":721,"column":0},"generated":{"line":723,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":722,"column":0},"generated":{"line":724,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":723,"column":0},"generated":{"line":725,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":724,"column":0},"generated":{"line":726,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":725,"column":0},"generated":{"line":727,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":726,"column":0},"generated":{"line":728,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":727,"column":0},"generated":{"line":729,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":728,"column":0},"generated":{"line":730,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":729,"column":0},"generated":{"line":731,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":730,"column":0},"generated":{"line":732,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":731,"column":0},"generated":{"line":733,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":732,"column":0},"generated":{"line":734,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":733,"column":0},"generated":{"line":735,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":734,"column":0},"generated":{"line":736,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":735,"column":0},"generated":{"line":737,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":736,"column":0},"generated":{"line":738,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":737,"column":0},"generated":{"line":739,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":738,"column":0},"generated":{"line":740,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":739,"column":0},"generated":{"line":741,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":740,"column":0},"generated":{"line":742,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":741,"column":0},"generated":{"line":743,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":742,"column":0},"generated":{"line":744,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":743,"column":0},"generated":{"line":745,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":744,"column":0},"generated":{"line":746,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":745,"column":0},"generated":{"line":747,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":746,"column":0},"generated":{"line":748,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":747,"column":0},"generated":{"line":749,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":748,"column":0},"generated":{"line":750,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":749,"column":0},"generated":{"line":751,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":750,"column":0},"generated":{"line":752,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":751,"column":0},"generated":{"line":753,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":752,"column":0},"generated":{"line":754,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":753,"column":0},"generated":{"line":755,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":754,"column":0},"generated":{"line":756,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":755,"column":0},"generated":{"line":757,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":756,"column":0},"generated":{"line":758,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":757,"column":0},"generated":{"line":759,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":758,"column":0},"generated":{"line":760,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":759,"column":0},"generated":{"line":761,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":760,"column":0},"generated":{"line":762,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":761,"column":0},"generated":{"line":763,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":762,"column":0},"generated":{"line":764,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":763,"column":0},"generated":{"line":765,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":764,"column":0},"generated":{"line":766,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":765,"column":0},"generated":{"line":767,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":766,"column":0},"generated":{"line":768,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":767,"column":0},"generated":{"line":769,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":768,"column":0},"generated":{"line":770,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":769,"column":0},"generated":{"line":771,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":770,"column":0},"generated":{"line":772,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":771,"column":0},"generated":{"line":773,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":772,"column":0},"generated":{"line":774,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":773,"column":0},"generated":{"line":775,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":774,"column":0},"generated":{"line":776,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":775,"column":0},"generated":{"line":777,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":776,"column":0},"generated":{"line":778,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":777,"column":0},"generated":{"line":779,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":778,"column":0},"generated":{"line":780,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":779,"column":0},"generated":{"line":781,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":780,"column":0},"generated":{"line":782,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":781,"column":0},"generated":{"line":783,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":782,"column":0},"generated":{"line":784,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":783,"column":0},"generated":{"line":785,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":784,"column":0},"generated":{"line":786,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":785,"column":0},"generated":{"line":787,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":786,"column":0},"generated":{"line":788,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":787,"column":0},"generated":{"line":789,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":788,"column":0},"generated":{"line":790,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":789,"column":0},"generated":{"line":791,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":790,"column":0},"generated":{"line":792,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":791,"column":0},"generated":{"line":793,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":792,"column":0},"generated":{"line":794,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":793,"column":0},"generated":{"line":795,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":794,"column":0},"generated":{"line":796,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":795,"column":0},"generated":{"line":797,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":796,"column":0},"generated":{"line":798,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":797,"column":0},"generated":{"line":799,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":798,"column":0},"generated":{"line":800,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":799,"column":0},"generated":{"line":801,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":800,"column":0},"generated":{"line":802,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":801,"column":0},"generated":{"line":803,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":802,"column":0},"generated":{"line":804,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":803,"column":0},"generated":{"line":805,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":804,"column":0},"generated":{"line":806,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":805,"column":0},"generated":{"line":807,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":806,"column":0},"generated":{"line":808,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":807,"column":0},"generated":{"line":809,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":808,"column":0},"generated":{"line":810,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":809,"column":0},"generated":{"line":811,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":810,"column":0},"generated":{"line":812,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":811,"column":0},"generated":{"line":813,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":812,"column":0},"generated":{"line":814,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":813,"column":0},"generated":{"line":815,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":814,"column":0},"generated":{"line":816,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":815,"column":0},"generated":{"line":817,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":816,"column":0},"generated":{"line":818,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":817,"column":0},"generated":{"line":819,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":818,"column":0},"generated":{"line":820,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":819,"column":0},"generated":{"line":821,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":820,"column":0},"generated":{"line":822,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":821,"column":0},"generated":{"line":823,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":822,"column":0},"generated":{"line":824,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":823,"column":0},"generated":{"line":825,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":824,"column":0},"generated":{"line":826,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":825,"column":0},"generated":{"line":827,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":826,"column":0},"generated":{"line":828,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":827,"column":0},"generated":{"line":829,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":828,"column":0},"generated":{"line":830,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":829,"column":0},"generated":{"line":831,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":830,"column":0},"generated":{"line":832,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":831,"column":0},"generated":{"line":833,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":832,"column":0},"generated":{"line":834,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":833,"column":0},"generated":{"line":835,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":834,"column":0},"generated":{"line":836,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":835,"column":0},"generated":{"line":837,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":836,"column":0},"generated":{"line":838,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":837,"column":0},"generated":{"line":839,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":838,"column":0},"generated":{"line":840,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":839,"column":0},"generated":{"line":841,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":840,"column":0},"generated":{"line":842,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":841,"column":0},"generated":{"line":843,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":842,"column":0},"generated":{"line":844,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":843,"column":0},"generated":{"line":845,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":844,"column":0},"generated":{"line":846,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":845,"column":0},"generated":{"line":847,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":846,"column":0},"generated":{"line":848,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":847,"column":0},"generated":{"line":849,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":848,"column":0},"generated":{"line":850,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":849,"column":0},"generated":{"line":851,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":850,"column":0},"generated":{"line":852,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":851,"column":0},"generated":{"line":853,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":852,"column":0},"generated":{"line":854,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":853,"column":0},"generated":{"line":855,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":854,"column":0},"generated":{"line":856,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":855,"column":0},"generated":{"line":857,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":856,"column":0},"generated":{"line":858,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":857,"column":0},"generated":{"line":859,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":858,"column":0},"generated":{"line":860,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":859,"column":0},"generated":{"line":861,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":860,"column":0},"generated":{"line":862,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":861,"column":0},"generated":{"line":863,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":862,"column":0},"generated":{"line":864,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":863,"column":0},"generated":{"line":865,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":864,"column":0},"generated":{"line":866,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":865,"column":0},"generated":{"line":867,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":866,"column":0},"generated":{"line":868,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":867,"column":0},"generated":{"line":869,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":868,"column":0},"generated":{"line":870,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":869,"column":0},"generated":{"line":871,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":870,"column":0},"generated":{"line":872,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":871,"column":0},"generated":{"line":873,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":872,"column":0},"generated":{"line":874,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":873,"column":0},"generated":{"line":875,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":874,"column":0},"generated":{"line":876,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":875,"column":0},"generated":{"line":877,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":876,"column":0},"generated":{"line":878,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":877,"column":0},"generated":{"line":879,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":878,"column":0},"generated":{"line":880,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":879,"column":0},"generated":{"line":881,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":880,"column":0},"generated":{"line":882,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":881,"column":0},"generated":{"line":883,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":882,"column":0},"generated":{"line":884,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":883,"column":0},"generated":{"line":885,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":884,"column":0},"generated":{"line":886,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":885,"column":0},"generated":{"line":887,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":886,"column":0},"generated":{"line":888,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":887,"column":0},"generated":{"line":889,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":888,"column":0},"generated":{"line":890,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":889,"column":0},"generated":{"line":891,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":890,"column":0},"generated":{"line":892,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":891,"column":0},"generated":{"line":893,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":892,"column":0},"generated":{"line":894,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":893,"column":0},"generated":{"line":895,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":894,"column":0},"generated":{"line":896,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":895,"column":0},"generated":{"line":897,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":896,"column":0},"generated":{"line":898,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":897,"column":0},"generated":{"line":899,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":898,"column":0},"generated":{"line":900,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":899,"column":0},"generated":{"line":901,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":900,"column":0},"generated":{"line":902,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":901,"column":0},"generated":{"line":903,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":902,"column":0},"generated":{"line":904,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":903,"column":0},"generated":{"line":905,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":904,"column":0},"generated":{"line":906,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":905,"column":0},"generated":{"line":907,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":906,"column":0},"generated":{"line":908,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":907,"column":0},"generated":{"line":909,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":908,"column":0},"generated":{"line":910,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":909,"column":0},"generated":{"line":911,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":910,"column":0},"generated":{"line":912,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":911,"column":0},"generated":{"line":913,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":912,"column":0},"generated":{"line":914,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":913,"column":0},"generated":{"line":915,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":914,"column":0},"generated":{"line":916,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":915,"column":0},"generated":{"line":917,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":916,"column":0},"generated":{"line":918,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":917,"column":0},"generated":{"line":919,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":918,"column":0},"generated":{"line":920,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":919,"column":0},"generated":{"line":921,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":920,"column":0},"generated":{"line":922,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":921,"column":0},"generated":{"line":923,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":922,"column":0},"generated":{"line":924,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":923,"column":0},"generated":{"line":925,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":924,"column":0},"generated":{"line":926,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":925,"column":0},"generated":{"line":927,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":926,"column":0},"generated":{"line":928,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":927,"column":0},"generated":{"line":929,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":928,"column":0},"generated":{"line":930,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":929,"column":0},"generated":{"line":931,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":930,"column":0},"generated":{"line":932,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":931,"column":0},"generated":{"line":933,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":932,"column":0},"generated":{"line":934,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":933,"column":0},"generated":{"line":935,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":934,"column":0},"generated":{"line":936,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":935,"column":0},"generated":{"line":937,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":936,"column":0},"generated":{"line":938,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":937,"column":0},"generated":{"line":939,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":938,"column":0},"generated":{"line":940,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":939,"column":0},"generated":{"line":941,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":940,"column":0},"generated":{"line":942,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":941,"column":0},"generated":{"line":943,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":942,"column":0},"generated":{"line":944,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":943,"column":0},"generated":{"line":945,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":944,"column":0},"generated":{"line":946,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":945,"column":0},"generated":{"line":947,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":946,"column":0},"generated":{"line":948,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":947,"column":0},"generated":{"line":949,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":948,"column":0},"generated":{"line":950,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":949,"column":0},"generated":{"line":951,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":950,"column":0},"generated":{"line":952,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":951,"column":0},"generated":{"line":953,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":952,"column":0},"generated":{"line":954,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":953,"column":0},"generated":{"line":955,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":954,"column":0},"generated":{"line":956,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":955,"column":0},"generated":{"line":957,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":956,"column":0},"generated":{"line":958,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":957,"column":0},"generated":{"line":959,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":958,"column":0},"generated":{"line":960,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":959,"column":0},"generated":{"line":961,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":960,"column":0},"generated":{"line":962,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":961,"column":0},"generated":{"line":963,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":962,"column":0},"generated":{"line":964,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":963,"column":0},"generated":{"line":965,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":964,"column":0},"generated":{"line":966,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":965,"column":0},"generated":{"line":967,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":966,"column":0},"generated":{"line":968,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":967,"column":0},"generated":{"line":969,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":968,"column":0},"generated":{"line":970,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":969,"column":0},"generated":{"line":971,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":970,"column":0},"generated":{"line":972,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":971,"column":0},"generated":{"line":973,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":972,"column":0},"generated":{"line":974,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":973,"column":0},"generated":{"line":975,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":974,"column":0},"generated":{"line":976,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":975,"column":0},"generated":{"line":977,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":976,"column":0},"generated":{"line":978,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":977,"column":0},"generated":{"line":979,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":978,"column":0},"generated":{"line":980,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":979,"column":0},"generated":{"line":981,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":980,"column":0},"generated":{"line":982,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":981,"column":0},"generated":{"line":983,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":982,"column":0},"generated":{"line":984,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":983,"column":0},"generated":{"line":985,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":984,"column":0},"generated":{"line":986,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":985,"column":0},"generated":{"line":987,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":986,"column":0},"generated":{"line":988,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":987,"column":0},"generated":{"line":989,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":988,"column":0},"generated":{"line":990,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":989,"column":0},"generated":{"line":991,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":990,"column":0},"generated":{"line":992,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":991,"column":0},"generated":{"line":993,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":992,"column":0},"generated":{"line":994,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":993,"column":0},"generated":{"line":995,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":994,"column":0},"generated":{"line":996,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":995,"column":0},"generated":{"line":997,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":996,"column":0},"generated":{"line":998,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":997,"column":0},"generated":{"line":999,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":998,"column":0},"generated":{"line":1000,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":999,"column":0},"generated":{"line":1001,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1000,"column":0},"generated":{"line":1002,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1001,"column":0},"generated":{"line":1003,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1002,"column":0},"generated":{"line":1004,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1003,"column":0},"generated":{"line":1005,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1004,"column":0},"generated":{"line":1006,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1005,"column":0},"generated":{"line":1007,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1006,"column":0},"generated":{"line":1008,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1007,"column":0},"generated":{"line":1009,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1008,"column":0},"generated":{"line":1010,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1009,"column":0},"generated":{"line":1011,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1010,"column":0},"generated":{"line":1012,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1011,"column":0},"generated":{"line":1013,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1012,"column":0},"generated":{"line":1014,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1013,"column":0},"generated":{"line":1015,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1014,"column":0},"generated":{"line":1016,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1015,"column":0},"generated":{"line":1017,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1016,"column":0},"generated":{"line":1018,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1017,"column":0},"generated":{"line":1019,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1018,"column":0},"generated":{"line":1020,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1019,"column":0},"generated":{"line":1021,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1020,"column":0},"generated":{"line":1022,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1021,"column":0},"generated":{"line":1023,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1022,"column":0},"generated":{"line":1024,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1023,"column":0},"generated":{"line":1025,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1024,"column":0},"generated":{"line":1026,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1025,"column":0},"generated":{"line":1027,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1026,"column":0},"generated":{"line":1028,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1027,"column":0},"generated":{"line":1029,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1028,"column":0},"generated":{"line":1030,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1029,"column":0},"generated":{"line":1031,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1030,"column":0},"generated":{"line":1032,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1031,"column":0},"generated":{"line":1033,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1032,"column":0},"generated":{"line":1034,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1033,"column":0},"generated":{"line":1035,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1034,"column":0},"generated":{"line":1036,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1035,"column":0},"generated":{"line":1037,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1036,"column":0},"generated":{"line":1038,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1037,"column":0},"generated":{"line":1039,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1038,"column":0},"generated":{"line":1040,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1039,"column":0},"generated":{"line":1041,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1040,"column":0},"generated":{"line":1042,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1041,"column":0},"generated":{"line":1043,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1042,"column":0},"generated":{"line":1044,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1043,"column":0},"generated":{"line":1045,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1044,"column":0},"generated":{"line":1046,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1045,"column":0},"generated":{"line":1047,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1046,"column":0},"generated":{"line":1048,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1047,"column":0},"generated":{"line":1049,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1048,"column":0},"generated":{"line":1050,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1049,"column":0},"generated":{"line":1051,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1050,"column":0},"generated":{"line":1052,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1051,"column":0},"generated":{"line":1053,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1052,"column":0},"generated":{"line":1054,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1053,"column":0},"generated":{"line":1055,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1054,"column":0},"generated":{"line":1056,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1055,"column":0},"generated":{"line":1057,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1056,"column":0},"generated":{"line":1058,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1057,"column":0},"generated":{"line":1059,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1058,"column":0},"generated":{"line":1060,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1059,"column":0},"generated":{"line":1061,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1060,"column":0},"generated":{"line":1062,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1061,"column":0},"generated":{"line":1063,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1062,"column":0},"generated":{"line":1064,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1063,"column":0},"generated":{"line":1065,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1064,"column":0},"generated":{"line":1066,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1065,"column":0},"generated":{"line":1067,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1066,"column":0},"generated":{"line":1068,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1067,"column":0},"generated":{"line":1069,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1068,"column":0},"generated":{"line":1070,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1069,"column":0},"generated":{"line":1071,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1070,"column":0},"generated":{"line":1072,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1071,"column":0},"generated":{"line":1073,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1072,"column":0},"generated":{"line":1074,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1073,"column":0},"generated":{"line":1075,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1074,"column":0},"generated":{"line":1076,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1075,"column":0},"generated":{"line":1077,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1076,"column":0},"generated":{"line":1078,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1077,"column":0},"generated":{"line":1079,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1078,"column":0},"generated":{"line":1080,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1079,"column":0},"generated":{"line":1081,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1080,"column":0},"generated":{"line":1082,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1081,"column":0},"generated":{"line":1083,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1082,"column":0},"generated":{"line":1084,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1083,"column":0},"generated":{"line":1085,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1084,"column":0},"generated":{"line":1086,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1085,"column":0},"generated":{"line":1087,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1086,"column":0},"generated":{"line":1088,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1087,"column":0},"generated":{"line":1089,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1088,"column":0},"generated":{"line":1090,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1089,"column":0},"generated":{"line":1091,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1090,"column":0},"generated":{"line":1092,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1091,"column":0},"generated":{"line":1093,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1092,"column":0},"generated":{"line":1094,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1093,"column":0},"generated":{"line":1095,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1094,"column":0},"generated":{"line":1096,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1095,"column":0},"generated":{"line":1097,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1096,"column":0},"generated":{"line":1098,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1097,"column":0},"generated":{"line":1099,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1098,"column":0},"generated":{"line":1100,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1099,"column":0},"generated":{"line":1101,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1100,"column":0},"generated":{"line":1102,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1101,"column":0},"generated":{"line":1103,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1102,"column":0},"generated":{"line":1104,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1103,"column":0},"generated":{"line":1105,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1104,"column":0},"generated":{"line":1106,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1105,"column":0},"generated":{"line":1107,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1106,"column":0},"generated":{"line":1108,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1107,"column":0},"generated":{"line":1109,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1108,"column":0},"generated":{"line":1110,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1109,"column":0},"generated":{"line":1111,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1110,"column":0},"generated":{"line":1112,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1111,"column":0},"generated":{"line":1113,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1112,"column":0},"generated":{"line":1114,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1113,"column":0},"generated":{"line":1115,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1114,"column":0},"generated":{"line":1116,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1115,"column":0},"generated":{"line":1117,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1116,"column":0},"generated":{"line":1118,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1117,"column":0},"generated":{"line":1119,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1118,"column":0},"generated":{"line":1120,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1119,"column":0},"generated":{"line":1121,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1120,"column":0},"generated":{"line":1122,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1121,"column":0},"generated":{"line":1123,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1122,"column":0},"generated":{"line":1124,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1123,"column":0},"generated":{"line":1125,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1124,"column":0},"generated":{"line":1126,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1125,"column":0},"generated":{"line":1127,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1126,"column":0},"generated":{"line":1128,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1127,"column":0},"generated":{"line":1129,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1128,"column":0},"generated":{"line":1130,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1129,"column":0},"generated":{"line":1131,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1130,"column":0},"generated":{"line":1132,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1131,"column":0},"generated":{"line":1133,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1132,"column":0},"generated":{"line":1134,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1133,"column":0},"generated":{"line":1135,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1134,"column":0},"generated":{"line":1136,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1135,"column":0},"generated":{"line":1137,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1136,"column":0},"generated":{"line":1138,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1137,"column":0},"generated":{"line":1139,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1138,"column":0},"generated":{"line":1140,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1139,"column":0},"generated":{"line":1141,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1140,"column":0},"generated":{"line":1142,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1141,"column":0},"generated":{"line":1143,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1142,"column":0},"generated":{"line":1144,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1143,"column":0},"generated":{"line":1145,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1144,"column":0},"generated":{"line":1146,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1145,"column":0},"generated":{"line":1147,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1146,"column":0},"generated":{"line":1148,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1147,"column":0},"generated":{"line":1149,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1148,"column":0},"generated":{"line":1150,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1149,"column":0},"generated":{"line":1151,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1150,"column":0},"generated":{"line":1152,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1151,"column":0},"generated":{"line":1153,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1152,"column":0},"generated":{"line":1154,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1153,"column":0},"generated":{"line":1155,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1154,"column":0},"generated":{"line":1156,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1155,"column":0},"generated":{"line":1157,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1156,"column":0},"generated":{"line":1158,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1157,"column":0},"generated":{"line":1159,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1158,"column":0},"generated":{"line":1160,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1159,"column":0},"generated":{"line":1161,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1160,"column":0},"generated":{"line":1162,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1161,"column":0},"generated":{"line":1163,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1162,"column":0},"generated":{"line":1164,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1163,"column":0},"generated":{"line":1165,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1164,"column":0},"generated":{"line":1166,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1165,"column":0},"generated":{"line":1167,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1166,"column":0},"generated":{"line":1168,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1167,"column":0},"generated":{"line":1169,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1168,"column":0},"generated":{"line":1170,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1169,"column":0},"generated":{"line":1171,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1170,"column":0},"generated":{"line":1172,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1171,"column":0},"generated":{"line":1173,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1172,"column":0},"generated":{"line":1174,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1173,"column":0},"generated":{"line":1175,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1174,"column":0},"generated":{"line":1176,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1175,"column":0},"generated":{"line":1177,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1176,"column":0},"generated":{"line":1178,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1177,"column":0},"generated":{"line":1179,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1178,"column":0},"generated":{"line":1180,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1179,"column":0},"generated":{"line":1181,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1180,"column":0},"generated":{"line":1182,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1181,"column":0},"generated":{"line":1183,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1182,"column":0},"generated":{"line":1184,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1183,"column":0},"generated":{"line":1185,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1184,"column":0},"generated":{"line":1186,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1185,"column":0},"generated":{"line":1187,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1186,"column":0},"generated":{"line":1188,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1187,"column":0},"generated":{"line":1189,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1188,"column":0},"generated":{"line":1190,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1189,"column":0},"generated":{"line":1191,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1190,"column":0},"generated":{"line":1192,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1191,"column":0},"generated":{"line":1193,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1192,"column":0},"generated":{"line":1194,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1193,"column":0},"generated":{"line":1195,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1194,"column":0},"generated":{"line":1196,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1195,"column":0},"generated":{"line":1197,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1196,"column":0},"generated":{"line":1198,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1197,"column":0},"generated":{"line":1199,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1198,"column":0},"generated":{"line":1200,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1199,"column":0},"generated":{"line":1201,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1200,"column":0},"generated":{"line":1202,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1201,"column":0},"generated":{"line":1203,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1202,"column":0},"generated":{"line":1204,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1203,"column":0},"generated":{"line":1205,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1204,"column":0},"generated":{"line":1206,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1205,"column":0},"generated":{"line":1207,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1206,"column":0},"generated":{"line":1208,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1207,"column":0},"generated":{"line":1209,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1208,"column":0},"generated":{"line":1210,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1209,"column":0},"generated":{"line":1211,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1210,"column":0},"generated":{"line":1212,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1211,"column":0},"generated":{"line":1213,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1212,"column":0},"generated":{"line":1214,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1213,"column":0},"generated":{"line":1215,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1214,"column":0},"generated":{"line":1216,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1215,"column":0},"generated":{"line":1217,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1216,"column":0},"generated":{"line":1218,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1217,"column":0},"generated":{"line":1219,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1218,"column":0},"generated":{"line":1220,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1219,"column":0},"generated":{"line":1221,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1220,"column":0},"generated":{"line":1222,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1221,"column":0},"generated":{"line":1223,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1222,"column":0},"generated":{"line":1224,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1223,"column":0},"generated":{"line":1225,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1224,"column":0},"generated":{"line":1226,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1225,"column":0},"generated":{"line":1227,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1226,"column":0},"generated":{"line":1228,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1227,"column":0},"generated":{"line":1229,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1228,"column":0},"generated":{"line":1230,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1229,"column":0},"generated":{"line":1231,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1230,"column":0},"generated":{"line":1232,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1231,"column":0},"generated":{"line":1233,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1232,"column":0},"generated":{"line":1234,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1233,"column":0},"generated":{"line":1235,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1234,"column":0},"generated":{"line":1236,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1235,"column":0},"generated":{"line":1237,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1236,"column":0},"generated":{"line":1238,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1237,"column":0},"generated":{"line":1239,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1238,"column":0},"generated":{"line":1240,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1239,"column":0},"generated":{"line":1241,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1240,"column":0},"generated":{"line":1242,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1241,"column":0},"generated":{"line":1243,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1242,"column":0},"generated":{"line":1244,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1243,"column":0},"generated":{"line":1245,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1244,"column":0},"generated":{"line":1246,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1245,"column":0},"generated":{"line":1247,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1246,"column":0},"generated":{"line":1248,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1247,"column":0},"generated":{"line":1249,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1248,"column":0},"generated":{"line":1250,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1249,"column":0},"generated":{"line":1251,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1250,"column":0},"generated":{"line":1252,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1251,"column":0},"generated":{"line":1253,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1252,"column":0},"generated":{"line":1254,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1253,"column":0},"generated":{"line":1255,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1254,"column":0},"generated":{"line":1256,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1255,"column":0},"generated":{"line":1257,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1256,"column":0},"generated":{"line":1258,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1257,"column":0},"generated":{"line":1259,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1258,"column":0},"generated":{"line":1260,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1259,"column":0},"generated":{"line":1261,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1260,"column":0},"generated":{"line":1262,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1261,"column":0},"generated":{"line":1263,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1262,"column":0},"generated":{"line":1264,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1263,"column":0},"generated":{"line":1265,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1264,"column":0},"generated":{"line":1266,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1265,"column":0},"generated":{"line":1267,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1266,"column":0},"generated":{"line":1268,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1267,"column":0},"generated":{"line":1269,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1268,"column":0},"generated":{"line":1270,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1269,"column":0},"generated":{"line":1271,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1270,"column":0},"generated":{"line":1272,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1271,"column":0},"generated":{"line":1273,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1272,"column":0},"generated":{"line":1274,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1273,"column":0},"generated":{"line":1275,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1274,"column":0},"generated":{"line":1276,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1275,"column":0},"generated":{"line":1277,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1276,"column":0},"generated":{"line":1278,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1277,"column":0},"generated":{"line":1279,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1278,"column":0},"generated":{"line":1280,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1279,"column":0},"generated":{"line":1281,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1280,"column":0},"generated":{"line":1282,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1281,"column":0},"generated":{"line":1283,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1282,"column":0},"generated":{"line":1284,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1283,"column":0},"generated":{"line":1285,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1284,"column":0},"generated":{"line":1286,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1285,"column":0},"generated":{"line":1287,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1286,"column":0},"generated":{"line":1288,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1287,"column":0},"generated":{"line":1289,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1288,"column":0},"generated":{"line":1290,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1289,"column":0},"generated":{"line":1291,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1290,"column":0},"generated":{"line":1292,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1291,"column":0},"generated":{"line":1293,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1292,"column":0},"generated":{"line":1294,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1293,"column":0},"generated":{"line":1295,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1294,"column":0},"generated":{"line":1296,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1295,"column":0},"generated":{"line":1297,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1296,"column":0},"generated":{"line":1298,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1297,"column":0},"generated":{"line":1299,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1298,"column":0},"generated":{"line":1300,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1299,"column":0},"generated":{"line":1301,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1300,"column":0},"generated":{"line":1302,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1301,"column":0},"generated":{"line":1303,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1302,"column":0},"generated":{"line":1304,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1303,"column":0},"generated":{"line":1305,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1304,"column":0},"generated":{"line":1306,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1305,"column":0},"generated":{"line":1307,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1306,"column":0},"generated":{"line":1308,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1307,"column":0},"generated":{"line":1309,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1308,"column":0},"generated":{"line":1310,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1309,"column":0},"generated":{"line":1311,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1310,"column":0},"generated":{"line":1312,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1311,"column":0},"generated":{"line":1313,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1312,"column":0},"generated":{"line":1314,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1313,"column":0},"generated":{"line":1315,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1314,"column":0},"generated":{"line":1316,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1315,"column":0},"generated":{"line":1317,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1316,"column":0},"generated":{"line":1318,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1317,"column":0},"generated":{"line":1319,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1318,"column":0},"generated":{"line":1320,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1319,"column":0},"generated":{"line":1321,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1320,"column":0},"generated":{"line":1322,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1321,"column":0},"generated":{"line":1323,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1322,"column":0},"generated":{"line":1324,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1323,"column":0},"generated":{"line":1325,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1324,"column":0},"generated":{"line":1326,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1325,"column":0},"generated":{"line":1327,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1326,"column":0},"generated":{"line":1328,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1327,"column":0},"generated":{"line":1329,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1328,"column":0},"generated":{"line":1330,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1329,"column":0},"generated":{"line":1331,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1330,"column":0},"generated":{"line":1332,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1331,"column":0},"generated":{"line":1333,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1332,"column":0},"generated":{"line":1334,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1333,"column":0},"generated":{"line":1335,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1334,"column":0},"generated":{"line":1336,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1335,"column":0},"generated":{"line":1337,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1336,"column":0},"generated":{"line":1338,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1337,"column":0},"generated":{"line":1339,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1338,"column":0},"generated":{"line":1340,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1339,"column":0},"generated":{"line":1341,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1340,"column":0},"generated":{"line":1342,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1341,"column":0},"generated":{"line":1343,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1342,"column":0},"generated":{"line":1344,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1343,"column":0},"generated":{"line":1345,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1344,"column":0},"generated":{"line":1346,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1345,"column":0},"generated":{"line":1347,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1346,"column":0},"generated":{"line":1348,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1347,"column":0},"generated":{"line":1349,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1348,"column":0},"generated":{"line":1350,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1349,"column":0},"generated":{"line":1351,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1350,"column":0},"generated":{"line":1352,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1351,"column":0},"generated":{"line":1353,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1352,"column":0},"generated":{"line":1354,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1353,"column":0},"generated":{"line":1355,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1354,"column":0},"generated":{"line":1356,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1355,"column":0},"generated":{"line":1357,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1356,"column":0},"generated":{"line":1358,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1357,"column":0},"generated":{"line":1359,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1358,"column":0},"generated":{"line":1360,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1359,"column":0},"generated":{"line":1361,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1360,"column":0},"generated":{"line":1362,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1361,"column":0},"generated":{"line":1363,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1362,"column":0},"generated":{"line":1364,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1363,"column":0},"generated":{"line":1365,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1364,"column":0},"generated":{"line":1366,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1365,"column":0},"generated":{"line":1367,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1366,"column":0},"generated":{"line":1368,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1367,"column":0},"generated":{"line":1369,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1368,"column":0},"generated":{"line":1370,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1369,"column":0},"generated":{"line":1371,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1370,"column":0},"generated":{"line":1372,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1371,"column":0},"generated":{"line":1373,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1372,"column":0},"generated":{"line":1374,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1373,"column":0},"generated":{"line":1375,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1374,"column":0},"generated":{"line":1376,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1375,"column":0},"generated":{"line":1377,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1376,"column":0},"generated":{"line":1378,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1377,"column":0},"generated":{"line":1379,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1378,"column":0},"generated":{"line":1380,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1379,"column":0},"generated":{"line":1381,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1380,"column":0},"generated":{"line":1382,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1381,"column":0},"generated":{"line":1383,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1382,"column":0},"generated":{"line":1384,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1383,"column":0},"generated":{"line":1385,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1384,"column":0},"generated":{"line":1386,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1385,"column":0},"generated":{"line":1387,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1386,"column":0},"generated":{"line":1388,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1387,"column":0},"generated":{"line":1389,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1388,"column":0},"generated":{"line":1390,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1389,"column":0},"generated":{"line":1391,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1390,"column":0},"generated":{"line":1392,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1391,"column":0},"generated":{"line":1393,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1392,"column":0},"generated":{"line":1394,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1393,"column":0},"generated":{"line":1395,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1394,"column":0},"generated":{"line":1396,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1395,"column":0},"generated":{"line":1397,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1396,"column":0},"generated":{"line":1398,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1397,"column":0},"generated":{"line":1399,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1398,"column":0},"generated":{"line":1400,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1399,"column":0},"generated":{"line":1401,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1400,"column":0},"generated":{"line":1402,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1401,"column":0},"generated":{"line":1403,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1402,"column":0},"generated":{"line":1404,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1403,"column":0},"generated":{"line":1405,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1404,"column":0},"generated":{"line":1406,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1405,"column":0},"generated":{"line":1407,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1406,"column":0},"generated":{"line":1408,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1407,"column":0},"generated":{"line":1409,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1408,"column":0},"generated":{"line":1410,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1409,"column":0},"generated":{"line":1411,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1410,"column":0},"generated":{"line":1412,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1411,"column":0},"generated":{"line":1413,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1412,"column":0},"generated":{"line":1414,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1413,"column":0},"generated":{"line":1415,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1414,"column":0},"generated":{"line":1416,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1415,"column":0},"generated":{"line":1417,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1416,"column":0},"generated":{"line":1418,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1417,"column":0},"generated":{"line":1419,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1418,"column":0},"generated":{"line":1420,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1419,"column":0},"generated":{"line":1421,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1420,"column":0},"generated":{"line":1422,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1421,"column":0},"generated":{"line":1423,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1422,"column":0},"generated":{"line":1424,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1423,"column":0},"generated":{"line":1425,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1424,"column":0},"generated":{"line":1426,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1425,"column":0},"generated":{"line":1427,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1426,"column":0},"generated":{"line":1428,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1427,"column":0},"generated":{"line":1429,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1428,"column":0},"generated":{"line":1430,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1429,"column":0},"generated":{"line":1431,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1430,"column":0},"generated":{"line":1432,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1431,"column":0},"generated":{"line":1433,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1432,"column":0},"generated":{"line":1434,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1433,"column":0},"generated":{"line":1435,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1434,"column":0},"generated":{"line":1436,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1435,"column":0},"generated":{"line":1437,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1436,"column":0},"generated":{"line":1438,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1437,"column":0},"generated":{"line":1439,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1438,"column":0},"generated":{"line":1440,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1439,"column":0},"generated":{"line":1441,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1440,"column":0},"generated":{"line":1442,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1441,"column":0},"generated":{"line":1443,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1442,"column":0},"generated":{"line":1444,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1443,"column":0},"generated":{"line":1445,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1444,"column":0},"generated":{"line":1446,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1445,"column":0},"generated":{"line":1447,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1446,"column":0},"generated":{"line":1448,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1447,"column":0},"generated":{"line":1449,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1448,"column":0},"generated":{"line":1450,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1449,"column":0},"generated":{"line":1451,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1450,"column":0},"generated":{"line":1452,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1451,"column":0},"generated":{"line":1453,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1452,"column":0},"generated":{"line":1454,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1453,"column":0},"generated":{"line":1455,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1454,"column":0},"generated":{"line":1456,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1455,"column":0},"generated":{"line":1457,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1456,"column":0},"generated":{"line":1458,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1457,"column":0},"generated":{"line":1459,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1458,"column":0},"generated":{"line":1460,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1459,"column":0},"generated":{"line":1461,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1460,"column":0},"generated":{"line":1462,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1461,"column":0},"generated":{"line":1463,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1462,"column":0},"generated":{"line":1464,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1463,"column":0},"generated":{"line":1465,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1464,"column":0},"generated":{"line":1466,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1465,"column":0},"generated":{"line":1467,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1466,"column":0},"generated":{"line":1468,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1467,"column":0},"generated":{"line":1469,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1468,"column":0},"generated":{"line":1470,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1469,"column":0},"generated":{"line":1471,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1470,"column":0},"generated":{"line":1472,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1471,"column":0},"generated":{"line":1473,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1472,"column":0},"generated":{"line":1474,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1473,"column":0},"generated":{"line":1475,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1474,"column":0},"generated":{"line":1476,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1475,"column":0},"generated":{"line":1477,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1476,"column":0},"generated":{"line":1478,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1477,"column":0},"generated":{"line":1479,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1478,"column":0},"generated":{"line":1480,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1479,"column":0},"generated":{"line":1481,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1480,"column":0},"generated":{"line":1482,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1481,"column":0},"generated":{"line":1483,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1482,"column":0},"generated":{"line":1484,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1483,"column":0},"generated":{"line":1485,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1484,"column":0},"generated":{"line":1486,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1485,"column":0},"generated":{"line":1487,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1486,"column":0},"generated":{"line":1488,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1487,"column":0},"generated":{"line":1489,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1488,"column":0},"generated":{"line":1490,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1489,"column":0},"generated":{"line":1491,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1490,"column":0},"generated":{"line":1492,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1491,"column":0},"generated":{"line":1493,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1492,"column":0},"generated":{"line":1494,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1493,"column":0},"generated":{"line":1495,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1494,"column":0},"generated":{"line":1496,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1495,"column":0},"generated":{"line":1497,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1496,"column":0},"generated":{"line":1498,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1497,"column":0},"generated":{"line":1499,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1498,"column":0},"generated":{"line":1500,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1499,"column":0},"generated":{"line":1501,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1500,"column":0},"generated":{"line":1502,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1501,"column":0},"generated":{"line":1503,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1502,"column":0},"generated":{"line":1504,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1503,"column":0},"generated":{"line":1505,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1504,"column":0},"generated":{"line":1506,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1505,"column":0},"generated":{"line":1507,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1506,"column":0},"generated":{"line":1508,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1507,"column":0},"generated":{"line":1509,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1508,"column":0},"generated":{"line":1510,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1509,"column":0},"generated":{"line":1511,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1510,"column":0},"generated":{"line":1512,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1511,"column":0},"generated":{"line":1513,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1512,"column":0},"generated":{"line":1514,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1513,"column":0},"generated":{"line":1515,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1514,"column":0},"generated":{"line":1516,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1515,"column":0},"generated":{"line":1517,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1516,"column":0},"generated":{"line":1518,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1517,"column":0},"generated":{"line":1519,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1518,"column":0},"generated":{"line":1520,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1519,"column":0},"generated":{"line":1521,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1520,"column":0},"generated":{"line":1522,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1521,"column":0},"generated":{"line":1523,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1522,"column":0},"generated":{"line":1524,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1523,"column":0},"generated":{"line":1525,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1524,"column":0},"generated":{"line":1526,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1525,"column":0},"generated":{"line":1527,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1526,"column":0},"generated":{"line":1528,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1527,"column":0},"generated":{"line":1529,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1528,"column":0},"generated":{"line":1530,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1529,"column":0},"generated":{"line":1531,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1530,"column":0},"generated":{"line":1532,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1531,"column":0},"generated":{"line":1533,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1532,"column":0},"generated":{"line":1534,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1533,"column":0},"generated":{"line":1535,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1534,"column":0},"generated":{"line":1536,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1535,"column":0},"generated":{"line":1537,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1536,"column":0},"generated":{"line":1538,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1537,"column":0},"generated":{"line":1539,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1538,"column":0},"generated":{"line":1540,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1539,"column":0},"generated":{"line":1541,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1540,"column":0},"generated":{"line":1542,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1541,"column":0},"generated":{"line":1543,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1542,"column":0},"generated":{"line":1544,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1543,"column":0},"generated":{"line":1545,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1544,"column":0},"generated":{"line":1546,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1545,"column":0},"generated":{"line":1547,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1546,"column":0},"generated":{"line":1548,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1547,"column":0},"generated":{"line":1549,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1548,"column":0},"generated":{"line":1550,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1549,"column":0},"generated":{"line":1551,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1550,"column":0},"generated":{"line":1552,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1551,"column":0},"generated":{"line":1553,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1552,"column":0},"generated":{"line":1554,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1553,"column":0},"generated":{"line":1555,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1554,"column":0},"generated":{"line":1556,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1555,"column":0},"generated":{"line":1557,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1556,"column":0},"generated":{"line":1558,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1557,"column":0},"generated":{"line":1559,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1558,"column":0},"generated":{"line":1560,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1559,"column":0},"generated":{"line":1561,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1560,"column":0},"generated":{"line":1562,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1561,"column":0},"generated":{"line":1563,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1562,"column":0},"generated":{"line":1564,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1563,"column":0},"generated":{"line":1565,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1564,"column":0},"generated":{"line":1566,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1565,"column":0},"generated":{"line":1567,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1566,"column":0},"generated":{"line":1568,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1567,"column":0},"generated":{"line":1569,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1568,"column":0},"generated":{"line":1570,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1569,"column":0},"generated":{"line":1571,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1570,"column":0},"generated":{"line":1572,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1571,"column":0},"generated":{"line":1573,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1572,"column":0},"generated":{"line":1574,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1573,"column":0},"generated":{"line":1575,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1574,"column":0},"generated":{"line":1576,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1575,"column":0},"generated":{"line":1577,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1576,"column":0},"generated":{"line":1578,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1577,"column":0},"generated":{"line":1579,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1578,"column":0},"generated":{"line":1580,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1579,"column":0},"generated":{"line":1581,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1580,"column":0},"generated":{"line":1582,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1581,"column":0},"generated":{"line":1583,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1582,"column":0},"generated":{"line":1584,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1583,"column":0},"generated":{"line":1585,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1584,"column":0},"generated":{"line":1586,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1585,"column":0},"generated":{"line":1587,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1586,"column":0},"generated":{"line":1588,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1587,"column":0},"generated":{"line":1589,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1588,"column":0},"generated":{"line":1590,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1589,"column":0},"generated":{"line":1591,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1590,"column":0},"generated":{"line":1592,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1591,"column":0},"generated":{"line":1593,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1592,"column":0},"generated":{"line":1594,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1593,"column":0},"generated":{"line":1595,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1594,"column":0},"generated":{"line":1596,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1595,"column":0},"generated":{"line":1597,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1596,"column":0},"generated":{"line":1598,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1597,"column":0},"generated":{"line":1599,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1598,"column":0},"generated":{"line":1600,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1599,"column":0},"generated":{"line":1601,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1600,"column":0},"generated":{"line":1602,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1601,"column":0},"generated":{"line":1603,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1602,"column":0},"generated":{"line":1604,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1603,"column":0},"generated":{"line":1605,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1604,"column":0},"generated":{"line":1606,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1605,"column":0},"generated":{"line":1607,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1606,"column":0},"generated":{"line":1608,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1607,"column":0},"generated":{"line":1609,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1608,"column":0},"generated":{"line":1610,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1609,"column":0},"generated":{"line":1611,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1610,"column":0},"generated":{"line":1612,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1611,"column":0},"generated":{"line":1613,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1612,"column":0},"generated":{"line":1614,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1613,"column":0},"generated":{"line":1615,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1614,"column":0},"generated":{"line":1616,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1615,"column":0},"generated":{"line":1617,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1616,"column":0},"generated":{"line":1618,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1617,"column":0},"generated":{"line":1619,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1618,"column":0},"generated":{"line":1620,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1619,"column":0},"generated":{"line":1621,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1620,"column":0},"generated":{"line":1622,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1621,"column":0},"generated":{"line":1623,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1622,"column":0},"generated":{"line":1624,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1623,"column":0},"generated":{"line":1625,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1624,"column":0},"generated":{"line":1626,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1625,"column":0},"generated":{"line":1627,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1626,"column":0},"generated":{"line":1628,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1627,"column":0},"generated":{"line":1629,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1628,"column":0},"generated":{"line":1630,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1629,"column":0},"generated":{"line":1631,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1630,"column":0},"generated":{"line":1632,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1631,"column":0},"generated":{"line":1633,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1632,"column":0},"generated":{"line":1634,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1633,"column":0},"generated":{"line":1635,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1634,"column":0},"generated":{"line":1636,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1635,"column":0},"generated":{"line":1637,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1636,"column":0},"generated":{"line":1638,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1637,"column":0},"generated":{"line":1639,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1638,"column":0},"generated":{"line":1640,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1639,"column":0},"generated":{"line":1641,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1640,"column":0},"generated":{"line":1642,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1641,"column":0},"generated":{"line":1643,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1642,"column":0},"generated":{"line":1644,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1643,"column":0},"generated":{"line":1645,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1644,"column":0},"generated":{"line":1646,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1645,"column":0},"generated":{"line":1647,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1646,"column":0},"generated":{"line":1648,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1647,"column":0},"generated":{"line":1649,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1648,"column":0},"generated":{"line":1650,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1649,"column":0},"generated":{"line":1651,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1650,"column":0},"generated":{"line":1652,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1651,"column":0},"generated":{"line":1653,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1652,"column":0},"generated":{"line":1654,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1653,"column":0},"generated":{"line":1655,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1654,"column":0},"generated":{"line":1656,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1655,"column":0},"generated":{"line":1657,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1656,"column":0},"generated":{"line":1658,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1657,"column":0},"generated":{"line":1659,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1658,"column":0},"generated":{"line":1660,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1659,"column":0},"generated":{"line":1661,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1660,"column":0},"generated":{"line":1662,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1661,"column":0},"generated":{"line":1663,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1662,"column":0},"generated":{"line":1664,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1663,"column":0},"generated":{"line":1665,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1664,"column":0},"generated":{"line":1666,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1665,"column":0},"generated":{"line":1667,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1666,"column":0},"generated":{"line":1668,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1667,"column":0},"generated":{"line":1669,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1668,"column":0},"generated":{"line":1670,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1669,"column":0},"generated":{"line":1671,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1670,"column":0},"generated":{"line":1672,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1671,"column":0},"generated":{"line":1673,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1672,"column":0},"generated":{"line":1674,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1673,"column":0},"generated":{"line":1675,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1674,"column":0},"generated":{"line":1676,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1675,"column":0},"generated":{"line":1677,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1676,"column":0},"generated":{"line":1678,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1677,"column":0},"generated":{"line":1679,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1678,"column":0},"generated":{"line":1680,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1679,"column":0},"generated":{"line":1681,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1680,"column":0},"generated":{"line":1682,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1681,"column":0},"generated":{"line":1683,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1682,"column":0},"generated":{"line":1684,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1683,"column":0},"generated":{"line":1685,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1684,"column":0},"generated":{"line":1686,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1685,"column":0},"generated":{"line":1687,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1686,"column":0},"generated":{"line":1688,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1687,"column":0},"generated":{"line":1689,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1688,"column":0},"generated":{"line":1690,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1689,"column":0},"generated":{"line":1691,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1690,"column":0},"generated":{"line":1692,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1691,"column":0},"generated":{"line":1693,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1692,"column":0},"generated":{"line":1694,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1693,"column":0},"generated":{"line":1695,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1694,"column":0},"generated":{"line":1696,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1695,"column":0},"generated":{"line":1697,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1696,"column":0},"generated":{"line":1698,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1697,"column":0},"generated":{"line":1699,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1698,"column":0},"generated":{"line":1700,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1699,"column":0},"generated":{"line":1701,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1700,"column":0},"generated":{"line":1702,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1701,"column":0},"generated":{"line":1703,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1702,"column":0},"generated":{"line":1704,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1703,"column":0},"generated":{"line":1705,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1704,"column":0},"generated":{"line":1706,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1705,"column":0},"generated":{"line":1707,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1706,"column":0},"generated":{"line":1708,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1707,"column":0},"generated":{"line":1709,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1708,"column":0},"generated":{"line":1710,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1709,"column":0},"generated":{"line":1711,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1710,"column":0},"generated":{"line":1712,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1711,"column":0},"generated":{"line":1713,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1712,"column":0},"generated":{"line":1714,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1713,"column":0},"generated":{"line":1715,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1714,"column":0},"generated":{"line":1716,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1715,"column":0},"generated":{"line":1717,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1716,"column":0},"generated":{"line":1718,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1717,"column":0},"generated":{"line":1719,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1718,"column":0},"generated":{"line":1720,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1719,"column":0},"generated":{"line":1721,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1720,"column":0},"generated":{"line":1722,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1721,"column":0},"generated":{"line":1723,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1722,"column":0},"generated":{"line":1724,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1723,"column":0},"generated":{"line":1725,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1724,"column":0},"generated":{"line":1726,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1725,"column":0},"generated":{"line":1727,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1726,"column":0},"generated":{"line":1728,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1727,"column":0},"generated":{"line":1729,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1728,"column":0},"generated":{"line":1730,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1729,"column":0},"generated":{"line":1731,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1730,"column":0},"generated":{"line":1732,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1731,"column":0},"generated":{"line":1733,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1732,"column":0},"generated":{"line":1734,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1733,"column":0},"generated":{"line":1735,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1734,"column":0},"generated":{"line":1736,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1735,"column":0},"generated":{"line":1737,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1736,"column":0},"generated":{"line":1738,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1737,"column":0},"generated":{"line":1739,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1738,"column":0},"generated":{"line":1740,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1739,"column":0},"generated":{"line":1741,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1740,"column":0},"generated":{"line":1742,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1741,"column":0},"generated":{"line":1743,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1742,"column":0},"generated":{"line":1744,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1743,"column":0},"generated":{"line":1745,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1744,"column":0},"generated":{"line":1746,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1745,"column":0},"generated":{"line":1747,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1746,"column":0},"generated":{"line":1748,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1747,"column":0},"generated":{"line":1749,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1748,"column":0},"generated":{"line":1750,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1749,"column":0},"generated":{"line":1751,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1750,"column":0},"generated":{"line":1752,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1751,"column":0},"generated":{"line":1753,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1752,"column":0},"generated":{"line":1754,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1753,"column":0},"generated":{"line":1755,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1754,"column":0},"generated":{"line":1756,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1755,"column":0},"generated":{"line":1757,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1756,"column":0},"generated":{"line":1758,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1757,"column":0},"generated":{"line":1759,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1758,"column":0},"generated":{"line":1760,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1759,"column":0},"generated":{"line":1761,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1760,"column":0},"generated":{"line":1762,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1761,"column":0},"generated":{"line":1763,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1762,"column":0},"generated":{"line":1764,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1763,"column":0},"generated":{"line":1765,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1764,"column":0},"generated":{"line":1766,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1765,"column":0},"generated":{"line":1767,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1766,"column":0},"generated":{"line":1768,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1767,"column":0},"generated":{"line":1769,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1768,"column":0},"generated":{"line":1770,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1769,"column":0},"generated":{"line":1771,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1770,"column":0},"generated":{"line":1772,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1771,"column":0},"generated":{"line":1773,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1772,"column":0},"generated":{"line":1774,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1773,"column":0},"generated":{"line":1775,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1774,"column":0},"generated":{"line":1776,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1775,"column":0},"generated":{"line":1777,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1776,"column":0},"generated":{"line":1778,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1777,"column":0},"generated":{"line":1779,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1778,"column":0},"generated":{"line":1780,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1779,"column":0},"generated":{"line":1781,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1780,"column":0},"generated":{"line":1782,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1781,"column":0},"generated":{"line":1783,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1782,"column":0},"generated":{"line":1784,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1783,"column":0},"generated":{"line":1785,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1784,"column":0},"generated":{"line":1786,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1785,"column":0},"generated":{"line":1787,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1786,"column":0},"generated":{"line":1788,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1787,"column":0},"generated":{"line":1789,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1788,"column":0},"generated":{"line":1790,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1789,"column":0},"generated":{"line":1791,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1790,"column":0},"generated":{"line":1792,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1791,"column":0},"generated":{"line":1793,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1792,"column":0},"generated":{"line":1794,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1793,"column":0},"generated":{"line":1795,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1794,"column":0},"generated":{"line":1796,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1795,"column":0},"generated":{"line":1797,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1796,"column":0},"generated":{"line":1798,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1797,"column":0},"generated":{"line":1799,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1798,"column":0},"generated":{"line":1800,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1799,"column":0},"generated":{"line":1801,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1800,"column":0},"generated":{"line":1802,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1801,"column":0},"generated":{"line":1803,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1802,"column":0},"generated":{"line":1804,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1803,"column":0},"generated":{"line":1805,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1804,"column":0},"generated":{"line":1806,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1805,"column":0},"generated":{"line":1807,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1806,"column":0},"generated":{"line":1808,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1807,"column":0},"generated":{"line":1809,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1808,"column":0},"generated":{"line":1810,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1809,"column":0},"generated":{"line":1811,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1810,"column":0},"generated":{"line":1812,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1811,"column":0},"generated":{"line":1813,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1812,"column":0},"generated":{"line":1814,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1813,"column":0},"generated":{"line":1815,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1814,"column":0},"generated":{"line":1816,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1815,"column":0},"generated":{"line":1817,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1816,"column":0},"generated":{"line":1818,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1817,"column":0},"generated":{"line":1819,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1818,"column":0},"generated":{"line":1820,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1819,"column":0},"generated":{"line":1821,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1820,"column":0},"generated":{"line":1822,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1821,"column":0},"generated":{"line":1823,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1822,"column":0},"generated":{"line":1824,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1823,"column":0},"generated":{"line":1825,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1824,"column":0},"generated":{"line":1826,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1825,"column":0},"generated":{"line":1827,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1826,"column":0},"generated":{"line":1828,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1827,"column":0},"generated":{"line":1829,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1828,"column":0},"generated":{"line":1830,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1829,"column":0},"generated":{"line":1831,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1830,"column":0},"generated":{"line":1832,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1831,"column":0},"generated":{"line":1833,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1832,"column":0},"generated":{"line":1834,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1833,"column":0},"generated":{"line":1835,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1834,"column":0},"generated":{"line":1836,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1835,"column":0},"generated":{"line":1837,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1836,"column":0},"generated":{"line":1838,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1837,"column":0},"generated":{"line":1839,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1838,"column":0},"generated":{"line":1840,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1839,"column":0},"generated":{"line":1841,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1840,"column":0},"generated":{"line":1842,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1841,"column":0},"generated":{"line":1843,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1842,"column":0},"generated":{"line":1844,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1843,"column":0},"generated":{"line":1845,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1844,"column":0},"generated":{"line":1846,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1845,"column":0},"generated":{"line":1847,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1846,"column":0},"generated":{"line":1848,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1847,"column":0},"generated":{"line":1849,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1848,"column":0},"generated":{"line":1850,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1849,"column":0},"generated":{"line":1851,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1850,"column":0},"generated":{"line":1852,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1851,"column":0},"generated":{"line":1853,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1852,"column":0},"generated":{"line":1854,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1853,"column":0},"generated":{"line":1855,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1854,"column":0},"generated":{"line":1856,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1855,"column":0},"generated":{"line":1857,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1856,"column":0},"generated":{"line":1858,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1857,"column":0},"generated":{"line":1859,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1858,"column":0},"generated":{"line":1860,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1859,"column":0},"generated":{"line":1861,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1860,"column":0},"generated":{"line":1862,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1861,"column":0},"generated":{"line":1863,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1862,"column":0},"generated":{"line":1864,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1863,"column":0},"generated":{"line":1865,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1864,"column":0},"generated":{"line":1866,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1865,"column":0},"generated":{"line":1867,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1866,"column":0},"generated":{"line":1868,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1867,"column":0},"generated":{"line":1869,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1868,"column":0},"generated":{"line":1870,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1869,"column":0},"generated":{"line":1871,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1870,"column":0},"generated":{"line":1872,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1871,"column":0},"generated":{"line":1873,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1872,"column":0},"generated":{"line":1874,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1873,"column":0},"generated":{"line":1875,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1874,"column":0},"generated":{"line":1876,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1875,"column":0},"generated":{"line":1877,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1876,"column":0},"generated":{"line":1878,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1877,"column":0},"generated":{"line":1879,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1878,"column":0},"generated":{"line":1880,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1879,"column":0},"generated":{"line":1881,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1880,"column":0},"generated":{"line":1882,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1881,"column":0},"generated":{"line":1883,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1882,"column":0},"generated":{"line":1884,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1883,"column":0},"generated":{"line":1885,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1884,"column":0},"generated":{"line":1886,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1885,"column":0},"generated":{"line":1887,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1886,"column":0},"generated":{"line":1888,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1887,"column":0},"generated":{"line":1889,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1888,"column":0},"generated":{"line":1890,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1889,"column":0},"generated":{"line":1891,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1890,"column":0},"generated":{"line":1892,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1891,"column":0},"generated":{"line":1893,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1892,"column":0},"generated":{"line":1894,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1893,"column":0},"generated":{"line":1895,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1894,"column":0},"generated":{"line":1896,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1895,"column":0},"generated":{"line":1897,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1896,"column":0},"generated":{"line":1898,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1897,"column":0},"generated":{"line":1899,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1898,"column":0},"generated":{"line":1900,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1899,"column":0},"generated":{"line":1901,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1900,"column":0},"generated":{"line":1902,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1901,"column":0},"generated":{"line":1903,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1902,"column":0},"generated":{"line":1904,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1903,"column":0},"generated":{"line":1905,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1904,"column":0},"generated":{"line":1906,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1905,"column":0},"generated":{"line":1907,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1906,"column":0},"generated":{"line":1908,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1907,"column":0},"generated":{"line":1909,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1908,"column":0},"generated":{"line":1910,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1909,"column":0},"generated":{"line":1911,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1910,"column":0},"generated":{"line":1912,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1911,"column":0},"generated":{"line":1913,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1912,"column":0},"generated":{"line":1914,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1913,"column":0},"generated":{"line":1915,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1914,"column":0},"generated":{"line":1916,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1915,"column":0},"generated":{"line":1917,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1916,"column":0},"generated":{"line":1918,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1917,"column":0},"generated":{"line":1919,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1918,"column":0},"generated":{"line":1920,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1919,"column":0},"generated":{"line":1921,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1920,"column":0},"generated":{"line":1922,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1921,"column":0},"generated":{"line":1923,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1922,"column":0},"generated":{"line":1924,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1923,"column":0},"generated":{"line":1925,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1924,"column":0},"generated":{"line":1926,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1925,"column":0},"generated":{"line":1927,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1926,"column":0},"generated":{"line":1928,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1927,"column":0},"generated":{"line":1929,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1928,"column":0},"generated":{"line":1930,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1929,"column":0},"generated":{"line":1931,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1930,"column":0},"generated":{"line":1932,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1931,"column":0},"generated":{"line":1933,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1932,"column":0},"generated":{"line":1934,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1933,"column":0},"generated":{"line":1935,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1934,"column":0},"generated":{"line":1936,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1935,"column":0},"generated":{"line":1937,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1936,"column":0},"generated":{"line":1938,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1937,"column":0},"generated":{"line":1939,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1938,"column":0},"generated":{"line":1940,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1939,"column":0},"generated":{"line":1941,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1940,"column":0},"generated":{"line":1942,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1941,"column":0},"generated":{"line":1943,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1942,"column":0},"generated":{"line":1944,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1943,"column":0},"generated":{"line":1945,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1944,"column":0},"generated":{"line":1946,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1945,"column":0},"generated":{"line":1947,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1946,"column":0},"generated":{"line":1948,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1947,"column":0},"generated":{"line":1949,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1948,"column":0},"generated":{"line":1950,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1949,"column":0},"generated":{"line":1951,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1950,"column":0},"generated":{"line":1952,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1951,"column":0},"generated":{"line":1953,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1952,"column":0},"generated":{"line":1954,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1953,"column":0},"generated":{"line":1955,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1954,"column":0},"generated":{"line":1956,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1955,"column":0},"generated":{"line":1957,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1956,"column":0},"generated":{"line":1958,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1957,"column":0},"generated":{"line":1959,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1958,"column":0},"generated":{"line":1960,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1959,"column":0},"generated":{"line":1961,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1960,"column":0},"generated":{"line":1962,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1961,"column":0},"generated":{"line":1963,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1962,"column":0},"generated":{"line":1964,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1963,"column":0},"generated":{"line":1965,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1964,"column":0},"generated":{"line":1966,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1965,"column":0},"generated":{"line":1967,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1966,"column":0},"generated":{"line":1968,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1967,"column":0},"generated":{"line":1969,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1968,"column":0},"generated":{"line":1970,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1969,"column":0},"generated":{"line":1971,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1970,"column":0},"generated":{"line":1972,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1971,"column":0},"generated":{"line":1973,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1972,"column":0},"generated":{"line":1974,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1973,"column":0},"generated":{"line":1975,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1974,"column":0},"generated":{"line":1976,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1975,"column":0},"generated":{"line":1977,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1976,"column":0},"generated":{"line":1978,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1977,"column":0},"generated":{"line":1979,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1978,"column":0},"generated":{"line":1980,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1979,"column":0},"generated":{"line":1981,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1980,"column":0},"generated":{"line":1982,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1981,"column":0},"generated":{"line":1983,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1982,"column":0},"generated":{"line":1984,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1983,"column":0},"generated":{"line":1985,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1984,"column":0},"generated":{"line":1986,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1985,"column":0},"generated":{"line":1987,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1986,"column":0},"generated":{"line":1988,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1987,"column":0},"generated":{"line":1989,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1988,"column":0},"generated":{"line":1990,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1989,"column":0},"generated":{"line":1991,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1990,"column":0},"generated":{"line":1992,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1991,"column":0},"generated":{"line":1993,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1992,"column":0},"generated":{"line":1994,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1993,"column":0},"generated":{"line":1995,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1994,"column":0},"generated":{"line":1996,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1995,"column":0},"generated":{"line":1997,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1996,"column":0},"generated":{"line":1998,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1997,"column":0},"generated":{"line":1999,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1998,"column":0},"generated":{"line":2000,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":1999,"column":0},"generated":{"line":2001,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2000,"column":0},"generated":{"line":2002,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2001,"column":0},"generated":{"line":2003,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2002,"column":0},"generated":{"line":2004,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2003,"column":0},"generated":{"line":2005,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2004,"column":0},"generated":{"line":2006,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2005,"column":0},"generated":{"line":2007,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2006,"column":0},"generated":{"line":2008,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2007,"column":0},"generated":{"line":2009,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2008,"column":0},"generated":{"line":2010,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2009,"column":0},"generated":{"line":2011,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2010,"column":0},"generated":{"line":2012,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2011,"column":0},"generated":{"line":2013,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2012,"column":0},"generated":{"line":2014,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2013,"column":0},"generated":{"line":2015,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2014,"column":0},"generated":{"line":2016,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2015,"column":0},"generated":{"line":2017,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2016,"column":0},"generated":{"line":2018,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2017,"column":0},"generated":{"line":2019,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2018,"column":0},"generated":{"line":2020,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2019,"column":0},"generated":{"line":2021,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2020,"column":0},"generated":{"line":2022,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2021,"column":0},"generated":{"line":2023,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2022,"column":0},"generated":{"line":2024,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2023,"column":0},"generated":{"line":2025,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2024,"column":0},"generated":{"line":2026,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2025,"column":0},"generated":{"line":2027,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2026,"column":0},"generated":{"line":2028,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2027,"column":0},"generated":{"line":2029,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2028,"column":0},"generated":{"line":2030,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2029,"column":0},"generated":{"line":2031,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2030,"column":0},"generated":{"line":2032,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2031,"column":0},"generated":{"line":2033,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2032,"column":0},"generated":{"line":2034,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2033,"column":0},"generated":{"line":2035,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2034,"column":0},"generated":{"line":2036,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2035,"column":0},"generated":{"line":2037,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2036,"column":0},"generated":{"line":2038,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2037,"column":0},"generated":{"line":2039,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2038,"column":0},"generated":{"line":2040,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2039,"column":0},"generated":{"line":2041,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2040,"column":0},"generated":{"line":2042,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2041,"column":0},"generated":{"line":2043,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2042,"column":0},"generated":{"line":2044,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2043,"column":0},"generated":{"line":2045,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2044,"column":0},"generated":{"line":2046,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2045,"column":0},"generated":{"line":2047,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2046,"column":0},"generated":{"line":2048,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2047,"column":0},"generated":{"line":2049,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2048,"column":0},"generated":{"line":2050,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2049,"column":0},"generated":{"line":2051,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2050,"column":0},"generated":{"line":2052,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2051,"column":0},"generated":{"line":2053,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2052,"column":0},"generated":{"line":2054,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2053,"column":0},"generated":{"line":2055,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2054,"column":0},"generated":{"line":2056,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2055,"column":0},"generated":{"line":2057,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2056,"column":0},"generated":{"line":2058,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2057,"column":0},"generated":{"line":2059,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2058,"column":0},"generated":{"line":2060,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2059,"column":0},"generated":{"line":2061,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2060,"column":0},"generated":{"line":2062,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2061,"column":0},"generated":{"line":2063,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2062,"column":0},"generated":{"line":2064,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2063,"column":0},"generated":{"line":2065,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2064,"column":0},"generated":{"line":2066,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2065,"column":0},"generated":{"line":2067,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2066,"column":0},"generated":{"line":2068,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2067,"column":0},"generated":{"line":2069,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2068,"column":0},"generated":{"line":2070,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2069,"column":0},"generated":{"line":2071,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2070,"column":0},"generated":{"line":2072,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2071,"column":0},"generated":{"line":2073,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2072,"column":0},"generated":{"line":2074,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2073,"column":0},"generated":{"line":2075,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2074,"column":0},"generated":{"line":2076,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2075,"column":0},"generated":{"line":2077,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2076,"column":0},"generated":{"line":2078,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2077,"column":0},"generated":{"line":2079,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2078,"column":0},"generated":{"line":2080,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2079,"column":0},"generated":{"line":2081,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2080,"column":0},"generated":{"line":2082,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2081,"column":0},"generated":{"line":2083,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2082,"column":0},"generated":{"line":2084,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2083,"column":0},"generated":{"line":2085,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2084,"column":0},"generated":{"line":2086,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2085,"column":0},"generated":{"line":2087,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2086,"column":0},"generated":{"line":2088,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2087,"column":0},"generated":{"line":2089,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2088,"column":0},"generated":{"line":2090,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2089,"column":0},"generated":{"line":2091,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2090,"column":0},"generated":{"line":2092,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2091,"column":0},"generated":{"line":2093,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2092,"column":0},"generated":{"line":2094,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2093,"column":0},"generated":{"line":2095,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2094,"column":0},"generated":{"line":2096,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2095,"column":0},"generated":{"line":2097,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2096,"column":0},"generated":{"line":2098,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2097,"column":0},"generated":{"line":2099,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2098,"column":0},"generated":{"line":2100,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2099,"column":0},"generated":{"line":2101,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2100,"column":0},"generated":{"line":2102,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2101,"column":0},"generated":{"line":2103,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2102,"column":0},"generated":{"line":2104,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2103,"column":0},"generated":{"line":2105,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2104,"column":0},"generated":{"line":2106,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2105,"column":0},"generated":{"line":2107,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2106,"column":0},"generated":{"line":2108,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2107,"column":0},"generated":{"line":2109,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2108,"column":0},"generated":{"line":2110,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2109,"column":0},"generated":{"line":2111,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2110,"column":0},"generated":{"line":2112,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2111,"column":0},"generated":{"line":2113,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2112,"column":0},"generated":{"line":2114,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2113,"column":0},"generated":{"line":2115,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2114,"column":0},"generated":{"line":2116,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2115,"column":0},"generated":{"line":2117,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2116,"column":0},"generated":{"line":2118,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2117,"column":0},"generated":{"line":2119,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2118,"column":0},"generated":{"line":2120,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2119,"column":0},"generated":{"line":2121,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2120,"column":0},"generated":{"line":2122,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2121,"column":0},"generated":{"line":2123,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2122,"column":0},"generated":{"line":2124,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2123,"column":0},"generated":{"line":2125,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2124,"column":0},"generated":{"line":2126,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2125,"column":0},"generated":{"line":2127,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2126,"column":0},"generated":{"line":2128,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2127,"column":0},"generated":{"line":2129,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2128,"column":0},"generated":{"line":2130,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2129,"column":0},"generated":{"line":2131,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2130,"column":0},"generated":{"line":2132,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2131,"column":0},"generated":{"line":2133,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2132,"column":0},"generated":{"line":2134,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2133,"column":0},"generated":{"line":2135,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2134,"column":0},"generated":{"line":2136,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2135,"column":0},"generated":{"line":2137,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2136,"column":0},"generated":{"line":2138,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2137,"column":0},"generated":{"line":2139,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2138,"column":0},"generated":{"line":2140,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2139,"column":0},"generated":{"line":2141,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2140,"column":0},"generated":{"line":2142,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2141,"column":0},"generated":{"line":2143,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2142,"column":0},"generated":{"line":2144,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2143,"column":0},"generated":{"line":2145,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2144,"column":0},"generated":{"line":2146,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2145,"column":0},"generated":{"line":2147,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2146,"column":0},"generated":{"line":2148,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2147,"column":0},"generated":{"line":2149,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2148,"column":0},"generated":{"line":2150,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2149,"column":0},"generated":{"line":2151,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2150,"column":0},"generated":{"line":2152,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2151,"column":0},"generated":{"line":2153,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2152,"column":0},"generated":{"line":2154,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2153,"column":0},"generated":{"line":2155,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2154,"column":0},"generated":{"line":2156,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2155,"column":0},"generated":{"line":2157,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2156,"column":0},"generated":{"line":2158,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2157,"column":0},"generated":{"line":2159,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2158,"column":0},"generated":{"line":2160,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2159,"column":0},"generated":{"line":2161,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2160,"column":0},"generated":{"line":2162,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2161,"column":0},"generated":{"line":2163,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2162,"column":0},"generated":{"line":2164,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2163,"column":0},"generated":{"line":2165,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2164,"column":0},"generated":{"line":2166,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2165,"column":0},"generated":{"line":2167,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2166,"column":0},"generated":{"line":2168,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2167,"column":0},"generated":{"line":2169,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2168,"column":0},"generated":{"line":2170,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2169,"column":0},"generated":{"line":2171,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2170,"column":0},"generated":{"line":2172,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2171,"column":0},"generated":{"line":2173,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2172,"column":0},"generated":{"line":2174,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2173,"column":0},"generated":{"line":2175,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2174,"column":0},"generated":{"line":2176,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2175,"column":0},"generated":{"line":2177,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2176,"column":0},"generated":{"line":2178,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2177,"column":0},"generated":{"line":2179,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2178,"column":0},"generated":{"line":2180,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2179,"column":0},"generated":{"line":2181,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2180,"column":0},"generated":{"line":2182,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2181,"column":0},"generated":{"line":2183,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2182,"column":0},"generated":{"line":2184,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2183,"column":0},"generated":{"line":2185,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2184,"column":0},"generated":{"line":2186,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2185,"column":0},"generated":{"line":2187,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2186,"column":0},"generated":{"line":2188,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2187,"column":0},"generated":{"line":2189,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2188,"column":0},"generated":{"line":2190,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2189,"column":0},"generated":{"line":2191,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2190,"column":0},"generated":{"line":2192,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2191,"column":0},"generated":{"line":2193,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2192,"column":0},"generated":{"line":2194,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2193,"column":0},"generated":{"line":2195,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2194,"column":0},"generated":{"line":2196,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2195,"column":0},"generated":{"line":2197,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2196,"column":0},"generated":{"line":2198,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2197,"column":0},"generated":{"line":2199,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2198,"column":0},"generated":{"line":2200,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2199,"column":0},"generated":{"line":2201,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2200,"column":0},"generated":{"line":2202,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2201,"column":0},"generated":{"line":2203,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2202,"column":0},"generated":{"line":2204,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2203,"column":0},"generated":{"line":2205,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2204,"column":0},"generated":{"line":2206,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2205,"column":0},"generated":{"line":2207,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2206,"column":0},"generated":{"line":2208,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2207,"column":0},"generated":{"line":2209,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2208,"column":0},"generated":{"line":2210,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2209,"column":0},"generated":{"line":2211,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2210,"column":0},"generated":{"line":2212,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2211,"column":0},"generated":{"line":2213,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2212,"column":0},"generated":{"line":2214,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2213,"column":0},"generated":{"line":2215,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2214,"column":0},"generated":{"line":2216,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2215,"column":0},"generated":{"line":2217,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2216,"column":0},"generated":{"line":2218,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2217,"column":0},"generated":{"line":2219,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2218,"column":0},"generated":{"line":2220,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2219,"column":0},"generated":{"line":2221,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2220,"column":0},"generated":{"line":2222,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2221,"column":0},"generated":{"line":2223,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2222,"column":0},"generated":{"line":2224,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2223,"column":0},"generated":{"line":2225,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2224,"column":0},"generated":{"line":2226,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2225,"column":0},"generated":{"line":2227,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2226,"column":0},"generated":{"line":2228,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2227,"column":0},"generated":{"line":2229,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2228,"column":0},"generated":{"line":2230,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2229,"column":0},"generated":{"line":2231,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2230,"column":0},"generated":{"line":2232,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2231,"column":0},"generated":{"line":2233,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2232,"column":0},"generated":{"line":2234,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2233,"column":0},"generated":{"line":2235,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2234,"column":0},"generated":{"line":2236,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2235,"column":0},"generated":{"line":2237,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2236,"column":0},"generated":{"line":2238,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2237,"column":0},"generated":{"line":2239,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2238,"column":0},"generated":{"line":2240,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2239,"column":0},"generated":{"line":2241,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2240,"column":0},"generated":{"line":2242,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2241,"column":0},"generated":{"line":2243,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2242,"column":0},"generated":{"line":2244,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2243,"column":0},"generated":{"line":2245,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2244,"column":0},"generated":{"line":2246,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2245,"column":0},"generated":{"line":2247,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2246,"column":0},"generated":{"line":2248,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2247,"column":0},"generated":{"line":2249,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2248,"column":0},"generated":{"line":2250,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2249,"column":0},"generated":{"line":2251,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2250,"column":0},"generated":{"line":2252,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2251,"column":0},"generated":{"line":2253,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2252,"column":0},"generated":{"line":2254,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2253,"column":0},"generated":{"line":2255,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2254,"column":0},"generated":{"line":2256,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2255,"column":0},"generated":{"line":2257,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2256,"column":0},"generated":{"line":2258,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2257,"column":0},"generated":{"line":2259,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2258,"column":0},"generated":{"line":2260,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2259,"column":0},"generated":{"line":2261,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2260,"column":0},"generated":{"line":2262,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2261,"column":0},"generated":{"line":2263,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2262,"column":0},"generated":{"line":2264,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2263,"column":0},"generated":{"line":2265,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2264,"column":0},"generated":{"line":2266,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2265,"column":0},"generated":{"line":2267,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2266,"column":0},"generated":{"line":2268,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2267,"column":0},"generated":{"line":2269,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2268,"column":0},"generated":{"line":2270,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2269,"column":0},"generated":{"line":2271,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2270,"column":0},"generated":{"line":2272,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2271,"column":0},"generated":{"line":2273,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2272,"column":0},"generated":{"line":2274,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2273,"column":0},"generated":{"line":2275,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2274,"column":0},"generated":{"line":2276,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2275,"column":0},"generated":{"line":2277,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2276,"column":0},"generated":{"line":2278,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2277,"column":0},"generated":{"line":2279,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2278,"column":0},"generated":{"line":2280,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2279,"column":0},"generated":{"line":2281,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2280,"column":0},"generated":{"line":2282,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2281,"column":0},"generated":{"line":2283,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2282,"column":0},"generated":{"line":2284,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2283,"column":0},"generated":{"line":2285,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2284,"column":0},"generated":{"line":2286,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2285,"column":0},"generated":{"line":2287,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2286,"column":0},"generated":{"line":2288,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2287,"column":0},"generated":{"line":2289,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2288,"column":0},"generated":{"line":2290,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2289,"column":0},"generated":{"line":2291,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2290,"column":0},"generated":{"line":2292,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2291,"column":0},"generated":{"line":2293,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2292,"column":0},"generated":{"line":2294,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2293,"column":0},"generated":{"line":2295,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2294,"column":0},"generated":{"line":2296,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2295,"column":0},"generated":{"line":2297,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2296,"column":0},"generated":{"line":2298,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2297,"column":0},"generated":{"line":2299,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2298,"column":0},"generated":{"line":2300,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2299,"column":0},"generated":{"line":2301,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2300,"column":0},"generated":{"line":2302,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2301,"column":0},"generated":{"line":2303,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2302,"column":0},"generated":{"line":2304,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2303,"column":0},"generated":{"line":2305,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2304,"column":0},"generated":{"line":2306,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2305,"column":0},"generated":{"line":2307,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2306,"column":0},"generated":{"line":2308,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2307,"column":0},"generated":{"line":2309,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2308,"column":0},"generated":{"line":2310,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2309,"column":0},"generated":{"line":2311,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2310,"column":0},"generated":{"line":2312,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2311,"column":0},"generated":{"line":2313,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2312,"column":0},"generated":{"line":2314,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2313,"column":0},"generated":{"line":2315,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2314,"column":0},"generated":{"line":2316,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2315,"column":0},"generated":{"line":2317,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2316,"column":0},"generated":{"line":2318,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2317,"column":0},"generated":{"line":2319,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2318,"column":0},"generated":{"line":2320,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2319,"column":0},"generated":{"line":2321,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2320,"column":0},"generated":{"line":2322,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2321,"column":0},"generated":{"line":2323,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2322,"column":0},"generated":{"line":2324,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2323,"column":0},"generated":{"line":2325,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2324,"column":0},"generated":{"line":2326,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2325,"column":0},"generated":{"line":2327,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2326,"column":0},"generated":{"line":2328,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2327,"column":0},"generated":{"line":2329,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2328,"column":0},"generated":{"line":2330,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2329,"column":0},"generated":{"line":2331,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2330,"column":0},"generated":{"line":2332,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2331,"column":0},"generated":{"line":2333,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2332,"column":0},"generated":{"line":2334,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2333,"column":0},"generated":{"line":2335,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2334,"column":0},"generated":{"line":2336,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2335,"column":0},"generated":{"line":2337,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2336,"column":0},"generated":{"line":2338,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2337,"column":0},"generated":{"line":2339,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2338,"column":0},"generated":{"line":2340,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2339,"column":0},"generated":{"line":2341,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2340,"column":0},"generated":{"line":2342,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2341,"column":0},"generated":{"line":2343,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2342,"column":0},"generated":{"line":2344,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2343,"column":0},"generated":{"line":2345,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2344,"column":0},"generated":{"line":2346,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2345,"column":0},"generated":{"line":2347,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2346,"column":0},"generated":{"line":2348,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2347,"column":0},"generated":{"line":2349,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2348,"column":0},"generated":{"line":2350,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2349,"column":0},"generated":{"line":2351,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2350,"column":0},"generated":{"line":2352,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2351,"column":0},"generated":{"line":2353,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2352,"column":0},"generated":{"line":2354,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2353,"column":0},"generated":{"line":2355,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2354,"column":0},"generated":{"line":2356,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2355,"column":0},"generated":{"line":2357,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2356,"column":0},"generated":{"line":2358,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2357,"column":0},"generated":{"line":2359,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2358,"column":0},"generated":{"line":2360,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2359,"column":0},"generated":{"line":2361,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2360,"column":0},"generated":{"line":2362,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2361,"column":0},"generated":{"line":2363,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2362,"column":0},"generated":{"line":2364,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2363,"column":0},"generated":{"line":2365,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2364,"column":0},"generated":{"line":2366,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2365,"column":0},"generated":{"line":2367,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2366,"column":0},"generated":{"line":2368,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2367,"column":0},"generated":{"line":2369,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2368,"column":0},"generated":{"line":2370,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2369,"column":0},"generated":{"line":2371,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2370,"column":0},"generated":{"line":2372,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2371,"column":0},"generated":{"line":2373,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2372,"column":0},"generated":{"line":2374,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2373,"column":0},"generated":{"line":2375,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2374,"column":0},"generated":{"line":2376,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2375,"column":0},"generated":{"line":2377,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2376,"column":0},"generated":{"line":2378,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2377,"column":0},"generated":{"line":2379,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2378,"column":0},"generated":{"line":2380,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2379,"column":0},"generated":{"line":2381,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2380,"column":0},"generated":{"line":2382,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2381,"column":0},"generated":{"line":2383,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2382,"column":0},"generated":{"line":2384,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2383,"column":0},"generated":{"line":2385,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2384,"column":0},"generated":{"line":2386,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2385,"column":0},"generated":{"line":2387,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2386,"column":0},"generated":{"line":2388,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2387,"column":0},"generated":{"line":2389,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2388,"column":0},"generated":{"line":2390,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2389,"column":0},"generated":{"line":2391,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2390,"column":0},"generated":{"line":2392,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2391,"column":0},"generated":{"line":2393,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2392,"column":0},"generated":{"line":2394,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2393,"column":0},"generated":{"line":2395,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2394,"column":0},"generated":{"line":2396,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2395,"column":0},"generated":{"line":2397,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2396,"column":0},"generated":{"line":2398,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2397,"column":0},"generated":{"line":2399,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2398,"column":0},"generated":{"line":2400,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2399,"column":0},"generated":{"line":2401,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2400,"column":0},"generated":{"line":2402,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2401,"column":0},"generated":{"line":2403,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2402,"column":0},"generated":{"line":2404,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2403,"column":0},"generated":{"line":2405,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2404,"column":0},"generated":{"line":2406,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2405,"column":0},"generated":{"line":2407,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2406,"column":0},"generated":{"line":2408,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2407,"column":0},"generated":{"line":2409,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2408,"column":0},"generated":{"line":2410,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2409,"column":0},"generated":{"line":2411,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2410,"column":0},"generated":{"line":2412,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2411,"column":0},"generated":{"line":2413,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2412,"column":0},"generated":{"line":2414,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2413,"column":0},"generated":{"line":2415,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2414,"column":0},"generated":{"line":2416,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2415,"column":0},"generated":{"line":2417,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2416,"column":0},"generated":{"line":2418,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2417,"column":0},"generated":{"line":2419,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2418,"column":0},"generated":{"line":2420,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2419,"column":0},"generated":{"line":2421,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2420,"column":0},"generated":{"line":2422,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2421,"column":0},"generated":{"line":2423,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2422,"column":0},"generated":{"line":2424,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2423,"column":0},"generated":{"line":2425,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2424,"column":0},"generated":{"line":2426,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2425,"column":0},"generated":{"line":2427,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2426,"column":0},"generated":{"line":2428,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2427,"column":0},"generated":{"line":2429,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2428,"column":0},"generated":{"line":2430,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2429,"column":0},"generated":{"line":2431,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2430,"column":0},"generated":{"line":2432,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2431,"column":0},"generated":{"line":2433,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2432,"column":0},"generated":{"line":2434,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2433,"column":0},"generated":{"line":2435,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2434,"column":0},"generated":{"line":2436,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2435,"column":0},"generated":{"line":2437,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2436,"column":0},"generated":{"line":2438,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2437,"column":0},"generated":{"line":2439,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2438,"column":0},"generated":{"line":2440,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2439,"column":0},"generated":{"line":2441,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2440,"column":0},"generated":{"line":2442,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2441,"column":0},"generated":{"line":2443,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2442,"column":0},"generated":{"line":2444,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2443,"column":0},"generated":{"line":2445,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2444,"column":0},"generated":{"line":2446,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2445,"column":0},"generated":{"line":2447,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2446,"column":0},"generated":{"line":2448,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2447,"column":0},"generated":{"line":2449,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2448,"column":0},"generated":{"line":2450,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2449,"column":0},"generated":{"line":2451,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2450,"column":0},"generated":{"line":2452,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2451,"column":0},"generated":{"line":2453,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2452,"column":0},"generated":{"line":2454,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2453,"column":0},"generated":{"line":2455,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2454,"column":0},"generated":{"line":2456,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2455,"column":0},"generated":{"line":2457,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2456,"column":0},"generated":{"line":2458,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2457,"column":0},"generated":{"line":2459,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2458,"column":0},"generated":{"line":2460,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2459,"column":0},"generated":{"line":2461,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2460,"column":0},"generated":{"line":2462,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2461,"column":0},"generated":{"line":2463,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2462,"column":0},"generated":{"line":2464,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2463,"column":0},"generated":{"line":2465,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2464,"column":0},"generated":{"line":2466,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2465,"column":0},"generated":{"line":2467,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2466,"column":0},"generated":{"line":2468,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2467,"column":0},"generated":{"line":2469,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2468,"column":0},"generated":{"line":2470,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2469,"column":0},"generated":{"line":2471,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2470,"column":0},"generated":{"line":2472,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2471,"column":0},"generated":{"line":2473,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2472,"column":0},"generated":{"line":2474,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2473,"column":0},"generated":{"line":2475,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2474,"column":0},"generated":{"line":2476,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2475,"column":0},"generated":{"line":2477,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2476,"column":0},"generated":{"line":2478,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2477,"column":0},"generated":{"line":2479,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2478,"column":0},"generated":{"line":2480,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2479,"column":0},"generated":{"line":2481,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2480,"column":0},"generated":{"line":2482,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2481,"column":0},"generated":{"line":2483,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2482,"column":0},"generated":{"line":2484,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2483,"column":0},"generated":{"line":2485,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2484,"column":0},"generated":{"line":2486,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2485,"column":0},"generated":{"line":2487,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2486,"column":0},"generated":{"line":2488,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2487,"column":0},"generated":{"line":2489,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2488,"column":0},"generated":{"line":2490,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2489,"column":0},"generated":{"line":2491,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2490,"column":0},"generated":{"line":2492,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2491,"column":0},"generated":{"line":2493,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2492,"column":0},"generated":{"line":2494,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2493,"column":0},"generated":{"line":2495,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2494,"column":0},"generated":{"line":2496,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2495,"column":0},"generated":{"line":2497,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2496,"column":0},"generated":{"line":2498,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2497,"column":0},"generated":{"line":2499,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2498,"column":0},"generated":{"line":2500,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2499,"column":0},"generated":{"line":2501,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2500,"column":0},"generated":{"line":2502,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2501,"column":0},"generated":{"line":2503,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2502,"column":0},"generated":{"line":2504,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2503,"column":0},"generated":{"line":2505,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2504,"column":0},"generated":{"line":2506,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2505,"column":0},"generated":{"line":2507,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2506,"column":0},"generated":{"line":2508,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2507,"column":0},"generated":{"line":2509,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2508,"column":0},"generated":{"line":2510,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2509,"column":0},"generated":{"line":2511,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2510,"column":0},"generated":{"line":2512,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2511,"column":0},"generated":{"line":2513,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2512,"column":0},"generated":{"line":2514,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2513,"column":0},"generated":{"line":2515,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2514,"column":0},"generated":{"line":2516,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2515,"column":0},"generated":{"line":2517,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2516,"column":0},"generated":{"line":2518,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2517,"column":0},"generated":{"line":2519,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2518,"column":0},"generated":{"line":2520,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2519,"column":0},"generated":{"line":2521,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2520,"column":0},"generated":{"line":2522,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2521,"column":0},"generated":{"line":2523,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2522,"column":0},"generated":{"line":2524,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2523,"column":0},"generated":{"line":2525,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2524,"column":0},"generated":{"line":2526,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2525,"column":0},"generated":{"line":2527,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2526,"column":0},"generated":{"line":2528,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2527,"column":0},"generated":{"line":2529,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2528,"column":0},"generated":{"line":2530,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2529,"column":0},"generated":{"line":2531,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2530,"column":0},"generated":{"line":2532,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2531,"column":0},"generated":{"line":2533,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2532,"column":0},"generated":{"line":2534,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2533,"column":0},"generated":{"line":2535,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2534,"column":0},"generated":{"line":2536,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2535,"column":0},"generated":{"line":2537,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2536,"column":0},"generated":{"line":2538,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2537,"column":0},"generated":{"line":2539,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2538,"column":0},"generated":{"line":2540,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2539,"column":0},"generated":{"line":2541,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2540,"column":0},"generated":{"line":2542,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2541,"column":0},"generated":{"line":2543,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2542,"column":0},"generated":{"line":2544,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2543,"column":0},"generated":{"line":2545,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2544,"column":0},"generated":{"line":2546,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2545,"column":0},"generated":{"line":2547,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2546,"column":0},"generated":{"line":2548,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2547,"column":0},"generated":{"line":2549,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2548,"column":0},"generated":{"line":2550,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2549,"column":0},"generated":{"line":2551,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2550,"column":0},"generated":{"line":2552,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2551,"column":0},"generated":{"line":2553,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2552,"column":0},"generated":{"line":2554,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2553,"column":0},"generated":{"line":2555,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2554,"column":0},"generated":{"line":2556,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2555,"column":0},"generated":{"line":2557,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2556,"column":0},"generated":{"line":2558,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2557,"column":0},"generated":{"line":2559,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2558,"column":0},"generated":{"line":2560,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2559,"column":0},"generated":{"line":2561,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2560,"column":0},"generated":{"line":2562,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2561,"column":0},"generated":{"line":2563,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2562,"column":0},"generated":{"line":2564,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2563,"column":0},"generated":{"line":2565,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2564,"column":0},"generated":{"line":2566,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2565,"column":0},"generated":{"line":2567,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2566,"column":0},"generated":{"line":2568,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2567,"column":0},"generated":{"line":2569,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2568,"column":0},"generated":{"line":2570,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2569,"column":0},"generated":{"line":2571,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2570,"column":0},"generated":{"line":2572,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2571,"column":0},"generated":{"line":2573,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2572,"column":0},"generated":{"line":2574,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2573,"column":0},"generated":{"line":2575,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2574,"column":0},"generated":{"line":2576,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2575,"column":0},"generated":{"line":2577,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2576,"column":0},"generated":{"line":2578,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2577,"column":0},"generated":{"line":2579,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2578,"column":0},"generated":{"line":2580,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2579,"column":0},"generated":{"line":2581,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2580,"column":0},"generated":{"line":2582,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2581,"column":0},"generated":{"line":2583,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2582,"column":0},"generated":{"line":2584,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2583,"column":0},"generated":{"line":2585,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2584,"column":0},"generated":{"line":2586,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2585,"column":0},"generated":{"line":2587,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2586,"column":0},"generated":{"line":2588,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2587,"column":0},"generated":{"line":2589,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2588,"column":0},"generated":{"line":2590,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2589,"column":0},"generated":{"line":2591,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2590,"column":0},"generated":{"line":2592,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2591,"column":0},"generated":{"line":2593,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2592,"column":0},"generated":{"line":2594,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2593,"column":0},"generated":{"line":2595,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2594,"column":0},"generated":{"line":2596,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2595,"column":0},"generated":{"line":2597,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2596,"column":0},"generated":{"line":2598,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2597,"column":0},"generated":{"line":2599,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2598,"column":0},"generated":{"line":2600,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2599,"column":0},"generated":{"line":2601,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2600,"column":0},"generated":{"line":2602,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2601,"column":0},"generated":{"line":2603,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2602,"column":0},"generated":{"line":2604,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2603,"column":0},"generated":{"line":2605,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2604,"column":0},"generated":{"line":2606,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2605,"column":0},"generated":{"line":2607,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2606,"column":0},"generated":{"line":2608,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2607,"column":0},"generated":{"line":2609,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2608,"column":0},"generated":{"line":2610,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2609,"column":0},"generated":{"line":2611,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2610,"column":0},"generated":{"line":2612,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2611,"column":0},"generated":{"line":2613,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2612,"column":0},"generated":{"line":2614,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2613,"column":0},"generated":{"line":2615,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2614,"column":0},"generated":{"line":2616,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2615,"column":0},"generated":{"line":2617,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2616,"column":0},"generated":{"line":2618,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2617,"column":0},"generated":{"line":2619,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2618,"column":0},"generated":{"line":2620,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2619,"column":0},"generated":{"line":2621,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2620,"column":0},"generated":{"line":2622,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2621,"column":0},"generated":{"line":2623,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2622,"column":0},"generated":{"line":2624,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2623,"column":0},"generated":{"line":2625,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2624,"column":0},"generated":{"line":2626,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2625,"column":0},"generated":{"line":2627,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2626,"column":0},"generated":{"line":2628,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2627,"column":0},"generated":{"line":2629,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2628,"column":0},"generated":{"line":2630,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2629,"column":0},"generated":{"line":2631,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2630,"column":0},"generated":{"line":2632,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2631,"column":0},"generated":{"line":2633,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2632,"column":0},"generated":{"line":2634,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2633,"column":0},"generated":{"line":2635,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2634,"column":0},"generated":{"line":2636,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2635,"column":0},"generated":{"line":2637,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2636,"column":0},"generated":{"line":2638,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2637,"column":0},"generated":{"line":2639,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2638,"column":0},"generated":{"line":2640,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2639,"column":0},"generated":{"line":2641,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2640,"column":0},"generated":{"line":2642,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2641,"column":0},"generated":{"line":2643,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2642,"column":0},"generated":{"line":2644,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2643,"column":0},"generated":{"line":2645,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2644,"column":0},"generated":{"line":2646,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2645,"column":0},"generated":{"line":2647,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2646,"column":0},"generated":{"line":2648,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2647,"column":0},"generated":{"line":2649,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2648,"column":0},"generated":{"line":2650,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2649,"column":0},"generated":{"line":2651,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2650,"column":0},"generated":{"line":2652,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2651,"column":0},"generated":{"line":2653,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2652,"column":0},"generated":{"line":2654,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2653,"column":0},"generated":{"line":2655,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2654,"column":0},"generated":{"line":2656,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2655,"column":0},"generated":{"line":2657,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2656,"column":0},"generated":{"line":2658,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2657,"column":0},"generated":{"line":2659,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2658,"column":0},"generated":{"line":2660,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2659,"column":0},"generated":{"line":2661,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2660,"column":0},"generated":{"line":2662,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2661,"column":0},"generated":{"line":2663,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2662,"column":0},"generated":{"line":2664,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2663,"column":0},"generated":{"line":2665,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2664,"column":0},"generated":{"line":2666,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2665,"column":0},"generated":{"line":2667,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2666,"column":0},"generated":{"line":2668,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2667,"column":0},"generated":{"line":2669,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2668,"column":0},"generated":{"line":2670,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2669,"column":0},"generated":{"line":2671,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2670,"column":0},"generated":{"line":2672,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2671,"column":0},"generated":{"line":2673,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2672,"column":0},"generated":{"line":2674,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2673,"column":0},"generated":{"line":2675,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2674,"column":0},"generated":{"line":2676,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2675,"column":0},"generated":{"line":2677,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2676,"column":0},"generated":{"line":2678,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2677,"column":0},"generated":{"line":2679,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2678,"column":0},"generated":{"line":2680,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2679,"column":0},"generated":{"line":2681,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2680,"column":0},"generated":{"line":2682,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2681,"column":0},"generated":{"line":2683,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2682,"column":0},"generated":{"line":2684,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2683,"column":0},"generated":{"line":2685,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2684,"column":0},"generated":{"line":2686,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2685,"column":0},"generated":{"line":2687,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2686,"column":0},"generated":{"line":2688,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2687,"column":0},"generated":{"line":2689,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2688,"column":0},"generated":{"line":2690,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2689,"column":0},"generated":{"line":2691,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2690,"column":0},"generated":{"line":2692,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2691,"column":0},"generated":{"line":2693,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2692,"column":0},"generated":{"line":2694,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2693,"column":0},"generated":{"line":2695,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2694,"column":0},"generated":{"line":2696,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2695,"column":0},"generated":{"line":2697,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2696,"column":0},"generated":{"line":2698,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2697,"column":0},"generated":{"line":2699,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2698,"column":0},"generated":{"line":2700,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2699,"column":0},"generated":{"line":2701,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2700,"column":0},"generated":{"line":2702,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2701,"column":0},"generated":{"line":2703,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2702,"column":0},"generated":{"line":2704,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2703,"column":0},"generated":{"line":2705,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2704,"column":0},"generated":{"line":2706,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2705,"column":0},"generated":{"line":2707,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2706,"column":0},"generated":{"line":2708,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2707,"column":0},"generated":{"line":2709,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2708,"column":0},"generated":{"line":2710,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2709,"column":0},"generated":{"line":2711,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2710,"column":0},"generated":{"line":2712,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2711,"column":0},"generated":{"line":2713,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2712,"column":0},"generated":{"line":2714,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2713,"column":0},"generated":{"line":2715,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2714,"column":0},"generated":{"line":2716,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2715,"column":0},"generated":{"line":2717,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2716,"column":0},"generated":{"line":2718,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2717,"column":0},"generated":{"line":2719,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2718,"column":0},"generated":{"line":2720,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2719,"column":0},"generated":{"line":2721,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2720,"column":0},"generated":{"line":2722,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2721,"column":0},"generated":{"line":2723,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2722,"column":0},"generated":{"line":2724,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2723,"column":0},"generated":{"line":2725,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2724,"column":0},"generated":{"line":2726,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2725,"column":0},"generated":{"line":2727,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2726,"column":0},"generated":{"line":2728,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2727,"column":0},"generated":{"line":2729,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2728,"column":0},"generated":{"line":2730,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2729,"column":0},"generated":{"line":2731,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2730,"column":0},"generated":{"line":2732,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2731,"column":0},"generated":{"line":2733,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2732,"column":0},"generated":{"line":2734,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2733,"column":0},"generated":{"line":2735,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2734,"column":0},"generated":{"line":2736,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2735,"column":0},"generated":{"line":2737,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2736,"column":0},"generated":{"line":2738,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2737,"column":0},"generated":{"line":2739,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2738,"column":0},"generated":{"line":2740,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2739,"column":0},"generated":{"line":2741,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2740,"column":0},"generated":{"line":2742,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2741,"column":0},"generated":{"line":2743,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2742,"column":0},"generated":{"line":2744,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2743,"column":0},"generated":{"line":2745,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2744,"column":0},"generated":{"line":2746,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2745,"column":0},"generated":{"line":2747,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2746,"column":0},"generated":{"line":2748,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2747,"column":0},"generated":{"line":2749,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2748,"column":0},"generated":{"line":2750,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2749,"column":0},"generated":{"line":2751,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2750,"column":0},"generated":{"line":2752,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2751,"column":0},"generated":{"line":2753,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2752,"column":0},"generated":{"line":2754,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2753,"column":0},"generated":{"line":2755,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2754,"column":0},"generated":{"line":2756,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2755,"column":0},"generated":{"line":2757,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2756,"column":0},"generated":{"line":2758,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2757,"column":0},"generated":{"line":2759,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2758,"column":0},"generated":{"line":2760,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2759,"column":0},"generated":{"line":2761,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2760,"column":0},"generated":{"line":2762,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2761,"column":0},"generated":{"line":2763,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2762,"column":0},"generated":{"line":2764,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2763,"column":0},"generated":{"line":2765,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2764,"column":0},"generated":{"line":2766,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2765,"column":0},"generated":{"line":2767,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2766,"column":0},"generated":{"line":2768,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2767,"column":0},"generated":{"line":2769,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2768,"column":0},"generated":{"line":2770,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2769,"column":0},"generated":{"line":2771,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2770,"column":0},"generated":{"line":2772,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2771,"column":0},"generated":{"line":2773,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2772,"column":0},"generated":{"line":2774,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2773,"column":0},"generated":{"line":2775,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2774,"column":0},"generated":{"line":2776,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2775,"column":0},"generated":{"line":2777,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2776,"column":0},"generated":{"line":2778,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2777,"column":0},"generated":{"line":2779,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2778,"column":0},"generated":{"line":2780,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2779,"column":0},"generated":{"line":2781,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2780,"column":0},"generated":{"line":2782,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2781,"column":0},"generated":{"line":2783,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2782,"column":0},"generated":{"line":2784,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2783,"column":0},"generated":{"line":2785,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2784,"column":0},"generated":{"line":2786,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2785,"column":0},"generated":{"line":2787,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2786,"column":0},"generated":{"line":2788,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2787,"column":0},"generated":{"line":2789,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2788,"column":0},"generated":{"line":2790,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2789,"column":0},"generated":{"line":2791,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2790,"column":0},"generated":{"line":2792,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2791,"column":0},"generated":{"line":2793,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2792,"column":0},"generated":{"line":2794,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2793,"column":0},"generated":{"line":2795,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2794,"column":0},"generated":{"line":2796,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2795,"column":0},"generated":{"line":2797,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2796,"column":0},"generated":{"line":2798,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2797,"column":0},"generated":{"line":2799,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2798,"column":0},"generated":{"line":2800,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2799,"column":0},"generated":{"line":2801,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2800,"column":0},"generated":{"line":2802,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2801,"column":0},"generated":{"line":2803,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2802,"column":0},"generated":{"line":2804,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2803,"column":0},"generated":{"line":2805,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2804,"column":0},"generated":{"line":2806,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2805,"column":0},"generated":{"line":2807,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2806,"column":0},"generated":{"line":2808,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2807,"column":0},"generated":{"line":2809,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2808,"column":0},"generated":{"line":2810,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2809,"column":0},"generated":{"line":2811,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2810,"column":0},"generated":{"line":2812,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2811,"column":0},"generated":{"line":2813,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2812,"column":0},"generated":{"line":2814,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2813,"column":0},"generated":{"line":2815,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2814,"column":0},"generated":{"line":2816,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2815,"column":0},"generated":{"line":2817,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2816,"column":0},"generated":{"line":2818,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2817,"column":0},"generated":{"line":2819,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2818,"column":0},"generated":{"line":2820,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2819,"column":0},"generated":{"line":2821,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2820,"column":0},"generated":{"line":2822,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2821,"column":0},"generated":{"line":2823,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2822,"column":0},"generated":{"line":2824,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2823,"column":0},"generated":{"line":2825,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2824,"column":0},"generated":{"line":2826,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2825,"column":0},"generated":{"line":2827,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2826,"column":0},"generated":{"line":2828,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2827,"column":0},"generated":{"line":2829,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2828,"column":0},"generated":{"line":2830,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2829,"column":0},"generated":{"line":2831,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2830,"column":0},"generated":{"line":2832,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2831,"column":0},"generated":{"line":2833,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2832,"column":0},"generated":{"line":2834,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2833,"column":0},"generated":{"line":2835,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2834,"column":0},"generated":{"line":2836,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2835,"column":0},"generated":{"line":2837,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2836,"column":0},"generated":{"line":2838,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2837,"column":0},"generated":{"line":2839,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2838,"column":0},"generated":{"line":2840,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2839,"column":0},"generated":{"line":2841,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2840,"column":0},"generated":{"line":2842,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2841,"column":0},"generated":{"line":2843,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2842,"column":0},"generated":{"line":2844,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2843,"column":0},"generated":{"line":2845,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2844,"column":0},"generated":{"line":2846,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2845,"column":0},"generated":{"line":2847,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2846,"column":0},"generated":{"line":2848,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2847,"column":0},"generated":{"line":2849,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2848,"column":0},"generated":{"line":2850,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2849,"column":0},"generated":{"line":2851,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2850,"column":0},"generated":{"line":2852,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2851,"column":0},"generated":{"line":2853,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2852,"column":0},"generated":{"line":2854,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2853,"column":0},"generated":{"line":2855,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2854,"column":0},"generated":{"line":2856,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2855,"column":0},"generated":{"line":2857,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2856,"column":0},"generated":{"line":2858,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2857,"column":0},"generated":{"line":2859,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2858,"column":0},"generated":{"line":2860,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2859,"column":0},"generated":{"line":2861,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2860,"column":0},"generated":{"line":2862,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2861,"column":0},"generated":{"line":2863,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2862,"column":0},"generated":{"line":2864,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2863,"column":0},"generated":{"line":2865,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2864,"column":0},"generated":{"line":2866,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2865,"column":0},"generated":{"line":2867,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2866,"column":0},"generated":{"line":2868,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2867,"column":0},"generated":{"line":2869,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2868,"column":0},"generated":{"line":2870,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2869,"column":0},"generated":{"line":2871,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2870,"column":0},"generated":{"line":2872,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2871,"column":0},"generated":{"line":2873,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2872,"column":0},"generated":{"line":2874,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2873,"column":0},"generated":{"line":2875,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2874,"column":0},"generated":{"line":2876,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2875,"column":0},"generated":{"line":2877,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2876,"column":0},"generated":{"line":2878,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2877,"column":0},"generated":{"line":2879,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2878,"column":0},"generated":{"line":2880,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2879,"column":0},"generated":{"line":2881,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2880,"column":0},"generated":{"line":2882,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2881,"column":0},"generated":{"line":2883,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2882,"column":0},"generated":{"line":2884,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2883,"column":0},"generated":{"line":2885,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2884,"column":0},"generated":{"line":2886,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2885,"column":0},"generated":{"line":2887,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2886,"column":0},"generated":{"line":2888,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2887,"column":0},"generated":{"line":2889,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2888,"column":0},"generated":{"line":2890,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2889,"column":0},"generated":{"line":2891,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2890,"column":0},"generated":{"line":2892,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2891,"column":0},"generated":{"line":2893,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2892,"column":0},"generated":{"line":2894,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2893,"column":0},"generated":{"line":2895,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2894,"column":0},"generated":{"line":2896,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2895,"column":0},"generated":{"line":2897,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2896,"column":0},"generated":{"line":2898,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2897,"column":0},"generated":{"line":2899,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2898,"column":0},"generated":{"line":2900,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2899,"column":0},"generated":{"line":2901,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2900,"column":0},"generated":{"line":2902,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2901,"column":0},"generated":{"line":2903,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2902,"column":0},"generated":{"line":2904,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2903,"column":0},"generated":{"line":2905,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2904,"column":0},"generated":{"line":2906,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2905,"column":0},"generated":{"line":2907,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2906,"column":0},"generated":{"line":2908,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2907,"column":0},"generated":{"line":2909,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2908,"column":0},"generated":{"line":2910,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2909,"column":0},"generated":{"line":2911,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2910,"column":0},"generated":{"line":2912,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2911,"column":0},"generated":{"line":2913,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2912,"column":0},"generated":{"line":2914,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2913,"column":0},"generated":{"line":2915,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2914,"column":0},"generated":{"line":2916,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2915,"column":0},"generated":{"line":2917,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2916,"column":0},"generated":{"line":2918,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2917,"column":0},"generated":{"line":2919,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2918,"column":0},"generated":{"line":2920,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2919,"column":0},"generated":{"line":2921,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2920,"column":0},"generated":{"line":2922,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2921,"column":0},"generated":{"line":2923,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2922,"column":0},"generated":{"line":2924,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2923,"column":0},"generated":{"line":2925,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2924,"column":0},"generated":{"line":2926,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2925,"column":0},"generated":{"line":2927,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2926,"column":0},"generated":{"line":2928,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2927,"column":0},"generated":{"line":2929,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2928,"column":0},"generated":{"line":2930,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2929,"column":0},"generated":{"line":2931,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2930,"column":0},"generated":{"line":2932,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2931,"column":0},"generated":{"line":2933,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2932,"column":0},"generated":{"line":2934,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2933,"column":0},"generated":{"line":2935,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2934,"column":0},"generated":{"line":2936,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2935,"column":0},"generated":{"line":2937,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2936,"column":0},"generated":{"line":2938,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2937,"column":0},"generated":{"line":2939,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2938,"column":0},"generated":{"line":2940,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2939,"column":0},"generated":{"line":2941,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2940,"column":0},"generated":{"line":2942,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2941,"column":0},"generated":{"line":2943,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2942,"column":0},"generated":{"line":2944,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2943,"column":0},"generated":{"line":2945,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2944,"column":0},"generated":{"line":2946,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2945,"column":0},"generated":{"line":2947,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2946,"column":0},"generated":{"line":2948,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2947,"column":0},"generated":{"line":2949,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2948,"column":0},"generated":{"line":2950,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2949,"column":0},"generated":{"line":2951,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2950,"column":0},"generated":{"line":2952,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2951,"column":0},"generated":{"line":2953,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2952,"column":0},"generated":{"line":2954,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2953,"column":0},"generated":{"line":2955,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2954,"column":0},"generated":{"line":2956,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2955,"column":0},"generated":{"line":2957,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2956,"column":0},"generated":{"line":2958,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2957,"column":0},"generated":{"line":2959,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2958,"column":0},"generated":{"line":2960,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2959,"column":0},"generated":{"line":2961,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2960,"column":0},"generated":{"line":2962,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2961,"column":0},"generated":{"line":2963,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2962,"column":0},"generated":{"line":2964,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2963,"column":0},"generated":{"line":2965,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2964,"column":0},"generated":{"line":2966,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2965,"column":0},"generated":{"line":2967,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2966,"column":0},"generated":{"line":2968,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2967,"column":0},"generated":{"line":2969,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2968,"column":0},"generated":{"line":2970,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2969,"column":0},"generated":{"line":2971,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2970,"column":0},"generated":{"line":2972,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2971,"column":0},"generated":{"line":2973,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2972,"column":0},"generated":{"line":2974,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2973,"column":0},"generated":{"line":2975,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2974,"column":0},"generated":{"line":2976,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2975,"column":0},"generated":{"line":2977,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2976,"column":0},"generated":{"line":2978,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2977,"column":0},"generated":{"line":2979,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2978,"column":0},"generated":{"line":2980,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2979,"column":0},"generated":{"line":2981,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2980,"column":0},"generated":{"line":2982,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2981,"column":0},"generated":{"line":2983,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2982,"column":0},"generated":{"line":2984,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2983,"column":0},"generated":{"line":2985,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2984,"column":0},"generated":{"line":2986,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2985,"column":0},"generated":{"line":2987,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2986,"column":0},"generated":{"line":2988,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2987,"column":0},"generated":{"line":2989,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2988,"column":0},"generated":{"line":2990,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2989,"column":0},"generated":{"line":2991,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2990,"column":0},"generated":{"line":2992,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2991,"column":0},"generated":{"line":2993,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2992,"column":0},"generated":{"line":2994,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2993,"column":0},"generated":{"line":2995,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2994,"column":0},"generated":{"line":2996,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2995,"column":0},"generated":{"line":2997,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2996,"column":0},"generated":{"line":2998,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2997,"column":0},"generated":{"line":2999,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2998,"column":0},"generated":{"line":3000,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":2999,"column":0},"generated":{"line":3001,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3000,"column":0},"generated":{"line":3002,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3001,"column":0},"generated":{"line":3003,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3002,"column":0},"generated":{"line":3004,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3003,"column":0},"generated":{"line":3005,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3004,"column":0},"generated":{"line":3006,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3005,"column":0},"generated":{"line":3007,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3006,"column":0},"generated":{"line":3008,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3007,"column":0},"generated":{"line":3009,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3008,"column":0},"generated":{"line":3010,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3009,"column":0},"generated":{"line":3011,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3010,"column":0},"generated":{"line":3012,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3011,"column":0},"generated":{"line":3013,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3012,"column":0},"generated":{"line":3014,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3013,"column":0},"generated":{"line":3015,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3014,"column":0},"generated":{"line":3016,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3015,"column":0},"generated":{"line":3017,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3016,"column":0},"generated":{"line":3018,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3017,"column":0},"generated":{"line":3019,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3018,"column":0},"generated":{"line":3020,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3019,"column":0},"generated":{"line":3021,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3020,"column":0},"generated":{"line":3022,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3021,"column":0},"generated":{"line":3023,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3022,"column":0},"generated":{"line":3024,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3023,"column":0},"generated":{"line":3025,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3024,"column":0},"generated":{"line":3026,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3025,"column":0},"generated":{"line":3027,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3026,"column":0},"generated":{"line":3028,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3027,"column":0},"generated":{"line":3029,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3028,"column":0},"generated":{"line":3030,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3029,"column":0},"generated":{"line":3031,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3030,"column":0},"generated":{"line":3032,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3031,"column":0},"generated":{"line":3033,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3032,"column":0},"generated":{"line":3034,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3033,"column":0},"generated":{"line":3035,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3034,"column":0},"generated":{"line":3036,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3035,"column":0},"generated":{"line":3037,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3036,"column":0},"generated":{"line":3038,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3037,"column":0},"generated":{"line":3039,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3038,"column":0},"generated":{"line":3040,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3039,"column":0},"generated":{"line":3041,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3040,"column":0},"generated":{"line":3042,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3041,"column":0},"generated":{"line":3043,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3042,"column":0},"generated":{"line":3044,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3043,"column":0},"generated":{"line":3045,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3044,"column":0},"generated":{"line":3046,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3045,"column":0},"generated":{"line":3047,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3046,"column":0},"generated":{"line":3048,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3047,"column":0},"generated":{"line":3049,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3048,"column":0},"generated":{"line":3050,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3049,"column":0},"generated":{"line":3051,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3050,"column":0},"generated":{"line":3052,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3051,"column":0},"generated":{"line":3053,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3052,"column":0},"generated":{"line":3054,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3053,"column":0},"generated":{"line":3055,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3054,"column":0},"generated":{"line":3056,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3055,"column":0},"generated":{"line":3057,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3056,"column":0},"generated":{"line":3058,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3057,"column":0},"generated":{"line":3059,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3058,"column":0},"generated":{"line":3060,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3059,"column":0},"generated":{"line":3061,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3060,"column":0},"generated":{"line":3062,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3061,"column":0},"generated":{"line":3063,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3062,"column":0},"generated":{"line":3064,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3063,"column":0},"generated":{"line":3065,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3064,"column":0},"generated":{"line":3066,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3065,"column":0},"generated":{"line":3067,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3066,"column":0},"generated":{"line":3068,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3067,"column":0},"generated":{"line":3069,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3068,"column":0},"generated":{"line":3070,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3069,"column":0},"generated":{"line":3071,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3070,"column":0},"generated":{"line":3072,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3071,"column":0},"generated":{"line":3073,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3072,"column":0},"generated":{"line":3074,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3073,"column":0},"generated":{"line":3075,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3074,"column":0},"generated":{"line":3076,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3075,"column":0},"generated":{"line":3077,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3076,"column":0},"generated":{"line":3078,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3077,"column":0},"generated":{"line":3079,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3078,"column":0},"generated":{"line":3080,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3079,"column":0},"generated":{"line":3081,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3080,"column":0},"generated":{"line":3082,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3081,"column":0},"generated":{"line":3083,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3082,"column":0},"generated":{"line":3084,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3083,"column":0},"generated":{"line":3085,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3084,"column":0},"generated":{"line":3086,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3085,"column":0},"generated":{"line":3087,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3086,"column":0},"generated":{"line":3088,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3087,"column":0},"generated":{"line":3089,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3088,"column":0},"generated":{"line":3090,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3089,"column":0},"generated":{"line":3091,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3090,"column":0},"generated":{"line":3092,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3091,"column":0},"generated":{"line":3093,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3092,"column":0},"generated":{"line":3094,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3093,"column":0},"generated":{"line":3095,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3094,"column":0},"generated":{"line":3096,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3095,"column":0},"generated":{"line":3097,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3096,"column":0},"generated":{"line":3098,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3097,"column":0},"generated":{"line":3099,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3098,"column":0},"generated":{"line":3100,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3099,"column":0},"generated":{"line":3101,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3100,"column":0},"generated":{"line":3102,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3101,"column":0},"generated":{"line":3103,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3102,"column":0},"generated":{"line":3104,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3103,"column":0},"generated":{"line":3105,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3104,"column":0},"generated":{"line":3106,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3105,"column":0},"generated":{"line":3107,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3106,"column":0},"generated":{"line":3108,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3107,"column":0},"generated":{"line":3109,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3108,"column":0},"generated":{"line":3110,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3109,"column":0},"generated":{"line":3111,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3110,"column":0},"generated":{"line":3112,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3111,"column":0},"generated":{"line":3113,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3112,"column":0},"generated":{"line":3114,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3113,"column":0},"generated":{"line":3115,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3114,"column":0},"generated":{"line":3116,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3115,"column":0},"generated":{"line":3117,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3116,"column":0},"generated":{"line":3118,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3117,"column":0},"generated":{"line":3119,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3118,"column":0},"generated":{"line":3120,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3119,"column":0},"generated":{"line":3121,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3120,"column":0},"generated":{"line":3122,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3121,"column":0},"generated":{"line":3123,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3122,"column":0},"generated":{"line":3124,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3123,"column":0},"generated":{"line":3125,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3124,"column":0},"generated":{"line":3126,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3125,"column":0},"generated":{"line":3127,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3126,"column":0},"generated":{"line":3128,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3127,"column":0},"generated":{"line":3129,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3128,"column":0},"generated":{"line":3130,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3129,"column":0},"generated":{"line":3131,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3130,"column":0},"generated":{"line":3132,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3131,"column":0},"generated":{"line":3133,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3132,"column":0},"generated":{"line":3134,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3133,"column":0},"generated":{"line":3135,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3134,"column":0},"generated":{"line":3136,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3135,"column":0},"generated":{"line":3137,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3136,"column":0},"generated":{"line":3138,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3137,"column":0},"generated":{"line":3139,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3138,"column":0},"generated":{"line":3140,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3139,"column":0},"generated":{"line":3141,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3140,"column":0},"generated":{"line":3142,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3141,"column":0},"generated":{"line":3143,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3142,"column":0},"generated":{"line":3144,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3143,"column":0},"generated":{"line":3145,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3144,"column":0},"generated":{"line":3146,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3145,"column":0},"generated":{"line":3147,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3146,"column":0},"generated":{"line":3148,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3147,"column":0},"generated":{"line":3149,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3148,"column":0},"generated":{"line":3150,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3149,"column":0},"generated":{"line":3151,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3150,"column":0},"generated":{"line":3152,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3151,"column":0},"generated":{"line":3153,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3152,"column":0},"generated":{"line":3154,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3153,"column":0},"generated":{"line":3155,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3154,"column":0},"generated":{"line":3156,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3155,"column":0},"generated":{"line":3157,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3156,"column":0},"generated":{"line":3158,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3157,"column":0},"generated":{"line":3159,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3158,"column":0},"generated":{"line":3160,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3159,"column":0},"generated":{"line":3161,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3160,"column":0},"generated":{"line":3162,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3161,"column":0},"generated":{"line":3163,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3162,"column":0},"generated":{"line":3164,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3163,"column":0},"generated":{"line":3165,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3164,"column":0},"generated":{"line":3166,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3165,"column":0},"generated":{"line":3167,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3166,"column":0},"generated":{"line":3168,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3167,"column":0},"generated":{"line":3169,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3168,"column":0},"generated":{"line":3170,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3169,"column":0},"generated":{"line":3171,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3170,"column":0},"generated":{"line":3172,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3171,"column":0},"generated":{"line":3173,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3172,"column":0},"generated":{"line":3174,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3173,"column":0},"generated":{"line":3175,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3174,"column":0},"generated":{"line":3176,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3175,"column":0},"generated":{"line":3177,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3176,"column":0},"generated":{"line":3178,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3177,"column":0},"generated":{"line":3179,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3178,"column":0},"generated":{"line":3180,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3179,"column":0},"generated":{"line":3181,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3180,"column":0},"generated":{"line":3182,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3181,"column":0},"generated":{"line":3183,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3182,"column":0},"generated":{"line":3184,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3183,"column":0},"generated":{"line":3185,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3184,"column":0},"generated":{"line":3186,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3185,"column":0},"generated":{"line":3187,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3186,"column":0},"generated":{"line":3188,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3187,"column":0},"generated":{"line":3189,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3188,"column":0},"generated":{"line":3190,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3189,"column":0},"generated":{"line":3191,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3190,"column":0},"generated":{"line":3192,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3191,"column":0},"generated":{"line":3193,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3192,"column":0},"generated":{"line":3194,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3193,"column":0},"generated":{"line":3195,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3194,"column":0},"generated":{"line":3196,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3195,"column":0},"generated":{"line":3197,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3196,"column":0},"generated":{"line":3198,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3197,"column":0},"generated":{"line":3199,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3198,"column":0},"generated":{"line":3200,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3199,"column":0},"generated":{"line":3201,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3200,"column":0},"generated":{"line":3202,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3201,"column":0},"generated":{"line":3203,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3202,"column":0},"generated":{"line":3204,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3203,"column":0},"generated":{"line":3205,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3204,"column":0},"generated":{"line":3206,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3205,"column":0},"generated":{"line":3207,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3206,"column":0},"generated":{"line":3208,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3207,"column":0},"generated":{"line":3209,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3208,"column":0},"generated":{"line":3210,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3209,"column":0},"generated":{"line":3211,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3210,"column":0},"generated":{"line":3212,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3211,"column":0},"generated":{"line":3213,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3212,"column":0},"generated":{"line":3214,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3213,"column":0},"generated":{"line":3215,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3214,"column":0},"generated":{"line":3216,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3215,"column":0},"generated":{"line":3217,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3216,"column":0},"generated":{"line":3218,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3217,"column":0},"generated":{"line":3219,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3218,"column":0},"generated":{"line":3220,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3219,"column":0},"generated":{"line":3221,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3220,"column":0},"generated":{"line":3222,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3221,"column":0},"generated":{"line":3223,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3222,"column":0},"generated":{"line":3224,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3223,"column":0},"generated":{"line":3225,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3224,"column":0},"generated":{"line":3226,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3225,"column":0},"generated":{"line":3227,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3226,"column":0},"generated":{"line":3228,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3227,"column":0},"generated":{"line":3229,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3228,"column":0},"generated":{"line":3230,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3229,"column":0},"generated":{"line":3231,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3230,"column":0},"generated":{"line":3232,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3231,"column":0},"generated":{"line":3233,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3232,"column":0},"generated":{"line":3234,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3233,"column":0},"generated":{"line":3235,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3234,"column":0},"generated":{"line":3236,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3235,"column":0},"generated":{"line":3237,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3236,"column":0},"generated":{"line":3238,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3237,"column":0},"generated":{"line":3239,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3238,"column":0},"generated":{"line":3240,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3239,"column":0},"generated":{"line":3241,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3240,"column":0},"generated":{"line":3242,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3241,"column":0},"generated":{"line":3243,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3242,"column":0},"generated":{"line":3244,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3243,"column":0},"generated":{"line":3245,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3244,"column":0},"generated":{"line":3246,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3245,"column":0},"generated":{"line":3247,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3246,"column":0},"generated":{"line":3248,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3247,"column":0},"generated":{"line":3249,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3248,"column":0},"generated":{"line":3250,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3249,"column":0},"generated":{"line":3251,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3250,"column":0},"generated":{"line":3252,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3251,"column":0},"generated":{"line":3253,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3252,"column":0},"generated":{"line":3254,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3253,"column":0},"generated":{"line":3255,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3254,"column":0},"generated":{"line":3256,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3255,"column":0},"generated":{"line":3257,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3256,"column":0},"generated":{"line":3258,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3257,"column":0},"generated":{"line":3259,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3258,"column":0},"generated":{"line":3260,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3259,"column":0},"generated":{"line":3261,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3260,"column":0},"generated":{"line":3262,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3261,"column":0},"generated":{"line":3263,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3262,"column":0},"generated":{"line":3264,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3263,"column":0},"generated":{"line":3265,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3264,"column":0},"generated":{"line":3266,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3265,"column":0},"generated":{"line":3267,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3266,"column":0},"generated":{"line":3268,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3267,"column":0},"generated":{"line":3269,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3268,"column":0},"generated":{"line":3270,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3269,"column":0},"generated":{"line":3271,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3270,"column":0},"generated":{"line":3272,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3271,"column":0},"generated":{"line":3273,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3272,"column":0},"generated":{"line":3274,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3273,"column":0},"generated":{"line":3275,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3274,"column":0},"generated":{"line":3276,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3275,"column":0},"generated":{"line":3277,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3276,"column":0},"generated":{"line":3278,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3277,"column":0},"generated":{"line":3279,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3278,"column":0},"generated":{"line":3280,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3279,"column":0},"generated":{"line":3281,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3280,"column":0},"generated":{"line":3282,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3281,"column":0},"generated":{"line":3283,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3282,"column":0},"generated":{"line":3284,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3283,"column":0},"generated":{"line":3285,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3284,"column":0},"generated":{"line":3286,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3285,"column":0},"generated":{"line":3287,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3286,"column":0},"generated":{"line":3288,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3287,"column":0},"generated":{"line":3289,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3288,"column":0},"generated":{"line":3290,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3289,"column":0},"generated":{"line":3291,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3290,"column":0},"generated":{"line":3292,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3291,"column":0},"generated":{"line":3293,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3292,"column":0},"generated":{"line":3294,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3293,"column":0},"generated":{"line":3295,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3294,"column":0},"generated":{"line":3296,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3295,"column":0},"generated":{"line":3297,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3296,"column":0},"generated":{"line":3298,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3297,"column":0},"generated":{"line":3299,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3298,"column":0},"generated":{"line":3300,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3299,"column":0},"generated":{"line":3301,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3300,"column":0},"generated":{"line":3302,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3301,"column":0},"generated":{"line":3303,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3302,"column":0},"generated":{"line":3304,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3303,"column":0},"generated":{"line":3305,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3304,"column":0},"generated":{"line":3306,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3305,"column":0},"generated":{"line":3307,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3306,"column":0},"generated":{"line":3308,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3307,"column":0},"generated":{"line":3309,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3308,"column":0},"generated":{"line":3310,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3309,"column":0},"generated":{"line":3311,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3310,"column":0},"generated":{"line":3312,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3311,"column":0},"generated":{"line":3313,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3312,"column":0},"generated":{"line":3314,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3313,"column":0},"generated":{"line":3315,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3314,"column":0},"generated":{"line":3316,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3315,"column":0},"generated":{"line":3317,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3316,"column":0},"generated":{"line":3318,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3317,"column":0},"generated":{"line":3319,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3318,"column":0},"generated":{"line":3320,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3319,"column":0},"generated":{"line":3321,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3320,"column":0},"generated":{"line":3322,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3321,"column":0},"generated":{"line":3323,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3322,"column":0},"generated":{"line":3324,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3323,"column":0},"generated":{"line":3325,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3324,"column":0},"generated":{"line":3326,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3325,"column":0},"generated":{"line":3327,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3326,"column":0},"generated":{"line":3328,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3327,"column":0},"generated":{"line":3329,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3328,"column":0},"generated":{"line":3330,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3329,"column":0},"generated":{"line":3331,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3330,"column":0},"generated":{"line":3332,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3331,"column":0},"generated":{"line":3333,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3332,"column":0},"generated":{"line":3334,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3333,"column":0},"generated":{"line":3335,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3334,"column":0},"generated":{"line":3336,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3335,"column":0},"generated":{"line":3337,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3336,"column":0},"generated":{"line":3338,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3337,"column":0},"generated":{"line":3339,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3338,"column":0},"generated":{"line":3340,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3339,"column":0},"generated":{"line":3341,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3340,"column":0},"generated":{"line":3342,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3341,"column":0},"generated":{"line":3343,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3342,"column":0},"generated":{"line":3344,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3343,"column":0},"generated":{"line":3345,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3344,"column":0},"generated":{"line":3346,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3345,"column":0},"generated":{"line":3347,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3346,"column":0},"generated":{"line":3348,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3347,"column":0},"generated":{"line":3349,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3348,"column":0},"generated":{"line":3350,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3349,"column":0},"generated":{"line":3351,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3350,"column":0},"generated":{"line":3352,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3351,"column":0},"generated":{"line":3353,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3352,"column":0},"generated":{"line":3354,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3353,"column":0},"generated":{"line":3355,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3354,"column":0},"generated":{"line":3356,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3355,"column":0},"generated":{"line":3357,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3356,"column":0},"generated":{"line":3358,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3357,"column":0},"generated":{"line":3359,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3358,"column":0},"generated":{"line":3360,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3359,"column":0},"generated":{"line":3361,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3360,"column":0},"generated":{"line":3362,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3361,"column":0},"generated":{"line":3363,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3362,"column":0},"generated":{"line":3364,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3363,"column":0},"generated":{"line":3365,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3364,"column":0},"generated":{"line":3366,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3365,"column":0},"generated":{"line":3367,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3366,"column":0},"generated":{"line":3368,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3367,"column":0},"generated":{"line":3369,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3368,"column":0},"generated":{"line":3370,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3369,"column":0},"generated":{"line":3371,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3370,"column":0},"generated":{"line":3372,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3371,"column":0},"generated":{"line":3373,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3372,"column":0},"generated":{"line":3374,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3373,"column":0},"generated":{"line":3375,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3374,"column":0},"generated":{"line":3376,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3375,"column":0},"generated":{"line":3377,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3376,"column":0},"generated":{"line":3378,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3377,"column":0},"generated":{"line":3379,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3378,"column":0},"generated":{"line":3380,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3379,"column":0},"generated":{"line":3381,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3380,"column":0},"generated":{"line":3382,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3381,"column":0},"generated":{"line":3383,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3382,"column":0},"generated":{"line":3384,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3383,"column":0},"generated":{"line":3385,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3384,"column":0},"generated":{"line":3386,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3385,"column":0},"generated":{"line":3387,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3386,"column":0},"generated":{"line":3388,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3387,"column":0},"generated":{"line":3389,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3388,"column":0},"generated":{"line":3390,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3389,"column":0},"generated":{"line":3391,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3390,"column":0},"generated":{"line":3392,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3391,"column":0},"generated":{"line":3393,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3392,"column":0},"generated":{"line":3394,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3393,"column":0},"generated":{"line":3395,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3394,"column":0},"generated":{"line":3396,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3395,"column":0},"generated":{"line":3397,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3396,"column":0},"generated":{"line":3398,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3397,"column":0},"generated":{"line":3399,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3398,"column":0},"generated":{"line":3400,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3399,"column":0},"generated":{"line":3401,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3400,"column":0},"generated":{"line":3402,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3401,"column":0},"generated":{"line":3403,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3402,"column":0},"generated":{"line":3404,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3403,"column":0},"generated":{"line":3405,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3404,"column":0},"generated":{"line":3406,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3405,"column":0},"generated":{"line":3407,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3406,"column":0},"generated":{"line":3408,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3407,"column":0},"generated":{"line":3409,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3408,"column":0},"generated":{"line":3410,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3409,"column":0},"generated":{"line":3411,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3410,"column":0},"generated":{"line":3412,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3411,"column":0},"generated":{"line":3413,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3412,"column":0},"generated":{"line":3414,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3413,"column":0},"generated":{"line":3415,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3414,"column":0},"generated":{"line":3416,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3415,"column":0},"generated":{"line":3417,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3416,"column":0},"generated":{"line":3418,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3417,"column":0},"generated":{"line":3419,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3418,"column":0},"generated":{"line":3420,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3419,"column":0},"generated":{"line":3421,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3420,"column":0},"generated":{"line":3422,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3421,"column":0},"generated":{"line":3423,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3422,"column":0},"generated":{"line":3424,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3423,"column":0},"generated":{"line":3425,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3424,"column":0},"generated":{"line":3426,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3425,"column":0},"generated":{"line":3427,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3426,"column":0},"generated":{"line":3428,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3427,"column":0},"generated":{"line":3429,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3428,"column":0},"generated":{"line":3430,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3429,"column":0},"generated":{"line":3431,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3430,"column":0},"generated":{"line":3432,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3431,"column":0},"generated":{"line":3433,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3432,"column":0},"generated":{"line":3434,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3433,"column":0},"generated":{"line":3435,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3434,"column":0},"generated":{"line":3436,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3435,"column":0},"generated":{"line":3437,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3436,"column":0},"generated":{"line":3438,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3437,"column":0},"generated":{"line":3439,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3438,"column":0},"generated":{"line":3440,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3439,"column":0},"generated":{"line":3441,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3440,"column":0},"generated":{"line":3442,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3441,"column":0},"generated":{"line":3443,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3442,"column":0},"generated":{"line":3444,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3443,"column":0},"generated":{"line":3445,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3444,"column":0},"generated":{"line":3446,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3445,"column":0},"generated":{"line":3447,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3446,"column":0},"generated":{"line":3448,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3447,"column":0},"generated":{"line":3449,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3448,"column":0},"generated":{"line":3450,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3449,"column":0},"generated":{"line":3451,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3450,"column":0},"generated":{"line":3452,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3451,"column":0},"generated":{"line":3453,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3452,"column":0},"generated":{"line":3454,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3453,"column":0},"generated":{"line":3455,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3454,"column":0},"generated":{"line":3456,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3455,"column":0},"generated":{"line":3457,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3456,"column":0},"generated":{"line":3458,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3457,"column":0},"generated":{"line":3459,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3458,"column":0},"generated":{"line":3460,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3459,"column":0},"generated":{"line":3461,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3460,"column":0},"generated":{"line":3462,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3461,"column":0},"generated":{"line":3463,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3462,"column":0},"generated":{"line":3464,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3463,"column":0},"generated":{"line":3465,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3464,"column":0},"generated":{"line":3466,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3465,"column":0},"generated":{"line":3467,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3466,"column":0},"generated":{"line":3468,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3467,"column":0},"generated":{"line":3469,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3468,"column":0},"generated":{"line":3470,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3469,"column":0},"generated":{"line":3471,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3470,"column":0},"generated":{"line":3472,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3471,"column":0},"generated":{"line":3473,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3472,"column":0},"generated":{"line":3474,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3473,"column":0},"generated":{"line":3475,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3474,"column":0},"generated":{"line":3476,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3475,"column":0},"generated":{"line":3477,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3476,"column":0},"generated":{"line":3478,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3477,"column":0},"generated":{"line":3479,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3478,"column":0},"generated":{"line":3480,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3479,"column":0},"generated":{"line":3481,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3480,"column":0},"generated":{"line":3482,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3481,"column":0},"generated":{"line":3483,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3482,"column":0},"generated":{"line":3484,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3483,"column":0},"generated":{"line":3485,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3484,"column":0},"generated":{"line":3486,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3485,"column":0},"generated":{"line":3487,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3486,"column":0},"generated":{"line":3488,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3487,"column":0},"generated":{"line":3489,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3488,"column":0},"generated":{"line":3490,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3489,"column":0},"generated":{"line":3491,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3490,"column":0},"generated":{"line":3492,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3491,"column":0},"generated":{"line":3493,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3492,"column":0},"generated":{"line":3494,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3493,"column":0},"generated":{"line":3495,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3494,"column":0},"generated":{"line":3496,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3495,"column":0},"generated":{"line":3497,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3496,"column":0},"generated":{"line":3498,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3497,"column":0},"generated":{"line":3499,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3498,"column":0},"generated":{"line":3500,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3499,"column":0},"generated":{"line":3501,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3500,"column":0},"generated":{"line":3502,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3501,"column":0},"generated":{"line":3503,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3502,"column":0},"generated":{"line":3504,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3503,"column":0},"generated":{"line":3505,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3504,"column":0},"generated":{"line":3506,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3505,"column":0},"generated":{"line":3507,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3506,"column":0},"generated":{"line":3508,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3507,"column":0},"generated":{"line":3509,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3508,"column":0},"generated":{"line":3510,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3509,"column":0},"generated":{"line":3511,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3510,"column":0},"generated":{"line":3512,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3511,"column":0},"generated":{"line":3513,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3512,"column":0},"generated":{"line":3514,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3513,"column":0},"generated":{"line":3515,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3514,"column":0},"generated":{"line":3516,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3515,"column":0},"generated":{"line":3517,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3516,"column":0},"generated":{"line":3518,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3517,"column":0},"generated":{"line":3519,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3518,"column":0},"generated":{"line":3520,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3519,"column":0},"generated":{"line":3521,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3520,"column":0},"generated":{"line":3522,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3521,"column":0},"generated":{"line":3523,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3522,"column":0},"generated":{"line":3524,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3523,"column":0},"generated":{"line":3525,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3524,"column":0},"generated":{"line":3526,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3525,"column":0},"generated":{"line":3527,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3526,"column":0},"generated":{"line":3528,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3527,"column":0},"generated":{"line":3529,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3528,"column":0},"generated":{"line":3530,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3529,"column":0},"generated":{"line":3531,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3530,"column":0},"generated":{"line":3532,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3531,"column":0},"generated":{"line":3533,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3532,"column":0},"generated":{"line":3534,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3533,"column":0},"generated":{"line":3535,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3534,"column":0},"generated":{"line":3536,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3535,"column":0},"generated":{"line":3537,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3536,"column":0},"generated":{"line":3538,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3537,"column":0},"generated":{"line":3539,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3538,"column":0},"generated":{"line":3540,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3539,"column":0},"generated":{"line":3541,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3540,"column":0},"generated":{"line":3542,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3541,"column":0},"generated":{"line":3543,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3542,"column":0},"generated":{"line":3544,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3543,"column":0},"generated":{"line":3545,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3544,"column":0},"generated":{"line":3546,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3545,"column":0},"generated":{"line":3547,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3546,"column":0},"generated":{"line":3548,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3547,"column":0},"generated":{"line":3549,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3548,"column":0},"generated":{"line":3550,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3549,"column":0},"generated":{"line":3551,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3550,"column":0},"generated":{"line":3552,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3551,"column":0},"generated":{"line":3553,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3552,"column":0},"generated":{"line":3554,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3553,"column":0},"generated":{"line":3555,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3554,"column":0},"generated":{"line":3556,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3555,"column":0},"generated":{"line":3557,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3556,"column":0},"generated":{"line":3558,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3557,"column":0},"generated":{"line":3559,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3558,"column":0},"generated":{"line":3560,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3559,"column":0},"generated":{"line":3561,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3560,"column":0},"generated":{"line":3562,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3561,"column":0},"generated":{"line":3563,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3562,"column":0},"generated":{"line":3564,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3563,"column":0},"generated":{"line":3565,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3564,"column":0},"generated":{"line":3566,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3565,"column":0},"generated":{"line":3567,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3566,"column":0},"generated":{"line":3568,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3567,"column":0},"generated":{"line":3569,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3568,"column":0},"generated":{"line":3570,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3569,"column":0},"generated":{"line":3571,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3570,"column":0},"generated":{"line":3572,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3571,"column":0},"generated":{"line":3573,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3572,"column":0},"generated":{"line":3574,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3573,"column":0},"generated":{"line":3575,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3574,"column":0},"generated":{"line":3576,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3575,"column":0},"generated":{"line":3577,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3576,"column":0},"generated":{"line":3578,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3577,"column":0},"generated":{"line":3579,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3578,"column":0},"generated":{"line":3580,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3579,"column":0},"generated":{"line":3581,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3580,"column":0},"generated":{"line":3582,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3581,"column":0},"generated":{"line":3583,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3582,"column":0},"generated":{"line":3584,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3583,"column":0},"generated":{"line":3585,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3584,"column":0},"generated":{"line":3586,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3585,"column":0},"generated":{"line":3587,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3586,"column":0},"generated":{"line":3588,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3587,"column":0},"generated":{"line":3589,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3588,"column":0},"generated":{"line":3590,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3589,"column":0},"generated":{"line":3591,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3590,"column":0},"generated":{"line":3592,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3591,"column":0},"generated":{"line":3593,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3592,"column":0},"generated":{"line":3594,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3593,"column":0},"generated":{"line":3595,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3594,"column":0},"generated":{"line":3596,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3595,"column":0},"generated":{"line":3597,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3596,"column":0},"generated":{"line":3598,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3597,"column":0},"generated":{"line":3599,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3598,"column":0},"generated":{"line":3600,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3599,"column":0},"generated":{"line":3601,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3600,"column":0},"generated":{"line":3602,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3601,"column":0},"generated":{"line":3603,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3602,"column":0},"generated":{"line":3604,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3603,"column":0},"generated":{"line":3605,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3604,"column":0},"generated":{"line":3606,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3605,"column":0},"generated":{"line":3607,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3606,"column":0},"generated":{"line":3608,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3607,"column":0},"generated":{"line":3609,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3608,"column":0},"generated":{"line":3610,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3609,"column":0},"generated":{"line":3611,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3610,"column":0},"generated":{"line":3612,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3611,"column":0},"generated":{"line":3613,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3612,"column":0},"generated":{"line":3614,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3613,"column":0},"generated":{"line":3615,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3614,"column":0},"generated":{"line":3616,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3615,"column":0},"generated":{"line":3617,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3616,"column":0},"generated":{"line":3618,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3617,"column":0},"generated":{"line":3619,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3618,"column":0},"generated":{"line":3620,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3619,"column":0},"generated":{"line":3621,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3620,"column":0},"generated":{"line":3622,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3621,"column":0},"generated":{"line":3623,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3622,"column":0},"generated":{"line":3624,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3623,"column":0},"generated":{"line":3625,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3624,"column":0},"generated":{"line":3626,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3625,"column":0},"generated":{"line":3627,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3626,"column":0},"generated":{"line":3628,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3627,"column":0},"generated":{"line":3629,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3628,"column":0},"generated":{"line":3630,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3629,"column":0},"generated":{"line":3631,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3630,"column":0},"generated":{"line":3632,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3631,"column":0},"generated":{"line":3633,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3632,"column":0},"generated":{"line":3634,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3633,"column":0},"generated":{"line":3635,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3634,"column":0},"generated":{"line":3636,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3635,"column":0},"generated":{"line":3637,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3636,"column":0},"generated":{"line":3638,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3637,"column":0},"generated":{"line":3639,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3638,"column":0},"generated":{"line":3640,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3639,"column":0},"generated":{"line":3641,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3640,"column":0},"generated":{"line":3642,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3641,"column":0},"generated":{"line":3643,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3642,"column":0},"generated":{"line":3644,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3643,"column":0},"generated":{"line":3645,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3644,"column":0},"generated":{"line":3646,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3645,"column":0},"generated":{"line":3647,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3646,"column":0},"generated":{"line":3648,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3647,"column":0},"generated":{"line":3649,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3648,"column":0},"generated":{"line":3650,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3649,"column":0},"generated":{"line":3651,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3650,"column":0},"generated":{"line":3652,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3651,"column":0},"generated":{"line":3653,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3652,"column":0},"generated":{"line":3654,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3653,"column":0},"generated":{"line":3655,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3654,"column":0},"generated":{"line":3656,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3655,"column":0},"generated":{"line":3657,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3656,"column":0},"generated":{"line":3658,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3657,"column":0},"generated":{"line":3659,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3658,"column":0},"generated":{"line":3660,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3659,"column":0},"generated":{"line":3661,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3660,"column":0},"generated":{"line":3662,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3661,"column":0},"generated":{"line":3663,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3662,"column":0},"generated":{"line":3664,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3663,"column":0},"generated":{"line":3665,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3664,"column":0},"generated":{"line":3666,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3665,"column":0},"generated":{"line":3667,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3666,"column":0},"generated":{"line":3668,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3667,"column":0},"generated":{"line":3669,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3668,"column":0},"generated":{"line":3670,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3669,"column":0},"generated":{"line":3671,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3670,"column":0},"generated":{"line":3672,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3671,"column":0},"generated":{"line":3673,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3672,"column":0},"generated":{"line":3674,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3673,"column":0},"generated":{"line":3675,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3674,"column":0},"generated":{"line":3676,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3675,"column":0},"generated":{"line":3677,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3676,"column":0},"generated":{"line":3678,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3677,"column":0},"generated":{"line":3679,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3678,"column":0},"generated":{"line":3680,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3679,"column":0},"generated":{"line":3681,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3680,"column":0},"generated":{"line":3682,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3681,"column":0},"generated":{"line":3683,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3682,"column":0},"generated":{"line":3684,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3683,"column":0},"generated":{"line":3685,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3684,"column":0},"generated":{"line":3686,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3685,"column":0},"generated":{"line":3687,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3686,"column":0},"generated":{"line":3688,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3687,"column":0},"generated":{"line":3689,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3688,"column":0},"generated":{"line":3690,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3689,"column":0},"generated":{"line":3691,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3690,"column":0},"generated":{"line":3692,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3691,"column":0},"generated":{"line":3693,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3692,"column":0},"generated":{"line":3694,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3693,"column":0},"generated":{"line":3695,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3694,"column":0},"generated":{"line":3696,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3695,"column":0},"generated":{"line":3697,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3696,"column":0},"generated":{"line":3698,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3697,"column":0},"generated":{"line":3699,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3698,"column":0},"generated":{"line":3700,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3699,"column":0},"generated":{"line":3701,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3700,"column":0},"generated":{"line":3702,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3701,"column":0},"generated":{"line":3703,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3702,"column":0},"generated":{"line":3704,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3703,"column":0},"generated":{"line":3705,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3704,"column":0},"generated":{"line":3706,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3705,"column":0},"generated":{"line":3707,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3706,"column":0},"generated":{"line":3708,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3707,"column":0},"generated":{"line":3709,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3708,"column":0},"generated":{"line":3710,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3709,"column":0},"generated":{"line":3711,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3710,"column":0},"generated":{"line":3712,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3711,"column":0},"generated":{"line":3713,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3712,"column":0},"generated":{"line":3714,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3713,"column":0},"generated":{"line":3715,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3714,"column":0},"generated":{"line":3716,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3715,"column":0},"generated":{"line":3717,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3716,"column":0},"generated":{"line":3718,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3717,"column":0},"generated":{"line":3719,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3718,"column":0},"generated":{"line":3720,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3719,"column":0},"generated":{"line":3721,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3720,"column":0},"generated":{"line":3722,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3721,"column":0},"generated":{"line":3723,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3722,"column":0},"generated":{"line":3724,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3723,"column":0},"generated":{"line":3725,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3724,"column":0},"generated":{"line":3726,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3725,"column":0},"generated":{"line":3727,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3726,"column":0},"generated":{"line":3728,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3727,"column":0},"generated":{"line":3729,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3728,"column":0},"generated":{"line":3730,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3729,"column":0},"generated":{"line":3731,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3730,"column":0},"generated":{"line":3732,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3731,"column":0},"generated":{"line":3733,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3732,"column":0},"generated":{"line":3734,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3733,"column":0},"generated":{"line":3735,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3734,"column":0},"generated":{"line":3736,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3735,"column":0},"generated":{"line":3737,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3736,"column":0},"generated":{"line":3738,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3737,"column":0},"generated":{"line":3739,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3738,"column":0},"generated":{"line":3740,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3739,"column":0},"generated":{"line":3741,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3740,"column":0},"generated":{"line":3742,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3741,"column":0},"generated":{"line":3743,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3742,"column":0},"generated":{"line":3744,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3743,"column":0},"generated":{"line":3745,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3744,"column":0},"generated":{"line":3746,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3745,"column":0},"generated":{"line":3747,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3746,"column":0},"generated":{"line":3748,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3747,"column":0},"generated":{"line":3749,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3748,"column":0},"generated":{"line":3750,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3749,"column":0},"generated":{"line":3751,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3750,"column":0},"generated":{"line":3752,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3751,"column":0},"generated":{"line":3753,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3752,"column":0},"generated":{"line":3754,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3753,"column":0},"generated":{"line":3755,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3754,"column":0},"generated":{"line":3756,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3755,"column":0},"generated":{"line":3757,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3756,"column":0},"generated":{"line":3758,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3757,"column":0},"generated":{"line":3759,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3758,"column":0},"generated":{"line":3760,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3759,"column":0},"generated":{"line":3761,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3760,"column":0},"generated":{"line":3762,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3761,"column":0},"generated":{"line":3763,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3762,"column":0},"generated":{"line":3764,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3763,"column":0},"generated":{"line":3765,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3764,"column":0},"generated":{"line":3766,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3765,"column":0},"generated":{"line":3767,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3766,"column":0},"generated":{"line":3768,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3767,"column":0},"generated":{"line":3769,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3768,"column":0},"generated":{"line":3770,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3769,"column":0},"generated":{"line":3771,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3770,"column":0},"generated":{"line":3772,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3771,"column":0},"generated":{"line":3773,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3772,"column":0},"generated":{"line":3774,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3773,"column":0},"generated":{"line":3775,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3774,"column":0},"generated":{"line":3776,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3775,"column":0},"generated":{"line":3777,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3776,"column":0},"generated":{"line":3778,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3777,"column":0},"generated":{"line":3779,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3778,"column":0},"generated":{"line":3780,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3779,"column":0},"generated":{"line":3781,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3780,"column":0},"generated":{"line":3782,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3781,"column":0},"generated":{"line":3783,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3782,"column":0},"generated":{"line":3784,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3783,"column":0},"generated":{"line":3785,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3784,"column":0},"generated":{"line":3786,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3785,"column":0},"generated":{"line":3787,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3786,"column":0},"generated":{"line":3788,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3787,"column":0},"generated":{"line":3789,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3788,"column":0},"generated":{"line":3790,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3789,"column":0},"generated":{"line":3791,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3790,"column":0},"generated":{"line":3792,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3791,"column":0},"generated":{"line":3793,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3792,"column":0},"generated":{"line":3794,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3793,"column":0},"generated":{"line":3795,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3794,"column":0},"generated":{"line":3796,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3795,"column":0},"generated":{"line":3797,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3796,"column":0},"generated":{"line":3798,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3797,"column":0},"generated":{"line":3799,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3798,"column":0},"generated":{"line":3800,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3799,"column":0},"generated":{"line":3801,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3800,"column":0},"generated":{"line":3802,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3801,"column":0},"generated":{"line":3803,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3802,"column":0},"generated":{"line":3804,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3803,"column":0},"generated":{"line":3805,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3804,"column":0},"generated":{"line":3806,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3805,"column":0},"generated":{"line":3807,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3806,"column":0},"generated":{"line":3808,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3807,"column":0},"generated":{"line":3809,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3808,"column":0},"generated":{"line":3810,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3809,"column":0},"generated":{"line":3811,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3810,"column":0},"generated":{"line":3812,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3811,"column":0},"generated":{"line":3813,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3812,"column":0},"generated":{"line":3814,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3813,"column":0},"generated":{"line":3815,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3814,"column":0},"generated":{"line":3816,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3815,"column":0},"generated":{"line":3817,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3816,"column":0},"generated":{"line":3818,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3817,"column":0},"generated":{"line":3819,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3818,"column":0},"generated":{"line":3820,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3819,"column":0},"generated":{"line":3821,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3820,"column":0},"generated":{"line":3822,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3821,"column":0},"generated":{"line":3823,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3822,"column":0},"generated":{"line":3824,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3823,"column":0},"generated":{"line":3825,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3824,"column":0},"generated":{"line":3826,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3825,"column":0},"generated":{"line":3827,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3826,"column":0},"generated":{"line":3828,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3827,"column":0},"generated":{"line":3829,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3828,"column":0},"generated":{"line":3830,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3829,"column":0},"generated":{"line":3831,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3830,"column":0},"generated":{"line":3832,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3831,"column":0},"generated":{"line":3833,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3832,"column":0},"generated":{"line":3834,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3833,"column":0},"generated":{"line":3835,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3834,"column":0},"generated":{"line":3836,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3835,"column":0},"generated":{"line":3837,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3836,"column":0},"generated":{"line":3838,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3837,"column":0},"generated":{"line":3839,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3838,"column":0},"generated":{"line":3840,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3839,"column":0},"generated":{"line":3841,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3840,"column":0},"generated":{"line":3842,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3841,"column":0},"generated":{"line":3843,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3842,"column":0},"generated":{"line":3844,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3843,"column":0},"generated":{"line":3845,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3844,"column":0},"generated":{"line":3846,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3845,"column":0},"generated":{"line":3847,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3846,"column":0},"generated":{"line":3848,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3847,"column":0},"generated":{"line":3849,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3848,"column":0},"generated":{"line":3850,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3849,"column":0},"generated":{"line":3851,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3850,"column":0},"generated":{"line":3852,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3851,"column":0},"generated":{"line":3853,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3852,"column":0},"generated":{"line":3854,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3853,"column":0},"generated":{"line":3855,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3854,"column":0},"generated":{"line":3856,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3855,"column":0},"generated":{"line":3857,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3856,"column":0},"generated":{"line":3858,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3857,"column":0},"generated":{"line":3859,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3858,"column":0},"generated":{"line":3860,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3859,"column":0},"generated":{"line":3861,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3860,"column":0},"generated":{"line":3862,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3861,"column":0},"generated":{"line":3863,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3862,"column":0},"generated":{"line":3864,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3863,"column":0},"generated":{"line":3865,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3864,"column":0},"generated":{"line":3866,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3865,"column":0},"generated":{"line":3867,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3866,"column":0},"generated":{"line":3868,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3867,"column":0},"generated":{"line":3869,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3868,"column":0},"generated":{"line":3870,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3869,"column":0},"generated":{"line":3871,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3870,"column":0},"generated":{"line":3872,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3871,"column":0},"generated":{"line":3873,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3872,"column":0},"generated":{"line":3874,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3873,"column":0},"generated":{"line":3875,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3874,"column":0},"generated":{"line":3876,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3875,"column":0},"generated":{"line":3877,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3876,"column":0},"generated":{"line":3878,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3877,"column":0},"generated":{"line":3879,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3878,"column":0},"generated":{"line":3880,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3879,"column":0},"generated":{"line":3881,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3880,"column":0},"generated":{"line":3882,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3881,"column":0},"generated":{"line":3883,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3882,"column":0},"generated":{"line":3884,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3883,"column":0},"generated":{"line":3885,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3884,"column":0},"generated":{"line":3886,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3885,"column":0},"generated":{"line":3887,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3886,"column":0},"generated":{"line":3888,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3887,"column":0},"generated":{"line":3889,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3888,"column":0},"generated":{"line":3890,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3889,"column":0},"generated":{"line":3891,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3890,"column":0},"generated":{"line":3892,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3891,"column":0},"generated":{"line":3893,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3892,"column":0},"generated":{"line":3894,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3893,"column":0},"generated":{"line":3895,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3894,"column":0},"generated":{"line":3896,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3895,"column":0},"generated":{"line":3897,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3896,"column":0},"generated":{"line":3898,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3897,"column":0},"generated":{"line":3899,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3898,"column":0},"generated":{"line":3900,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3899,"column":0},"generated":{"line":3901,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3900,"column":0},"generated":{"line":3902,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3901,"column":0},"generated":{"line":3903,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3902,"column":0},"generated":{"line":3904,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3903,"column":0},"generated":{"line":3905,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3904,"column":0},"generated":{"line":3906,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3905,"column":0},"generated":{"line":3907,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3906,"column":0},"generated":{"line":3908,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3907,"column":0},"generated":{"line":3909,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3908,"column":0},"generated":{"line":3910,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3909,"column":0},"generated":{"line":3911,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3910,"column":0},"generated":{"line":3912,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3911,"column":0},"generated":{"line":3913,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3912,"column":0},"generated":{"line":3914,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3913,"column":0},"generated":{"line":3915,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3914,"column":0},"generated":{"line":3916,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3915,"column":0},"generated":{"line":3917,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3916,"column":0},"generated":{"line":3918,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3917,"column":0},"generated":{"line":3919,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3918,"column":0},"generated":{"line":3920,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3919,"column":0},"generated":{"line":3921,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3920,"column":0},"generated":{"line":3922,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3921,"column":0},"generated":{"line":3923,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3922,"column":0},"generated":{"line":3924,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3923,"column":0},"generated":{"line":3925,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3924,"column":0},"generated":{"line":3926,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3925,"column":0},"generated":{"line":3927,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3926,"column":0},"generated":{"line":3928,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3927,"column":0},"generated":{"line":3929,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3928,"column":0},"generated":{"line":3930,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3929,"column":0},"generated":{"line":3931,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3930,"column":0},"generated":{"line":3932,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3931,"column":0},"generated":{"line":3933,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3932,"column":0},"generated":{"line":3934,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3933,"column":0},"generated":{"line":3935,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3934,"column":0},"generated":{"line":3936,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3935,"column":0},"generated":{"line":3937,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3936,"column":0},"generated":{"line":3938,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3937,"column":0},"generated":{"line":3939,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3938,"column":0},"generated":{"line":3940,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3939,"column":0},"generated":{"line":3941,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3940,"column":0},"generated":{"line":3942,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3941,"column":0},"generated":{"line":3943,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3942,"column":0},"generated":{"line":3944,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3943,"column":0},"generated":{"line":3945,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3944,"column":0},"generated":{"line":3946,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3945,"column":0},"generated":{"line":3947,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3946,"column":0},"generated":{"line":3948,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3947,"column":0},"generated":{"line":3949,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3948,"column":0},"generated":{"line":3950,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3949,"column":0},"generated":{"line":3951,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3950,"column":0},"generated":{"line":3952,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3951,"column":0},"generated":{"line":3953,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3952,"column":0},"generated":{"line":3954,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3953,"column":0},"generated":{"line":3955,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3954,"column":0},"generated":{"line":3956,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3955,"column":0},"generated":{"line":3957,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3956,"column":0},"generated":{"line":3958,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3957,"column":0},"generated":{"line":3959,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3958,"column":0},"generated":{"line":3960,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3959,"column":0},"generated":{"line":3961,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3960,"column":0},"generated":{"line":3962,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3961,"column":0},"generated":{"line":3963,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3962,"column":0},"generated":{"line":3964,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3963,"column":0},"generated":{"line":3965,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3964,"column":0},"generated":{"line":3966,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3965,"column":0},"generated":{"line":3967,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3966,"column":0},"generated":{"line":3968,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3967,"column":0},"generated":{"line":3969,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3968,"column":0},"generated":{"line":3970,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3969,"column":0},"generated":{"line":3971,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3970,"column":0},"generated":{"line":3972,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3971,"column":0},"generated":{"line":3973,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3972,"column":0},"generated":{"line":3974,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3973,"column":0},"generated":{"line":3975,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3974,"column":0},"generated":{"line":3976,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3975,"column":0},"generated":{"line":3977,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3976,"column":0},"generated":{"line":3978,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3977,"column":0},"generated":{"line":3979,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3978,"column":0},"generated":{"line":3980,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3979,"column":0},"generated":{"line":3981,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3980,"column":0},"generated":{"line":3982,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3981,"column":0},"generated":{"line":3983,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3982,"column":0},"generated":{"line":3984,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3983,"column":0},"generated":{"line":3985,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3984,"column":0},"generated":{"line":3986,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3985,"column":0},"generated":{"line":3987,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3986,"column":0},"generated":{"line":3988,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3987,"column":0},"generated":{"line":3989,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3988,"column":0},"generated":{"line":3990,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3989,"column":0},"generated":{"line":3991,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3990,"column":0},"generated":{"line":3992,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3991,"column":0},"generated":{"line":3993,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3992,"column":0},"generated":{"line":3994,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3993,"column":0},"generated":{"line":3995,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3994,"column":0},"generated":{"line":3996,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3995,"column":0},"generated":{"line":3997,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3996,"column":0},"generated":{"line":3998,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3997,"column":0},"generated":{"line":3999,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3998,"column":0},"generated":{"line":4000,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":3999,"column":0},"generated":{"line":4001,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4000,"column":0},"generated":{"line":4002,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4001,"column":0},"generated":{"line":4003,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4002,"column":0},"generated":{"line":4004,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4003,"column":0},"generated":{"line":4005,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4004,"column":0},"generated":{"line":4006,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4005,"column":0},"generated":{"line":4007,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4006,"column":0},"generated":{"line":4008,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4007,"column":0},"generated":{"line":4009,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4008,"column":0},"generated":{"line":4010,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4009,"column":0},"generated":{"line":4011,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4010,"column":0},"generated":{"line":4012,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4011,"column":0},"generated":{"line":4013,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4012,"column":0},"generated":{"line":4014,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4013,"column":0},"generated":{"line":4015,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4014,"column":0},"generated":{"line":4016,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4015,"column":0},"generated":{"line":4017,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4016,"column":0},"generated":{"line":4018,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4017,"column":0},"generated":{"line":4019,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4018,"column":0},"generated":{"line":4020,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4019,"column":0},"generated":{"line":4021,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4020,"column":0},"generated":{"line":4022,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4021,"column":0},"generated":{"line":4023,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4022,"column":0},"generated":{"line":4024,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4023,"column":0},"generated":{"line":4025,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4024,"column":0},"generated":{"line":4026,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4025,"column":0},"generated":{"line":4027,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4026,"column":0},"generated":{"line":4028,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4027,"column":0},"generated":{"line":4029,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4028,"column":0},"generated":{"line":4030,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4029,"column":0},"generated":{"line":4031,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4030,"column":0},"generated":{"line":4032,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4031,"column":0},"generated":{"line":4033,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4032,"column":0},"generated":{"line":4034,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4033,"column":0},"generated":{"line":4035,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4034,"column":0},"generated":{"line":4036,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4035,"column":0},"generated":{"line":4037,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4036,"column":0},"generated":{"line":4038,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4037,"column":0},"generated":{"line":4039,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4038,"column":0},"generated":{"line":4040,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4039,"column":0},"generated":{"line":4041,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4040,"column":0},"generated":{"line":4042,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4041,"column":0},"generated":{"line":4043,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4042,"column":0},"generated":{"line":4044,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4043,"column":0},"generated":{"line":4045,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4044,"column":0},"generated":{"line":4046,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4045,"column":0},"generated":{"line":4047,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4046,"column":0},"generated":{"line":4048,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4047,"column":0},"generated":{"line":4049,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4048,"column":0},"generated":{"line":4050,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4049,"column":0},"generated":{"line":4051,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4050,"column":0},"generated":{"line":4052,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4051,"column":0},"generated":{"line":4053,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4052,"column":0},"generated":{"line":4054,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4053,"column":0},"generated":{"line":4055,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4054,"column":0},"generated":{"line":4056,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4055,"column":0},"generated":{"line":4057,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4056,"column":0},"generated":{"line":4058,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4057,"column":0},"generated":{"line":4059,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4058,"column":0},"generated":{"line":4060,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4059,"column":0},"generated":{"line":4061,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4060,"column":0},"generated":{"line":4062,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4061,"column":0},"generated":{"line":4063,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4062,"column":0},"generated":{"line":4064,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4063,"column":0},"generated":{"line":4065,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4064,"column":0},"generated":{"line":4066,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4065,"column":0},"generated":{"line":4067,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4066,"column":0},"generated":{"line":4068,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4067,"column":0},"generated":{"line":4069,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4068,"column":0},"generated":{"line":4070,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4069,"column":0},"generated":{"line":4071,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4070,"column":0},"generated":{"line":4072,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4071,"column":0},"generated":{"line":4073,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4072,"column":0},"generated":{"line":4074,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4073,"column":0},"generated":{"line":4075,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4074,"column":0},"generated":{"line":4076,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4075,"column":0},"generated":{"line":4077,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4076,"column":0},"generated":{"line":4078,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4077,"column":0},"generated":{"line":4079,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4078,"column":0},"generated":{"line":4080,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4079,"column":0},"generated":{"line":4081,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4080,"column":0},"generated":{"line":4082,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4081,"column":0},"generated":{"line":4083,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4082,"column":0},"generated":{"line":4084,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4083,"column":0},"generated":{"line":4085,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4084,"column":0},"generated":{"line":4086,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4085,"column":0},"generated":{"line":4087,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4086,"column":0},"generated":{"line":4088,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4087,"column":0},"generated":{"line":4089,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4088,"column":0},"generated":{"line":4090,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4089,"column":0},"generated":{"line":4091,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4090,"column":0},"generated":{"line":4092,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4091,"column":0},"generated":{"line":4093,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4092,"column":0},"generated":{"line":4094,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4093,"column":0},"generated":{"line":4095,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4094,"column":0},"generated":{"line":4096,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4095,"column":0},"generated":{"line":4097,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4096,"column":0},"generated":{"line":4098,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4097,"column":0},"generated":{"line":4099,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4098,"column":0},"generated":{"line":4100,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4099,"column":0},"generated":{"line":4101,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4100,"column":0},"generated":{"line":4102,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4101,"column":0},"generated":{"line":4103,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4102,"column":0},"generated":{"line":4104,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4103,"column":0},"generated":{"line":4105,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4104,"column":0},"generated":{"line":4106,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4105,"column":0},"generated":{"line":4107,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4106,"column":0},"generated":{"line":4108,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4107,"column":0},"generated":{"line":4109,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4108,"column":0},"generated":{"line":4110,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4109,"column":0},"generated":{"line":4111,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4110,"column":0},"generated":{"line":4112,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4111,"column":0},"generated":{"line":4113,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4112,"column":0},"generated":{"line":4114,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4113,"column":0},"generated":{"line":4115,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4114,"column":0},"generated":{"line":4116,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4115,"column":0},"generated":{"line":4117,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4116,"column":0},"generated":{"line":4118,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4117,"column":0},"generated":{"line":4119,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4118,"column":0},"generated":{"line":4120,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4119,"column":0},"generated":{"line":4121,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4120,"column":0},"generated":{"line":4122,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4121,"column":0},"generated":{"line":4123,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4122,"column":0},"generated":{"line":4124,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4123,"column":0},"generated":{"line":4125,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4124,"column":0},"generated":{"line":4126,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4125,"column":0},"generated":{"line":4127,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4126,"column":0},"generated":{"line":4128,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4127,"column":0},"generated":{"line":4129,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4128,"column":0},"generated":{"line":4130,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4129,"column":0},"generated":{"line":4131,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4130,"column":0},"generated":{"line":4132,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4131,"column":0},"generated":{"line":4133,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4132,"column":0},"generated":{"line":4134,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4133,"column":0},"generated":{"line":4135,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4134,"column":0},"generated":{"line":4136,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4135,"column":0},"generated":{"line":4137,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4136,"column":0},"generated":{"line":4138,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4137,"column":0},"generated":{"line":4139,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4138,"column":0},"generated":{"line":4140,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4139,"column":0},"generated":{"line":4141,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4140,"column":0},"generated":{"line":4142,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4141,"column":0},"generated":{"line":4143,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4142,"column":0},"generated":{"line":4144,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4143,"column":0},"generated":{"line":4145,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4144,"column":0},"generated":{"line":4146,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4145,"column":0},"generated":{"line":4147,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4146,"column":0},"generated":{"line":4148,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4147,"column":0},"generated":{"line":4149,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4148,"column":0},"generated":{"line":4150,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4149,"column":0},"generated":{"line":4151,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4150,"column":0},"generated":{"line":4152,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4151,"column":0},"generated":{"line":4153,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4152,"column":0},"generated":{"line":4154,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4153,"column":0},"generated":{"line":4155,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4154,"column":0},"generated":{"line":4156,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4155,"column":0},"generated":{"line":4157,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4156,"column":0},"generated":{"line":4158,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4157,"column":0},"generated":{"line":4159,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4158,"column":0},"generated":{"line":4160,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4159,"column":0},"generated":{"line":4161,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4160,"column":0},"generated":{"line":4162,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4161,"column":0},"generated":{"line":4163,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4162,"column":0},"generated":{"line":4164,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4163,"column":0},"generated":{"line":4165,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4164,"column":0},"generated":{"line":4166,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4165,"column":0},"generated":{"line":4167,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4166,"column":0},"generated":{"line":4168,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4167,"column":0},"generated":{"line":4169,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4168,"column":0},"generated":{"line":4170,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4169,"column":0},"generated":{"line":4171,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4170,"column":0},"generated":{"line":4172,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4171,"column":0},"generated":{"line":4173,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4172,"column":0},"generated":{"line":4174,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4173,"column":0},"generated":{"line":4175,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4174,"column":0},"generated":{"line":4176,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4175,"column":0},"generated":{"line":4177,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4176,"column":0},"generated":{"line":4178,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4177,"column":0},"generated":{"line":4179,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4178,"column":0},"generated":{"line":4180,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4179,"column":0},"generated":{"line":4181,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4180,"column":0},"generated":{"line":4182,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4181,"column":0},"generated":{"line":4183,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4182,"column":0},"generated":{"line":4184,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4183,"column":0},"generated":{"line":4185,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4184,"column":0},"generated":{"line":4186,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4185,"column":0},"generated":{"line":4187,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4186,"column":0},"generated":{"line":4188,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4187,"column":0},"generated":{"line":4189,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4188,"column":0},"generated":{"line":4190,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4189,"column":0},"generated":{"line":4191,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4190,"column":0},"generated":{"line":4192,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4191,"column":0},"generated":{"line":4193,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4192,"column":0},"generated":{"line":4194,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4193,"column":0},"generated":{"line":4195,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4194,"column":0},"generated":{"line":4196,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4195,"column":0},"generated":{"line":4197,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4196,"column":0},"generated":{"line":4198,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4197,"column":0},"generated":{"line":4199,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4198,"column":0},"generated":{"line":4200,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4199,"column":0},"generated":{"line":4201,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4200,"column":0},"generated":{"line":4202,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4201,"column":0},"generated":{"line":4203,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4202,"column":0},"generated":{"line":4204,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4203,"column":0},"generated":{"line":4205,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4204,"column":0},"generated":{"line":4206,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4205,"column":0},"generated":{"line":4207,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4206,"column":0},"generated":{"line":4208,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4207,"column":0},"generated":{"line":4209,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4208,"column":0},"generated":{"line":4210,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4209,"column":0},"generated":{"line":4211,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4210,"column":0},"generated":{"line":4212,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4211,"column":0},"generated":{"line":4213,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4212,"column":0},"generated":{"line":4214,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4213,"column":0},"generated":{"line":4215,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4214,"column":0},"generated":{"line":4216,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4215,"column":0},"generated":{"line":4217,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4216,"column":0},"generated":{"line":4218,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4217,"column":0},"generated":{"line":4219,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4218,"column":0},"generated":{"line":4220,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4219,"column":0},"generated":{"line":4221,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4220,"column":0},"generated":{"line":4222,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4221,"column":0},"generated":{"line":4223,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4222,"column":0},"generated":{"line":4224,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4223,"column":0},"generated":{"line":4225,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4224,"column":0},"generated":{"line":4226,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4225,"column":0},"generated":{"line":4227,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4226,"column":0},"generated":{"line":4228,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4227,"column":0},"generated":{"line":4229,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4228,"column":0},"generated":{"line":4230,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4229,"column":0},"generated":{"line":4231,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4230,"column":0},"generated":{"line":4232,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4231,"column":0},"generated":{"line":4233,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4232,"column":0},"generated":{"line":4234,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4233,"column":0},"generated":{"line":4235,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4234,"column":0},"generated":{"line":4236,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4235,"column":0},"generated":{"line":4237,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4236,"column":0},"generated":{"line":4238,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4237,"column":0},"generated":{"line":4239,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4238,"column":0},"generated":{"line":4240,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4239,"column":0},"generated":{"line":4241,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4240,"column":0},"generated":{"line":4242,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4241,"column":0},"generated":{"line":4243,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4242,"column":0},"generated":{"line":4244,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4243,"column":0},"generated":{"line":4245,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4244,"column":0},"generated":{"line":4246,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4245,"column":0},"generated":{"line":4247,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4246,"column":0},"generated":{"line":4248,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4247,"column":0},"generated":{"line":4249,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4248,"column":0},"generated":{"line":4250,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4249,"column":0},"generated":{"line":4251,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4250,"column":0},"generated":{"line":4252,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4251,"column":0},"generated":{"line":4253,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4252,"column":0},"generated":{"line":4254,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4253,"column":0},"generated":{"line":4255,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4254,"column":0},"generated":{"line":4256,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4255,"column":0},"generated":{"line":4257,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4256,"column":0},"generated":{"line":4258,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4257,"column":0},"generated":{"line":4259,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4258,"column":0},"generated":{"line":4260,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4259,"column":0},"generated":{"line":4261,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4260,"column":0},"generated":{"line":4262,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4261,"column":0},"generated":{"line":4263,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4262,"column":0},"generated":{"line":4264,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4263,"column":0},"generated":{"line":4265,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4264,"column":0},"generated":{"line":4266,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4265,"column":0},"generated":{"line":4267,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4266,"column":0},"generated":{"line":4268,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4267,"column":0},"generated":{"line":4269,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4268,"column":0},"generated":{"line":4270,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4269,"column":0},"generated":{"line":4271,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4270,"column":0},"generated":{"line":4272,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4271,"column":0},"generated":{"line":4273,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4272,"column":0},"generated":{"line":4274,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4273,"column":0},"generated":{"line":4275,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4274,"column":0},"generated":{"line":4276,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4275,"column":0},"generated":{"line":4277,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4276,"column":0},"generated":{"line":4278,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4277,"column":0},"generated":{"line":4279,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4278,"column":0},"generated":{"line":4280,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4279,"column":0},"generated":{"line":4281,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4280,"column":0},"generated":{"line":4282,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4281,"column":0},"generated":{"line":4283,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4282,"column":0},"generated":{"line":4284,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4283,"column":0},"generated":{"line":4285,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4284,"column":0},"generated":{"line":4286,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4285,"column":0},"generated":{"line":4287,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4286,"column":0},"generated":{"line":4288,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4287,"column":0},"generated":{"line":4289,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4288,"column":0},"generated":{"line":4290,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4289,"column":0},"generated":{"line":4291,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4290,"column":0},"generated":{"line":4292,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4291,"column":0},"generated":{"line":4293,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4292,"column":0},"generated":{"line":4294,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4293,"column":0},"generated":{"line":4295,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4294,"column":0},"generated":{"line":4296,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4295,"column":0},"generated":{"line":4297,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4296,"column":0},"generated":{"line":4298,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4297,"column":0},"generated":{"line":4299,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4298,"column":0},"generated":{"line":4300,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4299,"column":0},"generated":{"line":4301,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4300,"column":0},"generated":{"line":4302,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4301,"column":0},"generated":{"line":4303,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4302,"column":0},"generated":{"line":4304,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4303,"column":0},"generated":{"line":4305,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4304,"column":0},"generated":{"line":4306,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4305,"column":0},"generated":{"line":4307,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4306,"column":0},"generated":{"line":4308,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4307,"column":0},"generated":{"line":4309,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4308,"column":0},"generated":{"line":4310,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4309,"column":0},"generated":{"line":4311,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4310,"column":0},"generated":{"line":4312,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4311,"column":0},"generated":{"line":4313,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4312,"column":0},"generated":{"line":4314,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4313,"column":0},"generated":{"line":4315,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4314,"column":0},"generated":{"line":4316,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4315,"column":0},"generated":{"line":4317,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4316,"column":0},"generated":{"line":4318,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4317,"column":0},"generated":{"line":4319,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4318,"column":0},"generated":{"line":4320,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4319,"column":0},"generated":{"line":4321,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4320,"column":0},"generated":{"line":4322,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4321,"column":0},"generated":{"line":4323,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4322,"column":0},"generated":{"line":4324,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4323,"column":0},"generated":{"line":4325,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4324,"column":0},"generated":{"line":4326,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4325,"column":0},"generated":{"line":4327,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4326,"column":0},"generated":{"line":4328,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4327,"column":0},"generated":{"line":4329,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4328,"column":0},"generated":{"line":4330,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4329,"column":0},"generated":{"line":4331,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4330,"column":0},"generated":{"line":4332,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4331,"column":0},"generated":{"line":4333,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4332,"column":0},"generated":{"line":4334,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4333,"column":0},"generated":{"line":4335,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4334,"column":0},"generated":{"line":4336,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4335,"column":0},"generated":{"line":4337,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4336,"column":0},"generated":{"line":4338,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4337,"column":0},"generated":{"line":4339,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4338,"column":0},"generated":{"line":4340,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4339,"column":0},"generated":{"line":4341,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4340,"column":0},"generated":{"line":4342,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4341,"column":0},"generated":{"line":4343,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4342,"column":0},"generated":{"line":4344,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4343,"column":0},"generated":{"line":4345,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4344,"column":0},"generated":{"line":4346,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4345,"column":0},"generated":{"line":4347,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4346,"column":0},"generated":{"line":4348,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4347,"column":0},"generated":{"line":4349,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4348,"column":0},"generated":{"line":4350,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4349,"column":0},"generated":{"line":4351,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4350,"column":0},"generated":{"line":4352,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4351,"column":0},"generated":{"line":4353,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4352,"column":0},"generated":{"line":4354,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4353,"column":0},"generated":{"line":4355,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4354,"column":0},"generated":{"line":4356,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4355,"column":0},"generated":{"line":4357,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4356,"column":0},"generated":{"line":4358,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4357,"column":0},"generated":{"line":4359,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4358,"column":0},"generated":{"line":4360,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4359,"column":0},"generated":{"line":4361,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4360,"column":0},"generated":{"line":4362,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4361,"column":0},"generated":{"line":4363,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4362,"column":0},"generated":{"line":4364,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4363,"column":0},"generated":{"line":4365,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4364,"column":0},"generated":{"line":4366,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4365,"column":0},"generated":{"line":4367,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4366,"column":0},"generated":{"line":4368,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4367,"column":0},"generated":{"line":4369,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4368,"column":0},"generated":{"line":4370,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4369,"column":0},"generated":{"line":4371,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4370,"column":0},"generated":{"line":4372,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4371,"column":0},"generated":{"line":4373,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4372,"column":0},"generated":{"line":4374,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4373,"column":0},"generated":{"line":4375,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4374,"column":0},"generated":{"line":4376,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4375,"column":0},"generated":{"line":4377,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4376,"column":0},"generated":{"line":4378,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4377,"column":0},"generated":{"line":4379,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4378,"column":0},"generated":{"line":4380,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4379,"column":0},"generated":{"line":4381,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4380,"column":0},"generated":{"line":4382,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4381,"column":0},"generated":{"line":4383,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4382,"column":0},"generated":{"line":4384,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4383,"column":0},"generated":{"line":4385,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4384,"column":0},"generated":{"line":4386,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4385,"column":0},"generated":{"line":4387,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4386,"column":0},"generated":{"line":4388,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4387,"column":0},"generated":{"line":4389,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4388,"column":0},"generated":{"line":4390,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4389,"column":0},"generated":{"line":4391,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4390,"column":0},"generated":{"line":4392,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4391,"column":0},"generated":{"line":4393,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4392,"column":0},"generated":{"line":4394,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4393,"column":0},"generated":{"line":4395,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4394,"column":0},"generated":{"line":4396,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4395,"column":0},"generated":{"line":4397,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4396,"column":0},"generated":{"line":4398,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4397,"column":0},"generated":{"line":4399,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4398,"column":0},"generated":{"line":4400,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4399,"column":0},"generated":{"line":4401,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4400,"column":0},"generated":{"line":4402,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4401,"column":0},"generated":{"line":4403,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4402,"column":0},"generated":{"line":4404,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4403,"column":0},"generated":{"line":4405,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4404,"column":0},"generated":{"line":4406,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4405,"column":0},"generated":{"line":4407,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4406,"column":0},"generated":{"line":4408,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4407,"column":0},"generated":{"line":4409,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4408,"column":0},"generated":{"line":4410,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4409,"column":0},"generated":{"line":4411,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4410,"column":0},"generated":{"line":4412,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4411,"column":0},"generated":{"line":4413,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4412,"column":0},"generated":{"line":4414,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4413,"column":0},"generated":{"line":4415,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4414,"column":0},"generated":{"line":4416,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4415,"column":0},"generated":{"line":4417,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4416,"column":0},"generated":{"line":4418,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4417,"column":0},"generated":{"line":4419,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4418,"column":0},"generated":{"line":4420,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4419,"column":0},"generated":{"line":4421,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4420,"column":0},"generated":{"line":4422,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4421,"column":0},"generated":{"line":4423,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4422,"column":0},"generated":{"line":4424,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4423,"column":0},"generated":{"line":4425,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4424,"column":0},"generated":{"line":4426,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4425,"column":0},"generated":{"line":4427,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4426,"column":0},"generated":{"line":4428,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4427,"column":0},"generated":{"line":4429,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4428,"column":0},"generated":{"line":4430,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4429,"column":0},"generated":{"line":4431,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4430,"column":0},"generated":{"line":4432,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4431,"column":0},"generated":{"line":4433,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4432,"column":0},"generated":{"line":4434,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4433,"column":0},"generated":{"line":4435,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4434,"column":0},"generated":{"line":4436,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4435,"column":0},"generated":{"line":4437,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4436,"column":0},"generated":{"line":4438,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4437,"column":0},"generated":{"line":4439,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4438,"column":0},"generated":{"line":4440,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4439,"column":0},"generated":{"line":4441,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4440,"column":0},"generated":{"line":4442,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4441,"column":0},"generated":{"line":4443,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4442,"column":0},"generated":{"line":4444,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4443,"column":0},"generated":{"line":4445,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4444,"column":0},"generated":{"line":4446,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4445,"column":0},"generated":{"line":4447,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4446,"column":0},"generated":{"line":4448,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4447,"column":0},"generated":{"line":4449,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4448,"column":0},"generated":{"line":4450,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4449,"column":0},"generated":{"line":4451,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4450,"column":0},"generated":{"line":4452,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4451,"column":0},"generated":{"line":4453,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4452,"column":0},"generated":{"line":4454,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4453,"column":0},"generated":{"line":4455,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4454,"column":0},"generated":{"line":4456,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4455,"column":0},"generated":{"line":4457,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4456,"column":0},"generated":{"line":4458,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4457,"column":0},"generated":{"line":4459,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4458,"column":0},"generated":{"line":4460,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4459,"column":0},"generated":{"line":4461,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4460,"column":0},"generated":{"line":4462,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4461,"column":0},"generated":{"line":4463,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4462,"column":0},"generated":{"line":4464,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4463,"column":0},"generated":{"line":4465,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4464,"column":0},"generated":{"line":4466,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4465,"column":0},"generated":{"line":4467,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4466,"column":0},"generated":{"line":4468,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4467,"column":0},"generated":{"line":4469,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4468,"column":0},"generated":{"line":4470,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4469,"column":0},"generated":{"line":4471,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4470,"column":0},"generated":{"line":4472,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4471,"column":0},"generated":{"line":4473,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4472,"column":0},"generated":{"line":4474,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4473,"column":0},"generated":{"line":4475,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4474,"column":0},"generated":{"line":4476,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4475,"column":0},"generated":{"line":4477,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4476,"column":0},"generated":{"line":4478,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4477,"column":0},"generated":{"line":4479,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4478,"column":0},"generated":{"line":4480,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4479,"column":0},"generated":{"line":4481,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4480,"column":0},"generated":{"line":4482,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4481,"column":0},"generated":{"line":4483,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4482,"column":0},"generated":{"line":4484,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4483,"column":0},"generated":{"line":4485,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4484,"column":0},"generated":{"line":4486,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4485,"column":0},"generated":{"line":4487,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4486,"column":0},"generated":{"line":4488,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4487,"column":0},"generated":{"line":4489,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4488,"column":0},"generated":{"line":4490,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4489,"column":0},"generated":{"line":4491,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4490,"column":0},"generated":{"line":4492,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4491,"column":0},"generated":{"line":4493,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4492,"column":0},"generated":{"line":4494,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4493,"column":0},"generated":{"line":4495,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4494,"column":0},"generated":{"line":4496,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4495,"column":0},"generated":{"line":4497,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4496,"column":0},"generated":{"line":4498,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4497,"column":0},"generated":{"line":4499,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4498,"column":0},"generated":{"line":4500,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4499,"column":0},"generated":{"line":4501,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4500,"column":0},"generated":{"line":4502,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4501,"column":0},"generated":{"line":4503,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4502,"column":0},"generated":{"line":4504,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4503,"column":0},"generated":{"line":4505,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4504,"column":0},"generated":{"line":4506,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4505,"column":0},"generated":{"line":4507,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4506,"column":0},"generated":{"line":4508,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4507,"column":0},"generated":{"line":4509,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4508,"column":0},"generated":{"line":4510,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4509,"column":0},"generated":{"line":4511,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4510,"column":0},"generated":{"line":4512,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4511,"column":0},"generated":{"line":4513,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4512,"column":0},"generated":{"line":4514,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4513,"column":0},"generated":{"line":4515,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4514,"column":0},"generated":{"line":4516,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4515,"column":0},"generated":{"line":4517,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4516,"column":0},"generated":{"line":4518,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4517,"column":0},"generated":{"line":4519,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4518,"column":0},"generated":{"line":4520,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4519,"column":0},"generated":{"line":4521,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4520,"column":0},"generated":{"line":4522,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4521,"column":0},"generated":{"line":4523,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4522,"column":0},"generated":{"line":4524,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4523,"column":0},"generated":{"line":4525,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4524,"column":0},"generated":{"line":4526,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4525,"column":0},"generated":{"line":4527,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4526,"column":0},"generated":{"line":4528,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4527,"column":0},"generated":{"line":4529,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4528,"column":0},"generated":{"line":4530,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4529,"column":0},"generated":{"line":4531,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4530,"column":0},"generated":{"line":4532,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4531,"column":0},"generated":{"line":4533,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4532,"column":0},"generated":{"line":4534,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4533,"column":0},"generated":{"line":4535,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4534,"column":0},"generated":{"line":4536,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4535,"column":0},"generated":{"line":4537,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4536,"column":0},"generated":{"line":4538,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4537,"column":0},"generated":{"line":4539,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4538,"column":0},"generated":{"line":4540,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4539,"column":0},"generated":{"line":4541,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4540,"column":0},"generated":{"line":4542,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4541,"column":0},"generated":{"line":4543,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4542,"column":0},"generated":{"line":4544,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4543,"column":0},"generated":{"line":4545,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4544,"column":0},"generated":{"line":4546,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4545,"column":0},"generated":{"line":4547,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4546,"column":0},"generated":{"line":4548,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4547,"column":0},"generated":{"line":4549,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4548,"column":0},"generated":{"line":4550,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4549,"column":0},"generated":{"line":4551,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4550,"column":0},"generated":{"line":4552,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4551,"column":0},"generated":{"line":4553,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4552,"column":0},"generated":{"line":4554,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4553,"column":0},"generated":{"line":4555,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4554,"column":0},"generated":{"line":4556,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4555,"column":0},"generated":{"line":4557,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4556,"column":0},"generated":{"line":4558,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4557,"column":0},"generated":{"line":4559,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4558,"column":0},"generated":{"line":4560,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4559,"column":0},"generated":{"line":4561,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4560,"column":0},"generated":{"line":4562,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4561,"column":0},"generated":{"line":4563,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4562,"column":0},"generated":{"line":4564,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4563,"column":0},"generated":{"line":4565,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4564,"column":0},"generated":{"line":4566,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4565,"column":0},"generated":{"line":4567,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4566,"column":0},"generated":{"line":4568,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4567,"column":0},"generated":{"line":4569,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4568,"column":0},"generated":{"line":4570,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4569,"column":0},"generated":{"line":4571,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4570,"column":0},"generated":{"line":4572,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4571,"column":0},"generated":{"line":4573,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4572,"column":0},"generated":{"line":4574,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4573,"column":0},"generated":{"line":4575,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4574,"column":0},"generated":{"line":4576,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4575,"column":0},"generated":{"line":4577,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4576,"column":0},"generated":{"line":4578,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4577,"column":0},"generated":{"line":4579,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4578,"column":0},"generated":{"line":4580,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4579,"column":0},"generated":{"line":4581,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4580,"column":0},"generated":{"line":4582,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4581,"column":0},"generated":{"line":4583,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4582,"column":0},"generated":{"line":4584,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4583,"column":0},"generated":{"line":4585,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4584,"column":0},"generated":{"line":4586,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4585,"column":0},"generated":{"line":4587,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4586,"column":0},"generated":{"line":4588,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4587,"column":0},"generated":{"line":4589,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4588,"column":0},"generated":{"line":4590,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4589,"column":0},"generated":{"line":4591,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4590,"column":0},"generated":{"line":4592,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4591,"column":0},"generated":{"line":4593,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4592,"column":0},"generated":{"line":4594,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4593,"column":0},"generated":{"line":4595,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4594,"column":0},"generated":{"line":4596,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4595,"column":0},"generated":{"line":4597,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4596,"column":0},"generated":{"line":4598,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4597,"column":0},"generated":{"line":4599,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4598,"column":0},"generated":{"line":4600,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4599,"column":0},"generated":{"line":4601,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4600,"column":0},"generated":{"line":4602,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4601,"column":0},"generated":{"line":4603,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4602,"column":0},"generated":{"line":4604,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4603,"column":0},"generated":{"line":4605,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4604,"column":0},"generated":{"line":4606,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4605,"column":0},"generated":{"line":4607,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4606,"column":0},"generated":{"line":4608,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4607,"column":0},"generated":{"line":4609,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4608,"column":0},"generated":{"line":4610,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4609,"column":0},"generated":{"line":4611,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4610,"column":0},"generated":{"line":4612,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4611,"column":0},"generated":{"line":4613,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4612,"column":0},"generated":{"line":4614,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4613,"column":0},"generated":{"line":4615,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4614,"column":0},"generated":{"line":4616,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4615,"column":0},"generated":{"line":4617,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4616,"column":0},"generated":{"line":4618,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4617,"column":0},"generated":{"line":4619,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4618,"column":0},"generated":{"line":4620,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4619,"column":0},"generated":{"line":4621,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4620,"column":0},"generated":{"line":4622,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4621,"column":0},"generated":{"line":4623,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4622,"column":0},"generated":{"line":4624,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4623,"column":0},"generated":{"line":4625,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4624,"column":0},"generated":{"line":4626,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4625,"column":0},"generated":{"line":4627,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4626,"column":0},"generated":{"line":4628,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4627,"column":0},"generated":{"line":4629,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4628,"column":0},"generated":{"line":4630,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4629,"column":0},"generated":{"line":4631,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4630,"column":0},"generated":{"line":4632,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4631,"column":0},"generated":{"line":4633,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4632,"column":0},"generated":{"line":4634,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4633,"column":0},"generated":{"line":4635,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4634,"column":0},"generated":{"line":4636,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4635,"column":0},"generated":{"line":4637,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4636,"column":0},"generated":{"line":4638,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4637,"column":0},"generated":{"line":4639,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4638,"column":0},"generated":{"line":4640,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4639,"column":0},"generated":{"line":4641,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4640,"column":0},"generated":{"line":4642,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4641,"column":0},"generated":{"line":4643,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4642,"column":0},"generated":{"line":4644,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4643,"column":0},"generated":{"line":4645,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4644,"column":0},"generated":{"line":4646,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4645,"column":0},"generated":{"line":4647,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4646,"column":0},"generated":{"line":4648,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4647,"column":0},"generated":{"line":4649,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4648,"column":0},"generated":{"line":4650,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4649,"column":0},"generated":{"line":4651,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4650,"column":0},"generated":{"line":4652,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4651,"column":0},"generated":{"line":4653,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4652,"column":0},"generated":{"line":4654,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4653,"column":0},"generated":{"line":4655,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4654,"column":0},"generated":{"line":4656,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4655,"column":0},"generated":{"line":4657,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4656,"column":0},"generated":{"line":4658,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4657,"column":0},"generated":{"line":4659,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4658,"column":0},"generated":{"line":4660,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4659,"column":0},"generated":{"line":4661,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4660,"column":0},"generated":{"line":4662,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4661,"column":0},"generated":{"line":4663,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4662,"column":0},"generated":{"line":4664,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4663,"column":0},"generated":{"line":4665,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4664,"column":0},"generated":{"line":4666,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4665,"column":0},"generated":{"line":4667,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4666,"column":0},"generated":{"line":4668,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4667,"column":0},"generated":{"line":4669,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4668,"column":0},"generated":{"line":4670,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4669,"column":0},"generated":{"line":4671,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4670,"column":0},"generated":{"line":4672,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4671,"column":0},"generated":{"line":4673,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4672,"column":0},"generated":{"line":4674,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4673,"column":0},"generated":{"line":4675,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4674,"column":0},"generated":{"line":4676,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4675,"column":0},"generated":{"line":4677,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4676,"column":0},"generated":{"line":4678,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4677,"column":0},"generated":{"line":4679,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4678,"column":0},"generated":{"line":4680,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4679,"column":0},"generated":{"line":4681,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4680,"column":0},"generated":{"line":4682,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4681,"column":0},"generated":{"line":4683,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4682,"column":0},"generated":{"line":4684,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4683,"column":0},"generated":{"line":4685,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4684,"column":0},"generated":{"line":4686,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4685,"column":0},"generated":{"line":4687,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4686,"column":0},"generated":{"line":4688,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4687,"column":0},"generated":{"line":4689,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4688,"column":0},"generated":{"line":4690,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4689,"column":0},"generated":{"line":4691,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4690,"column":0},"generated":{"line":4692,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4691,"column":0},"generated":{"line":4693,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4692,"column":0},"generated":{"line":4694,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4693,"column":0},"generated":{"line":4695,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4694,"column":0},"generated":{"line":4696,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4695,"column":0},"generated":{"line":4697,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4696,"column":0},"generated":{"line":4698,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4697,"column":0},"generated":{"line":4699,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4698,"column":0},"generated":{"line":4700,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4699,"column":0},"generated":{"line":4701,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4700,"column":0},"generated":{"line":4702,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4701,"column":0},"generated":{"line":4703,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4702,"column":0},"generated":{"line":4704,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4703,"column":0},"generated":{"line":4705,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4704,"column":0},"generated":{"line":4706,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4705,"column":0},"generated":{"line":4707,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4706,"column":0},"generated":{"line":4708,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4707,"column":0},"generated":{"line":4709,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4708,"column":0},"generated":{"line":4710,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4709,"column":0},"generated":{"line":4711,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4710,"column":0},"generated":{"line":4712,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4711,"column":0},"generated":{"line":4713,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4712,"column":0},"generated":{"line":4714,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4713,"column":0},"generated":{"line":4715,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4714,"column":0},"generated":{"line":4716,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4715,"column":0},"generated":{"line":4717,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4716,"column":0},"generated":{"line":4718,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4717,"column":0},"generated":{"line":4719,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4718,"column":0},"generated":{"line":4720,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4719,"column":0},"generated":{"line":4721,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4720,"column":0},"generated":{"line":4722,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4721,"column":0},"generated":{"line":4723,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4722,"column":0},"generated":{"line":4724,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4723,"column":0},"generated":{"line":4725,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4724,"column":0},"generated":{"line":4726,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4725,"column":0},"generated":{"line":4727,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4726,"column":0},"generated":{"line":4728,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4727,"column":0},"generated":{"line":4729,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4728,"column":0},"generated":{"line":4730,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4729,"column":0},"generated":{"line":4731,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4730,"column":0},"generated":{"line":4732,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4731,"column":0},"generated":{"line":4733,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4732,"column":0},"generated":{"line":4734,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4733,"column":0},"generated":{"line":4735,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4734,"column":0},"generated":{"line":4736,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4735,"column":0},"generated":{"line":4737,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4736,"column":0},"generated":{"line":4738,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4737,"column":0},"generated":{"line":4739,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4738,"column":0},"generated":{"line":4740,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4739,"column":0},"generated":{"line":4741,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4740,"column":0},"generated":{"line":4742,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4741,"column":0},"generated":{"line":4743,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4742,"column":0},"generated":{"line":4744,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4743,"column":0},"generated":{"line":4745,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4744,"column":0},"generated":{"line":4746,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4745,"column":0},"generated":{"line":4747,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4746,"column":0},"generated":{"line":4748,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4747,"column":0},"generated":{"line":4749,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4748,"column":0},"generated":{"line":4750,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4749,"column":0},"generated":{"line":4751,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4750,"column":0},"generated":{"line":4752,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4751,"column":0},"generated":{"line":4753,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4752,"column":0},"generated":{"line":4754,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4753,"column":0},"generated":{"line":4755,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4754,"column":0},"generated":{"line":4756,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4755,"column":0},"generated":{"line":4757,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4756,"column":0},"generated":{"line":4758,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4757,"column":0},"generated":{"line":4759,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4758,"column":0},"generated":{"line":4760,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4759,"column":0},"generated":{"line":4761,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4760,"column":0},"generated":{"line":4762,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4761,"column":0},"generated":{"line":4763,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4762,"column":0},"generated":{"line":4764,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4763,"column":0},"generated":{"line":4765,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4764,"column":0},"generated":{"line":4766,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4765,"column":0},"generated":{"line":4767,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4766,"column":0},"generated":{"line":4768,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4767,"column":0},"generated":{"line":4769,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4768,"column":0},"generated":{"line":4770,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4769,"column":0},"generated":{"line":4771,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4770,"column":0},"generated":{"line":4772,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4771,"column":0},"generated":{"line":4773,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4772,"column":0},"generated":{"line":4774,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4773,"column":0},"generated":{"line":4775,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4774,"column":0},"generated":{"line":4776,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4775,"column":0},"generated":{"line":4777,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4776,"column":0},"generated":{"line":4778,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4777,"column":0},"generated":{"line":4779,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4778,"column":0},"generated":{"line":4780,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4779,"column":0},"generated":{"line":4781,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4780,"column":0},"generated":{"line":4782,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4781,"column":0},"generated":{"line":4783,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4782,"column":0},"generated":{"line":4784,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4783,"column":0},"generated":{"line":4785,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4784,"column":0},"generated":{"line":4786,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4785,"column":0},"generated":{"line":4787,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4786,"column":0},"generated":{"line":4788,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4787,"column":0},"generated":{"line":4789,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4788,"column":0},"generated":{"line":4790,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4789,"column":0},"generated":{"line":4791,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4790,"column":0},"generated":{"line":4792,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4791,"column":0},"generated":{"line":4793,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4792,"column":0},"generated":{"line":4794,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4793,"column":0},"generated":{"line":4795,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4794,"column":0},"generated":{"line":4796,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4795,"column":0},"generated":{"line":4797,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4796,"column":0},"generated":{"line":4798,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4797,"column":0},"generated":{"line":4799,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4798,"column":0},"generated":{"line":4800,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4799,"column":0},"generated":{"line":4801,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4800,"column":0},"generated":{"line":4802,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4801,"column":0},"generated":{"line":4803,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4802,"column":0},"generated":{"line":4804,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4803,"column":0},"generated":{"line":4805,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4804,"column":0},"generated":{"line":4806,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4805,"column":0},"generated":{"line":4807,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4806,"column":0},"generated":{"line":4808,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4807,"column":0},"generated":{"line":4809,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4808,"column":0},"generated":{"line":4810,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4809,"column":0},"generated":{"line":4811,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4810,"column":0},"generated":{"line":4812,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4811,"column":0},"generated":{"line":4813,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4812,"column":0},"generated":{"line":4814,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4813,"column":0},"generated":{"line":4815,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4814,"column":0},"generated":{"line":4816,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4815,"column":0},"generated":{"line":4817,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4816,"column":0},"generated":{"line":4818,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4817,"column":0},"generated":{"line":4819,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4818,"column":0},"generated":{"line":4820,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4819,"column":0},"generated":{"line":4821,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4820,"column":0},"generated":{"line":4822,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4821,"column":0},"generated":{"line":4823,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4822,"column":0},"generated":{"line":4824,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4823,"column":0},"generated":{"line":4825,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4824,"column":0},"generated":{"line":4826,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4825,"column":0},"generated":{"line":4827,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4826,"column":0},"generated":{"line":4828,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4827,"column":0},"generated":{"line":4829,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4828,"column":0},"generated":{"line":4830,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4829,"column":0},"generated":{"line":4831,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4830,"column":0},"generated":{"line":4832,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4831,"column":0},"generated":{"line":4833,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4832,"column":0},"generated":{"line":4834,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4833,"column":0},"generated":{"line":4835,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4834,"column":0},"generated":{"line":4836,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4835,"column":0},"generated":{"line":4837,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4836,"column":0},"generated":{"line":4838,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4837,"column":0},"generated":{"line":4839,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4838,"column":0},"generated":{"line":4840,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4839,"column":0},"generated":{"line":4841,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4840,"column":0},"generated":{"line":4842,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4841,"column":0},"generated":{"line":4843,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4842,"column":0},"generated":{"line":4844,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4843,"column":0},"generated":{"line":4845,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4844,"column":0},"generated":{"line":4846,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4845,"column":0},"generated":{"line":4847,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4846,"column":0},"generated":{"line":4848,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4847,"column":0},"generated":{"line":4849,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4848,"column":0},"generated":{"line":4850,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4849,"column":0},"generated":{"line":4851,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4850,"column":0},"generated":{"line":4852,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4851,"column":0},"generated":{"line":4853,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4852,"column":0},"generated":{"line":4854,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4853,"column":0},"generated":{"line":4855,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4854,"column":0},"generated":{"line":4856,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4855,"column":0},"generated":{"line":4857,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4856,"column":0},"generated":{"line":4858,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4857,"column":0},"generated":{"line":4859,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4858,"column":0},"generated":{"line":4860,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4859,"column":0},"generated":{"line":4861,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4860,"column":0},"generated":{"line":4862,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4861,"column":0},"generated":{"line":4863,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4862,"column":0},"generated":{"line":4864,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4863,"column":0},"generated":{"line":4865,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4864,"column":0},"generated":{"line":4866,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4865,"column":0},"generated":{"line":4867,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4866,"column":0},"generated":{"line":4868,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4867,"column":0},"generated":{"line":4869,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4868,"column":0},"generated":{"line":4870,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4869,"column":0},"generated":{"line":4871,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4870,"column":0},"generated":{"line":4872,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4871,"column":0},"generated":{"line":4873,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4872,"column":0},"generated":{"line":4874,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4873,"column":0},"generated":{"line":4875,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4874,"column":0},"generated":{"line":4876,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4875,"column":0},"generated":{"line":4877,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4876,"column":0},"generated":{"line":4878,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4877,"column":0},"generated":{"line":4879,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4878,"column":0},"generated":{"line":4880,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4879,"column":0},"generated":{"line":4881,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4880,"column":0},"generated":{"line":4882,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4881,"column":0},"generated":{"line":4883,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4882,"column":0},"generated":{"line":4884,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4883,"column":0},"generated":{"line":4885,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4884,"column":0},"generated":{"line":4886,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4885,"column":0},"generated":{"line":4887,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4886,"column":0},"generated":{"line":4888,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4887,"column":0},"generated":{"line":4889,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4888,"column":0},"generated":{"line":4890,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4889,"column":0},"generated":{"line":4891,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4890,"column":0},"generated":{"line":4892,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4891,"column":0},"generated":{"line":4893,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4892,"column":0},"generated":{"line":4894,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4893,"column":0},"generated":{"line":4895,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4894,"column":0},"generated":{"line":4896,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4895,"column":0},"generated":{"line":4897,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4896,"column":0},"generated":{"line":4898,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4897,"column":0},"generated":{"line":4899,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4898,"column":0},"generated":{"line":4900,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4899,"column":0},"generated":{"line":4901,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4900,"column":0},"generated":{"line":4902,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4901,"column":0},"generated":{"line":4903,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4902,"column":0},"generated":{"line":4904,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4903,"column":0},"generated":{"line":4905,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4904,"column":0},"generated":{"line":4906,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4905,"column":0},"generated":{"line":4907,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4906,"column":0},"generated":{"line":4908,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4907,"column":0},"generated":{"line":4909,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4908,"column":0},"generated":{"line":4910,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4909,"column":0},"generated":{"line":4911,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4910,"column":0},"generated":{"line":4912,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4911,"column":0},"generated":{"line":4913,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4912,"column":0},"generated":{"line":4914,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4913,"column":0},"generated":{"line":4915,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4914,"column":0},"generated":{"line":4916,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4915,"column":0},"generated":{"line":4917,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4916,"column":0},"generated":{"line":4918,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4917,"column":0},"generated":{"line":4919,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4918,"column":0},"generated":{"line":4920,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4919,"column":0},"generated":{"line":4921,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4920,"column":0},"generated":{"line":4922,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4921,"column":0},"generated":{"line":4923,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4922,"column":0},"generated":{"line":4924,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4923,"column":0},"generated":{"line":4925,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4924,"column":0},"generated":{"line":4926,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4925,"column":0},"generated":{"line":4927,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4926,"column":0},"generated":{"line":4928,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4927,"column":0},"generated":{"line":4929,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4928,"column":0},"generated":{"line":4930,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4929,"column":0},"generated":{"line":4931,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4930,"column":0},"generated":{"line":4932,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4931,"column":0},"generated":{"line":4933,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4932,"column":0},"generated":{"line":4934,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4933,"column":0},"generated":{"line":4935,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4934,"column":0},"generated":{"line":4936,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4935,"column":0},"generated":{"line":4937,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4936,"column":0},"generated":{"line":4938,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4937,"column":0},"generated":{"line":4939,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4938,"column":0},"generated":{"line":4940,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4939,"column":0},"generated":{"line":4941,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4940,"column":0},"generated":{"line":4942,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4941,"column":0},"generated":{"line":4943,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4942,"column":0},"generated":{"line":4944,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4943,"column":0},"generated":{"line":4945,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4944,"column":0},"generated":{"line":4946,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4945,"column":0},"generated":{"line":4947,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4946,"column":0},"generated":{"line":4948,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4947,"column":0},"generated":{"line":4949,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4948,"column":0},"generated":{"line":4950,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4949,"column":0},"generated":{"line":4951,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4950,"column":0},"generated":{"line":4952,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4951,"column":0},"generated":{"line":4953,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4952,"column":0},"generated":{"line":4954,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4953,"column":0},"generated":{"line":4955,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4954,"column":0},"generated":{"line":4956,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4955,"column":0},"generated":{"line":4957,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4956,"column":0},"generated":{"line":4958,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4957,"column":0},"generated":{"line":4959,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4958,"column":0},"generated":{"line":4960,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4959,"column":0},"generated":{"line":4961,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4960,"column":0},"generated":{"line":4962,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4961,"column":0},"generated":{"line":4963,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4962,"column":0},"generated":{"line":4964,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4963,"column":0},"generated":{"line":4965,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4964,"column":0},"generated":{"line":4966,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4965,"column":0},"generated":{"line":4967,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4966,"column":0},"generated":{"line":4968,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4967,"column":0},"generated":{"line":4969,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4968,"column":0},"generated":{"line":4970,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4969,"column":0},"generated":{"line":4971,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4970,"column":0},"generated":{"line":4972,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4971,"column":0},"generated":{"line":4973,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4972,"column":0},"generated":{"line":4974,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4973,"column":0},"generated":{"line":4975,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4974,"column":0},"generated":{"line":4976,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4975,"column":0},"generated":{"line":4977,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4976,"column":0},"generated":{"line":4978,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4977,"column":0},"generated":{"line":4979,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4978,"column":0},"generated":{"line":4980,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4979,"column":0},"generated":{"line":4981,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4980,"column":0},"generated":{"line":4982,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4981,"column":0},"generated":{"line":4983,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4982,"column":0},"generated":{"line":4984,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4983,"column":0},"generated":{"line":4985,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4984,"column":0},"generated":{"line":4986,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4985,"column":0},"generated":{"line":4987,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4986,"column":0},"generated":{"line":4988,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4987,"column":0},"generated":{"line":4989,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4988,"column":0},"generated":{"line":4990,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4989,"column":0},"generated":{"line":4991,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4990,"column":0},"generated":{"line":4992,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4991,"column":0},"generated":{"line":4993,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4992,"column":0},"generated":{"line":4994,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4993,"column":0},"generated":{"line":4995,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4994,"column":0},"generated":{"line":4996,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4995,"column":0},"generated":{"line":4997,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4996,"column":0},"generated":{"line":4998,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4997,"column":0},"generated":{"line":4999,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4998,"column":0},"generated":{"line":5000,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":4999,"column":0},"generated":{"line":5001,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5000,"column":0},"generated":{"line":5002,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5001,"column":0},"generated":{"line":5003,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5002,"column":0},"generated":{"line":5004,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5003,"column":0},"generated":{"line":5005,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5004,"column":0},"generated":{"line":5006,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5005,"column":0},"generated":{"line":5007,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5006,"column":0},"generated":{"line":5008,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5007,"column":0},"generated":{"line":5009,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5008,"column":0},"generated":{"line":5010,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5009,"column":0},"generated":{"line":5011,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5010,"column":0},"generated":{"line":5012,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5011,"column":0},"generated":{"line":5013,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5012,"column":0},"generated":{"line":5014,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5013,"column":0},"generated":{"line":5015,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5014,"column":0},"generated":{"line":5016,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5015,"column":0},"generated":{"line":5017,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5016,"column":0},"generated":{"line":5018,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5017,"column":0},"generated":{"line":5019,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5018,"column":0},"generated":{"line":5020,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5019,"column":0},"generated":{"line":5021,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5020,"column":0},"generated":{"line":5022,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5021,"column":0},"generated":{"line":5023,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5022,"column":0},"generated":{"line":5024,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5023,"column":0},"generated":{"line":5025,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5024,"column":0},"generated":{"line":5026,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5025,"column":0},"generated":{"line":5027,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5026,"column":0},"generated":{"line":5028,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5027,"column":0},"generated":{"line":5029,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5028,"column":0},"generated":{"line":5030,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5029,"column":0},"generated":{"line":5031,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5030,"column":0},"generated":{"line":5032,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5031,"column":0},"generated":{"line":5033,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5032,"column":0},"generated":{"line":5034,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5033,"column":0},"generated":{"line":5035,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5034,"column":0},"generated":{"line":5036,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5035,"column":0},"generated":{"line":5037,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5036,"column":0},"generated":{"line":5038,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5037,"column":0},"generated":{"line":5039,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5038,"column":0},"generated":{"line":5040,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5039,"column":0},"generated":{"line":5041,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5040,"column":0},"generated":{"line":5042,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5041,"column":0},"generated":{"line":5043,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5042,"column":0},"generated":{"line":5044,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5043,"column":0},"generated":{"line":5045,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5044,"column":0},"generated":{"line":5046,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5045,"column":0},"generated":{"line":5047,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5046,"column":0},"generated":{"line":5048,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5047,"column":0},"generated":{"line":5049,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5048,"column":0},"generated":{"line":5050,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5049,"column":0},"generated":{"line":5051,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5050,"column":0},"generated":{"line":5052,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5051,"column":0},"generated":{"line":5053,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5052,"column":0},"generated":{"line":5054,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5053,"column":0},"generated":{"line":5055,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5054,"column":0},"generated":{"line":5056,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5055,"column":0},"generated":{"line":5057,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5056,"column":0},"generated":{"line":5058,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5057,"column":0},"generated":{"line":5059,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5058,"column":0},"generated":{"line":5060,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5059,"column":0},"generated":{"line":5061,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5060,"column":0},"generated":{"line":5062,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5061,"column":0},"generated":{"line":5063,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5062,"column":0},"generated":{"line":5064,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5063,"column":0},"generated":{"line":5065,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5064,"column":0},"generated":{"line":5066,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5065,"column":0},"generated":{"line":5067,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5066,"column":0},"generated":{"line":5068,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5067,"column":0},"generated":{"line":5069,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5068,"column":0},"generated":{"line":5070,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5069,"column":0},"generated":{"line":5071,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5070,"column":0},"generated":{"line":5072,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5071,"column":0},"generated":{"line":5073,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5072,"column":0},"generated":{"line":5074,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5073,"column":0},"generated":{"line":5075,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5074,"column":0},"generated":{"line":5076,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5075,"column":0},"generated":{"line":5077,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5076,"column":0},"generated":{"line":5078,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5077,"column":0},"generated":{"line":5079,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5078,"column":0},"generated":{"line":5080,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5079,"column":0},"generated":{"line":5081,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5080,"column":0},"generated":{"line":5082,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5081,"column":0},"generated":{"line":5083,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5082,"column":0},"generated":{"line":5084,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5083,"column":0},"generated":{"line":5085,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5084,"column":0},"generated":{"line":5086,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5085,"column":0},"generated":{"line":5087,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5086,"column":0},"generated":{"line":5088,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5087,"column":0},"generated":{"line":5089,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5088,"column":0},"generated":{"line":5090,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5089,"column":0},"generated":{"line":5091,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5090,"column":0},"generated":{"line":5092,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5091,"column":0},"generated":{"line":5093,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5092,"column":0},"generated":{"line":5094,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5093,"column":0},"generated":{"line":5095,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5094,"column":0},"generated":{"line":5096,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5095,"column":0},"generated":{"line":5097,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5096,"column":0},"generated":{"line":5098,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5097,"column":0},"generated":{"line":5099,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5098,"column":0},"generated":{"line":5100,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5099,"column":0},"generated":{"line":5101,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5100,"column":0},"generated":{"line":5102,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5101,"column":0},"generated":{"line":5103,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5102,"column":0},"generated":{"line":5104,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5103,"column":0},"generated":{"line":5105,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5104,"column":0},"generated":{"line":5106,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5105,"column":0},"generated":{"line":5107,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5106,"column":0},"generated":{"line":5108,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5107,"column":0},"generated":{"line":5109,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5108,"column":0},"generated":{"line":5110,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5109,"column":0},"generated":{"line":5111,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5110,"column":0},"generated":{"line":5112,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5111,"column":0},"generated":{"line":5113,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5112,"column":0},"generated":{"line":5114,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5113,"column":0},"generated":{"line":5115,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5114,"column":0},"generated":{"line":5116,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5115,"column":0},"generated":{"line":5117,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5116,"column":0},"generated":{"line":5118,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5117,"column":0},"generated":{"line":5119,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5118,"column":0},"generated":{"line":5120,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5119,"column":0},"generated":{"line":5121,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5120,"column":0},"generated":{"line":5122,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5121,"column":0},"generated":{"line":5123,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5122,"column":0},"generated":{"line":5124,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5123,"column":0},"generated":{"line":5125,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5124,"column":0},"generated":{"line":5126,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5125,"column":0},"generated":{"line":5127,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5126,"column":0},"generated":{"line":5128,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5127,"column":0},"generated":{"line":5129,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5128,"column":0},"generated":{"line":5130,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5129,"column":0},"generated":{"line":5131,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5130,"column":0},"generated":{"line":5132,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5131,"column":0},"generated":{"line":5133,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5132,"column":0},"generated":{"line":5134,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5133,"column":0},"generated":{"line":5135,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5134,"column":0},"generated":{"line":5136,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5135,"column":0},"generated":{"line":5137,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5136,"column":0},"generated":{"line":5138,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5137,"column":0},"generated":{"line":5139,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5138,"column":0},"generated":{"line":5140,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5139,"column":0},"generated":{"line":5141,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5140,"column":0},"generated":{"line":5142,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5141,"column":0},"generated":{"line":5143,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5142,"column":0},"generated":{"line":5144,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5143,"column":0},"generated":{"line":5145,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5144,"column":0},"generated":{"line":5146,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5145,"column":0},"generated":{"line":5147,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5146,"column":0},"generated":{"line":5148,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5147,"column":0},"generated":{"line":5149,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5148,"column":0},"generated":{"line":5150,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5149,"column":0},"generated":{"line":5151,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5150,"column":0},"generated":{"line":5152,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5151,"column":0},"generated":{"line":5153,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5152,"column":0},"generated":{"line":5154,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5153,"column":0},"generated":{"line":5155,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5154,"column":0},"generated":{"line":5156,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5155,"column":0},"generated":{"line":5157,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5156,"column":0},"generated":{"line":5158,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5157,"column":0},"generated":{"line":5159,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5158,"column":0},"generated":{"line":5160,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5159,"column":0},"generated":{"line":5161,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5160,"column":0},"generated":{"line":5162,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5161,"column":0},"generated":{"line":5163,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5162,"column":0},"generated":{"line":5164,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5163,"column":0},"generated":{"line":5165,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5164,"column":0},"generated":{"line":5166,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5165,"column":0},"generated":{"line":5167,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5166,"column":0},"generated":{"line":5168,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5167,"column":0},"generated":{"line":5169,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5168,"column":0},"generated":{"line":5170,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5169,"column":0},"generated":{"line":5171,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5170,"column":0},"generated":{"line":5172,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5171,"column":0},"generated":{"line":5173,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5172,"column":0},"generated":{"line":5174,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5173,"column":0},"generated":{"line":5175,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5174,"column":0},"generated":{"line":5176,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5175,"column":0},"generated":{"line":5177,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5176,"column":0},"generated":{"line":5178,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5177,"column":0},"generated":{"line":5179,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5178,"column":0},"generated":{"line":5180,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5179,"column":0},"generated":{"line":5181,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5180,"column":0},"generated":{"line":5182,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5181,"column":0},"generated":{"line":5183,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5182,"column":0},"generated":{"line":5184,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5183,"column":0},"generated":{"line":5185,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5184,"column":0},"generated":{"line":5186,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5185,"column":0},"generated":{"line":5187,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5186,"column":0},"generated":{"line":5188,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5187,"column":0},"generated":{"line":5189,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5188,"column":0},"generated":{"line":5190,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5189,"column":0},"generated":{"line":5191,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5190,"column":0},"generated":{"line":5192,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5191,"column":0},"generated":{"line":5193,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5192,"column":0},"generated":{"line":5194,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5193,"column":0},"generated":{"line":5195,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5194,"column":0},"generated":{"line":5196,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5195,"column":0},"generated":{"line":5197,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5196,"column":0},"generated":{"line":5198,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5197,"column":0},"generated":{"line":5199,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5198,"column":0},"generated":{"line":5200,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5199,"column":0},"generated":{"line":5201,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5200,"column":0},"generated":{"line":5202,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5201,"column":0},"generated":{"line":5203,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5202,"column":0},"generated":{"line":5204,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5203,"column":0},"generated":{"line":5205,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5204,"column":0},"generated":{"line":5206,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5205,"column":0},"generated":{"line":5207,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5206,"column":0},"generated":{"line":5208,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5207,"column":0},"generated":{"line":5209,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5208,"column":0},"generated":{"line":5210,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5209,"column":0},"generated":{"line":5211,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5210,"column":0},"generated":{"line":5212,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5211,"column":0},"generated":{"line":5213,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5212,"column":0},"generated":{"line":5214,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5213,"column":0},"generated":{"line":5215,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5214,"column":0},"generated":{"line":5216,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5215,"column":0},"generated":{"line":5217,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5216,"column":0},"generated":{"line":5218,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5217,"column":0},"generated":{"line":5219,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5218,"column":0},"generated":{"line":5220,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5219,"column":0},"generated":{"line":5221,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5220,"column":0},"generated":{"line":5222,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5221,"column":0},"generated":{"line":5223,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5222,"column":0},"generated":{"line":5224,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5223,"column":0},"generated":{"line":5225,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5224,"column":0},"generated":{"line":5226,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5225,"column":0},"generated":{"line":5227,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5226,"column":0},"generated":{"line":5228,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5227,"column":0},"generated":{"line":5229,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5228,"column":0},"generated":{"line":5230,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5229,"column":0},"generated":{"line":5231,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5230,"column":0},"generated":{"line":5232,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5231,"column":0},"generated":{"line":5233,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5232,"column":0},"generated":{"line":5234,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5233,"column":0},"generated":{"line":5235,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5234,"column":0},"generated":{"line":5236,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5235,"column":0},"generated":{"line":5237,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5236,"column":0},"generated":{"line":5238,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5237,"column":0},"generated":{"line":5239,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5238,"column":0},"generated":{"line":5240,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5239,"column":0},"generated":{"line":5241,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5240,"column":0},"generated":{"line":5242,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5241,"column":0},"generated":{"line":5243,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5242,"column":0},"generated":{"line":5244,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5243,"column":0},"generated":{"line":5245,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5244,"column":0},"generated":{"line":5246,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5245,"column":0},"generated":{"line":5247,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5246,"column":0},"generated":{"line":5248,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5247,"column":0},"generated":{"line":5249,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5248,"column":0},"generated":{"line":5250,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5249,"column":0},"generated":{"line":5251,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5250,"column":0},"generated":{"line":5252,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5251,"column":0},"generated":{"line":5253,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5252,"column":0},"generated":{"line":5254,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5253,"column":0},"generated":{"line":5255,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5254,"column":0},"generated":{"line":5256,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5255,"column":0},"generated":{"line":5257,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5256,"column":0},"generated":{"line":5258,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5257,"column":0},"generated":{"line":5259,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5258,"column":0},"generated":{"line":5260,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5259,"column":0},"generated":{"line":5261,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5260,"column":0},"generated":{"line":5262,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5261,"column":0},"generated":{"line":5263,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5262,"column":0},"generated":{"line":5264,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5263,"column":0},"generated":{"line":5265,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5264,"column":0},"generated":{"line":5266,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5265,"column":0},"generated":{"line":5267,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5266,"column":0},"generated":{"line":5268,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5267,"column":0},"generated":{"line":5269,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5268,"column":0},"generated":{"line":5270,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5269,"column":0},"generated":{"line":5271,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5270,"column":0},"generated":{"line":5272,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5271,"column":0},"generated":{"line":5273,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5272,"column":0},"generated":{"line":5274,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5273,"column":0},"generated":{"line":5275,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5274,"column":0},"generated":{"line":5276,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5275,"column":0},"generated":{"line":5277,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5276,"column":0},"generated":{"line":5278,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5277,"column":0},"generated":{"line":5279,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5278,"column":0},"generated":{"line":5280,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5279,"column":0},"generated":{"line":5281,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5280,"column":0},"generated":{"line":5282,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5281,"column":0},"generated":{"line":5283,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5282,"column":0},"generated":{"line":5284,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5283,"column":0},"generated":{"line":5285,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5284,"column":0},"generated":{"line":5286,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5285,"column":0},"generated":{"line":5287,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5286,"column":0},"generated":{"line":5288,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5287,"column":0},"generated":{"line":5289,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5288,"column":0},"generated":{"line":5290,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5289,"column":0},"generated":{"line":5291,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5290,"column":0},"generated":{"line":5292,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5291,"column":0},"generated":{"line":5293,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5292,"column":0},"generated":{"line":5294,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5293,"column":0},"generated":{"line":5295,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5294,"column":0},"generated":{"line":5296,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5295,"column":0},"generated":{"line":5297,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5296,"column":0},"generated":{"line":5298,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5297,"column":0},"generated":{"line":5299,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5298,"column":0},"generated":{"line":5300,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5299,"column":0},"generated":{"line":5301,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5300,"column":0},"generated":{"line":5302,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5301,"column":0},"generated":{"line":5303,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5302,"column":0},"generated":{"line":5304,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5303,"column":0},"generated":{"line":5305,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5304,"column":0},"generated":{"line":5306,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5305,"column":0},"generated":{"line":5307,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5306,"column":0},"generated":{"line":5308,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5307,"column":0},"generated":{"line":5309,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5308,"column":0},"generated":{"line":5310,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5309,"column":0},"generated":{"line":5311,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5310,"column":0},"generated":{"line":5312,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5311,"column":0},"generated":{"line":5313,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5312,"column":0},"generated":{"line":5314,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5313,"column":0},"generated":{"line":5315,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5314,"column":0},"generated":{"line":5316,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5315,"column":0},"generated":{"line":5317,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5316,"column":0},"generated":{"line":5318,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5317,"column":0},"generated":{"line":5319,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5318,"column":0},"generated":{"line":5320,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5319,"column":0},"generated":{"line":5321,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5320,"column":0},"generated":{"line":5322,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5321,"column":0},"generated":{"line":5323,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5322,"column":0},"generated":{"line":5324,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5323,"column":0},"generated":{"line":5325,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5324,"column":0},"generated":{"line":5326,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5325,"column":0},"generated":{"line":5327,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5326,"column":0},"generated":{"line":5328,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5327,"column":0},"generated":{"line":5329,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5328,"column":0},"generated":{"line":5330,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5329,"column":0},"generated":{"line":5331,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5330,"column":0},"generated":{"line":5332,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5331,"column":0},"generated":{"line":5333,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5332,"column":0},"generated":{"line":5334,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5333,"column":0},"generated":{"line":5335,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5334,"column":0},"generated":{"line":5336,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5335,"column":0},"generated":{"line":5337,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5336,"column":0},"generated":{"line":5338,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5337,"column":0},"generated":{"line":5339,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5338,"column":0},"generated":{"line":5340,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5339,"column":0},"generated":{"line":5341,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5340,"column":0},"generated":{"line":5342,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5341,"column":0},"generated":{"line":5343,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5342,"column":0},"generated":{"line":5344,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5343,"column":0},"generated":{"line":5345,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5344,"column":0},"generated":{"line":5346,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5345,"column":0},"generated":{"line":5347,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5346,"column":0},"generated":{"line":5348,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5347,"column":0},"generated":{"line":5349,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5348,"column":0},"generated":{"line":5350,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5349,"column":0},"generated":{"line":5351,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5350,"column":0},"generated":{"line":5352,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5351,"column":0},"generated":{"line":5353,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5352,"column":0},"generated":{"line":5354,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5353,"column":0},"generated":{"line":5355,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5354,"column":0},"generated":{"line":5356,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5355,"column":0},"generated":{"line":5357,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5356,"column":0},"generated":{"line":5358,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5357,"column":0},"generated":{"line":5359,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5358,"column":0},"generated":{"line":5360,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5359,"column":0},"generated":{"line":5361,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5360,"column":0},"generated":{"line":5362,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5361,"column":0},"generated":{"line":5363,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5362,"column":0},"generated":{"line":5364,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5363,"column":0},"generated":{"line":5365,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5364,"column":0},"generated":{"line":5366,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5365,"column":0},"generated":{"line":5367,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5366,"column":0},"generated":{"line":5368,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5367,"column":0},"generated":{"line":5369,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5368,"column":0},"generated":{"line":5370,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5369,"column":0},"generated":{"line":5371,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5370,"column":0},"generated":{"line":5372,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5371,"column":0},"generated":{"line":5373,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5372,"column":0},"generated":{"line":5374,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5373,"column":0},"generated":{"line":5375,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5374,"column":0},"generated":{"line":5376,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5375,"column":0},"generated":{"line":5377,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5376,"column":0},"generated":{"line":5378,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5377,"column":0},"generated":{"line":5379,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5378,"column":0},"generated":{"line":5380,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5379,"column":0},"generated":{"line":5381,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5380,"column":0},"generated":{"line":5382,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5381,"column":0},"generated":{"line":5383,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5382,"column":0},"generated":{"line":5384,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5383,"column":0},"generated":{"line":5385,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5384,"column":0},"generated":{"line":5386,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5385,"column":0},"generated":{"line":5387,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5386,"column":0},"generated":{"line":5388,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5387,"column":0},"generated":{"line":5389,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5388,"column":0},"generated":{"line":5390,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5389,"column":0},"generated":{"line":5391,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5390,"column":0},"generated":{"line":5392,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5391,"column":0},"generated":{"line":5393,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5392,"column":0},"generated":{"line":5394,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5393,"column":0},"generated":{"line":5395,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5394,"column":0},"generated":{"line":5396,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5395,"column":0},"generated":{"line":5397,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5396,"column":0},"generated":{"line":5398,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5397,"column":0},"generated":{"line":5399,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5398,"column":0},"generated":{"line":5400,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5399,"column":0},"generated":{"line":5401,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5400,"column":0},"generated":{"line":5402,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5401,"column":0},"generated":{"line":5403,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5402,"column":0},"generated":{"line":5404,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5403,"column":0},"generated":{"line":5405,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5404,"column":0},"generated":{"line":5406,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5405,"column":0},"generated":{"line":5407,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5406,"column":0},"generated":{"line":5408,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5407,"column":0},"generated":{"line":5409,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5408,"column":0},"generated":{"line":5410,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5409,"column":0},"generated":{"line":5411,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5410,"column":0},"generated":{"line":5412,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5411,"column":0},"generated":{"line":5413,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5412,"column":0},"generated":{"line":5414,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5413,"column":0},"generated":{"line":5415,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5414,"column":0},"generated":{"line":5416,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5415,"column":0},"generated":{"line":5417,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5416,"column":0},"generated":{"line":5418,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5417,"column":0},"generated":{"line":5419,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5418,"column":0},"generated":{"line":5420,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5419,"column":0},"generated":{"line":5421,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5420,"column":0},"generated":{"line":5422,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5421,"column":0},"generated":{"line":5423,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5422,"column":0},"generated":{"line":5424,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5423,"column":0},"generated":{"line":5425,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5424,"column":0},"generated":{"line":5426,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5425,"column":0},"generated":{"line":5427,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5426,"column":0},"generated":{"line":5428,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5427,"column":0},"generated":{"line":5429,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5428,"column":0},"generated":{"line":5430,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5429,"column":0},"generated":{"line":5431,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5430,"column":0},"generated":{"line":5432,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5431,"column":0},"generated":{"line":5433,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5432,"column":0},"generated":{"line":5434,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5433,"column":0},"generated":{"line":5435,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5434,"column":0},"generated":{"line":5436,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5435,"column":0},"generated":{"line":5437,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5436,"column":0},"generated":{"line":5438,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5437,"column":0},"generated":{"line":5439,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5438,"column":0},"generated":{"line":5440,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5439,"column":0},"generated":{"line":5441,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5440,"column":0},"generated":{"line":5442,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5441,"column":0},"generated":{"line":5443,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5442,"column":0},"generated":{"line":5444,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5443,"column":0},"generated":{"line":5445,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5444,"column":0},"generated":{"line":5446,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5445,"column":0},"generated":{"line":5447,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5446,"column":0},"generated":{"line":5448,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5447,"column":0},"generated":{"line":5449,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5448,"column":0},"generated":{"line":5450,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5449,"column":0},"generated":{"line":5451,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5450,"column":0},"generated":{"line":5452,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5451,"column":0},"generated":{"line":5453,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5452,"column":0},"generated":{"line":5454,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5453,"column":0},"generated":{"line":5455,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5454,"column":0},"generated":{"line":5456,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5455,"column":0},"generated":{"line":5457,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5456,"column":0},"generated":{"line":5458,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5457,"column":0},"generated":{"line":5459,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5458,"column":0},"generated":{"line":5460,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5459,"column":0},"generated":{"line":5461,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5460,"column":0},"generated":{"line":5462,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5461,"column":0},"generated":{"line":5463,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5462,"column":0},"generated":{"line":5464,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5463,"column":0},"generated":{"line":5465,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5464,"column":0},"generated":{"line":5466,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5465,"column":0},"generated":{"line":5467,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5466,"column":0},"generated":{"line":5468,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5467,"column":0},"generated":{"line":5469,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5468,"column":0},"generated":{"line":5470,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5469,"column":0},"generated":{"line":5471,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5470,"column":0},"generated":{"line":5472,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5471,"column":0},"generated":{"line":5473,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5472,"column":0},"generated":{"line":5474,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5473,"column":0},"generated":{"line":5475,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5474,"column":0},"generated":{"line":5476,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5475,"column":0},"generated":{"line":5477,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5476,"column":0},"generated":{"line":5478,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5477,"column":0},"generated":{"line":5479,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5478,"column":0},"generated":{"line":5480,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5479,"column":0},"generated":{"line":5481,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5480,"column":0},"generated":{"line":5482,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5481,"column":0},"generated":{"line":5483,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5482,"column":0},"generated":{"line":5484,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5483,"column":0},"generated":{"line":5485,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5484,"column":0},"generated":{"line":5486,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5485,"column":0},"generated":{"line":5487,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5486,"column":0},"generated":{"line":5488,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5487,"column":0},"generated":{"line":5489,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5488,"column":0},"generated":{"line":5490,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5489,"column":0},"generated":{"line":5491,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5490,"column":0},"generated":{"line":5492,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5491,"column":0},"generated":{"line":5493,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5492,"column":0},"generated":{"line":5494,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5493,"column":0},"generated":{"line":5495,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5494,"column":0},"generated":{"line":5496,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5495,"column":0},"generated":{"line":5497,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5496,"column":0},"generated":{"line":5498,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5497,"column":0},"generated":{"line":5499,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5498,"column":0},"generated":{"line":5500,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5499,"column":0},"generated":{"line":5501,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5500,"column":0},"generated":{"line":5502,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5501,"column":0},"generated":{"line":5503,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5502,"column":0},"generated":{"line":5504,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5503,"column":0},"generated":{"line":5505,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5504,"column":0},"generated":{"line":5506,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5505,"column":0},"generated":{"line":5507,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5506,"column":0},"generated":{"line":5508,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5507,"column":0},"generated":{"line":5509,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5508,"column":0},"generated":{"line":5510,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5509,"column":0},"generated":{"line":5511,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5510,"column":0},"generated":{"line":5512,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5511,"column":0},"generated":{"line":5513,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5512,"column":0},"generated":{"line":5514,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5513,"column":0},"generated":{"line":5515,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5514,"column":0},"generated":{"line":5516,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5515,"column":0},"generated":{"line":5517,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5516,"column":0},"generated":{"line":5518,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5517,"column":0},"generated":{"line":5519,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5518,"column":0},"generated":{"line":5520,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5519,"column":0},"generated":{"line":5521,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5520,"column":0},"generated":{"line":5522,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5521,"column":0},"generated":{"line":5523,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5522,"column":0},"generated":{"line":5524,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5523,"column":0},"generated":{"line":5525,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5524,"column":0},"generated":{"line":5526,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5525,"column":0},"generated":{"line":5527,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5526,"column":0},"generated":{"line":5528,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5527,"column":0},"generated":{"line":5529,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5528,"column":0},"generated":{"line":5530,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5529,"column":0},"generated":{"line":5531,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5530,"column":0},"generated":{"line":5532,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5531,"column":0},"generated":{"line":5533,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5532,"column":0},"generated":{"line":5534,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5533,"column":0},"generated":{"line":5535,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5534,"column":0},"generated":{"line":5536,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5535,"column":0},"generated":{"line":5537,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5536,"column":0},"generated":{"line":5538,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5537,"column":0},"generated":{"line":5539,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5538,"column":0},"generated":{"line":5540,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5539,"column":0},"generated":{"line":5541,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5540,"column":0},"generated":{"line":5542,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5541,"column":0},"generated":{"line":5543,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5542,"column":0},"generated":{"line":5544,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5543,"column":0},"generated":{"line":5545,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5544,"column":0},"generated":{"line":5546,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5545,"column":0},"generated":{"line":5547,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5546,"column":0},"generated":{"line":5548,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5547,"column":0},"generated":{"line":5549,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5548,"column":0},"generated":{"line":5550,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5549,"column":0},"generated":{"line":5551,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5550,"column":0},"generated":{"line":5552,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5551,"column":0},"generated":{"line":5553,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5552,"column":0},"generated":{"line":5554,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5553,"column":0},"generated":{"line":5555,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5554,"column":0},"generated":{"line":5556,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5555,"column":0},"generated":{"line":5557,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5556,"column":0},"generated":{"line":5558,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5557,"column":0},"generated":{"line":5559,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5558,"column":0},"generated":{"line":5560,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5559,"column":0},"generated":{"line":5561,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5560,"column":0},"generated":{"line":5562,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5561,"column":0},"generated":{"line":5563,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5562,"column":0},"generated":{"line":5564,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5563,"column":0},"generated":{"line":5565,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5564,"column":0},"generated":{"line":5566,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5565,"column":0},"generated":{"line":5567,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5566,"column":0},"generated":{"line":5568,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5567,"column":0},"generated":{"line":5569,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5568,"column":0},"generated":{"line":5570,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5569,"column":0},"generated":{"line":5571,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5570,"column":0},"generated":{"line":5572,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5571,"column":0},"generated":{"line":5573,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5572,"column":0},"generated":{"line":5574,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5573,"column":0},"generated":{"line":5575,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5574,"column":0},"generated":{"line":5576,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5575,"column":0},"generated":{"line":5577,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5576,"column":0},"generated":{"line":5578,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5577,"column":0},"generated":{"line":5579,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5578,"column":0},"generated":{"line":5580,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5579,"column":0},"generated":{"line":5581,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5580,"column":0},"generated":{"line":5582,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5581,"column":0},"generated":{"line":5583,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5582,"column":0},"generated":{"line":5584,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5583,"column":0},"generated":{"line":5585,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5584,"column":0},"generated":{"line":5586,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5585,"column":0},"generated":{"line":5587,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5586,"column":0},"generated":{"line":5588,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5587,"column":0},"generated":{"line":5589,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5588,"column":0},"generated":{"line":5590,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5589,"column":0},"generated":{"line":5591,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5590,"column":0},"generated":{"line":5592,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5591,"column":0},"generated":{"line":5593,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5592,"column":0},"generated":{"line":5594,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5593,"column":0},"generated":{"line":5595,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5594,"column":0},"generated":{"line":5596,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5595,"column":0},"generated":{"line":5597,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5596,"column":0},"generated":{"line":5598,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5597,"column":0},"generated":{"line":5599,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5598,"column":0},"generated":{"line":5600,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5599,"column":0},"generated":{"line":5601,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5600,"column":0},"generated":{"line":5602,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5601,"column":0},"generated":{"line":5603,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5602,"column":0},"generated":{"line":5604,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5603,"column":0},"generated":{"line":5605,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5604,"column":0},"generated":{"line":5606,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5605,"column":0},"generated":{"line":5607,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5606,"column":0},"generated":{"line":5608,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5607,"column":0},"generated":{"line":5609,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5608,"column":0},"generated":{"line":5610,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5609,"column":0},"generated":{"line":5611,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5610,"column":0},"generated":{"line":5612,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5611,"column":0},"generated":{"line":5613,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5612,"column":0},"generated":{"line":5614,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5613,"column":0},"generated":{"line":5615,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5614,"column":0},"generated":{"line":5616,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5615,"column":0},"generated":{"line":5617,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5616,"column":0},"generated":{"line":5618,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5617,"column":0},"generated":{"line":5619,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5618,"column":0},"generated":{"line":5620,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5619,"column":0},"generated":{"line":5621,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5620,"column":0},"generated":{"line":5622,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5621,"column":0},"generated":{"line":5623,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5622,"column":0},"generated":{"line":5624,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5623,"column":0},"generated":{"line":5625,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5624,"column":0},"generated":{"line":5626,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5625,"column":0},"generated":{"line":5627,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5626,"column":0},"generated":{"line":5628,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5627,"column":0},"generated":{"line":5629,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5628,"column":0},"generated":{"line":5630,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5629,"column":0},"generated":{"line":5631,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5630,"column":0},"generated":{"line":5632,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5631,"column":0},"generated":{"line":5633,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5632,"column":0},"generated":{"line":5634,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5633,"column":0},"generated":{"line":5635,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5634,"column":0},"generated":{"line":5636,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5635,"column":0},"generated":{"line":5637,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5636,"column":0},"generated":{"line":5638,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5637,"column":0},"generated":{"line":5639,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5638,"column":0},"generated":{"line":5640,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5639,"column":0},"generated":{"line":5641,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5640,"column":0},"generated":{"line":5642,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5641,"column":0},"generated":{"line":5643,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5642,"column":0},"generated":{"line":5644,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5643,"column":0},"generated":{"line":5645,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5644,"column":0},"generated":{"line":5646,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5645,"column":0},"generated":{"line":5647,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5646,"column":0},"generated":{"line":5648,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5647,"column":0},"generated":{"line":5649,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5648,"column":0},"generated":{"line":5650,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5649,"column":0},"generated":{"line":5651,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5650,"column":0},"generated":{"line":5652,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5651,"column":0},"generated":{"line":5653,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5652,"column":0},"generated":{"line":5654,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5653,"column":0},"generated":{"line":5655,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5654,"column":0},"generated":{"line":5656,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5655,"column":0},"generated":{"line":5657,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5656,"column":0},"generated":{"line":5658,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5657,"column":0},"generated":{"line":5659,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5658,"column":0},"generated":{"line":5660,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5659,"column":0},"generated":{"line":5661,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5660,"column":0},"generated":{"line":5662,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5661,"column":0},"generated":{"line":5663,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5662,"column":0},"generated":{"line":5664,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5663,"column":0},"generated":{"line":5665,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5664,"column":0},"generated":{"line":5666,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5665,"column":0},"generated":{"line":5667,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5666,"column":0},"generated":{"line":5668,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5667,"column":0},"generated":{"line":5669,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5668,"column":0},"generated":{"line":5670,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5669,"column":0},"generated":{"line":5671,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5670,"column":0},"generated":{"line":5672,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5671,"column":0},"generated":{"line":5673,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5672,"column":0},"generated":{"line":5674,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5673,"column":0},"generated":{"line":5675,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5674,"column":0},"generated":{"line":5676,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5675,"column":0},"generated":{"line":5677,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5676,"column":0},"generated":{"line":5678,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5677,"column":0},"generated":{"line":5679,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5678,"column":0},"generated":{"line":5680,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5679,"column":0},"generated":{"line":5681,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5680,"column":0},"generated":{"line":5682,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5681,"column":0},"generated":{"line":5683,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5682,"column":0},"generated":{"line":5684,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5683,"column":0},"generated":{"line":5685,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5684,"column":0},"generated":{"line":5686,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5685,"column":0},"generated":{"line":5687,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5686,"column":0},"generated":{"line":5688,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5687,"column":0},"generated":{"line":5689,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5688,"column":0},"generated":{"line":5690,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5689,"column":0},"generated":{"line":5691,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5690,"column":0},"generated":{"line":5692,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5691,"column":0},"generated":{"line":5693,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5692,"column":0},"generated":{"line":5694,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5693,"column":0},"generated":{"line":5695,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5694,"column":0},"generated":{"line":5696,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5695,"column":0},"generated":{"line":5697,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5696,"column":0},"generated":{"line":5698,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5697,"column":0},"generated":{"line":5699,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5698,"column":0},"generated":{"line":5700,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5699,"column":0},"generated":{"line":5701,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5700,"column":0},"generated":{"line":5702,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5701,"column":0},"generated":{"line":5703,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5702,"column":0},"generated":{"line":5704,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5703,"column":0},"generated":{"line":5705,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5704,"column":0},"generated":{"line":5706,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5705,"column":0},"generated":{"line":5707,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5706,"column":0},"generated":{"line":5708,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5707,"column":0},"generated":{"line":5709,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5708,"column":0},"generated":{"line":5710,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5709,"column":0},"generated":{"line":5711,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5710,"column":0},"generated":{"line":5712,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5711,"column":0},"generated":{"line":5713,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5712,"column":0},"generated":{"line":5714,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5713,"column":0},"generated":{"line":5715,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5714,"column":0},"generated":{"line":5716,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5715,"column":0},"generated":{"line":5717,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5716,"column":0},"generated":{"line":5718,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5717,"column":0},"generated":{"line":5719,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5718,"column":0},"generated":{"line":5720,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5719,"column":0},"generated":{"line":5721,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5720,"column":0},"generated":{"line":5722,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5721,"column":0},"generated":{"line":5723,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5722,"column":0},"generated":{"line":5724,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5723,"column":0},"generated":{"line":5725,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5724,"column":0},"generated":{"line":5726,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5725,"column":0},"generated":{"line":5727,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5726,"column":0},"generated":{"line":5728,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5727,"column":0},"generated":{"line":5729,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5728,"column":0},"generated":{"line":5730,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5729,"column":0},"generated":{"line":5731,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5730,"column":0},"generated":{"line":5732,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5731,"column":0},"generated":{"line":5733,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5732,"column":0},"generated":{"line":5734,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5733,"column":0},"generated":{"line":5735,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5734,"column":0},"generated":{"line":5736,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5735,"column":0},"generated":{"line":5737,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5736,"column":0},"generated":{"line":5738,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5737,"column":0},"generated":{"line":5739,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5738,"column":0},"generated":{"line":5740,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5739,"column":0},"generated":{"line":5741,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5740,"column":0},"generated":{"line":5742,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5741,"column":0},"generated":{"line":5743,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5742,"column":0},"generated":{"line":5744,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5743,"column":0},"generated":{"line":5745,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5744,"column":0},"generated":{"line":5746,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5745,"column":0},"generated":{"line":5747,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5746,"column":0},"generated":{"line":5748,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5747,"column":0},"generated":{"line":5749,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5748,"column":0},"generated":{"line":5750,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5749,"column":0},"generated":{"line":5751,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5750,"column":0},"generated":{"line":5752,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5751,"column":0},"generated":{"line":5753,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5752,"column":0},"generated":{"line":5754,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5753,"column":0},"generated":{"line":5755,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5754,"column":0},"generated":{"line":5756,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5755,"column":0},"generated":{"line":5757,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5756,"column":0},"generated":{"line":5758,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5757,"column":0},"generated":{"line":5759,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5758,"column":0},"generated":{"line":5760,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5759,"column":0},"generated":{"line":5761,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5760,"column":0},"generated":{"line":5762,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5761,"column":0},"generated":{"line":5763,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5762,"column":0},"generated":{"line":5764,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5763,"column":0},"generated":{"line":5765,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5764,"column":0},"generated":{"line":5766,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5765,"column":0},"generated":{"line":5767,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5766,"column":0},"generated":{"line":5768,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5767,"column":0},"generated":{"line":5769,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5768,"column":0},"generated":{"line":5770,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5769,"column":0},"generated":{"line":5771,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5770,"column":0},"generated":{"line":5772,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5771,"column":0},"generated":{"line":5773,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5772,"column":0},"generated":{"line":5774,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5773,"column":0},"generated":{"line":5775,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5774,"column":0},"generated":{"line":5776,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5775,"column":0},"generated":{"line":5777,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5776,"column":0},"generated":{"line":5778,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5777,"column":0},"generated":{"line":5779,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5778,"column":0},"generated":{"line":5780,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5779,"column":0},"generated":{"line":5781,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5780,"column":0},"generated":{"line":5782,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5781,"column":0},"generated":{"line":5783,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5782,"column":0},"generated":{"line":5784,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5783,"column":0},"generated":{"line":5785,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5784,"column":0},"generated":{"line":5786,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5785,"column":0},"generated":{"line":5787,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5786,"column":0},"generated":{"line":5788,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5787,"column":0},"generated":{"line":5789,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5788,"column":0},"generated":{"line":5790,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5789,"column":0},"generated":{"line":5791,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5790,"column":0},"generated":{"line":5792,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5791,"column":0},"generated":{"line":5793,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5792,"column":0},"generated":{"line":5794,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5793,"column":0},"generated":{"line":5795,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5794,"column":0},"generated":{"line":5796,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5795,"column":0},"generated":{"line":5797,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5796,"column":0},"generated":{"line":5798,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5797,"column":0},"generated":{"line":5799,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5798,"column":0},"generated":{"line":5800,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5799,"column":0},"generated":{"line":5801,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5800,"column":0},"generated":{"line":5802,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5801,"column":0},"generated":{"line":5803,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5802,"column":0},"generated":{"line":5804,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5803,"column":0},"generated":{"line":5805,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5804,"column":0},"generated":{"line":5806,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5805,"column":0},"generated":{"line":5807,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5806,"column":0},"generated":{"line":5808,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5807,"column":0},"generated":{"line":5809,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5808,"column":0},"generated":{"line":5810,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5809,"column":0},"generated":{"line":5811,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5810,"column":0},"generated":{"line":5812,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5811,"column":0},"generated":{"line":5813,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5812,"column":0},"generated":{"line":5814,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5813,"column":0},"generated":{"line":5815,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5814,"column":0},"generated":{"line":5816,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5815,"column":0},"generated":{"line":5817,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5816,"column":0},"generated":{"line":5818,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5817,"column":0},"generated":{"line":5819,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5818,"column":0},"generated":{"line":5820,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5819,"column":0},"generated":{"line":5821,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5820,"column":0},"generated":{"line":5822,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5821,"column":0},"generated":{"line":5823,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5822,"column":0},"generated":{"line":5824,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5823,"column":0},"generated":{"line":5825,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5824,"column":0},"generated":{"line":5826,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5825,"column":0},"generated":{"line":5827,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5826,"column":0},"generated":{"line":5828,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5827,"column":0},"generated":{"line":5829,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5828,"column":0},"generated":{"line":5830,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5829,"column":0},"generated":{"line":5831,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5830,"column":0},"generated":{"line":5832,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5831,"column":0},"generated":{"line":5833,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5832,"column":0},"generated":{"line":5834,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5833,"column":0},"generated":{"line":5835,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5834,"column":0},"generated":{"line":5836,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5835,"column":0},"generated":{"line":5837,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5836,"column":0},"generated":{"line":5838,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5837,"column":0},"generated":{"line":5839,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5838,"column":0},"generated":{"line":5840,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5839,"column":0},"generated":{"line":5841,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5840,"column":0},"generated":{"line":5842,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5841,"column":0},"generated":{"line":5843,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5842,"column":0},"generated":{"line":5844,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5843,"column":0},"generated":{"line":5845,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5844,"column":0},"generated":{"line":5846,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5845,"column":0},"generated":{"line":5847,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5846,"column":0},"generated":{"line":5848,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5847,"column":0},"generated":{"line":5849,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5848,"column":0},"generated":{"line":5850,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5849,"column":0},"generated":{"line":5851,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5850,"column":0},"generated":{"line":5852,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5851,"column":0},"generated":{"line":5853,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5852,"column":0},"generated":{"line":5854,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5853,"column":0},"generated":{"line":5855,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5854,"column":0},"generated":{"line":5856,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5855,"column":0},"generated":{"line":5857,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5856,"column":0},"generated":{"line":5858,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5857,"column":0},"generated":{"line":5859,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5858,"column":0},"generated":{"line":5860,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5859,"column":0},"generated":{"line":5861,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5860,"column":0},"generated":{"line":5862,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5861,"column":0},"generated":{"line":5863,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5862,"column":0},"generated":{"line":5864,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5863,"column":0},"generated":{"line":5865,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5864,"column":0},"generated":{"line":5866,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5865,"column":0},"generated":{"line":5867,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5866,"column":0},"generated":{"line":5868,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5867,"column":0},"generated":{"line":5869,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5868,"column":0},"generated":{"line":5870,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5869,"column":0},"generated":{"line":5871,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5870,"column":0},"generated":{"line":5872,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5871,"column":0},"generated":{"line":5873,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5872,"column":0},"generated":{"line":5874,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5873,"column":0},"generated":{"line":5875,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5874,"column":0},"generated":{"line":5876,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5875,"column":0},"generated":{"line":5877,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5876,"column":0},"generated":{"line":5878,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5877,"column":0},"generated":{"line":5879,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5878,"column":0},"generated":{"line":5880,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5879,"column":0},"generated":{"line":5881,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5880,"column":0},"generated":{"line":5882,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5881,"column":0},"generated":{"line":5883,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5882,"column":0},"generated":{"line":5884,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5883,"column":0},"generated":{"line":5885,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5884,"column":0},"generated":{"line":5886,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5885,"column":0},"generated":{"line":5887,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5886,"column":0},"generated":{"line":5888,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5887,"column":0},"generated":{"line":5889,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5888,"column":0},"generated":{"line":5890,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5889,"column":0},"generated":{"line":5891,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5890,"column":0},"generated":{"line":5892,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5891,"column":0},"generated":{"line":5893,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5892,"column":0},"generated":{"line":5894,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5893,"column":0},"generated":{"line":5895,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5894,"column":0},"generated":{"line":5896,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5895,"column":0},"generated":{"line":5897,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5896,"column":0},"generated":{"line":5898,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5897,"column":0},"generated":{"line":5899,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5898,"column":0},"generated":{"line":5900,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5899,"column":0},"generated":{"line":5901,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5900,"column":0},"generated":{"line":5902,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5901,"column":0},"generated":{"line":5903,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5902,"column":0},"generated":{"line":5904,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5903,"column":0},"generated":{"line":5905,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5904,"column":0},"generated":{"line":5906,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5905,"column":0},"generated":{"line":5907,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5906,"column":0},"generated":{"line":5908,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5907,"column":0},"generated":{"line":5909,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5908,"column":0},"generated":{"line":5910,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5909,"column":0},"generated":{"line":5911,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5910,"column":0},"generated":{"line":5912,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5911,"column":0},"generated":{"line":5913,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5912,"column":0},"generated":{"line":5914,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5913,"column":0},"generated":{"line":5915,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5914,"column":0},"generated":{"line":5916,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5915,"column":0},"generated":{"line":5917,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5916,"column":0},"generated":{"line":5918,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5917,"column":0},"generated":{"line":5919,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5918,"column":0},"generated":{"line":5920,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5919,"column":0},"generated":{"line":5921,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5920,"column":0},"generated":{"line":5922,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5921,"column":0},"generated":{"line":5923,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5922,"column":0},"generated":{"line":5924,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5923,"column":0},"generated":{"line":5925,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5924,"column":0},"generated":{"line":5926,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5925,"column":0},"generated":{"line":5927,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5926,"column":0},"generated":{"line":5928,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5927,"column":0},"generated":{"line":5929,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5928,"column":0},"generated":{"line":5930,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5929,"column":0},"generated":{"line":5931,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5930,"column":0},"generated":{"line":5932,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5931,"column":0},"generated":{"line":5933,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5932,"column":0},"generated":{"line":5934,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5933,"column":0},"generated":{"line":5935,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5934,"column":0},"generated":{"line":5936,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5935,"column":0},"generated":{"line":5937,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5936,"column":0},"generated":{"line":5938,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5937,"column":0},"generated":{"line":5939,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5938,"column":0},"generated":{"line":5940,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5939,"column":0},"generated":{"line":5941,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5940,"column":0},"generated":{"line":5942,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5941,"column":0},"generated":{"line":5943,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5942,"column":0},"generated":{"line":5944,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5943,"column":0},"generated":{"line":5945,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5944,"column":0},"generated":{"line":5946,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5945,"column":0},"generated":{"line":5947,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5946,"column":0},"generated":{"line":5948,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5947,"column":0},"generated":{"line":5949,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5948,"column":0},"generated":{"line":5950,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5949,"column":0},"generated":{"line":5951,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5950,"column":0},"generated":{"line":5952,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5951,"column":0},"generated":{"line":5953,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5952,"column":0},"generated":{"line":5954,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5953,"column":0},"generated":{"line":5955,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5954,"column":0},"generated":{"line":5956,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5955,"column":0},"generated":{"line":5957,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5956,"column":0},"generated":{"line":5958,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5957,"column":0},"generated":{"line":5959,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5958,"column":0},"generated":{"line":5960,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5959,"column":0},"generated":{"line":5961,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5960,"column":0},"generated":{"line":5962,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5961,"column":0},"generated":{"line":5963,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5962,"column":0},"generated":{"line":5964,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5963,"column":0},"generated":{"line":5965,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5964,"column":0},"generated":{"line":5966,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5965,"column":0},"generated":{"line":5967,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5966,"column":0},"generated":{"line":5968,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5967,"column":0},"generated":{"line":5969,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5968,"column":0},"generated":{"line":5970,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5969,"column":0},"generated":{"line":5971,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5970,"column":0},"generated":{"line":5972,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5971,"column":0},"generated":{"line":5973,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5972,"column":0},"generated":{"line":5974,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5973,"column":0},"generated":{"line":5975,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5974,"column":0},"generated":{"line":5976,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5975,"column":0},"generated":{"line":5977,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5976,"column":0},"generated":{"line":5978,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5977,"column":0},"generated":{"line":5979,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5978,"column":0},"generated":{"line":5980,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5979,"column":0},"generated":{"line":5981,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5980,"column":0},"generated":{"line":5982,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5981,"column":0},"generated":{"line":5983,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5982,"column":0},"generated":{"line":5984,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5983,"column":0},"generated":{"line":5985,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5984,"column":0},"generated":{"line":5986,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5985,"column":0},"generated":{"line":5987,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5986,"column":0},"generated":{"line":5988,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5987,"column":0},"generated":{"line":5989,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5988,"column":0},"generated":{"line":5990,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5989,"column":0},"generated":{"line":5991,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5990,"column":0},"generated":{"line":5992,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5991,"column":0},"generated":{"line":5993,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5992,"column":0},"generated":{"line":5994,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5993,"column":0},"generated":{"line":5995,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5994,"column":0},"generated":{"line":5996,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5995,"column":0},"generated":{"line":5997,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5996,"column":0},"generated":{"line":5998,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5997,"column":0},"generated":{"line":5999,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5998,"column":0},"generated":{"line":6000,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":5999,"column":0},"generated":{"line":6001,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6000,"column":0},"generated":{"line":6002,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6001,"column":0},"generated":{"line":6003,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6002,"column":0},"generated":{"line":6004,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6003,"column":0},"generated":{"line":6005,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6004,"column":0},"generated":{"line":6006,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6005,"column":0},"generated":{"line":6007,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6006,"column":0},"generated":{"line":6008,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6007,"column":0},"generated":{"line":6009,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6008,"column":0},"generated":{"line":6010,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6009,"column":0},"generated":{"line":6011,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6010,"column":0},"generated":{"line":6012,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6011,"column":0},"generated":{"line":6013,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6012,"column":0},"generated":{"line":6014,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6013,"column":0},"generated":{"line":6015,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6014,"column":0},"generated":{"line":6016,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6015,"column":0},"generated":{"line":6017,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6016,"column":0},"generated":{"line":6018,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6017,"column":0},"generated":{"line":6019,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6018,"column":0},"generated":{"line":6020,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6019,"column":0},"generated":{"line":6021,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6020,"column":0},"generated":{"line":6022,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6021,"column":0},"generated":{"line":6023,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6022,"column":0},"generated":{"line":6024,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6023,"column":0},"generated":{"line":6025,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6024,"column":0},"generated":{"line":6026,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6025,"column":0},"generated":{"line":6027,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6026,"column":0},"generated":{"line":6028,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6027,"column":0},"generated":{"line":6029,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6028,"column":0},"generated":{"line":6030,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6029,"column":0},"generated":{"line":6031,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6030,"column":0},"generated":{"line":6032,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6031,"column":0},"generated":{"line":6033,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6032,"column":0},"generated":{"line":6034,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6033,"column":0},"generated":{"line":6035,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6034,"column":0},"generated":{"line":6036,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6035,"column":0},"generated":{"line":6037,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6036,"column":0},"generated":{"line":6038,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6037,"column":0},"generated":{"line":6039,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6038,"column":0},"generated":{"line":6040,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6039,"column":0},"generated":{"line":6041,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6040,"column":0},"generated":{"line":6042,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6041,"column":0},"generated":{"line":6043,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6042,"column":0},"generated":{"line":6044,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6043,"column":0},"generated":{"line":6045,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6044,"column":0},"generated":{"line":6046,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6045,"column":0},"generated":{"line":6047,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6046,"column":0},"generated":{"line":6048,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6047,"column":0},"generated":{"line":6049,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6048,"column":0},"generated":{"line":6050,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6049,"column":0},"generated":{"line":6051,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6050,"column":0},"generated":{"line":6052,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6051,"column":0},"generated":{"line":6053,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6052,"column":0},"generated":{"line":6054,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6053,"column":0},"generated":{"line":6055,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6054,"column":0},"generated":{"line":6056,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6055,"column":0},"generated":{"line":6057,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6056,"column":0},"generated":{"line":6058,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6057,"column":0},"generated":{"line":6059,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6058,"column":0},"generated":{"line":6060,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6059,"column":0},"generated":{"line":6061,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6060,"column":0},"generated":{"line":6062,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6061,"column":0},"generated":{"line":6063,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6062,"column":0},"generated":{"line":6064,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6063,"column":0},"generated":{"line":6065,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6064,"column":0},"generated":{"line":6066,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6065,"column":0},"generated":{"line":6067,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6066,"column":0},"generated":{"line":6068,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6067,"column":0},"generated":{"line":6069,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6068,"column":0},"generated":{"line":6070,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6069,"column":0},"generated":{"line":6071,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6070,"column":0},"generated":{"line":6072,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6071,"column":0},"generated":{"line":6073,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6072,"column":0},"generated":{"line":6074,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6073,"column":0},"generated":{"line":6075,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6074,"column":0},"generated":{"line":6076,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6075,"column":0},"generated":{"line":6077,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6076,"column":0},"generated":{"line":6078,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6077,"column":0},"generated":{"line":6079,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6078,"column":0},"generated":{"line":6080,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6079,"column":0},"generated":{"line":6081,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6080,"column":0},"generated":{"line":6082,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6081,"column":0},"generated":{"line":6083,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6082,"column":0},"generated":{"line":6084,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6083,"column":0},"generated":{"line":6085,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6084,"column":0},"generated":{"line":6086,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6085,"column":0},"generated":{"line":6087,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6086,"column":0},"generated":{"line":6088,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6087,"column":0},"generated":{"line":6089,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6088,"column":0},"generated":{"line":6090,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6089,"column":0},"generated":{"line":6091,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6090,"column":0},"generated":{"line":6092,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6091,"column":0},"generated":{"line":6093,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6092,"column":0},"generated":{"line":6094,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6093,"column":0},"generated":{"line":6095,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6094,"column":0},"generated":{"line":6096,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6095,"column":0},"generated":{"line":6097,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6096,"column":0},"generated":{"line":6098,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6097,"column":0},"generated":{"line":6099,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6098,"column":0},"generated":{"line":6100,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6099,"column":0},"generated":{"line":6101,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6100,"column":0},"generated":{"line":6102,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6101,"column":0},"generated":{"line":6103,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6102,"column":0},"generated":{"line":6104,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6103,"column":0},"generated":{"line":6105,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6104,"column":0},"generated":{"line":6106,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6105,"column":0},"generated":{"line":6107,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6106,"column":0},"generated":{"line":6108,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6107,"column":0},"generated":{"line":6109,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6108,"column":0},"generated":{"line":6110,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6109,"column":0},"generated":{"line":6111,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6110,"column":0},"generated":{"line":6112,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6111,"column":0},"generated":{"line":6113,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6112,"column":0},"generated":{"line":6114,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6113,"column":0},"generated":{"line":6115,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6114,"column":0},"generated":{"line":6116,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6115,"column":0},"generated":{"line":6117,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6116,"column":0},"generated":{"line":6118,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6117,"column":0},"generated":{"line":6119,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6118,"column":0},"generated":{"line":6120,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6119,"column":0},"generated":{"line":6121,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6120,"column":0},"generated":{"line":6122,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6121,"column":0},"generated":{"line":6123,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6122,"column":0},"generated":{"line":6124,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6123,"column":0},"generated":{"line":6125,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6124,"column":0},"generated":{"line":6126,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6125,"column":0},"generated":{"line":6127,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6126,"column":0},"generated":{"line":6128,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6127,"column":0},"generated":{"line":6129,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6128,"column":0},"generated":{"line":6130,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6129,"column":0},"generated":{"line":6131,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6130,"column":0},"generated":{"line":6132,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6131,"column":0},"generated":{"line":6133,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6132,"column":0},"generated":{"line":6134,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6133,"column":0},"generated":{"line":6135,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6134,"column":0},"generated":{"line":6136,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6135,"column":0},"generated":{"line":6137,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6136,"column":0},"generated":{"line":6138,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6137,"column":0},"generated":{"line":6139,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6138,"column":0},"generated":{"line":6140,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6139,"column":0},"generated":{"line":6141,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6140,"column":0},"generated":{"line":6142,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6141,"column":0},"generated":{"line":6143,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6142,"column":0},"generated":{"line":6144,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6143,"column":0},"generated":{"line":6145,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6144,"column":0},"generated":{"line":6146,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6145,"column":0},"generated":{"line":6147,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6146,"column":0},"generated":{"line":6148,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6147,"column":0},"generated":{"line":6149,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6148,"column":0},"generated":{"line":6150,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6149,"column":0},"generated":{"line":6151,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6150,"column":0},"generated":{"line":6152,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6151,"column":0},"generated":{"line":6153,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6152,"column":0},"generated":{"line":6154,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6153,"column":0},"generated":{"line":6155,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6154,"column":0},"generated":{"line":6156,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6155,"column":0},"generated":{"line":6157,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6156,"column":0},"generated":{"line":6158,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6157,"column":0},"generated":{"line":6159,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6158,"column":0},"generated":{"line":6160,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6159,"column":0},"generated":{"line":6161,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6160,"column":0},"generated":{"line":6162,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6161,"column":0},"generated":{"line":6163,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6162,"column":0},"generated":{"line":6164,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6163,"column":0},"generated":{"line":6165,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6164,"column":0},"generated":{"line":6166,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6165,"column":0},"generated":{"line":6167,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6166,"column":0},"generated":{"line":6168,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6167,"column":0},"generated":{"line":6169,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6168,"column":0},"generated":{"line":6170,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6169,"column":0},"generated":{"line":6171,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6170,"column":0},"generated":{"line":6172,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6171,"column":0},"generated":{"line":6173,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6172,"column":0},"generated":{"line":6174,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6173,"column":0},"generated":{"line":6175,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6174,"column":0},"generated":{"line":6176,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6175,"column":0},"generated":{"line":6177,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6176,"column":0},"generated":{"line":6178,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6177,"column":0},"generated":{"line":6179,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6178,"column":0},"generated":{"line":6180,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6179,"column":0},"generated":{"line":6181,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6180,"column":0},"generated":{"line":6182,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6181,"column":0},"generated":{"line":6183,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6182,"column":0},"generated":{"line":6184,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6183,"column":0},"generated":{"line":6185,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6184,"column":0},"generated":{"line":6186,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6185,"column":0},"generated":{"line":6187,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6186,"column":0},"generated":{"line":6188,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6187,"column":0},"generated":{"line":6189,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6188,"column":0},"generated":{"line":6190,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6189,"column":0},"generated":{"line":6191,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6190,"column":0},"generated":{"line":6192,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6191,"column":0},"generated":{"line":6193,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6192,"column":0},"generated":{"line":6194,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6193,"column":0},"generated":{"line":6195,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6194,"column":0},"generated":{"line":6196,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6195,"column":0},"generated":{"line":6197,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6196,"column":0},"generated":{"line":6198,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6197,"column":0},"generated":{"line":6199,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6198,"column":0},"generated":{"line":6200,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6199,"column":0},"generated":{"line":6201,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6200,"column":0},"generated":{"line":6202,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6201,"column":0},"generated":{"line":6203,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6202,"column":0},"generated":{"line":6204,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6203,"column":0},"generated":{"line":6205,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6204,"column":0},"generated":{"line":6206,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6205,"column":0},"generated":{"line":6207,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6206,"column":0},"generated":{"line":6208,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6207,"column":0},"generated":{"line":6209,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6208,"column":0},"generated":{"line":6210,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6209,"column":0},"generated":{"line":6211,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6210,"column":0},"generated":{"line":6212,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6211,"column":0},"generated":{"line":6213,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6212,"column":0},"generated":{"line":6214,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6213,"column":0},"generated":{"line":6215,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6214,"column":0},"generated":{"line":6216,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6215,"column":0},"generated":{"line":6217,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6216,"column":0},"generated":{"line":6218,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6217,"column":0},"generated":{"line":6219,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6218,"column":0},"generated":{"line":6220,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6219,"column":0},"generated":{"line":6221,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6220,"column":0},"generated":{"line":6222,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6221,"column":0},"generated":{"line":6223,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6222,"column":0},"generated":{"line":6224,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6223,"column":0},"generated":{"line":6225,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6224,"column":0},"generated":{"line":6226,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6225,"column":0},"generated":{"line":6227,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6226,"column":0},"generated":{"line":6228,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6227,"column":0},"generated":{"line":6229,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6228,"column":0},"generated":{"line":6230,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6229,"column":0},"generated":{"line":6231,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6230,"column":0},"generated":{"line":6232,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6231,"column":0},"generated":{"line":6233,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6232,"column":0},"generated":{"line":6234,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6233,"column":0},"generated":{"line":6235,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6234,"column":0},"generated":{"line":6236,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6235,"column":0},"generated":{"line":6237,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6236,"column":0},"generated":{"line":6238,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6237,"column":0},"generated":{"line":6239,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6238,"column":0},"generated":{"line":6240,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6239,"column":0},"generated":{"line":6241,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6240,"column":0},"generated":{"line":6242,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6241,"column":0},"generated":{"line":6243,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6242,"column":0},"generated":{"line":6244,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6243,"column":0},"generated":{"line":6245,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6244,"column":0},"generated":{"line":6246,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6245,"column":0},"generated":{"line":6247,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6246,"column":0},"generated":{"line":6248,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6247,"column":0},"generated":{"line":6249,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6248,"column":0},"generated":{"line":6250,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6249,"column":0},"generated":{"line":6251,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6250,"column":0},"generated":{"line":6252,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6251,"column":0},"generated":{"line":6253,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6252,"column":0},"generated":{"line":6254,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6253,"column":0},"generated":{"line":6255,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6254,"column":0},"generated":{"line":6256,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6255,"column":0},"generated":{"line":6257,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6256,"column":0},"generated":{"line":6258,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6257,"column":0},"generated":{"line":6259,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6258,"column":0},"generated":{"line":6260,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6259,"column":0},"generated":{"line":6261,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6260,"column":0},"generated":{"line":6262,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6261,"column":0},"generated":{"line":6263,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6262,"column":0},"generated":{"line":6264,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6263,"column":0},"generated":{"line":6265,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6264,"column":0},"generated":{"line":6266,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6265,"column":0},"generated":{"line":6267,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6266,"column":0},"generated":{"line":6268,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6267,"column":0},"generated":{"line":6269,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6268,"column":0},"generated":{"line":6270,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6269,"column":0},"generated":{"line":6271,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6270,"column":0},"generated":{"line":6272,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6271,"column":0},"generated":{"line":6273,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6272,"column":0},"generated":{"line":6274,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6273,"column":0},"generated":{"line":6275,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6274,"column":0},"generated":{"line":6276,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6275,"column":0},"generated":{"line":6277,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6276,"column":0},"generated":{"line":6278,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6277,"column":0},"generated":{"line":6279,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6278,"column":0},"generated":{"line":6280,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6279,"column":0},"generated":{"line":6281,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6280,"column":0},"generated":{"line":6282,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6281,"column":0},"generated":{"line":6283,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6282,"column":0},"generated":{"line":6284,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6283,"column":0},"generated":{"line":6285,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6284,"column":0},"generated":{"line":6286,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6285,"column":0},"generated":{"line":6287,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6286,"column":0},"generated":{"line":6288,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6287,"column":0},"generated":{"line":6289,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6288,"column":0},"generated":{"line":6290,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6289,"column":0},"generated":{"line":6291,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6290,"column":0},"generated":{"line":6292,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6291,"column":0},"generated":{"line":6293,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6292,"column":0},"generated":{"line":6294,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6293,"column":0},"generated":{"line":6295,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6294,"column":0},"generated":{"line":6296,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6295,"column":0},"generated":{"line":6297,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6296,"column":0},"generated":{"line":6298,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6297,"column":0},"generated":{"line":6299,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6298,"column":0},"generated":{"line":6300,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6299,"column":0},"generated":{"line":6301,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6300,"column":0},"generated":{"line":6302,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6301,"column":0},"generated":{"line":6303,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6302,"column":0},"generated":{"line":6304,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6303,"column":0},"generated":{"line":6305,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6304,"column":0},"generated":{"line":6306,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6305,"column":0},"generated":{"line":6307,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6306,"column":0},"generated":{"line":6308,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6307,"column":0},"generated":{"line":6309,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6308,"column":0},"generated":{"line":6310,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6309,"column":0},"generated":{"line":6311,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6310,"column":0},"generated":{"line":6312,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6311,"column":0},"generated":{"line":6313,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6312,"column":0},"generated":{"line":6314,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6313,"column":0},"generated":{"line":6315,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6314,"column":0},"generated":{"line":6316,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6315,"column":0},"generated":{"line":6317,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6316,"column":0},"generated":{"line":6318,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6317,"column":0},"generated":{"line":6319,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6318,"column":0},"generated":{"line":6320,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6319,"column":0},"generated":{"line":6321,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6320,"column":0},"generated":{"line":6322,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6321,"column":0},"generated":{"line":6323,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6322,"column":0},"generated":{"line":6324,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6323,"column":0},"generated":{"line":6325,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6324,"column":0},"generated":{"line":6326,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6325,"column":0},"generated":{"line":6327,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6326,"column":0},"generated":{"line":6328,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6327,"column":0},"generated":{"line":6329,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6328,"column":0},"generated":{"line":6330,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6329,"column":0},"generated":{"line":6331,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6330,"column":0},"generated":{"line":6332,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6331,"column":0},"generated":{"line":6333,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6332,"column":0},"generated":{"line":6334,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6333,"column":0},"generated":{"line":6335,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6334,"column":0},"generated":{"line":6336,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6335,"column":0},"generated":{"line":6337,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6336,"column":0},"generated":{"line":6338,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6337,"column":0},"generated":{"line":6339,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6338,"column":0},"generated":{"line":6340,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6339,"column":0},"generated":{"line":6341,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6340,"column":0},"generated":{"line":6342,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6341,"column":0},"generated":{"line":6343,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6342,"column":0},"generated":{"line":6344,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6343,"column":0},"generated":{"line":6345,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6344,"column":0},"generated":{"line":6346,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6345,"column":0},"generated":{"line":6347,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6346,"column":0},"generated":{"line":6348,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6347,"column":0},"generated":{"line":6349,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6348,"column":0},"generated":{"line":6350,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6349,"column":0},"generated":{"line":6351,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6350,"column":0},"generated":{"line":6352,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6351,"column":0},"generated":{"line":6353,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6352,"column":0},"generated":{"line":6354,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6353,"column":0},"generated":{"line":6355,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6354,"column":0},"generated":{"line":6356,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6355,"column":0},"generated":{"line":6357,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6356,"column":0},"generated":{"line":6358,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6357,"column":0},"generated":{"line":6359,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6358,"column":0},"generated":{"line":6360,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6359,"column":0},"generated":{"line":6361,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6360,"column":0},"generated":{"line":6362,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6361,"column":0},"generated":{"line":6363,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6362,"column":0},"generated":{"line":6364,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6363,"column":0},"generated":{"line":6365,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6364,"column":0},"generated":{"line":6366,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6365,"column":0},"generated":{"line":6367,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6366,"column":0},"generated":{"line":6368,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6367,"column":0},"generated":{"line":6369,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6368,"column":0},"generated":{"line":6370,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6369,"column":0},"generated":{"line":6371,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6370,"column":0},"generated":{"line":6372,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6371,"column":0},"generated":{"line":6373,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6372,"column":0},"generated":{"line":6374,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6373,"column":0},"generated":{"line":6375,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6374,"column":0},"generated":{"line":6376,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6375,"column":0},"generated":{"line":6377,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6376,"column":0},"generated":{"line":6378,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6377,"column":0},"generated":{"line":6379,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6378,"column":0},"generated":{"line":6380,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6379,"column":0},"generated":{"line":6381,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6380,"column":0},"generated":{"line":6382,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6381,"column":0},"generated":{"line":6383,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6382,"column":0},"generated":{"line":6384,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6383,"column":0},"generated":{"line":6385,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6384,"column":0},"generated":{"line":6386,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6385,"column":0},"generated":{"line":6387,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6386,"column":0},"generated":{"line":6388,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6387,"column":0},"generated":{"line":6389,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6388,"column":0},"generated":{"line":6390,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6389,"column":0},"generated":{"line":6391,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6390,"column":0},"generated":{"line":6392,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6391,"column":0},"generated":{"line":6393,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6392,"column":0},"generated":{"line":6394,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6393,"column":0},"generated":{"line":6395,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6394,"column":0},"generated":{"line":6396,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6395,"column":0},"generated":{"line":6397,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6396,"column":0},"generated":{"line":6398,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6397,"column":0},"generated":{"line":6399,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6398,"column":0},"generated":{"line":6400,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6399,"column":0},"generated":{"line":6401,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6400,"column":0},"generated":{"line":6402,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6401,"column":0},"generated":{"line":6403,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6402,"column":0},"generated":{"line":6404,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6403,"column":0},"generated":{"line":6405,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6404,"column":0},"generated":{"line":6406,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6405,"column":0},"generated":{"line":6407,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6406,"column":0},"generated":{"line":6408,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6407,"column":0},"generated":{"line":6409,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6408,"column":0},"generated":{"line":6410,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6409,"column":0},"generated":{"line":6411,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6410,"column":0},"generated":{"line":6412,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6411,"column":0},"generated":{"line":6413,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6412,"column":0},"generated":{"line":6414,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6413,"column":0},"generated":{"line":6415,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6414,"column":0},"generated":{"line":6416,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6415,"column":0},"generated":{"line":6417,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6416,"column":0},"generated":{"line":6418,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6417,"column":0},"generated":{"line":6419,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6418,"column":0},"generated":{"line":6420,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6419,"column":0},"generated":{"line":6421,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6420,"column":0},"generated":{"line":6422,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6421,"column":0},"generated":{"line":6423,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6422,"column":0},"generated":{"line":6424,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6423,"column":0},"generated":{"line":6425,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6424,"column":0},"generated":{"line":6426,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6425,"column":0},"generated":{"line":6427,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6426,"column":0},"generated":{"line":6428,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6427,"column":0},"generated":{"line":6429,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6428,"column":0},"generated":{"line":6430,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6429,"column":0},"generated":{"line":6431,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6430,"column":0},"generated":{"line":6432,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6431,"column":0},"generated":{"line":6433,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6432,"column":0},"generated":{"line":6434,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6433,"column":0},"generated":{"line":6435,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6434,"column":0},"generated":{"line":6436,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6435,"column":0},"generated":{"line":6437,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6436,"column":0},"generated":{"line":6438,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6437,"column":0},"generated":{"line":6439,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6438,"column":0},"generated":{"line":6440,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6439,"column":0},"generated":{"line":6441,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6440,"column":0},"generated":{"line":6442,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6441,"column":0},"generated":{"line":6443,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6442,"column":0},"generated":{"line":6444,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6443,"column":0},"generated":{"line":6445,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6444,"column":0},"generated":{"line":6446,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6445,"column":0},"generated":{"line":6447,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6446,"column":0},"generated":{"line":6448,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6447,"column":0},"generated":{"line":6449,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6448,"column":0},"generated":{"line":6450,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6449,"column":0},"generated":{"line":6451,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6450,"column":0},"generated":{"line":6452,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6451,"column":0},"generated":{"line":6453,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6452,"column":0},"generated":{"line":6454,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6453,"column":0},"generated":{"line":6455,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6454,"column":0},"generated":{"line":6456,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6455,"column":0},"generated":{"line":6457,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6456,"column":0},"generated":{"line":6458,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6457,"column":0},"generated":{"line":6459,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6458,"column":0},"generated":{"line":6460,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6459,"column":0},"generated":{"line":6461,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6460,"column":0},"generated":{"line":6462,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6461,"column":0},"generated":{"line":6463,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6462,"column":0},"generated":{"line":6464,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6463,"column":0},"generated":{"line":6465,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6464,"column":0},"generated":{"line":6466,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6465,"column":0},"generated":{"line":6467,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6466,"column":0},"generated":{"line":6468,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6467,"column":0},"generated":{"line":6469,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6468,"column":0},"generated":{"line":6470,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6469,"column":0},"generated":{"line":6471,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6470,"column":0},"generated":{"line":6472,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6471,"column":0},"generated":{"line":6473,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6472,"column":0},"generated":{"line":6474,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6473,"column":0},"generated":{"line":6475,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6474,"column":0},"generated":{"line":6476,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6475,"column":0},"generated":{"line":6477,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6476,"column":0},"generated":{"line":6478,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6477,"column":0},"generated":{"line":6479,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6478,"column":0},"generated":{"line":6480,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6479,"column":0},"generated":{"line":6481,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6480,"column":0},"generated":{"line":6482,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6481,"column":0},"generated":{"line":6483,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6482,"column":0},"generated":{"line":6484,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6483,"column":0},"generated":{"line":6485,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6484,"column":0},"generated":{"line":6486,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6485,"column":0},"generated":{"line":6487,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6486,"column":0},"generated":{"line":6488,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6487,"column":0},"generated":{"line":6489,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6488,"column":0},"generated":{"line":6490,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6489,"column":0},"generated":{"line":6491,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6490,"column":0},"generated":{"line":6492,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6491,"column":0},"generated":{"line":6493,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6492,"column":0},"generated":{"line":6494,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6493,"column":0},"generated":{"line":6495,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6494,"column":0},"generated":{"line":6496,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6495,"column":0},"generated":{"line":6497,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6496,"column":0},"generated":{"line":6498,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6497,"column":0},"generated":{"line":6499,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6498,"column":0},"generated":{"line":6500,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6499,"column":0},"generated":{"line":6501,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6500,"column":0},"generated":{"line":6502,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6501,"column":0},"generated":{"line":6503,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6502,"column":0},"generated":{"line":6504,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6503,"column":0},"generated":{"line":6505,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6504,"column":0},"generated":{"line":6506,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6505,"column":0},"generated":{"line":6507,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6506,"column":0},"generated":{"line":6508,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6507,"column":0},"generated":{"line":6509,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6508,"column":0},"generated":{"line":6510,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6509,"column":0},"generated":{"line":6511,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6510,"column":0},"generated":{"line":6512,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6511,"column":0},"generated":{"line":6513,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6512,"column":0},"generated":{"line":6514,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6513,"column":0},"generated":{"line":6515,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6514,"column":0},"generated":{"line":6516,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6515,"column":0},"generated":{"line":6517,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6516,"column":0},"generated":{"line":6518,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6517,"column":0},"generated":{"line":6519,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6518,"column":0},"generated":{"line":6520,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6519,"column":0},"generated":{"line":6521,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6520,"column":0},"generated":{"line":6522,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6521,"column":0},"generated":{"line":6523,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6522,"column":0},"generated":{"line":6524,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6523,"column":0},"generated":{"line":6525,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6524,"column":0},"generated":{"line":6526,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6525,"column":0},"generated":{"line":6527,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6526,"column":0},"generated":{"line":6528,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6527,"column":0},"generated":{"line":6529,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6528,"column":0},"generated":{"line":6530,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6529,"column":0},"generated":{"line":6531,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6530,"column":0},"generated":{"line":6532,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6531,"column":0},"generated":{"line":6533,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6532,"column":0},"generated":{"line":6534,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6533,"column":0},"generated":{"line":6535,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6534,"column":0},"generated":{"line":6536,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6535,"column":0},"generated":{"line":6537,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6536,"column":0},"generated":{"line":6538,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6537,"column":0},"generated":{"line":6539,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6538,"column":0},"generated":{"line":6540,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6539,"column":0},"generated":{"line":6541,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6540,"column":0},"generated":{"line":6542,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6541,"column":0},"generated":{"line":6543,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6542,"column":0},"generated":{"line":6544,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6543,"column":0},"generated":{"line":6545,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6544,"column":0},"generated":{"line":6546,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6545,"column":0},"generated":{"line":6547,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6546,"column":0},"generated":{"line":6548,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6547,"column":0},"generated":{"line":6549,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6548,"column":0},"generated":{"line":6550,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6549,"column":0},"generated":{"line":6551,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6550,"column":0},"generated":{"line":6552,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6551,"column":0},"generated":{"line":6553,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6552,"column":0},"generated":{"line":6554,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6553,"column":0},"generated":{"line":6555,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6554,"column":0},"generated":{"line":6556,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6555,"column":0},"generated":{"line":6557,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6556,"column":0},"generated":{"line":6558,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6557,"column":0},"generated":{"line":6559,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6558,"column":0},"generated":{"line":6560,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6559,"column":0},"generated":{"line":6561,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6560,"column":0},"generated":{"line":6562,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6561,"column":0},"generated":{"line":6563,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6562,"column":0},"generated":{"line":6564,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6563,"column":0},"generated":{"line":6565,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6564,"column":0},"generated":{"line":6566,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6565,"column":0},"generated":{"line":6567,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6566,"column":0},"generated":{"line":6568,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6567,"column":0},"generated":{"line":6569,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6568,"column":0},"generated":{"line":6570,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6569,"column":0},"generated":{"line":6571,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6570,"column":0},"generated":{"line":6572,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6571,"column":0},"generated":{"line":6573,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6572,"column":0},"generated":{"line":6574,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6573,"column":0},"generated":{"line":6575,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6574,"column":0},"generated":{"line":6576,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6575,"column":0},"generated":{"line":6577,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6576,"column":0},"generated":{"line":6578,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6577,"column":0},"generated":{"line":6579,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6578,"column":0},"generated":{"line":6580,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6579,"column":0},"generated":{"line":6581,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6580,"column":0},"generated":{"line":6582,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6581,"column":0},"generated":{"line":6583,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6582,"column":0},"generated":{"line":6584,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6583,"column":0},"generated":{"line":6585,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6584,"column":0},"generated":{"line":6586,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6585,"column":0},"generated":{"line":6587,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6586,"column":0},"generated":{"line":6588,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6587,"column":0},"generated":{"line":6589,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6588,"column":0},"generated":{"line":6590,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6589,"column":0},"generated":{"line":6591,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6590,"column":0},"generated":{"line":6592,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6591,"column":0},"generated":{"line":6593,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6592,"column":0},"generated":{"line":6594,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6593,"column":0},"generated":{"line":6595,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6594,"column":0},"generated":{"line":6596,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6595,"column":0},"generated":{"line":6597,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6596,"column":0},"generated":{"line":6598,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6597,"column":0},"generated":{"line":6599,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6598,"column":0},"generated":{"line":6600,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6599,"column":0},"generated":{"line":6601,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6600,"column":0},"generated":{"line":6602,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6601,"column":0},"generated":{"line":6603,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6602,"column":0},"generated":{"line":6604,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6603,"column":0},"generated":{"line":6605,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6604,"column":0},"generated":{"line":6606,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6605,"column":0},"generated":{"line":6607,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6606,"column":0},"generated":{"line":6608,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6607,"column":0},"generated":{"line":6609,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6608,"column":0},"generated":{"line":6610,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6609,"column":0},"generated":{"line":6611,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6610,"column":0},"generated":{"line":6612,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6611,"column":0},"generated":{"line":6613,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6612,"column":0},"generated":{"line":6614,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6613,"column":0},"generated":{"line":6615,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6614,"column":0},"generated":{"line":6616,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6615,"column":0},"generated":{"line":6617,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6616,"column":0},"generated":{"line":6618,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6617,"column":0},"generated":{"line":6619,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6618,"column":0},"generated":{"line":6620,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6619,"column":0},"generated":{"line":6621,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6620,"column":0},"generated":{"line":6622,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6621,"column":0},"generated":{"line":6623,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6622,"column":0},"generated":{"line":6624,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6623,"column":0},"generated":{"line":6625,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6624,"column":0},"generated":{"line":6626,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6625,"column":0},"generated":{"line":6627,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6626,"column":0},"generated":{"line":6628,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6627,"column":0},"generated":{"line":6629,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6628,"column":0},"generated":{"line":6630,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6629,"column":0},"generated":{"line":6631,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6630,"column":0},"generated":{"line":6632,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6631,"column":0},"generated":{"line":6633,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6632,"column":0},"generated":{"line":6634,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6633,"column":0},"generated":{"line":6635,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6634,"column":0},"generated":{"line":6636,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6635,"column":0},"generated":{"line":6637,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6636,"column":0},"generated":{"line":6638,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6637,"column":0},"generated":{"line":6639,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6638,"column":0},"generated":{"line":6640,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6639,"column":0},"generated":{"line":6641,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6640,"column":0},"generated":{"line":6642,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6641,"column":0},"generated":{"line":6643,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6642,"column":0},"generated":{"line":6644,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6643,"column":0},"generated":{"line":6645,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6644,"column":0},"generated":{"line":6646,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6645,"column":0},"generated":{"line":6647,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6646,"column":0},"generated":{"line":6648,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6647,"column":0},"generated":{"line":6649,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6648,"column":0},"generated":{"line":6650,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6649,"column":0},"generated":{"line":6651,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6650,"column":0},"generated":{"line":6652,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6651,"column":0},"generated":{"line":6653,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6652,"column":0},"generated":{"line":6654,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6653,"column":0},"generated":{"line":6655,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6654,"column":0},"generated":{"line":6656,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6655,"column":0},"generated":{"line":6657,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6656,"column":0},"generated":{"line":6658,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6657,"column":0},"generated":{"line":6659,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6658,"column":0},"generated":{"line":6660,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6659,"column":0},"generated":{"line":6661,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6660,"column":0},"generated":{"line":6662,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6661,"column":0},"generated":{"line":6663,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6662,"column":0},"generated":{"line":6664,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6663,"column":0},"generated":{"line":6665,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6664,"column":0},"generated":{"line":6666,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6665,"column":0},"generated":{"line":6667,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6666,"column":0},"generated":{"line":6668,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6667,"column":0},"generated":{"line":6669,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6668,"column":0},"generated":{"line":6670,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6669,"column":0},"generated":{"line":6671,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6670,"column":0},"generated":{"line":6672,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6671,"column":0},"generated":{"line":6673,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6672,"column":0},"generated":{"line":6674,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6673,"column":0},"generated":{"line":6675,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6674,"column":0},"generated":{"line":6676,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6675,"column":0},"generated":{"line":6677,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6676,"column":0},"generated":{"line":6678,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6677,"column":0},"generated":{"line":6679,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6678,"column":0},"generated":{"line":6680,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6679,"column":0},"generated":{"line":6681,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6680,"column":0},"generated":{"line":6682,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6681,"column":0},"generated":{"line":6683,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6682,"column":0},"generated":{"line":6684,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6683,"column":0},"generated":{"line":6685,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6684,"column":0},"generated":{"line":6686,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6685,"column":0},"generated":{"line":6687,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6686,"column":0},"generated":{"line":6688,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6687,"column":0},"generated":{"line":6689,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6688,"column":0},"generated":{"line":6690,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6689,"column":0},"generated":{"line":6691,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6690,"column":0},"generated":{"line":6692,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6691,"column":0},"generated":{"line":6693,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6692,"column":0},"generated":{"line":6694,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6693,"column":0},"generated":{"line":6695,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6694,"column":0},"generated":{"line":6696,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6695,"column":0},"generated":{"line":6697,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6696,"column":0},"generated":{"line":6698,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6697,"column":0},"generated":{"line":6699,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6698,"column":0},"generated":{"line":6700,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6699,"column":0},"generated":{"line":6701,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6700,"column":0},"generated":{"line":6702,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6701,"column":0},"generated":{"line":6703,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6702,"column":0},"generated":{"line":6704,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6703,"column":0},"generated":{"line":6705,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6704,"column":0},"generated":{"line":6706,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6705,"column":0},"generated":{"line":6707,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6706,"column":0},"generated":{"line":6708,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6707,"column":0},"generated":{"line":6709,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6708,"column":0},"generated":{"line":6710,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6709,"column":0},"generated":{"line":6711,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6710,"column":0},"generated":{"line":6712,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6711,"column":0},"generated":{"line":6713,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6712,"column":0},"generated":{"line":6714,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6713,"column":0},"generated":{"line":6715,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6714,"column":0},"generated":{"line":6716,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6715,"column":0},"generated":{"line":6717,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6716,"column":0},"generated":{"line":6718,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6717,"column":0},"generated":{"line":6719,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6718,"column":0},"generated":{"line":6720,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6719,"column":0},"generated":{"line":6721,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6720,"column":0},"generated":{"line":6722,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6721,"column":0},"generated":{"line":6723,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6722,"column":0},"generated":{"line":6724,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6723,"column":0},"generated":{"line":6725,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6724,"column":0},"generated":{"line":6726,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6725,"column":0},"generated":{"line":6727,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6726,"column":0},"generated":{"line":6728,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6727,"column":0},"generated":{"line":6729,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6728,"column":0},"generated":{"line":6730,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6729,"column":0},"generated":{"line":6731,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6730,"column":0},"generated":{"line":6732,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6731,"column":0},"generated":{"line":6733,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6732,"column":0},"generated":{"line":6734,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6733,"column":0},"generated":{"line":6735,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6734,"column":0},"generated":{"line":6736,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6735,"column":0},"generated":{"line":6737,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6736,"column":0},"generated":{"line":6738,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6737,"column":0},"generated":{"line":6739,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6738,"column":0},"generated":{"line":6740,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6739,"column":0},"generated":{"line":6741,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6740,"column":0},"generated":{"line":6742,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6741,"column":0},"generated":{"line":6743,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6742,"column":0},"generated":{"line":6744,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6743,"column":0},"generated":{"line":6745,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6744,"column":0},"generated":{"line":6746,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6745,"column":0},"generated":{"line":6747,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6746,"column":0},"generated":{"line":6748,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6747,"column":0},"generated":{"line":6749,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6748,"column":0},"generated":{"line":6750,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6749,"column":0},"generated":{"line":6751,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6750,"column":0},"generated":{"line":6752,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6751,"column":0},"generated":{"line":6753,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6752,"column":0},"generated":{"line":6754,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6753,"column":0},"generated":{"line":6755,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6754,"column":0},"generated":{"line":6756,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6755,"column":0},"generated":{"line":6757,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6756,"column":0},"generated":{"line":6758,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6757,"column":0},"generated":{"line":6759,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6758,"column":0},"generated":{"line":6760,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6759,"column":0},"generated":{"line":6761,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6760,"column":0},"generated":{"line":6762,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6761,"column":0},"generated":{"line":6763,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6762,"column":0},"generated":{"line":6764,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6763,"column":0},"generated":{"line":6765,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6764,"column":0},"generated":{"line":6766,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6765,"column":0},"generated":{"line":6767,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6766,"column":0},"generated":{"line":6768,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6767,"column":0},"generated":{"line":6769,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6768,"column":0},"generated":{"line":6770,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6769,"column":0},"generated":{"line":6771,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6770,"column":0},"generated":{"line":6772,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6771,"column":0},"generated":{"line":6773,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6772,"column":0},"generated":{"line":6774,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6773,"column":0},"generated":{"line":6775,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6774,"column":0},"generated":{"line":6776,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6775,"column":0},"generated":{"line":6777,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6776,"column":0},"generated":{"line":6778,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6777,"column":0},"generated":{"line":6779,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6778,"column":0},"generated":{"line":6780,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6779,"column":0},"generated":{"line":6781,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6780,"column":0},"generated":{"line":6782,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6781,"column":0},"generated":{"line":6783,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6782,"column":0},"generated":{"line":6784,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6783,"column":0},"generated":{"line":6785,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6784,"column":0},"generated":{"line":6786,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6785,"column":0},"generated":{"line":6787,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6786,"column":0},"generated":{"line":6788,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6787,"column":0},"generated":{"line":6789,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6788,"column":0},"generated":{"line":6790,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6789,"column":0},"generated":{"line":6791,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6790,"column":0},"generated":{"line":6792,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6791,"column":0},"generated":{"line":6793,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6792,"column":0},"generated":{"line":6794,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6793,"column":0},"generated":{"line":6795,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6794,"column":0},"generated":{"line":6796,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6795,"column":0},"generated":{"line":6797,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6796,"column":0},"generated":{"line":6798,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6797,"column":0},"generated":{"line":6799,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6798,"column":0},"generated":{"line":6800,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6799,"column":0},"generated":{"line":6801,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6800,"column":0},"generated":{"line":6802,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6801,"column":0},"generated":{"line":6803,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6802,"column":0},"generated":{"line":6804,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6803,"column":0},"generated":{"line":6805,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6804,"column":0},"generated":{"line":6806,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6805,"column":0},"generated":{"line":6807,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6806,"column":0},"generated":{"line":6808,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6807,"column":0},"generated":{"line":6809,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6808,"column":0},"generated":{"line":6810,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6809,"column":0},"generated":{"line":6811,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6810,"column":0},"generated":{"line":6812,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6811,"column":0},"generated":{"line":6813,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6812,"column":0},"generated":{"line":6814,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6813,"column":0},"generated":{"line":6815,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6814,"column":0},"generated":{"line":6816,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6815,"column":0},"generated":{"line":6817,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6816,"column":0},"generated":{"line":6818,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6817,"column":0},"generated":{"line":6819,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6818,"column":0},"generated":{"line":6820,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6819,"column":0},"generated":{"line":6821,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6820,"column":0},"generated":{"line":6822,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6821,"column":0},"generated":{"line":6823,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6822,"column":0},"generated":{"line":6824,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6823,"column":0},"generated":{"line":6825,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6824,"column":0},"generated":{"line":6826,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6825,"column":0},"generated":{"line":6827,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6826,"column":0},"generated":{"line":6828,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6827,"column":0},"generated":{"line":6829,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6828,"column":0},"generated":{"line":6830,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6829,"column":0},"generated":{"line":6831,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6830,"column":0},"generated":{"line":6832,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6831,"column":0},"generated":{"line":6833,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6832,"column":0},"generated":{"line":6834,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6833,"column":0},"generated":{"line":6835,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6834,"column":0},"generated":{"line":6836,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6835,"column":0},"generated":{"line":6837,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6836,"column":0},"generated":{"line":6838,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6837,"column":0},"generated":{"line":6839,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6838,"column":0},"generated":{"line":6840,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6839,"column":0},"generated":{"line":6841,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6840,"column":0},"generated":{"line":6842,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6841,"column":0},"generated":{"line":6843,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6842,"column":0},"generated":{"line":6844,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6843,"column":0},"generated":{"line":6845,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6844,"column":0},"generated":{"line":6846,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6845,"column":0},"generated":{"line":6847,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6846,"column":0},"generated":{"line":6848,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6847,"column":0},"generated":{"line":6849,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6848,"column":0},"generated":{"line":6850,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6849,"column":0},"generated":{"line":6851,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6850,"column":0},"generated":{"line":6852,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6851,"column":0},"generated":{"line":6853,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6852,"column":0},"generated":{"line":6854,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6853,"column":0},"generated":{"line":6855,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6854,"column":0},"generated":{"line":6856,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6855,"column":0},"generated":{"line":6857,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6856,"column":0},"generated":{"line":6858,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6857,"column":0},"generated":{"line":6859,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6858,"column":0},"generated":{"line":6860,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6859,"column":0},"generated":{"line":6861,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6860,"column":0},"generated":{"line":6862,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6861,"column":0},"generated":{"line":6863,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6862,"column":0},"generated":{"line":6864,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6863,"column":0},"generated":{"line":6865,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6864,"column":0},"generated":{"line":6866,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6865,"column":0},"generated":{"line":6867,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6866,"column":0},"generated":{"line":6868,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6867,"column":0},"generated":{"line":6869,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6868,"column":0},"generated":{"line":6870,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6869,"column":0},"generated":{"line":6871,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6870,"column":0},"generated":{"line":6872,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6871,"column":0},"generated":{"line":6873,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6872,"column":0},"generated":{"line":6874,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6873,"column":0},"generated":{"line":6875,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6874,"column":0},"generated":{"line":6876,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6875,"column":0},"generated":{"line":6877,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6876,"column":0},"generated":{"line":6878,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6877,"column":0},"generated":{"line":6879,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6878,"column":0},"generated":{"line":6880,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6879,"column":0},"generated":{"line":6881,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6880,"column":0},"generated":{"line":6882,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6881,"column":0},"generated":{"line":6883,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6882,"column":0},"generated":{"line":6884,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6883,"column":0},"generated":{"line":6885,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6884,"column":0},"generated":{"line":6886,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6885,"column":0},"generated":{"line":6887,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6886,"column":0},"generated":{"line":6888,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6887,"column":0},"generated":{"line":6889,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6888,"column":0},"generated":{"line":6890,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6889,"column":0},"generated":{"line":6891,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6890,"column":0},"generated":{"line":6892,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6891,"column":0},"generated":{"line":6893,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6892,"column":0},"generated":{"line":6894,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6893,"column":0},"generated":{"line":6895,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6894,"column":0},"generated":{"line":6896,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6895,"column":0},"generated":{"line":6897,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6896,"column":0},"generated":{"line":6898,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6897,"column":0},"generated":{"line":6899,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6898,"column":0},"generated":{"line":6900,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6899,"column":0},"generated":{"line":6901,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6900,"column":0},"generated":{"line":6902,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6901,"column":0},"generated":{"line":6903,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6902,"column":0},"generated":{"line":6904,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6903,"column":0},"generated":{"line":6905,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6904,"column":0},"generated":{"line":6906,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6905,"column":0},"generated":{"line":6907,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6906,"column":0},"generated":{"line":6908,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6907,"column":0},"generated":{"line":6909,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6908,"column":0},"generated":{"line":6910,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6909,"column":0},"generated":{"line":6911,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6910,"column":0},"generated":{"line":6912,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6911,"column":0},"generated":{"line":6913,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6912,"column":0},"generated":{"line":6914,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6913,"column":0},"generated":{"line":6915,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6914,"column":0},"generated":{"line":6916,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6915,"column":0},"generated":{"line":6917,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6916,"column":0},"generated":{"line":6918,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6917,"column":0},"generated":{"line":6919,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6918,"column":0},"generated":{"line":6920,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6919,"column":0},"generated":{"line":6921,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6920,"column":0},"generated":{"line":6922,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6921,"column":0},"generated":{"line":6923,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6922,"column":0},"generated":{"line":6924,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6923,"column":0},"generated":{"line":6925,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6924,"column":0},"generated":{"line":6926,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6925,"column":0},"generated":{"line":6927,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6926,"column":0},"generated":{"line":6928,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6927,"column":0},"generated":{"line":6929,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6928,"column":0},"generated":{"line":6930,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6929,"column":0},"generated":{"line":6931,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6930,"column":0},"generated":{"line":6932,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6931,"column":0},"generated":{"line":6933,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6932,"column":0},"generated":{"line":6934,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6933,"column":0},"generated":{"line":6935,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6934,"column":0},"generated":{"line":6936,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6935,"column":0},"generated":{"line":6937,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6936,"column":0},"generated":{"line":6938,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6937,"column":0},"generated":{"line":6939,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6938,"column":0},"generated":{"line":6940,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6939,"column":0},"generated":{"line":6941,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6940,"column":0},"generated":{"line":6942,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6941,"column":0},"generated":{"line":6943,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6942,"column":0},"generated":{"line":6944,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6943,"column":0},"generated":{"line":6945,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6944,"column":0},"generated":{"line":6946,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6945,"column":0},"generated":{"line":6947,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6946,"column":0},"generated":{"line":6948,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6947,"column":0},"generated":{"line":6949,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6948,"column":0},"generated":{"line":6950,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6949,"column":0},"generated":{"line":6951,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6950,"column":0},"generated":{"line":6952,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6951,"column":0},"generated":{"line":6953,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6952,"column":0},"generated":{"line":6954,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6953,"column":0},"generated":{"line":6955,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6954,"column":0},"generated":{"line":6956,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6955,"column":0},"generated":{"line":6957,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6956,"column":0},"generated":{"line":6958,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6957,"column":0},"generated":{"line":6959,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6958,"column":0},"generated":{"line":6960,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6959,"column":0},"generated":{"line":6961,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6960,"column":0},"generated":{"line":6962,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6961,"column":0},"generated":{"line":6963,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6962,"column":0},"generated":{"line":6964,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6963,"column":0},"generated":{"line":6965,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6964,"column":0},"generated":{"line":6966,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6965,"column":0},"generated":{"line":6967,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6966,"column":0},"generated":{"line":6968,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6967,"column":0},"generated":{"line":6969,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6968,"column":0},"generated":{"line":6970,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6969,"column":0},"generated":{"line":6971,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6970,"column":0},"generated":{"line":6972,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6971,"column":0},"generated":{"line":6973,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6972,"column":0},"generated":{"line":6974,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6973,"column":0},"generated":{"line":6975,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6974,"column":0},"generated":{"line":6976,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6975,"column":0},"generated":{"line":6977,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6976,"column":0},"generated":{"line":6978,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6977,"column":0},"generated":{"line":6979,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6978,"column":0},"generated":{"line":6980,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6979,"column":0},"generated":{"line":6981,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6980,"column":0},"generated":{"line":6982,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6981,"column":0},"generated":{"line":6983,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6982,"column":0},"generated":{"line":6984,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6983,"column":0},"generated":{"line":6985,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6984,"column":0},"generated":{"line":6986,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6985,"column":0},"generated":{"line":6987,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6986,"column":0},"generated":{"line":6988,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6987,"column":0},"generated":{"line":6989,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6988,"column":0},"generated":{"line":6990,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6989,"column":0},"generated":{"line":6991,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6990,"column":0},"generated":{"line":6992,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6991,"column":0},"generated":{"line":6993,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6992,"column":0},"generated":{"line":6994,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6993,"column":0},"generated":{"line":6995,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6994,"column":0},"generated":{"line":6996,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6995,"column":0},"generated":{"line":6997,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6996,"column":0},"generated":{"line":6998,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6997,"column":0},"generated":{"line":6999,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6998,"column":0},"generated":{"line":7000,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":6999,"column":0},"generated":{"line":7001,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7000,"column":0},"generated":{"line":7002,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7001,"column":0},"generated":{"line":7003,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7002,"column":0},"generated":{"line":7004,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7003,"column":0},"generated":{"line":7005,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7004,"column":0},"generated":{"line":7006,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7005,"column":0},"generated":{"line":7007,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7006,"column":0},"generated":{"line":7008,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7007,"column":0},"generated":{"line":7009,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7008,"column":0},"generated":{"line":7010,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7009,"column":0},"generated":{"line":7011,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7010,"column":0},"generated":{"line":7012,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7011,"column":0},"generated":{"line":7013,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7012,"column":0},"generated":{"line":7014,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7013,"column":0},"generated":{"line":7015,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7014,"column":0},"generated":{"line":7016,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7015,"column":0},"generated":{"line":7017,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7016,"column":0},"generated":{"line":7018,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7017,"column":0},"generated":{"line":7019,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7018,"column":0},"generated":{"line":7020,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7019,"column":0},"generated":{"line":7021,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7020,"column":0},"generated":{"line":7022,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7021,"column":0},"generated":{"line":7023,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7022,"column":0},"generated":{"line":7024,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7023,"column":0},"generated":{"line":7025,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7024,"column":0},"generated":{"line":7026,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7025,"column":0},"generated":{"line":7027,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7026,"column":0},"generated":{"line":7028,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7027,"column":0},"generated":{"line":7029,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7028,"column":0},"generated":{"line":7030,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7029,"column":0},"generated":{"line":7031,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7030,"column":0},"generated":{"line":7032,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7031,"column":0},"generated":{"line":7033,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7032,"column":0},"generated":{"line":7034,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7033,"column":0},"generated":{"line":7035,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7034,"column":0},"generated":{"line":7036,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7035,"column":0},"generated":{"line":7037,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7036,"column":0},"generated":{"line":7038,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7037,"column":0},"generated":{"line":7039,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7038,"column":0},"generated":{"line":7040,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7039,"column":0},"generated":{"line":7041,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7040,"column":0},"generated":{"line":7042,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7041,"column":0},"generated":{"line":7043,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7042,"column":0},"generated":{"line":7044,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7043,"column":0},"generated":{"line":7045,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7044,"column":0},"generated":{"line":7046,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7045,"column":0},"generated":{"line":7047,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7046,"column":0},"generated":{"line":7048,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7047,"column":0},"generated":{"line":7049,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7048,"column":0},"generated":{"line":7050,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7049,"column":0},"generated":{"line":7051,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7050,"column":0},"generated":{"line":7052,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7051,"column":0},"generated":{"line":7053,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7052,"column":0},"generated":{"line":7054,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7053,"column":0},"generated":{"line":7055,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7054,"column":0},"generated":{"line":7056,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7055,"column":0},"generated":{"line":7057,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7056,"column":0},"generated":{"line":7058,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7057,"column":0},"generated":{"line":7059,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7058,"column":0},"generated":{"line":7060,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7059,"column":0},"generated":{"line":7061,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7060,"column":0},"generated":{"line":7062,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7061,"column":0},"generated":{"line":7063,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7062,"column":0},"generated":{"line":7064,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7063,"column":0},"generated":{"line":7065,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7064,"column":0},"generated":{"line":7066,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7065,"column":0},"generated":{"line":7067,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7066,"column":0},"generated":{"line":7068,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7067,"column":0},"generated":{"line":7069,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7068,"column":0},"generated":{"line":7070,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7069,"column":0},"generated":{"line":7071,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7070,"column":0},"generated":{"line":7072,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7071,"column":0},"generated":{"line":7073,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7072,"column":0},"generated":{"line":7074,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7073,"column":0},"generated":{"line":7075,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7074,"column":0},"generated":{"line":7076,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7075,"column":0},"generated":{"line":7077,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7076,"column":0},"generated":{"line":7078,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7077,"column":0},"generated":{"line":7079,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7078,"column":0},"generated":{"line":7080,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7079,"column":0},"generated":{"line":7081,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7080,"column":0},"generated":{"line":7082,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7081,"column":0},"generated":{"line":7083,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7082,"column":0},"generated":{"line":7084,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7083,"column":0},"generated":{"line":7085,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7084,"column":0},"generated":{"line":7086,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7085,"column":0},"generated":{"line":7087,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7086,"column":0},"generated":{"line":7088,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7087,"column":0},"generated":{"line":7089,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7088,"column":0},"generated":{"line":7090,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7089,"column":0},"generated":{"line":7091,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7090,"column":0},"generated":{"line":7092,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7091,"column":0},"generated":{"line":7093,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7092,"column":0},"generated":{"line":7094,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7093,"column":0},"generated":{"line":7095,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7094,"column":0},"generated":{"line":7096,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7095,"column":0},"generated":{"line":7097,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7096,"column":0},"generated":{"line":7098,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7097,"column":0},"generated":{"line":7099,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7098,"column":0},"generated":{"line":7100,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7099,"column":0},"generated":{"line":7101,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7100,"column":0},"generated":{"line":7102,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7101,"column":0},"generated":{"line":7103,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7102,"column":0},"generated":{"line":7104,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7103,"column":0},"generated":{"line":7105,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7104,"column":0},"generated":{"line":7106,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7105,"column":0},"generated":{"line":7107,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7106,"column":0},"generated":{"line":7108,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7107,"column":0},"generated":{"line":7109,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7108,"column":0},"generated":{"line":7110,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7109,"column":0},"generated":{"line":7111,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7110,"column":0},"generated":{"line":7112,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7111,"column":0},"generated":{"line":7113,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7112,"column":0},"generated":{"line":7114,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7113,"column":0},"generated":{"line":7115,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7114,"column":0},"generated":{"line":7116,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7115,"column":0},"generated":{"line":7117,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7116,"column":0},"generated":{"line":7118,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7117,"column":0},"generated":{"line":7119,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7118,"column":0},"generated":{"line":7120,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7119,"column":0},"generated":{"line":7121,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7120,"column":0},"generated":{"line":7122,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7121,"column":0},"generated":{"line":7123,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7122,"column":0},"generated":{"line":7124,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7123,"column":0},"generated":{"line":7125,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7124,"column":0},"generated":{"line":7126,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7125,"column":0},"generated":{"line":7127,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7126,"column":0},"generated":{"line":7128,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7127,"column":0},"generated":{"line":7129,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7128,"column":0},"generated":{"line":7130,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7129,"column":0},"generated":{"line":7131,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7130,"column":0},"generated":{"line":7132,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7131,"column":0},"generated":{"line":7133,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7132,"column":0},"generated":{"line":7134,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7133,"column":0},"generated":{"line":7135,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7134,"column":0},"generated":{"line":7136,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7135,"column":0},"generated":{"line":7137,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7136,"column":0},"generated":{"line":7138,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7137,"column":0},"generated":{"line":7139,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7138,"column":0},"generated":{"line":7140,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7139,"column":0},"generated":{"line":7141,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7140,"column":0},"generated":{"line":7142,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7141,"column":0},"generated":{"line":7143,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7142,"column":0},"generated":{"line":7144,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7143,"column":0},"generated":{"line":7145,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7144,"column":0},"generated":{"line":7146,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7145,"column":0},"generated":{"line":7147,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7146,"column":0},"generated":{"line":7148,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7147,"column":0},"generated":{"line":7149,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7148,"column":0},"generated":{"line":7150,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7149,"column":0},"generated":{"line":7151,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7150,"column":0},"generated":{"line":7152,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7151,"column":0},"generated":{"line":7153,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7152,"column":0},"generated":{"line":7154,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7153,"column":0},"generated":{"line":7155,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7154,"column":0},"generated":{"line":7156,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7155,"column":0},"generated":{"line":7157,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7156,"column":0},"generated":{"line":7158,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7157,"column":0},"generated":{"line":7159,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7158,"column":0},"generated":{"line":7160,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7159,"column":0},"generated":{"line":7161,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7160,"column":0},"generated":{"line":7162,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7161,"column":0},"generated":{"line":7163,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7162,"column":0},"generated":{"line":7164,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7163,"column":0},"generated":{"line":7165,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7164,"column":0},"generated":{"line":7166,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7165,"column":0},"generated":{"line":7167,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7166,"column":0},"generated":{"line":7168,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7167,"column":0},"generated":{"line":7169,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7168,"column":0},"generated":{"line":7170,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7169,"column":0},"generated":{"line":7171,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7170,"column":0},"generated":{"line":7172,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7171,"column":0},"generated":{"line":7173,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7172,"column":0},"generated":{"line":7174,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7173,"column":0},"generated":{"line":7175,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7174,"column":0},"generated":{"line":7176,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7175,"column":0},"generated":{"line":7177,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7176,"column":0},"generated":{"line":7178,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7177,"column":0},"generated":{"line":7179,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7178,"column":0},"generated":{"line":7180,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7179,"column":0},"generated":{"line":7181,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7180,"column":0},"generated":{"line":7182,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7181,"column":0},"generated":{"line":7183,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7182,"column":0},"generated":{"line":7184,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7183,"column":0},"generated":{"line":7185,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7184,"column":0},"generated":{"line":7186,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7185,"column":0},"generated":{"line":7187,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7186,"column":0},"generated":{"line":7188,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7187,"column":0},"generated":{"line":7189,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7188,"column":0},"generated":{"line":7190,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7189,"column":0},"generated":{"line":7191,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7190,"column":0},"generated":{"line":7192,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7191,"column":0},"generated":{"line":7193,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7192,"column":0},"generated":{"line":7194,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7193,"column":0},"generated":{"line":7195,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7194,"column":0},"generated":{"line":7196,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7195,"column":0},"generated":{"line":7197,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7196,"column":0},"generated":{"line":7198,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7197,"column":0},"generated":{"line":7199,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7198,"column":0},"generated":{"line":7200,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7199,"column":0},"generated":{"line":7201,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7200,"column":0},"generated":{"line":7202,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7201,"column":0},"generated":{"line":7203,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7202,"column":0},"generated":{"line":7204,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7203,"column":0},"generated":{"line":7205,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7204,"column":0},"generated":{"line":7206,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7205,"column":0},"generated":{"line":7207,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7206,"column":0},"generated":{"line":7208,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7207,"column":0},"generated":{"line":7209,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7208,"column":0},"generated":{"line":7210,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7209,"column":0},"generated":{"line":7211,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7210,"column":0},"generated":{"line":7212,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7211,"column":0},"generated":{"line":7213,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7212,"column":0},"generated":{"line":7214,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7213,"column":0},"generated":{"line":7215,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7214,"column":0},"generated":{"line":7216,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7215,"column":0},"generated":{"line":7217,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7216,"column":0},"generated":{"line":7218,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7217,"column":0},"generated":{"line":7219,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7218,"column":0},"generated":{"line":7220,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7219,"column":0},"generated":{"line":7221,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7220,"column":0},"generated":{"line":7222,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7221,"column":0},"generated":{"line":7223,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7222,"column":0},"generated":{"line":7224,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7223,"column":0},"generated":{"line":7225,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7224,"column":0},"generated":{"line":7226,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7225,"column":0},"generated":{"line":7227,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7226,"column":0},"generated":{"line":7228,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7227,"column":0},"generated":{"line":7229,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7228,"column":0},"generated":{"line":7230,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7229,"column":0},"generated":{"line":7231,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7230,"column":0},"generated":{"line":7232,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7231,"column":0},"generated":{"line":7233,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7232,"column":0},"generated":{"line":7234,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7233,"column":0},"generated":{"line":7235,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7234,"column":0},"generated":{"line":7236,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7235,"column":0},"generated":{"line":7237,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7236,"column":0},"generated":{"line":7238,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7237,"column":0},"generated":{"line":7239,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7238,"column":0},"generated":{"line":7240,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7239,"column":0},"generated":{"line":7241,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7240,"column":0},"generated":{"line":7242,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7241,"column":0},"generated":{"line":7243,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7242,"column":0},"generated":{"line":7244,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7243,"column":0},"generated":{"line":7245,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7244,"column":0},"generated":{"line":7246,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7245,"column":0},"generated":{"line":7247,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7246,"column":0},"generated":{"line":7248,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7247,"column":0},"generated":{"line":7249,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7248,"column":0},"generated":{"line":7250,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7249,"column":0},"generated":{"line":7251,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7250,"column":0},"generated":{"line":7252,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7251,"column":0},"generated":{"line":7253,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7252,"column":0},"generated":{"line":7254,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7253,"column":0},"generated":{"line":7255,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7254,"column":0},"generated":{"line":7256,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7255,"column":0},"generated":{"line":7257,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7256,"column":0},"generated":{"line":7258,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7257,"column":0},"generated":{"line":7259,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7258,"column":0},"generated":{"line":7260,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7259,"column":0},"generated":{"line":7261,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7260,"column":0},"generated":{"line":7262,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7261,"column":0},"generated":{"line":7263,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7262,"column":0},"generated":{"line":7264,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7263,"column":0},"generated":{"line":7265,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7264,"column":0},"generated":{"line":7266,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7265,"column":0},"generated":{"line":7267,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7266,"column":0},"generated":{"line":7268,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7267,"column":0},"generated":{"line":7269,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7268,"column":0},"generated":{"line":7270,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7269,"column":0},"generated":{"line":7271,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7270,"column":0},"generated":{"line":7272,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7271,"column":0},"generated":{"line":7273,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7272,"column":0},"generated":{"line":7274,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7273,"column":0},"generated":{"line":7275,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7274,"column":0},"generated":{"line":7276,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7275,"column":0},"generated":{"line":7277,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7276,"column":0},"generated":{"line":7278,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7277,"column":0},"generated":{"line":7279,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7278,"column":0},"generated":{"line":7280,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7279,"column":0},"generated":{"line":7281,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7280,"column":0},"generated":{"line":7282,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7281,"column":0},"generated":{"line":7283,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7282,"column":0},"generated":{"line":7284,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7283,"column":0},"generated":{"line":7285,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7284,"column":0},"generated":{"line":7286,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7285,"column":0},"generated":{"line":7287,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7286,"column":0},"generated":{"line":7288,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7287,"column":0},"generated":{"line":7289,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7288,"column":0},"generated":{"line":7290,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7289,"column":0},"generated":{"line":7291,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7290,"column":0},"generated":{"line":7292,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7291,"column":0},"generated":{"line":7293,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7292,"column":0},"generated":{"line":7294,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7293,"column":0},"generated":{"line":7295,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7294,"column":0},"generated":{"line":7296,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7295,"column":0},"generated":{"line":7297,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7296,"column":0},"generated":{"line":7298,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7297,"column":0},"generated":{"line":7299,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7298,"column":0},"generated":{"line":7300,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7299,"column":0},"generated":{"line":7301,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7300,"column":0},"generated":{"line":7302,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7301,"column":0},"generated":{"line":7303,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7302,"column":0},"generated":{"line":7304,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7303,"column":0},"generated":{"line":7305,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7304,"column":0},"generated":{"line":7306,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7305,"column":0},"generated":{"line":7307,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7306,"column":0},"generated":{"line":7308,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7307,"column":0},"generated":{"line":7309,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7308,"column":0},"generated":{"line":7310,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7309,"column":0},"generated":{"line":7311,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7310,"column":0},"generated":{"line":7312,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7311,"column":0},"generated":{"line":7313,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7312,"column":0},"generated":{"line":7314,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7313,"column":0},"generated":{"line":7315,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7314,"column":0},"generated":{"line":7316,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7315,"column":0},"generated":{"line":7317,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7316,"column":0},"generated":{"line":7318,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7317,"column":0},"generated":{"line":7319,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7318,"column":0},"generated":{"line":7320,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7319,"column":0},"generated":{"line":7321,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7320,"column":0},"generated":{"line":7322,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7321,"column":0},"generated":{"line":7323,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7322,"column":0},"generated":{"line":7324,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7323,"column":0},"generated":{"line":7325,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7324,"column":0},"generated":{"line":7326,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7325,"column":0},"generated":{"line":7327,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7326,"column":0},"generated":{"line":7328,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7327,"column":0},"generated":{"line":7329,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7328,"column":0},"generated":{"line":7330,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7329,"column":0},"generated":{"line":7331,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7330,"column":0},"generated":{"line":7332,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7331,"column":0},"generated":{"line":7333,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7332,"column":0},"generated":{"line":7334,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7333,"column":0},"generated":{"line":7335,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7334,"column":0},"generated":{"line":7336,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7335,"column":0},"generated":{"line":7337,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7336,"column":0},"generated":{"line":7338,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7337,"column":0},"generated":{"line":7339,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7338,"column":0},"generated":{"line":7340,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7339,"column":0},"generated":{"line":7341,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7340,"column":0},"generated":{"line":7342,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7341,"column":0},"generated":{"line":7343,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7342,"column":0},"generated":{"line":7344,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7343,"column":0},"generated":{"line":7345,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7344,"column":0},"generated":{"line":7346,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7345,"column":0},"generated":{"line":7347,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7346,"column":0},"generated":{"line":7348,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7347,"column":0},"generated":{"line":7349,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7348,"column":0},"generated":{"line":7350,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7349,"column":0},"generated":{"line":7351,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7350,"column":0},"generated":{"line":7352,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7351,"column":0},"generated":{"line":7353,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7352,"column":0},"generated":{"line":7354,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7353,"column":0},"generated":{"line":7355,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7354,"column":0},"generated":{"line":7356,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7355,"column":0},"generated":{"line":7357,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7356,"column":0},"generated":{"line":7358,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7357,"column":0},"generated":{"line":7359,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7358,"column":0},"generated":{"line":7360,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7359,"column":0},"generated":{"line":7361,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7360,"column":0},"generated":{"line":7362,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7361,"column":0},"generated":{"line":7363,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7362,"column":0},"generated":{"line":7364,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7363,"column":0},"generated":{"line":7365,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7364,"column":0},"generated":{"line":7366,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7365,"column":0},"generated":{"line":7367,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7366,"column":0},"generated":{"line":7368,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7367,"column":0},"generated":{"line":7369,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7368,"column":0},"generated":{"line":7370,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7369,"column":0},"generated":{"line":7371,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7370,"column":0},"generated":{"line":7372,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7371,"column":0},"generated":{"line":7373,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7372,"column":0},"generated":{"line":7374,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7373,"column":0},"generated":{"line":7375,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7374,"column":0},"generated":{"line":7376,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7375,"column":0},"generated":{"line":7377,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7376,"column":0},"generated":{"line":7378,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7377,"column":0},"generated":{"line":7379,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7378,"column":0},"generated":{"line":7380,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7379,"column":0},"generated":{"line":7381,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7380,"column":0},"generated":{"line":7382,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7381,"column":0},"generated":{"line":7383,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7382,"column":0},"generated":{"line":7384,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7383,"column":0},"generated":{"line":7385,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7384,"column":0},"generated":{"line":7386,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7385,"column":0},"generated":{"line":7387,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7386,"column":0},"generated":{"line":7388,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7387,"column":0},"generated":{"line":7389,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7388,"column":0},"generated":{"line":7390,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7389,"column":0},"generated":{"line":7391,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7390,"column":0},"generated":{"line":7392,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7391,"column":0},"generated":{"line":7393,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7392,"column":0},"generated":{"line":7394,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7393,"column":0},"generated":{"line":7395,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7394,"column":0},"generated":{"line":7396,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7395,"column":0},"generated":{"line":7397,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7396,"column":0},"generated":{"line":7398,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7397,"column":0},"generated":{"line":7399,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7398,"column":0},"generated":{"line":7400,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7399,"column":0},"generated":{"line":7401,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7400,"column":0},"generated":{"line":7402,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7401,"column":0},"generated":{"line":7403,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7402,"column":0},"generated":{"line":7404,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7403,"column":0},"generated":{"line":7405,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7404,"column":0},"generated":{"line":7406,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7405,"column":0},"generated":{"line":7407,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7406,"column":0},"generated":{"line":7408,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7407,"column":0},"generated":{"line":7409,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7408,"column":0},"generated":{"line":7410,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7409,"column":0},"generated":{"line":7411,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7410,"column":0},"generated":{"line":7412,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7411,"column":0},"generated":{"line":7413,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7412,"column":0},"generated":{"line":7414,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7413,"column":0},"generated":{"line":7415,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7414,"column":0},"generated":{"line":7416,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7415,"column":0},"generated":{"line":7417,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7416,"column":0},"generated":{"line":7418,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7417,"column":0},"generated":{"line":7419,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7418,"column":0},"generated":{"line":7420,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7419,"column":0},"generated":{"line":7421,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7420,"column":0},"generated":{"line":7422,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7421,"column":0},"generated":{"line":7423,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7422,"column":0},"generated":{"line":7424,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7423,"column":0},"generated":{"line":7425,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7424,"column":0},"generated":{"line":7426,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7425,"column":0},"generated":{"line":7427,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7426,"column":0},"generated":{"line":7428,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7427,"column":0},"generated":{"line":7429,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7428,"column":0},"generated":{"line":7430,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7429,"column":0},"generated":{"line":7431,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7430,"column":0},"generated":{"line":7432,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7431,"column":0},"generated":{"line":7433,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7432,"column":0},"generated":{"line":7434,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7433,"column":0},"generated":{"line":7435,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7434,"column":0},"generated":{"line":7436,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7435,"column":0},"generated":{"line":7437,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7436,"column":0},"generated":{"line":7438,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7437,"column":0},"generated":{"line":7439,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7438,"column":0},"generated":{"line":7440,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7439,"column":0},"generated":{"line":7441,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7440,"column":0},"generated":{"line":7442,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7441,"column":0},"generated":{"line":7443,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7442,"column":0},"generated":{"line":7444,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7443,"column":0},"generated":{"line":7445,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7444,"column":0},"generated":{"line":7446,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7445,"column":0},"generated":{"line":7447,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7446,"column":0},"generated":{"line":7448,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7447,"column":0},"generated":{"line":7449,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7448,"column":0},"generated":{"line":7450,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7449,"column":0},"generated":{"line":7451,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7450,"column":0},"generated":{"line":7452,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7451,"column":0},"generated":{"line":7453,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7452,"column":0},"generated":{"line":7454,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7453,"column":0},"generated":{"line":7455,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7454,"column":0},"generated":{"line":7456,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7455,"column":0},"generated":{"line":7457,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7456,"column":0},"generated":{"line":7458,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7457,"column":0},"generated":{"line":7459,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7458,"column":0},"generated":{"line":7460,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7459,"column":0},"generated":{"line":7461,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7460,"column":0},"generated":{"line":7462,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7461,"column":0},"generated":{"line":7463,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7462,"column":0},"generated":{"line":7464,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7463,"column":0},"generated":{"line":7465,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7464,"column":0},"generated":{"line":7466,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7465,"column":0},"generated":{"line":7467,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7466,"column":0},"generated":{"line":7468,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7467,"column":0},"generated":{"line":7469,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7468,"column":0},"generated":{"line":7470,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7469,"column":0},"generated":{"line":7471,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7470,"column":0},"generated":{"line":7472,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7471,"column":0},"generated":{"line":7473,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7472,"column":0},"generated":{"line":7474,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7473,"column":0},"generated":{"line":7475,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7474,"column":0},"generated":{"line":7476,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7475,"column":0},"generated":{"line":7477,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7476,"column":0},"generated":{"line":7478,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7477,"column":0},"generated":{"line":7479,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7478,"column":0},"generated":{"line":7480,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7479,"column":0},"generated":{"line":7481,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7480,"column":0},"generated":{"line":7482,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7481,"column":0},"generated":{"line":7483,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7482,"column":0},"generated":{"line":7484,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7483,"column":0},"generated":{"line":7485,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7484,"column":0},"generated":{"line":7486,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7485,"column":0},"generated":{"line":7487,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7486,"column":0},"generated":{"line":7488,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7487,"column":0},"generated":{"line":7489,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7488,"column":0},"generated":{"line":7490,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7489,"column":0},"generated":{"line":7491,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7490,"column":0},"generated":{"line":7492,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7491,"column":0},"generated":{"line":7493,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7492,"column":0},"generated":{"line":7494,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7493,"column":0},"generated":{"line":7495,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7494,"column":0},"generated":{"line":7496,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7495,"column":0},"generated":{"line":7497,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7496,"column":0},"generated":{"line":7498,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7497,"column":0},"generated":{"line":7499,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7498,"column":0},"generated":{"line":7500,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7499,"column":0},"generated":{"line":7501,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7500,"column":0},"generated":{"line":7502,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7501,"column":0},"generated":{"line":7503,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7502,"column":0},"generated":{"line":7504,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7503,"column":0},"generated":{"line":7505,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7504,"column":0},"generated":{"line":7506,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7505,"column":0},"generated":{"line":7507,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7506,"column":0},"generated":{"line":7508,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7507,"column":0},"generated":{"line":7509,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7508,"column":0},"generated":{"line":7510,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7509,"column":0},"generated":{"line":7511,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7510,"column":0},"generated":{"line":7512,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7511,"column":0},"generated":{"line":7513,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7512,"column":0},"generated":{"line":7514,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7513,"column":0},"generated":{"line":7515,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7514,"column":0},"generated":{"line":7516,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7515,"column":0},"generated":{"line":7517,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7516,"column":0},"generated":{"line":7518,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7517,"column":0},"generated":{"line":7519,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7518,"column":0},"generated":{"line":7520,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7519,"column":0},"generated":{"line":7521,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7520,"column":0},"generated":{"line":7522,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7521,"column":0},"generated":{"line":7523,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7522,"column":0},"generated":{"line":7524,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7523,"column":0},"generated":{"line":7525,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7524,"column":0},"generated":{"line":7526,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7525,"column":0},"generated":{"line":7527,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7526,"column":0},"generated":{"line":7528,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7527,"column":0},"generated":{"line":7529,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7528,"column":0},"generated":{"line":7530,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7529,"column":0},"generated":{"line":7531,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7530,"column":0},"generated":{"line":7532,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7531,"column":0},"generated":{"line":7533,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7532,"column":0},"generated":{"line":7534,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7533,"column":0},"generated":{"line":7535,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7534,"column":0},"generated":{"line":7536,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7535,"column":0},"generated":{"line":7537,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7536,"column":0},"generated":{"line":7538,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7537,"column":0},"generated":{"line":7539,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7538,"column":0},"generated":{"line":7540,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7539,"column":0},"generated":{"line":7541,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7540,"column":0},"generated":{"line":7542,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7541,"column":0},"generated":{"line":7543,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7542,"column":0},"generated":{"line":7544,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7543,"column":0},"generated":{"line":7545,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7544,"column":0},"generated":{"line":7546,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7545,"column":0},"generated":{"line":7547,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7546,"column":0},"generated":{"line":7548,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7547,"column":0},"generated":{"line":7549,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7548,"column":0},"generated":{"line":7550,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7549,"column":0},"generated":{"line":7551,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7550,"column":0},"generated":{"line":7552,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7551,"column":0},"generated":{"line":7553,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7552,"column":0},"generated":{"line":7554,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7553,"column":0},"generated":{"line":7555,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7554,"column":0},"generated":{"line":7556,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7555,"column":0},"generated":{"line":7557,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7556,"column":0},"generated":{"line":7558,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7557,"column":0},"generated":{"line":7559,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7558,"column":0},"generated":{"line":7560,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7559,"column":0},"generated":{"line":7561,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7560,"column":0},"generated":{"line":7562,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7561,"column":0},"generated":{"line":7563,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7562,"column":0},"generated":{"line":7564,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7563,"column":0},"generated":{"line":7565,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7564,"column":0},"generated":{"line":7566,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7565,"column":0},"generated":{"line":7567,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7566,"column":0},"generated":{"line":7568,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7567,"column":0},"generated":{"line":7569,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7568,"column":0},"generated":{"line":7570,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7569,"column":0},"generated":{"line":7571,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7570,"column":0},"generated":{"line":7572,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7571,"column":0},"generated":{"line":7573,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7572,"column":0},"generated":{"line":7574,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7573,"column":0},"generated":{"line":7575,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7574,"column":0},"generated":{"line":7576,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7575,"column":0},"generated":{"line":7577,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7576,"column":0},"generated":{"line":7578,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7577,"column":0},"generated":{"line":7579,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7578,"column":0},"generated":{"line":7580,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7579,"column":0},"generated":{"line":7581,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7580,"column":0},"generated":{"line":7582,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7581,"column":0},"generated":{"line":7583,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7582,"column":0},"generated":{"line":7584,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7583,"column":0},"generated":{"line":7585,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7584,"column":0},"generated":{"line":7586,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7585,"column":0},"generated":{"line":7587,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7586,"column":0},"generated":{"line":7588,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7587,"column":0},"generated":{"line":7589,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7588,"column":0},"generated":{"line":7590,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7589,"column":0},"generated":{"line":7591,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7590,"column":0},"generated":{"line":7592,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7591,"column":0},"generated":{"line":7593,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7592,"column":0},"generated":{"line":7594,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7593,"column":0},"generated":{"line":7595,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7594,"column":0},"generated":{"line":7596,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7595,"column":0},"generated":{"line":7597,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7596,"column":0},"generated":{"line":7598,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7597,"column":0},"generated":{"line":7599,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7598,"column":0},"generated":{"line":7600,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7599,"column":0},"generated":{"line":7601,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7600,"column":0},"generated":{"line":7602,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7601,"column":0},"generated":{"line":7603,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7602,"column":0},"generated":{"line":7604,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7603,"column":0},"generated":{"line":7605,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7604,"column":0},"generated":{"line":7606,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7605,"column":0},"generated":{"line":7607,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7606,"column":0},"generated":{"line":7608,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7607,"column":0},"generated":{"line":7609,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7608,"column":0},"generated":{"line":7610,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7609,"column":0},"generated":{"line":7611,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7610,"column":0},"generated":{"line":7612,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7611,"column":0},"generated":{"line":7613,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7612,"column":0},"generated":{"line":7614,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7613,"column":0},"generated":{"line":7615,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7614,"column":0},"generated":{"line":7616,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7615,"column":0},"generated":{"line":7617,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7616,"column":0},"generated":{"line":7618,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7617,"column":0},"generated":{"line":7619,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7618,"column":0},"generated":{"line":7620,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7619,"column":0},"generated":{"line":7621,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7620,"column":0},"generated":{"line":7622,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7621,"column":0},"generated":{"line":7623,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7622,"column":0},"generated":{"line":7624,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7623,"column":0},"generated":{"line":7625,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7624,"column":0},"generated":{"line":7626,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7625,"column":0},"generated":{"line":7627,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7626,"column":0},"generated":{"line":7628,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7627,"column":0},"generated":{"line":7629,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7628,"column":0},"generated":{"line":7630,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7629,"column":0},"generated":{"line":7631,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7630,"column":0},"generated":{"line":7632,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7631,"column":0},"generated":{"line":7633,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7632,"column":0},"generated":{"line":7634,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7633,"column":0},"generated":{"line":7635,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7634,"column":0},"generated":{"line":7636,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7635,"column":0},"generated":{"line":7637,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7636,"column":0},"generated":{"line":7638,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7637,"column":0},"generated":{"line":7639,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7638,"column":0},"generated":{"line":7640,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7639,"column":0},"generated":{"line":7641,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7640,"column":0},"generated":{"line":7642,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7641,"column":0},"generated":{"line":7643,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7642,"column":0},"generated":{"line":7644,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7643,"column":0},"generated":{"line":7645,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7644,"column":0},"generated":{"line":7646,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7645,"column":0},"generated":{"line":7647,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7646,"column":0},"generated":{"line":7648,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7647,"column":0},"generated":{"line":7649,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7648,"column":0},"generated":{"line":7650,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7649,"column":0},"generated":{"line":7651,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7650,"column":0},"generated":{"line":7652,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7651,"column":0},"generated":{"line":7653,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7652,"column":0},"generated":{"line":7654,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7653,"column":0},"generated":{"line":7655,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7654,"column":0},"generated":{"line":7656,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7655,"column":0},"generated":{"line":7657,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7656,"column":0},"generated":{"line":7658,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7657,"column":0},"generated":{"line":7659,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7658,"column":0},"generated":{"line":7660,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7659,"column":0},"generated":{"line":7661,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7660,"column":0},"generated":{"line":7662,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7661,"column":0},"generated":{"line":7663,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7662,"column":0},"generated":{"line":7664,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7663,"column":0},"generated":{"line":7665,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7664,"column":0},"generated":{"line":7666,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7665,"column":0},"generated":{"line":7667,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7666,"column":0},"generated":{"line":7668,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7667,"column":0},"generated":{"line":7669,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7668,"column":0},"generated":{"line":7670,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7669,"column":0},"generated":{"line":7671,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7670,"column":0},"generated":{"line":7672,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7671,"column":0},"generated":{"line":7673,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7672,"column":0},"generated":{"line":7674,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7673,"column":0},"generated":{"line":7675,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7674,"column":0},"generated":{"line":7676,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7675,"column":0},"generated":{"line":7677,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7676,"column":0},"generated":{"line":7678,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7677,"column":0},"generated":{"line":7679,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7678,"column":0},"generated":{"line":7680,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7679,"column":0},"generated":{"line":7681,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7680,"column":0},"generated":{"line":7682,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7681,"column":0},"generated":{"line":7683,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7682,"column":0},"generated":{"line":7684,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7683,"column":0},"generated":{"line":7685,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7684,"column":0},"generated":{"line":7686,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7685,"column":0},"generated":{"line":7687,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7686,"column":0},"generated":{"line":7688,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7687,"column":0},"generated":{"line":7689,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7688,"column":0},"generated":{"line":7690,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7689,"column":0},"generated":{"line":7691,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7690,"column":0},"generated":{"line":7692,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7691,"column":0},"generated":{"line":7693,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7692,"column":0},"generated":{"line":7694,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7693,"column":0},"generated":{"line":7695,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7694,"column":0},"generated":{"line":7696,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7695,"column":0},"generated":{"line":7697,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7696,"column":0},"generated":{"line":7698,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7697,"column":0},"generated":{"line":7699,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7698,"column":0},"generated":{"line":7700,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7699,"column":0},"generated":{"line":7701,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7700,"column":0},"generated":{"line":7702,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7701,"column":0},"generated":{"line":7703,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7702,"column":0},"generated":{"line":7704,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7703,"column":0},"generated":{"line":7705,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7704,"column":0},"generated":{"line":7706,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7705,"column":0},"generated":{"line":7707,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7706,"column":0},"generated":{"line":7708,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7707,"column":0},"generated":{"line":7709,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7708,"column":0},"generated":{"line":7710,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7709,"column":0},"generated":{"line":7711,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7710,"column":0},"generated":{"line":7712,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7711,"column":0},"generated":{"line":7713,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7712,"column":0},"generated":{"line":7714,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7713,"column":0},"generated":{"line":7715,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7714,"column":0},"generated":{"line":7716,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7715,"column":0},"generated":{"line":7717,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7716,"column":0},"generated":{"line":7718,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7717,"column":0},"generated":{"line":7719,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7718,"column":0},"generated":{"line":7720,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7719,"column":0},"generated":{"line":7721,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7720,"column":0},"generated":{"line":7722,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7721,"column":0},"generated":{"line":7723,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7722,"column":0},"generated":{"line":7724,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7723,"column":0},"generated":{"line":7725,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7724,"column":0},"generated":{"line":7726,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7725,"column":0},"generated":{"line":7727,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7726,"column":0},"generated":{"line":7728,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7727,"column":0},"generated":{"line":7729,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7728,"column":0},"generated":{"line":7730,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7729,"column":0},"generated":{"line":7731,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7730,"column":0},"generated":{"line":7732,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7731,"column":0},"generated":{"line":7733,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7732,"column":0},"generated":{"line":7734,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7733,"column":0},"generated":{"line":7735,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7734,"column":0},"generated":{"line":7736,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7735,"column":0},"generated":{"line":7737,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7736,"column":0},"generated":{"line":7738,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7737,"column":0},"generated":{"line":7739,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7738,"column":0},"generated":{"line":7740,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7739,"column":0},"generated":{"line":7741,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7740,"column":0},"generated":{"line":7742,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7741,"column":0},"generated":{"line":7743,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7742,"column":0},"generated":{"line":7744,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7743,"column":0},"generated":{"line":7745,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7744,"column":0},"generated":{"line":7746,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7745,"column":0},"generated":{"line":7747,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7746,"column":0},"generated":{"line":7748,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7747,"column":0},"generated":{"line":7749,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7748,"column":0},"generated":{"line":7750,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7749,"column":0},"generated":{"line":7751,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7750,"column":0},"generated":{"line":7752,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7751,"column":0},"generated":{"line":7753,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7752,"column":0},"generated":{"line":7754,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7753,"column":0},"generated":{"line":7755,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7754,"column":0},"generated":{"line":7756,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7755,"column":0},"generated":{"line":7757,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7756,"column":0},"generated":{"line":7758,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7757,"column":0},"generated":{"line":7759,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7758,"column":0},"generated":{"line":7760,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7759,"column":0},"generated":{"line":7761,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7760,"column":0},"generated":{"line":7762,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7761,"column":0},"generated":{"line":7763,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7762,"column":0},"generated":{"line":7764,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7763,"column":0},"generated":{"line":7765,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7764,"column":0},"generated":{"line":7766,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7765,"column":0},"generated":{"line":7767,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7766,"column":0},"generated":{"line":7768,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7767,"column":0},"generated":{"line":7769,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7768,"column":0},"generated":{"line":7770,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7769,"column":0},"generated":{"line":7771,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7770,"column":0},"generated":{"line":7772,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7771,"column":0},"generated":{"line":7773,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7772,"column":0},"generated":{"line":7774,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7773,"column":0},"generated":{"line":7775,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7774,"column":0},"generated":{"line":7776,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7775,"column":0},"generated":{"line":7777,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7776,"column":0},"generated":{"line":7778,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7777,"column":0},"generated":{"line":7779,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7778,"column":0},"generated":{"line":7780,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7779,"column":0},"generated":{"line":7781,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7780,"column":0},"generated":{"line":7782,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7781,"column":0},"generated":{"line":7783,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7782,"column":0},"generated":{"line":7784,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7783,"column":0},"generated":{"line":7785,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7784,"column":0},"generated":{"line":7786,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7785,"column":0},"generated":{"line":7787,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7786,"column":0},"generated":{"line":7788,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7787,"column":0},"generated":{"line":7789,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7788,"column":0},"generated":{"line":7790,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7789,"column":0},"generated":{"line":7791,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7790,"column":0},"generated":{"line":7792,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7791,"column":0},"generated":{"line":7793,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7792,"column":0},"generated":{"line":7794,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7793,"column":0},"generated":{"line":7795,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7794,"column":0},"generated":{"line":7796,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7795,"column":0},"generated":{"line":7797,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7796,"column":0},"generated":{"line":7798,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7797,"column":0},"generated":{"line":7799,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7798,"column":0},"generated":{"line":7800,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7799,"column":0},"generated":{"line":7801,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7800,"column":0},"generated":{"line":7802,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7801,"column":0},"generated":{"line":7803,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7802,"column":0},"generated":{"line":7804,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7803,"column":0},"generated":{"line":7805,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7804,"column":0},"generated":{"line":7806,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7805,"column":0},"generated":{"line":7807,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7806,"column":0},"generated":{"line":7808,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7807,"column":0},"generated":{"line":7809,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7808,"column":0},"generated":{"line":7810,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7809,"column":0},"generated":{"line":7811,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7810,"column":0},"generated":{"line":7812,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7811,"column":0},"generated":{"line":7813,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7812,"column":0},"generated":{"line":7814,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7813,"column":0},"generated":{"line":7815,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7814,"column":0},"generated":{"line":7816,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7815,"column":0},"generated":{"line":7817,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7816,"column":0},"generated":{"line":7818,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7817,"column":0},"generated":{"line":7819,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7818,"column":0},"generated":{"line":7820,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7819,"column":0},"generated":{"line":7821,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7820,"column":0},"generated":{"line":7822,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7821,"column":0},"generated":{"line":7823,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7822,"column":0},"generated":{"line":7824,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7823,"column":0},"generated":{"line":7825,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7824,"column":0},"generated":{"line":7826,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7825,"column":0},"generated":{"line":7827,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7826,"column":0},"generated":{"line":7828,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7827,"column":0},"generated":{"line":7829,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7828,"column":0},"generated":{"line":7830,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7829,"column":0},"generated":{"line":7831,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7830,"column":0},"generated":{"line":7832,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7831,"column":0},"generated":{"line":7833,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7832,"column":0},"generated":{"line":7834,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7833,"column":0},"generated":{"line":7835,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7834,"column":0},"generated":{"line":7836,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7835,"column":0},"generated":{"line":7837,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7836,"column":0},"generated":{"line":7838,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7837,"column":0},"generated":{"line":7839,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7838,"column":0},"generated":{"line":7840,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7839,"column":0},"generated":{"line":7841,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7840,"column":0},"generated":{"line":7842,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7841,"column":0},"generated":{"line":7843,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7842,"column":0},"generated":{"line":7844,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7843,"column":0},"generated":{"line":7845,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7844,"column":0},"generated":{"line":7846,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7845,"column":0},"generated":{"line":7847,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7846,"column":0},"generated":{"line":7848,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7847,"column":0},"generated":{"line":7849,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7848,"column":0},"generated":{"line":7850,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7849,"column":0},"generated":{"line":7851,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7850,"column":0},"generated":{"line":7852,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7851,"column":0},"generated":{"line":7853,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7852,"column":0},"generated":{"line":7854,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7853,"column":0},"generated":{"line":7855,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7854,"column":0},"generated":{"line":7856,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7855,"column":0},"generated":{"line":7857,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7856,"column":0},"generated":{"line":7858,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7857,"column":0},"generated":{"line":7859,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7858,"column":0},"generated":{"line":7860,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7859,"column":0},"generated":{"line":7861,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7860,"column":0},"generated":{"line":7862,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7861,"column":0},"generated":{"line":7863,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7862,"column":0},"generated":{"line":7864,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7863,"column":0},"generated":{"line":7865,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7864,"column":0},"generated":{"line":7866,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7865,"column":0},"generated":{"line":7867,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7866,"column":0},"generated":{"line":7868,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7867,"column":0},"generated":{"line":7869,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7868,"column":0},"generated":{"line":7870,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7869,"column":0},"generated":{"line":7871,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7870,"column":0},"generated":{"line":7872,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7871,"column":0},"generated":{"line":7873,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7872,"column":0},"generated":{"line":7874,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7873,"column":0},"generated":{"line":7875,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7874,"column":0},"generated":{"line":7876,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7875,"column":0},"generated":{"line":7877,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7876,"column":0},"generated":{"line":7878,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7877,"column":0},"generated":{"line":7879,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7878,"column":0},"generated":{"line":7880,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7879,"column":0},"generated":{"line":7881,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7880,"column":0},"generated":{"line":7882,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7881,"column":0},"generated":{"line":7883,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7882,"column":0},"generated":{"line":7884,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7883,"column":0},"generated":{"line":7885,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7884,"column":0},"generated":{"line":7886,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7885,"column":0},"generated":{"line":7887,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7886,"column":0},"generated":{"line":7888,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7887,"column":0},"generated":{"line":7889,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7888,"column":0},"generated":{"line":7890,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7889,"column":0},"generated":{"line":7891,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7890,"column":0},"generated":{"line":7892,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7891,"column":0},"generated":{"line":7893,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7892,"column":0},"generated":{"line":7894,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7893,"column":0},"generated":{"line":7895,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7894,"column":0},"generated":{"line":7896,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7895,"column":0},"generated":{"line":7897,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7896,"column":0},"generated":{"line":7898,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7897,"column":0},"generated":{"line":7899,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7898,"column":0},"generated":{"line":7900,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7899,"column":0},"generated":{"line":7901,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7900,"column":0},"generated":{"line":7902,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7901,"column":0},"generated":{"line":7903,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7902,"column":0},"generated":{"line":7904,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7903,"column":0},"generated":{"line":7905,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7904,"column":0},"generated":{"line":7906,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7905,"column":0},"generated":{"line":7907,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7906,"column":0},"generated":{"line":7908,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7907,"column":0},"generated":{"line":7909,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7908,"column":0},"generated":{"line":7910,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7909,"column":0},"generated":{"line":7911,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7910,"column":0},"generated":{"line":7912,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7911,"column":0},"generated":{"line":7913,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7912,"column":0},"generated":{"line":7914,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7913,"column":0},"generated":{"line":7915,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7914,"column":0},"generated":{"line":7916,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7915,"column":0},"generated":{"line":7917,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7916,"column":0},"generated":{"line":7918,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7917,"column":0},"generated":{"line":7919,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7918,"column":0},"generated":{"line":7920,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7919,"column":0},"generated":{"line":7921,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7920,"column":0},"generated":{"line":7922,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7921,"column":0},"generated":{"line":7923,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7922,"column":0},"generated":{"line":7924,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7923,"column":0},"generated":{"line":7925,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7924,"column":0},"generated":{"line":7926,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7925,"column":0},"generated":{"line":7927,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7926,"column":0},"generated":{"line":7928,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7927,"column":0},"generated":{"line":7929,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7928,"column":0},"generated":{"line":7930,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7929,"column":0},"generated":{"line":7931,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7930,"column":0},"generated":{"line":7932,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7931,"column":0},"generated":{"line":7933,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7932,"column":0},"generated":{"line":7934,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7933,"column":0},"generated":{"line":7935,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7934,"column":0},"generated":{"line":7936,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7935,"column":0},"generated":{"line":7937,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7936,"column":0},"generated":{"line":7938,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7937,"column":0},"generated":{"line":7939,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7938,"column":0},"generated":{"line":7940,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7939,"column":0},"generated":{"line":7941,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7940,"column":0},"generated":{"line":7942,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7941,"column":0},"generated":{"line":7943,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7942,"column":0},"generated":{"line":7944,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7943,"column":0},"generated":{"line":7945,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7944,"column":0},"generated":{"line":7946,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7945,"column":0},"generated":{"line":7947,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7946,"column":0},"generated":{"line":7948,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7947,"column":0},"generated":{"line":7949,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7948,"column":0},"generated":{"line":7950,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7949,"column":0},"generated":{"line":7951,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7950,"column":0},"generated":{"line":7952,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7951,"column":0},"generated":{"line":7953,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7952,"column":0},"generated":{"line":7954,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7953,"column":0},"generated":{"line":7955,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7954,"column":0},"generated":{"line":7956,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7955,"column":0},"generated":{"line":7957,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7956,"column":0},"generated":{"line":7958,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7957,"column":0},"generated":{"line":7959,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7958,"column":0},"generated":{"line":7960,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7959,"column":0},"generated":{"line":7961,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7960,"column":0},"generated":{"line":7962,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7961,"column":0},"generated":{"line":7963,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7962,"column":0},"generated":{"line":7964,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7963,"column":0},"generated":{"line":7965,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7964,"column":0},"generated":{"line":7966,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7965,"column":0},"generated":{"line":7967,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7966,"column":0},"generated":{"line":7968,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7967,"column":0},"generated":{"line":7969,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7968,"column":0},"generated":{"line":7970,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7969,"column":0},"generated":{"line":7971,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7970,"column":0},"generated":{"line":7972,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7971,"column":0},"generated":{"line":7973,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7972,"column":0},"generated":{"line":7974,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7973,"column":0},"generated":{"line":7975,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7974,"column":0},"generated":{"line":7976,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7975,"column":0},"generated":{"line":7977,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7976,"column":0},"generated":{"line":7978,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7977,"column":0},"generated":{"line":7979,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7978,"column":0},"generated":{"line":7980,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7979,"column":0},"generated":{"line":7981,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7980,"column":0},"generated":{"line":7982,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7981,"column":0},"generated":{"line":7983,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7982,"column":0},"generated":{"line":7984,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7983,"column":0},"generated":{"line":7985,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7984,"column":0},"generated":{"line":7986,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7985,"column":0},"generated":{"line":7987,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7986,"column":0},"generated":{"line":7988,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7987,"column":0},"generated":{"line":7989,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7988,"column":0},"generated":{"line":7990,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7989,"column":0},"generated":{"line":7991,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7990,"column":0},"generated":{"line":7992,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7991,"column":0},"generated":{"line":7993,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7992,"column":0},"generated":{"line":7994,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7993,"column":0},"generated":{"line":7995,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7994,"column":0},"generated":{"line":7996,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7995,"column":0},"generated":{"line":7997,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7996,"column":0},"generated":{"line":7998,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7997,"column":0},"generated":{"line":7999,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7998,"column":0},"generated":{"line":8000,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":7999,"column":0},"generated":{"line":8001,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8000,"column":0},"generated":{"line":8002,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8001,"column":0},"generated":{"line":8003,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8002,"column":0},"generated":{"line":8004,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8003,"column":0},"generated":{"line":8005,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8004,"column":0},"generated":{"line":8006,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8005,"column":0},"generated":{"line":8007,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8006,"column":0},"generated":{"line":8008,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8007,"column":0},"generated":{"line":8009,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8008,"column":0},"generated":{"line":8010,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8009,"column":0},"generated":{"line":8011,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8010,"column":0},"generated":{"line":8012,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8011,"column":0},"generated":{"line":8013,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8012,"column":0},"generated":{"line":8014,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8013,"column":0},"generated":{"line":8015,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8014,"column":0},"generated":{"line":8016,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8015,"column":0},"generated":{"line":8017,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8016,"column":0},"generated":{"line":8018,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8017,"column":0},"generated":{"line":8019,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8018,"column":0},"generated":{"line":8020,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8019,"column":0},"generated":{"line":8021,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8020,"column":0},"generated":{"line":8022,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8021,"column":0},"generated":{"line":8023,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8022,"column":0},"generated":{"line":8024,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8023,"column":0},"generated":{"line":8025,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8024,"column":0},"generated":{"line":8026,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8025,"column":0},"generated":{"line":8027,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8026,"column":0},"generated":{"line":8028,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8027,"column":0},"generated":{"line":8029,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8028,"column":0},"generated":{"line":8030,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8029,"column":0},"generated":{"line":8031,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8030,"column":0},"generated":{"line":8032,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8031,"column":0},"generated":{"line":8033,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8032,"column":0},"generated":{"line":8034,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8033,"column":0},"generated":{"line":8035,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8034,"column":0},"generated":{"line":8036,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8035,"column":0},"generated":{"line":8037,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8036,"column":0},"generated":{"line":8038,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8037,"column":0},"generated":{"line":8039,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8038,"column":0},"generated":{"line":8040,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8039,"column":0},"generated":{"line":8041,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8040,"column":0},"generated":{"line":8042,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8041,"column":0},"generated":{"line":8043,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8042,"column":0},"generated":{"line":8044,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8043,"column":0},"generated":{"line":8045,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8044,"column":0},"generated":{"line":8046,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8045,"column":0},"generated":{"line":8047,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8046,"column":0},"generated":{"line":8048,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8047,"column":0},"generated":{"line":8049,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8048,"column":0},"generated":{"line":8050,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8049,"column":0},"generated":{"line":8051,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8050,"column":0},"generated":{"line":8052,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8051,"column":0},"generated":{"line":8053,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8052,"column":0},"generated":{"line":8054,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8053,"column":0},"generated":{"line":8055,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8054,"column":0},"generated":{"line":8056,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8055,"column":0},"generated":{"line":8057,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8056,"column":0},"generated":{"line":8058,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8057,"column":0},"generated":{"line":8059,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8058,"column":0},"generated":{"line":8060,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8059,"column":0},"generated":{"line":8061,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8060,"column":0},"generated":{"line":8062,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8061,"column":0},"generated":{"line":8063,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8062,"column":0},"generated":{"line":8064,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8063,"column":0},"generated":{"line":8065,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8064,"column":0},"generated":{"line":8066,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8065,"column":0},"generated":{"line":8067,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8066,"column":0},"generated":{"line":8068,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8067,"column":0},"generated":{"line":8069,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8068,"column":0},"generated":{"line":8070,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8069,"column":0},"generated":{"line":8071,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8070,"column":0},"generated":{"line":8072,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8071,"column":0},"generated":{"line":8073,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8072,"column":0},"generated":{"line":8074,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8073,"column":0},"generated":{"line":8075,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8074,"column":0},"generated":{"line":8076,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8075,"column":0},"generated":{"line":8077,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8076,"column":0},"generated":{"line":8078,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8077,"column":0},"generated":{"line":8079,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8078,"column":0},"generated":{"line":8080,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8079,"column":0},"generated":{"line":8081,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8080,"column":0},"generated":{"line":8082,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8081,"column":0},"generated":{"line":8083,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8082,"column":0},"generated":{"line":8084,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8083,"column":0},"generated":{"line":8085,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8084,"column":0},"generated":{"line":8086,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8085,"column":0},"generated":{"line":8087,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8086,"column":0},"generated":{"line":8088,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8087,"column":0},"generated":{"line":8089,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8088,"column":0},"generated":{"line":8090,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8089,"column":0},"generated":{"line":8091,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8090,"column":0},"generated":{"line":8092,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8091,"column":0},"generated":{"line":8093,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8092,"column":0},"generated":{"line":8094,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8093,"column":0},"generated":{"line":8095,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8094,"column":0},"generated":{"line":8096,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8095,"column":0},"generated":{"line":8097,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8096,"column":0},"generated":{"line":8098,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8097,"column":0},"generated":{"line":8099,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8098,"column":0},"generated":{"line":8100,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8099,"column":0},"generated":{"line":8101,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8100,"column":0},"generated":{"line":8102,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8101,"column":0},"generated":{"line":8103,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8102,"column":0},"generated":{"line":8104,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8103,"column":0},"generated":{"line":8105,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8104,"column":0},"generated":{"line":8106,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8105,"column":0},"generated":{"line":8107,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8106,"column":0},"generated":{"line":8108,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8107,"column":0},"generated":{"line":8109,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8108,"column":0},"generated":{"line":8110,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8109,"column":0},"generated":{"line":8111,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8110,"column":0},"generated":{"line":8112,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8111,"column":0},"generated":{"line":8113,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8112,"column":0},"generated":{"line":8114,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8113,"column":0},"generated":{"line":8115,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8114,"column":0},"generated":{"line":8116,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8115,"column":0},"generated":{"line":8117,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8116,"column":0},"generated":{"line":8118,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8117,"column":0},"generated":{"line":8119,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8118,"column":0},"generated":{"line":8120,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8119,"column":0},"generated":{"line":8121,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8120,"column":0},"generated":{"line":8122,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8121,"column":0},"generated":{"line":8123,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8122,"column":0},"generated":{"line":8124,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8123,"column":0},"generated":{"line":8125,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8124,"column":0},"generated":{"line":8126,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8125,"column":0},"generated":{"line":8127,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8126,"column":0},"generated":{"line":8128,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8127,"column":0},"generated":{"line":8129,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8128,"column":0},"generated":{"line":8130,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8129,"column":0},"generated":{"line":8131,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8130,"column":0},"generated":{"line":8132,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8131,"column":0},"generated":{"line":8133,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8132,"column":0},"generated":{"line":8134,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8133,"column":0},"generated":{"line":8135,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8134,"column":0},"generated":{"line":8136,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8135,"column":0},"generated":{"line":8137,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8136,"column":0},"generated":{"line":8138,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8137,"column":0},"generated":{"line":8139,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8138,"column":0},"generated":{"line":8140,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8139,"column":0},"generated":{"line":8141,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8140,"column":0},"generated":{"line":8142,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8141,"column":0},"generated":{"line":8143,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8142,"column":0},"generated":{"line":8144,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8143,"column":0},"generated":{"line":8145,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8144,"column":0},"generated":{"line":8146,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8145,"column":0},"generated":{"line":8147,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8146,"column":0},"generated":{"line":8148,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8147,"column":0},"generated":{"line":8149,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8148,"column":0},"generated":{"line":8150,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8149,"column":0},"generated":{"line":8151,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8150,"column":0},"generated":{"line":8152,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8151,"column":0},"generated":{"line":8153,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8152,"column":0},"generated":{"line":8154,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8153,"column":0},"generated":{"line":8155,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8154,"column":0},"generated":{"line":8156,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8155,"column":0},"generated":{"line":8157,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8156,"column":0},"generated":{"line":8158,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8157,"column":0},"generated":{"line":8159,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8158,"column":0},"generated":{"line":8160,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8159,"column":0},"generated":{"line":8161,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8160,"column":0},"generated":{"line":8162,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8161,"column":0},"generated":{"line":8163,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8162,"column":0},"generated":{"line":8164,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8163,"column":0},"generated":{"line":8165,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8164,"column":0},"generated":{"line":8166,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8165,"column":0},"generated":{"line":8167,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8166,"column":0},"generated":{"line":8168,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8167,"column":0},"generated":{"line":8169,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8168,"column":0},"generated":{"line":8170,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8169,"column":0},"generated":{"line":8171,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8170,"column":0},"generated":{"line":8172,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8171,"column":0},"generated":{"line":8173,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8172,"column":0},"generated":{"line":8174,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8173,"column":0},"generated":{"line":8175,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8174,"column":0},"generated":{"line":8176,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8175,"column":0},"generated":{"line":8177,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8176,"column":0},"generated":{"line":8178,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8177,"column":0},"generated":{"line":8179,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8178,"column":0},"generated":{"line":8180,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8179,"column":0},"generated":{"line":8181,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8180,"column":0},"generated":{"line":8182,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8181,"column":0},"generated":{"line":8183,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8182,"column":0},"generated":{"line":8184,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8183,"column":0},"generated":{"line":8185,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8184,"column":0},"generated":{"line":8186,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8185,"column":0},"generated":{"line":8187,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8186,"column":0},"generated":{"line":8188,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8187,"column":0},"generated":{"line":8189,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8188,"column":0},"generated":{"line":8190,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8189,"column":0},"generated":{"line":8191,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8190,"column":0},"generated":{"line":8192,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8191,"column":0},"generated":{"line":8193,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8192,"column":0},"generated":{"line":8194,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8193,"column":0},"generated":{"line":8195,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8194,"column":0},"generated":{"line":8196,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8195,"column":0},"generated":{"line":8197,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8196,"column":0},"generated":{"line":8198,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8197,"column":0},"generated":{"line":8199,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8198,"column":0},"generated":{"line":8200,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8199,"column":0},"generated":{"line":8201,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8200,"column":0},"generated":{"line":8202,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8201,"column":0},"generated":{"line":8203,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8202,"column":0},"generated":{"line":8204,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8203,"column":0},"generated":{"line":8205,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8204,"column":0},"generated":{"line":8206,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8205,"column":0},"generated":{"line":8207,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8206,"column":0},"generated":{"line":8208,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8207,"column":0},"generated":{"line":8209,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8208,"column":0},"generated":{"line":8210,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8209,"column":0},"generated":{"line":8211,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8210,"column":0},"generated":{"line":8212,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8211,"column":0},"generated":{"line":8213,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8212,"column":0},"generated":{"line":8214,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8213,"column":0},"generated":{"line":8215,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8214,"column":0},"generated":{"line":8216,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8215,"column":0},"generated":{"line":8217,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8216,"column":0},"generated":{"line":8218,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8217,"column":0},"generated":{"line":8219,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8218,"column":0},"generated":{"line":8220,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8219,"column":0},"generated":{"line":8221,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8220,"column":0},"generated":{"line":8222,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8221,"column":0},"generated":{"line":8223,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8222,"column":0},"generated":{"line":8224,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8223,"column":0},"generated":{"line":8225,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8224,"column":0},"generated":{"line":8226,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8225,"column":0},"generated":{"line":8227,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8226,"column":0},"generated":{"line":8228,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8227,"column":0},"generated":{"line":8229,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8228,"column":0},"generated":{"line":8230,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8229,"column":0},"generated":{"line":8231,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8230,"column":0},"generated":{"line":8232,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8231,"column":0},"generated":{"line":8233,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8232,"column":0},"generated":{"line":8234,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8233,"column":0},"generated":{"line":8235,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8234,"column":0},"generated":{"line":8236,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8235,"column":0},"generated":{"line":8237,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8236,"column":0},"generated":{"line":8238,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8237,"column":0},"generated":{"line":8239,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8238,"column":0},"generated":{"line":8240,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8239,"column":0},"generated":{"line":8241,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8240,"column":0},"generated":{"line":8242,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8241,"column":0},"generated":{"line":8243,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8242,"column":0},"generated":{"line":8244,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8243,"column":0},"generated":{"line":8245,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8244,"column":0},"generated":{"line":8246,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8245,"column":0},"generated":{"line":8247,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8246,"column":0},"generated":{"line":8248,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8247,"column":0},"generated":{"line":8249,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8248,"column":0},"generated":{"line":8250,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8249,"column":0},"generated":{"line":8251,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8250,"column":0},"generated":{"line":8252,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8251,"column":0},"generated":{"line":8253,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8252,"column":0},"generated":{"line":8254,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8253,"column":0},"generated":{"line":8255,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8254,"column":0},"generated":{"line":8256,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8255,"column":0},"generated":{"line":8257,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8256,"column":0},"generated":{"line":8258,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8257,"column":0},"generated":{"line":8259,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8258,"column":0},"generated":{"line":8260,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8259,"column":0},"generated":{"line":8261,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8260,"column":0},"generated":{"line":8262,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8261,"column":0},"generated":{"line":8263,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8262,"column":0},"generated":{"line":8264,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8263,"column":0},"generated":{"line":8265,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8264,"column":0},"generated":{"line":8266,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8265,"column":0},"generated":{"line":8267,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8266,"column":0},"generated":{"line":8268,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8267,"column":0},"generated":{"line":8269,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8268,"column":0},"generated":{"line":8270,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8269,"column":0},"generated":{"line":8271,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8270,"column":0},"generated":{"line":8272,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8271,"column":0},"generated":{"line":8273,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8272,"column":0},"generated":{"line":8274,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8273,"column":0},"generated":{"line":8275,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8274,"column":0},"generated":{"line":8276,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8275,"column":0},"generated":{"line":8277,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8276,"column":0},"generated":{"line":8278,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8277,"column":0},"generated":{"line":8279,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8278,"column":0},"generated":{"line":8280,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8279,"column":0},"generated":{"line":8281,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8280,"column":0},"generated":{"line":8282,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8281,"column":0},"generated":{"line":8283,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8282,"column":0},"generated":{"line":8284,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8283,"column":0},"generated":{"line":8285,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8284,"column":0},"generated":{"line":8286,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8285,"column":0},"generated":{"line":8287,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8286,"column":0},"generated":{"line":8288,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8287,"column":0},"generated":{"line":8289,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8288,"column":0},"generated":{"line":8290,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8289,"column":0},"generated":{"line":8291,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8290,"column":0},"generated":{"line":8292,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8291,"column":0},"generated":{"line":8293,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8292,"column":0},"generated":{"line":8294,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8293,"column":0},"generated":{"line":8295,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8294,"column":0},"generated":{"line":8296,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8295,"column":0},"generated":{"line":8297,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8296,"column":0},"generated":{"line":8298,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8297,"column":0},"generated":{"line":8299,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8298,"column":0},"generated":{"line":8300,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8299,"column":0},"generated":{"line":8301,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8300,"column":0},"generated":{"line":8302,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8301,"column":0},"generated":{"line":8303,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8302,"column":0},"generated":{"line":8304,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8303,"column":0},"generated":{"line":8305,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8304,"column":0},"generated":{"line":8306,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8305,"column":0},"generated":{"line":8307,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8306,"column":0},"generated":{"line":8308,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8307,"column":0},"generated":{"line":8309,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8308,"column":0},"generated":{"line":8310,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8309,"column":0},"generated":{"line":8311,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8310,"column":0},"generated":{"line":8312,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8311,"column":0},"generated":{"line":8313,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8312,"column":0},"generated":{"line":8314,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8313,"column":0},"generated":{"line":8315,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8314,"column":0},"generated":{"line":8316,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8315,"column":0},"generated":{"line":8317,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8316,"column":0},"generated":{"line":8318,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8317,"column":0},"generated":{"line":8319,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8318,"column":0},"generated":{"line":8320,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8319,"column":0},"generated":{"line":8321,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8320,"column":0},"generated":{"line":8322,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8321,"column":0},"generated":{"line":8323,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8322,"column":0},"generated":{"line":8324,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8323,"column":0},"generated":{"line":8325,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8324,"column":0},"generated":{"line":8326,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8325,"column":0},"generated":{"line":8327,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8326,"column":0},"generated":{"line":8328,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8327,"column":0},"generated":{"line":8329,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8328,"column":0},"generated":{"line":8330,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8329,"column":0},"generated":{"line":8331,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8330,"column":0},"generated":{"line":8332,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8331,"column":0},"generated":{"line":8333,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8332,"column":0},"generated":{"line":8334,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8333,"column":0},"generated":{"line":8335,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8334,"column":0},"generated":{"line":8336,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8335,"column":0},"generated":{"line":8337,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8336,"column":0},"generated":{"line":8338,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8337,"column":0},"generated":{"line":8339,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8338,"column":0},"generated":{"line":8340,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8339,"column":0},"generated":{"line":8341,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8340,"column":0},"generated":{"line":8342,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8341,"column":0},"generated":{"line":8343,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8342,"column":0},"generated":{"line":8344,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8343,"column":0},"generated":{"line":8345,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8344,"column":0},"generated":{"line":8346,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8345,"column":0},"generated":{"line":8347,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8346,"column":0},"generated":{"line":8348,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8347,"column":0},"generated":{"line":8349,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8348,"column":0},"generated":{"line":8350,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8349,"column":0},"generated":{"line":8351,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8350,"column":0},"generated":{"line":8352,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8351,"column":0},"generated":{"line":8353,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8352,"column":0},"generated":{"line":8354,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8353,"column":0},"generated":{"line":8355,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8354,"column":0},"generated":{"line":8356,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8355,"column":0},"generated":{"line":8357,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8356,"column":0},"generated":{"line":8358,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8357,"column":0},"generated":{"line":8359,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8358,"column":0},"generated":{"line":8360,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8359,"column":0},"generated":{"line":8361,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8360,"column":0},"generated":{"line":8362,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8361,"column":0},"generated":{"line":8363,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8362,"column":0},"generated":{"line":8364,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8363,"column":0},"generated":{"line":8365,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8364,"column":0},"generated":{"line":8366,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8365,"column":0},"generated":{"line":8367,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8366,"column":0},"generated":{"line":8368,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8367,"column":0},"generated":{"line":8369,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8368,"column":0},"generated":{"line":8370,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8369,"column":0},"generated":{"line":8371,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8370,"column":0},"generated":{"line":8372,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8371,"column":0},"generated":{"line":8373,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8372,"column":0},"generated":{"line":8374,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8373,"column":0},"generated":{"line":8375,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8374,"column":0},"generated":{"line":8376,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8375,"column":0},"generated":{"line":8377,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8376,"column":0},"generated":{"line":8378,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8377,"column":0},"generated":{"line":8379,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8378,"column":0},"generated":{"line":8380,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8379,"column":0},"generated":{"line":8381,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8380,"column":0},"generated":{"line":8382,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8381,"column":0},"generated":{"line":8383,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8382,"column":0},"generated":{"line":8384,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8383,"column":0},"generated":{"line":8385,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8384,"column":0},"generated":{"line":8386,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8385,"column":0},"generated":{"line":8387,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8386,"column":0},"generated":{"line":8388,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8387,"column":0},"generated":{"line":8389,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8388,"column":0},"generated":{"line":8390,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8389,"column":0},"generated":{"line":8391,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8390,"column":0},"generated":{"line":8392,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8391,"column":0},"generated":{"line":8393,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8392,"column":0},"generated":{"line":8394,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8393,"column":0},"generated":{"line":8395,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8394,"column":0},"generated":{"line":8396,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8395,"column":0},"generated":{"line":8397,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8396,"column":0},"generated":{"line":8398,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8397,"column":0},"generated":{"line":8399,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8398,"column":0},"generated":{"line":8400,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8399,"column":0},"generated":{"line":8401,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8400,"column":0},"generated":{"line":8402,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8401,"column":0},"generated":{"line":8403,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8402,"column":0},"generated":{"line":8404,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8403,"column":0},"generated":{"line":8405,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8404,"column":0},"generated":{"line":8406,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8405,"column":0},"generated":{"line":8407,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8406,"column":0},"generated":{"line":8408,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8407,"column":0},"generated":{"line":8409,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8408,"column":0},"generated":{"line":8410,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8409,"column":0},"generated":{"line":8411,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8410,"column":0},"generated":{"line":8412,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8411,"column":0},"generated":{"line":8413,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8412,"column":0},"generated":{"line":8414,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8413,"column":0},"generated":{"line":8415,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8414,"column":0},"generated":{"line":8416,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8415,"column":0},"generated":{"line":8417,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8416,"column":0},"generated":{"line":8418,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8417,"column":0},"generated":{"line":8419,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8418,"column":0},"generated":{"line":8420,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8419,"column":0},"generated":{"line":8421,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8420,"column":0},"generated":{"line":8422,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8421,"column":0},"generated":{"line":8423,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8422,"column":0},"generated":{"line":8424,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8423,"column":0},"generated":{"line":8425,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8424,"column":0},"generated":{"line":8426,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8425,"column":0},"generated":{"line":8427,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8426,"column":0},"generated":{"line":8428,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8427,"column":0},"generated":{"line":8429,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8428,"column":0},"generated":{"line":8430,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8429,"column":0},"generated":{"line":8431,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8430,"column":0},"generated":{"line":8432,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8431,"column":0},"generated":{"line":8433,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8432,"column":0},"generated":{"line":8434,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8433,"column":0},"generated":{"line":8435,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8434,"column":0},"generated":{"line":8436,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8435,"column":0},"generated":{"line":8437,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8436,"column":0},"generated":{"line":8438,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8437,"column":0},"generated":{"line":8439,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8438,"column":0},"generated":{"line":8440,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8439,"column":0},"generated":{"line":8441,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8440,"column":0},"generated":{"line":8442,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8441,"column":0},"generated":{"line":8443,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8442,"column":0},"generated":{"line":8444,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8443,"column":0},"generated":{"line":8445,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8444,"column":0},"generated":{"line":8446,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8445,"column":0},"generated":{"line":8447,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8446,"column":0},"generated":{"line":8448,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8447,"column":0},"generated":{"line":8449,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8448,"column":0},"generated":{"line":8450,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8449,"column":0},"generated":{"line":8451,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8450,"column":0},"generated":{"line":8452,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8451,"column":0},"generated":{"line":8453,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8452,"column":0},"generated":{"line":8454,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8453,"column":0},"generated":{"line":8455,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8454,"column":0},"generated":{"line":8456,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8455,"column":0},"generated":{"line":8457,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8456,"column":0},"generated":{"line":8458,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8457,"column":0},"generated":{"line":8459,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8458,"column":0},"generated":{"line":8460,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8459,"column":0},"generated":{"line":8461,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8460,"column":0},"generated":{"line":8462,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8461,"column":0},"generated":{"line":8463,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8462,"column":0},"generated":{"line":8464,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8463,"column":0},"generated":{"line":8465,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8464,"column":0},"generated":{"line":8466,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8465,"column":0},"generated":{"line":8467,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8466,"column":0},"generated":{"line":8468,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8467,"column":0},"generated":{"line":8469,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8468,"column":0},"generated":{"line":8470,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8469,"column":0},"generated":{"line":8471,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8470,"column":0},"generated":{"line":8472,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8471,"column":0},"generated":{"line":8473,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8472,"column":0},"generated":{"line":8474,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8473,"column":0},"generated":{"line":8475,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8474,"column":0},"generated":{"line":8476,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8475,"column":0},"generated":{"line":8477,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8476,"column":0},"generated":{"line":8478,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8477,"column":0},"generated":{"line":8479,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8478,"column":0},"generated":{"line":8480,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8479,"column":0},"generated":{"line":8481,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8480,"column":0},"generated":{"line":8482,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8481,"column":0},"generated":{"line":8483,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8482,"column":0},"generated":{"line":8484,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8483,"column":0},"generated":{"line":8485,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8484,"column":0},"generated":{"line":8486,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8485,"column":0},"generated":{"line":8487,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8486,"column":0},"generated":{"line":8488,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8487,"column":0},"generated":{"line":8489,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8488,"column":0},"generated":{"line":8490,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8489,"column":0},"generated":{"line":8491,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8490,"column":0},"generated":{"line":8492,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8491,"column":0},"generated":{"line":8493,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8492,"column":0},"generated":{"line":8494,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8493,"column":0},"generated":{"line":8495,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8494,"column":0},"generated":{"line":8496,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8495,"column":0},"generated":{"line":8497,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8496,"column":0},"generated":{"line":8498,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8497,"column":0},"generated":{"line":8499,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8498,"column":0},"generated":{"line":8500,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8499,"column":0},"generated":{"line":8501,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8500,"column":0},"generated":{"line":8502,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8501,"column":0},"generated":{"line":8503,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8502,"column":0},"generated":{"line":8504,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8503,"column":0},"generated":{"line":8505,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8504,"column":0},"generated":{"line":8506,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8505,"column":0},"generated":{"line":8507,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8506,"column":0},"generated":{"line":8508,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8507,"column":0},"generated":{"line":8509,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8508,"column":0},"generated":{"line":8510,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8509,"column":0},"generated":{"line":8511,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8510,"column":0},"generated":{"line":8512,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8511,"column":0},"generated":{"line":8513,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8512,"column":0},"generated":{"line":8514,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8513,"column":0},"generated":{"line":8515,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8514,"column":0},"generated":{"line":8516,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8515,"column":0},"generated":{"line":8517,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8516,"column":0},"generated":{"line":8518,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8517,"column":0},"generated":{"line":8519,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8518,"column":0},"generated":{"line":8520,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8519,"column":0},"generated":{"line":8521,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8520,"column":0},"generated":{"line":8522,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8521,"column":0},"generated":{"line":8523,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8522,"column":0},"generated":{"line":8524,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8523,"column":0},"generated":{"line":8525,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8524,"column":0},"generated":{"line":8526,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8525,"column":0},"generated":{"line":8527,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8526,"column":0},"generated":{"line":8528,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8527,"column":0},"generated":{"line":8529,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8528,"column":0},"generated":{"line":8530,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8529,"column":0},"generated":{"line":8531,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8530,"column":0},"generated":{"line":8532,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8531,"column":0},"generated":{"line":8533,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8532,"column":0},"generated":{"line":8534,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8533,"column":0},"generated":{"line":8535,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8534,"column":0},"generated":{"line":8536,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8535,"column":0},"generated":{"line":8537,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8536,"column":0},"generated":{"line":8538,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8537,"column":0},"generated":{"line":8539,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8538,"column":0},"generated":{"line":8540,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8539,"column":0},"generated":{"line":8541,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8540,"column":0},"generated":{"line":8542,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8541,"column":0},"generated":{"line":8543,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8542,"column":0},"generated":{"line":8544,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8543,"column":0},"generated":{"line":8545,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8544,"column":0},"generated":{"line":8546,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8545,"column":0},"generated":{"line":8547,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8546,"column":0},"generated":{"line":8548,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8547,"column":0},"generated":{"line":8549,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8548,"column":0},"generated":{"line":8550,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8549,"column":0},"generated":{"line":8551,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8550,"column":0},"generated":{"line":8552,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8551,"column":0},"generated":{"line":8553,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8552,"column":0},"generated":{"line":8554,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8553,"column":0},"generated":{"line":8555,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8554,"column":0},"generated":{"line":8556,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8555,"column":0},"generated":{"line":8557,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8556,"column":0},"generated":{"line":8558,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8557,"column":0},"generated":{"line":8559,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8558,"column":0},"generated":{"line":8560,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8559,"column":0},"generated":{"line":8561,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8560,"column":0},"generated":{"line":8562,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8561,"column":0},"generated":{"line":8563,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8562,"column":0},"generated":{"line":8564,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8563,"column":0},"generated":{"line":8565,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8564,"column":0},"generated":{"line":8566,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8565,"column":0},"generated":{"line":8567,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8566,"column":0},"generated":{"line":8568,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8567,"column":0},"generated":{"line":8569,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8568,"column":0},"generated":{"line":8570,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8569,"column":0},"generated":{"line":8571,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8570,"column":0},"generated":{"line":8572,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8571,"column":0},"generated":{"line":8573,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8572,"column":0},"generated":{"line":8574,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8573,"column":0},"generated":{"line":8575,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8574,"column":0},"generated":{"line":8576,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8575,"column":0},"generated":{"line":8577,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8576,"column":0},"generated":{"line":8578,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8577,"column":0},"generated":{"line":8579,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8578,"column":0},"generated":{"line":8580,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8579,"column":0},"generated":{"line":8581,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8580,"column":0},"generated":{"line":8582,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8581,"column":0},"generated":{"line":8583,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8582,"column":0},"generated":{"line":8584,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8583,"column":0},"generated":{"line":8585,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8584,"column":0},"generated":{"line":8586,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8585,"column":0},"generated":{"line":8587,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8586,"column":0},"generated":{"line":8588,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8587,"column":0},"generated":{"line":8589,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8588,"column":0},"generated":{"line":8590,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8589,"column":0},"generated":{"line":8591,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8590,"column":0},"generated":{"line":8592,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8591,"column":0},"generated":{"line":8593,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8592,"column":0},"generated":{"line":8594,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8593,"column":0},"generated":{"line":8595,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8594,"column":0},"generated":{"line":8596,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8595,"column":0},"generated":{"line":8597,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8596,"column":0},"generated":{"line":8598,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8597,"column":0},"generated":{"line":8599,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8598,"column":0},"generated":{"line":8600,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8599,"column":0},"generated":{"line":8601,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8600,"column":0},"generated":{"line":8602,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8601,"column":0},"generated":{"line":8603,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8602,"column":0},"generated":{"line":8604,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8603,"column":0},"generated":{"line":8605,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8604,"column":0},"generated":{"line":8606,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8605,"column":0},"generated":{"line":8607,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8606,"column":0},"generated":{"line":8608,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8607,"column":0},"generated":{"line":8609,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8608,"column":0},"generated":{"line":8610,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8609,"column":0},"generated":{"line":8611,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8610,"column":0},"generated":{"line":8612,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8611,"column":0},"generated":{"line":8613,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8612,"column":0},"generated":{"line":8614,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8613,"column":0},"generated":{"line":8615,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8614,"column":0},"generated":{"line":8616,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8615,"column":0},"generated":{"line":8617,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8616,"column":0},"generated":{"line":8618,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8617,"column":0},"generated":{"line":8619,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8618,"column":0},"generated":{"line":8620,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8619,"column":0},"generated":{"line":8621,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8620,"column":0},"generated":{"line":8622,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8621,"column":0},"generated":{"line":8623,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8622,"column":0},"generated":{"line":8624,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8623,"column":0},"generated":{"line":8625,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8624,"column":0},"generated":{"line":8626,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8625,"column":0},"generated":{"line":8627,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8626,"column":0},"generated":{"line":8628,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8627,"column":0},"generated":{"line":8629,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8628,"column":0},"generated":{"line":8630,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8629,"column":0},"generated":{"line":8631,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8630,"column":0},"generated":{"line":8632,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8631,"column":0},"generated":{"line":8633,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8632,"column":0},"generated":{"line":8634,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8633,"column":0},"generated":{"line":8635,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8634,"column":0},"generated":{"line":8636,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8635,"column":0},"generated":{"line":8637,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8636,"column":0},"generated":{"line":8638,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8637,"column":0},"generated":{"line":8639,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8638,"column":0},"generated":{"line":8640,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8639,"column":0},"generated":{"line":8641,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8640,"column":0},"generated":{"line":8642,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8641,"column":0},"generated":{"line":8643,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8642,"column":0},"generated":{"line":8644,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8643,"column":0},"generated":{"line":8645,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8644,"column":0},"generated":{"line":8646,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8645,"column":0},"generated":{"line":8647,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8646,"column":0},"generated":{"line":8648,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8647,"column":0},"generated":{"line":8649,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8648,"column":0},"generated":{"line":8650,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8649,"column":0},"generated":{"line":8651,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8650,"column":0},"generated":{"line":8652,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8651,"column":0},"generated":{"line":8653,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8652,"column":0},"generated":{"line":8654,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8653,"column":0},"generated":{"line":8655,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8654,"column":0},"generated":{"line":8656,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8655,"column":0},"generated":{"line":8657,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8656,"column":0},"generated":{"line":8658,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8657,"column":0},"generated":{"line":8659,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8658,"column":0},"generated":{"line":8660,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8659,"column":0},"generated":{"line":8661,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8660,"column":0},"generated":{"line":8662,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8661,"column":0},"generated":{"line":8663,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8662,"column":0},"generated":{"line":8664,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8663,"column":0},"generated":{"line":8665,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8664,"column":0},"generated":{"line":8666,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8665,"column":0},"generated":{"line":8667,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8666,"column":0},"generated":{"line":8668,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8667,"column":0},"generated":{"line":8669,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8668,"column":0},"generated":{"line":8670,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8669,"column":0},"generated":{"line":8671,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8670,"column":0},"generated":{"line":8672,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8671,"column":0},"generated":{"line":8673,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8672,"column":0},"generated":{"line":8674,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8673,"column":0},"generated":{"line":8675,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8674,"column":0},"generated":{"line":8676,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8675,"column":0},"generated":{"line":8677,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8676,"column":0},"generated":{"line":8678,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8677,"column":0},"generated":{"line":8679,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8678,"column":0},"generated":{"line":8680,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8679,"column":0},"generated":{"line":8681,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8680,"column":0},"generated":{"line":8682,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8681,"column":0},"generated":{"line":8683,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8682,"column":0},"generated":{"line":8684,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8683,"column":0},"generated":{"line":8685,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8684,"column":0},"generated":{"line":8686,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8685,"column":0},"generated":{"line":8687,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8686,"column":0},"generated":{"line":8688,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8687,"column":0},"generated":{"line":8689,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8688,"column":0},"generated":{"line":8690,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8689,"column":0},"generated":{"line":8691,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8690,"column":0},"generated":{"line":8692,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8691,"column":0},"generated":{"line":8693,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8692,"column":0},"generated":{"line":8694,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8693,"column":0},"generated":{"line":8695,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8694,"column":0},"generated":{"line":8696,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8695,"column":0},"generated":{"line":8697,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8696,"column":0},"generated":{"line":8698,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8697,"column":0},"generated":{"line":8699,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8698,"column":0},"generated":{"line":8700,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8699,"column":0},"generated":{"line":8701,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8700,"column":0},"generated":{"line":8702,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8701,"column":0},"generated":{"line":8703,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8702,"column":0},"generated":{"line":8704,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8703,"column":0},"generated":{"line":8705,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8704,"column":0},"generated":{"line":8706,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8705,"column":0},"generated":{"line":8707,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8706,"column":0},"generated":{"line":8708,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8707,"column":0},"generated":{"line":8709,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8708,"column":0},"generated":{"line":8710,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8709,"column":0},"generated":{"line":8711,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8710,"column":0},"generated":{"line":8712,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8711,"column":0},"generated":{"line":8713,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8712,"column":0},"generated":{"line":8714,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8713,"column":0},"generated":{"line":8715,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8714,"column":0},"generated":{"line":8716,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8715,"column":0},"generated":{"line":8717,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8716,"column":0},"generated":{"line":8718,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8717,"column":0},"generated":{"line":8719,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8718,"column":0},"generated":{"line":8720,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8719,"column":0},"generated":{"line":8721,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8720,"column":0},"generated":{"line":8722,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8721,"column":0},"generated":{"line":8723,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8722,"column":0},"generated":{"line":8724,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8723,"column":0},"generated":{"line":8725,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8724,"column":0},"generated":{"line":8726,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8725,"column":0},"generated":{"line":8727,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8726,"column":0},"generated":{"line":8728,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8727,"column":0},"generated":{"line":8729,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8728,"column":0},"generated":{"line":8730,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8729,"column":0},"generated":{"line":8731,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8730,"column":0},"generated":{"line":8732,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8731,"column":0},"generated":{"line":8733,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8732,"column":0},"generated":{"line":8734,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8733,"column":0},"generated":{"line":8735,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8734,"column":0},"generated":{"line":8736,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8735,"column":0},"generated":{"line":8737,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8736,"column":0},"generated":{"line":8738,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8737,"column":0},"generated":{"line":8739,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8738,"column":0},"generated":{"line":8740,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8739,"column":0},"generated":{"line":8741,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8740,"column":0},"generated":{"line":8742,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8741,"column":0},"generated":{"line":8743,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8742,"column":0},"generated":{"line":8744,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8743,"column":0},"generated":{"line":8745,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8744,"column":0},"generated":{"line":8746,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8745,"column":0},"generated":{"line":8747,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8746,"column":0},"generated":{"line":8748,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8747,"column":0},"generated":{"line":8749,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8748,"column":0},"generated":{"line":8750,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8749,"column":0},"generated":{"line":8751,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8750,"column":0},"generated":{"line":8752,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8751,"column":0},"generated":{"line":8753,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8752,"column":0},"generated":{"line":8754,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8753,"column":0},"generated":{"line":8755,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8754,"column":0},"generated":{"line":8756,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8755,"column":0},"generated":{"line":8757,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8756,"column":0},"generated":{"line":8758,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8757,"column":0},"generated":{"line":8759,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8758,"column":0},"generated":{"line":8760,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8759,"column":0},"generated":{"line":8761,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8760,"column":0},"generated":{"line":8762,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8761,"column":0},"generated":{"line":8763,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8762,"column":0},"generated":{"line":8764,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8763,"column":0},"generated":{"line":8765,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8764,"column":0},"generated":{"line":8766,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8765,"column":0},"generated":{"line":8767,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8766,"column":0},"generated":{"line":8768,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8767,"column":0},"generated":{"line":8769,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8768,"column":0},"generated":{"line":8770,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8769,"column":0},"generated":{"line":8771,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8770,"column":0},"generated":{"line":8772,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8771,"column":0},"generated":{"line":8773,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8772,"column":0},"generated":{"line":8774,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8773,"column":0},"generated":{"line":8775,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8774,"column":0},"generated":{"line":8776,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8775,"column":0},"generated":{"line":8777,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8776,"column":0},"generated":{"line":8778,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8777,"column":0},"generated":{"line":8779,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8778,"column":0},"generated":{"line":8780,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8779,"column":0},"generated":{"line":8781,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8780,"column":0},"generated":{"line":8782,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8781,"column":0},"generated":{"line":8783,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8782,"column":0},"generated":{"line":8784,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8783,"column":0},"generated":{"line":8785,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8784,"column":0},"generated":{"line":8786,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8785,"column":0},"generated":{"line":8787,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8786,"column":0},"generated":{"line":8788,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8787,"column":0},"generated":{"line":8789,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8788,"column":0},"generated":{"line":8790,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8789,"column":0},"generated":{"line":8791,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8790,"column":0},"generated":{"line":8792,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8791,"column":0},"generated":{"line":8793,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8792,"column":0},"generated":{"line":8794,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8793,"column":0},"generated":{"line":8795,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8794,"column":0},"generated":{"line":8796,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8795,"column":0},"generated":{"line":8797,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8796,"column":0},"generated":{"line":8798,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8797,"column":0},"generated":{"line":8799,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8798,"column":0},"generated":{"line":8800,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8799,"column":0},"generated":{"line":8801,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8800,"column":0},"generated":{"line":8802,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8801,"column":0},"generated":{"line":8803,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8802,"column":0},"generated":{"line":8804,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8803,"column":0},"generated":{"line":8805,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8804,"column":0},"generated":{"line":8806,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8805,"column":0},"generated":{"line":8807,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8806,"column":0},"generated":{"line":8808,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8807,"column":0},"generated":{"line":8809,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8808,"column":0},"generated":{"line":8810,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8809,"column":0},"generated":{"line":8811,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8810,"column":0},"generated":{"line":8812,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8811,"column":0},"generated":{"line":8813,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8812,"column":0},"generated":{"line":8814,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8813,"column":0},"generated":{"line":8815,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8814,"column":0},"generated":{"line":8816,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8815,"column":0},"generated":{"line":8817,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8816,"column":0},"generated":{"line":8818,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8817,"column":0},"generated":{"line":8819,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8818,"column":0},"generated":{"line":8820,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8819,"column":0},"generated":{"line":8821,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8820,"column":0},"generated":{"line":8822,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8821,"column":0},"generated":{"line":8823,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8822,"column":0},"generated":{"line":8824,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8823,"column":0},"generated":{"line":8825,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8824,"column":0},"generated":{"line":8826,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8825,"column":0},"generated":{"line":8827,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8826,"column":0},"generated":{"line":8828,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8827,"column":0},"generated":{"line":8829,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8828,"column":0},"generated":{"line":8830,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8829,"column":0},"generated":{"line":8831,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8830,"column":0},"generated":{"line":8832,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8831,"column":0},"generated":{"line":8833,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8832,"column":0},"generated":{"line":8834,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8833,"column":0},"generated":{"line":8835,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8834,"column":0},"generated":{"line":8836,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8835,"column":0},"generated":{"line":8837,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8836,"column":0},"generated":{"line":8838,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8837,"column":0},"generated":{"line":8839,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8838,"column":0},"generated":{"line":8840,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8839,"column":0},"generated":{"line":8841,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8840,"column":0},"generated":{"line":8842,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8841,"column":0},"generated":{"line":8843,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8842,"column":0},"generated":{"line":8844,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8843,"column":0},"generated":{"line":8845,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8844,"column":0},"generated":{"line":8846,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8845,"column":0},"generated":{"line":8847,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8846,"column":0},"generated":{"line":8848,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8847,"column":0},"generated":{"line":8849,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8848,"column":0},"generated":{"line":8850,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8849,"column":0},"generated":{"line":8851,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8850,"column":0},"generated":{"line":8852,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8851,"column":0},"generated":{"line":8853,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8852,"column":0},"generated":{"line":8854,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8853,"column":0},"generated":{"line":8855,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8854,"column":0},"generated":{"line":8856,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8855,"column":0},"generated":{"line":8857,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8856,"column":0},"generated":{"line":8858,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8857,"column":0},"generated":{"line":8859,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8858,"column":0},"generated":{"line":8860,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8859,"column":0},"generated":{"line":8861,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8860,"column":0},"generated":{"line":8862,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8861,"column":0},"generated":{"line":8863,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8862,"column":0},"generated":{"line":8864,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8863,"column":0},"generated":{"line":8865,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8864,"column":0},"generated":{"line":8866,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8865,"column":0},"generated":{"line":8867,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8866,"column":0},"generated":{"line":8868,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8867,"column":0},"generated":{"line":8869,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8868,"column":0},"generated":{"line":8870,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8869,"column":0},"generated":{"line":8871,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8870,"column":0},"generated":{"line":8872,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8871,"column":0},"generated":{"line":8873,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8872,"column":0},"generated":{"line":8874,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8873,"column":0},"generated":{"line":8875,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8874,"column":0},"generated":{"line":8876,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8875,"column":0},"generated":{"line":8877,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8876,"column":0},"generated":{"line":8878,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8877,"column":0},"generated":{"line":8879,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8878,"column":0},"generated":{"line":8880,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8879,"column":0},"generated":{"line":8881,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8880,"column":0},"generated":{"line":8882,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8881,"column":0},"generated":{"line":8883,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8882,"column":0},"generated":{"line":8884,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8883,"column":0},"generated":{"line":8885,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8884,"column":0},"generated":{"line":8886,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8885,"column":0},"generated":{"line":8887,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8886,"column":0},"generated":{"line":8888,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8887,"column":0},"generated":{"line":8889,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8888,"column":0},"generated":{"line":8890,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8889,"column":0},"generated":{"line":8891,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8890,"column":0},"generated":{"line":8892,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8891,"column":0},"generated":{"line":8893,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8892,"column":0},"generated":{"line":8894,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8893,"column":0},"generated":{"line":8895,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8894,"column":0},"generated":{"line":8896,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8895,"column":0},"generated":{"line":8897,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8896,"column":0},"generated":{"line":8898,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8897,"column":0},"generated":{"line":8899,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8898,"column":0},"generated":{"line":8900,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8899,"column":0},"generated":{"line":8901,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8900,"column":0},"generated":{"line":8902,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8901,"column":0},"generated":{"line":8903,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8902,"column":0},"generated":{"line":8904,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8903,"column":0},"generated":{"line":8905,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8904,"column":0},"generated":{"line":8906,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8905,"column":0},"generated":{"line":8907,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8906,"column":0},"generated":{"line":8908,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8907,"column":0},"generated":{"line":8909,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8908,"column":0},"generated":{"line":8910,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8909,"column":0},"generated":{"line":8911,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8910,"column":0},"generated":{"line":8912,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8911,"column":0},"generated":{"line":8913,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8912,"column":0},"generated":{"line":8914,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8913,"column":0},"generated":{"line":8915,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8914,"column":0},"generated":{"line":8916,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8915,"column":0},"generated":{"line":8917,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8916,"column":0},"generated":{"line":8918,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8917,"column":0},"generated":{"line":8919,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8918,"column":0},"generated":{"line":8920,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8919,"column":0},"generated":{"line":8921,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8920,"column":0},"generated":{"line":8922,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8921,"column":0},"generated":{"line":8923,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8922,"column":0},"generated":{"line":8924,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8923,"column":0},"generated":{"line":8925,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8924,"column":0},"generated":{"line":8926,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8925,"column":0},"generated":{"line":8927,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8926,"column":0},"generated":{"line":8928,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8927,"column":0},"generated":{"line":8929,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8928,"column":0},"generated":{"line":8930,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8929,"column":0},"generated":{"line":8931,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8930,"column":0},"generated":{"line":8932,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8931,"column":0},"generated":{"line":8933,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8932,"column":0},"generated":{"line":8934,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8933,"column":0},"generated":{"line":8935,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8934,"column":0},"generated":{"line":8936,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8935,"column":0},"generated":{"line":8937,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8936,"column":0},"generated":{"line":8938,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8937,"column":0},"generated":{"line":8939,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8938,"column":0},"generated":{"line":8940,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8939,"column":0},"generated":{"line":8941,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8940,"column":0},"generated":{"line":8942,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8941,"column":0},"generated":{"line":8943,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8942,"column":0},"generated":{"line":8944,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8943,"column":0},"generated":{"line":8945,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8944,"column":0},"generated":{"line":8946,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8945,"column":0},"generated":{"line":8947,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8946,"column":0},"generated":{"line":8948,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8947,"column":0},"generated":{"line":8949,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8948,"column":0},"generated":{"line":8950,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8949,"column":0},"generated":{"line":8951,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8950,"column":0},"generated":{"line":8952,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8951,"column":0},"generated":{"line":8953,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8952,"column":0},"generated":{"line":8954,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8953,"column":0},"generated":{"line":8955,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8954,"column":0},"generated":{"line":8956,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8955,"column":0},"generated":{"line":8957,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8956,"column":0},"generated":{"line":8958,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8957,"column":0},"generated":{"line":8959,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8958,"column":0},"generated":{"line":8960,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8959,"column":0},"generated":{"line":8961,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8960,"column":0},"generated":{"line":8962,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8961,"column":0},"generated":{"line":8963,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8962,"column":0},"generated":{"line":8964,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8963,"column":0},"generated":{"line":8965,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8964,"column":0},"generated":{"line":8966,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8965,"column":0},"generated":{"line":8967,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8966,"column":0},"generated":{"line":8968,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8967,"column":0},"generated":{"line":8969,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8968,"column":0},"generated":{"line":8970,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8969,"column":0},"generated":{"line":8971,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8970,"column":0},"generated":{"line":8972,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8971,"column":0},"generated":{"line":8973,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8972,"column":0},"generated":{"line":8974,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8973,"column":0},"generated":{"line":8975,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8974,"column":0},"generated":{"line":8976,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8975,"column":0},"generated":{"line":8977,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8976,"column":0},"generated":{"line":8978,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8977,"column":0},"generated":{"line":8979,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8978,"column":0},"generated":{"line":8980,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8979,"column":0},"generated":{"line":8981,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8980,"column":0},"generated":{"line":8982,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8981,"column":0},"generated":{"line":8983,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8982,"column":0},"generated":{"line":8984,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8983,"column":0},"generated":{"line":8985,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8984,"column":0},"generated":{"line":8986,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8985,"column":0},"generated":{"line":8987,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8986,"column":0},"generated":{"line":8988,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8987,"column":0},"generated":{"line":8989,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8988,"column":0},"generated":{"line":8990,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8989,"column":0},"generated":{"line":8991,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8990,"column":0},"generated":{"line":8992,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8991,"column":0},"generated":{"line":8993,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8992,"column":0},"generated":{"line":8994,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8993,"column":0},"generated":{"line":8995,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8994,"column":0},"generated":{"line":8996,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8995,"column":0},"generated":{"line":8997,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8996,"column":0},"generated":{"line":8998,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8997,"column":0},"generated":{"line":8999,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8998,"column":0},"generated":{"line":9000,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":8999,"column":0},"generated":{"line":9001,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9000,"column":0},"generated":{"line":9002,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9001,"column":0},"generated":{"line":9003,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9002,"column":0},"generated":{"line":9004,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9003,"column":0},"generated":{"line":9005,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9004,"column":0},"generated":{"line":9006,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9005,"column":0},"generated":{"line":9007,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9006,"column":0},"generated":{"line":9008,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9007,"column":0},"generated":{"line":9009,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9008,"column":0},"generated":{"line":9010,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9009,"column":0},"generated":{"line":9011,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9010,"column":0},"generated":{"line":9012,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9011,"column":0},"generated":{"line":9013,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9012,"column":0},"generated":{"line":9014,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9013,"column":0},"generated":{"line":9015,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9014,"column":0},"generated":{"line":9016,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9015,"column":0},"generated":{"line":9017,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9016,"column":0},"generated":{"line":9018,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9017,"column":0},"generated":{"line":9019,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9018,"column":0},"generated":{"line":9020,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9019,"column":0},"generated":{"line":9021,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9020,"column":0},"generated":{"line":9022,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9021,"column":0},"generated":{"line":9023,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9022,"column":0},"generated":{"line":9024,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9023,"column":0},"generated":{"line":9025,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9024,"column":0},"generated":{"line":9026,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9025,"column":0},"generated":{"line":9027,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9026,"column":0},"generated":{"line":9028,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9027,"column":0},"generated":{"line":9029,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9028,"column":0},"generated":{"line":9030,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9029,"column":0},"generated":{"line":9031,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9030,"column":0},"generated":{"line":9032,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9031,"column":0},"generated":{"line":9033,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9032,"column":0},"generated":{"line":9034,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9033,"column":0},"generated":{"line":9035,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9034,"column":0},"generated":{"line":9036,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9035,"column":0},"generated":{"line":9037,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9036,"column":0},"generated":{"line":9038,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9037,"column":0},"generated":{"line":9039,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9038,"column":0},"generated":{"line":9040,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9039,"column":0},"generated":{"line":9041,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9040,"column":0},"generated":{"line":9042,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9041,"column":0},"generated":{"line":9043,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9042,"column":0},"generated":{"line":9044,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9043,"column":0},"generated":{"line":9045,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9044,"column":0},"generated":{"line":9046,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9045,"column":0},"generated":{"line":9047,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9046,"column":0},"generated":{"line":9048,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9047,"column":0},"generated":{"line":9049,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9048,"column":0},"generated":{"line":9050,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9049,"column":0},"generated":{"line":9051,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9050,"column":0},"generated":{"line":9052,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9051,"column":0},"generated":{"line":9053,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9052,"column":0},"generated":{"line":9054,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9053,"column":0},"generated":{"line":9055,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9054,"column":0},"generated":{"line":9056,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9055,"column":0},"generated":{"line":9057,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9056,"column":0},"generated":{"line":9058,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9057,"column":0},"generated":{"line":9059,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9058,"column":0},"generated":{"line":9060,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9059,"column":0},"generated":{"line":9061,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9060,"column":0},"generated":{"line":9062,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9061,"column":0},"generated":{"line":9063,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9062,"column":0},"generated":{"line":9064,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9063,"column":0},"generated":{"line":9065,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9064,"column":0},"generated":{"line":9066,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9065,"column":0},"generated":{"line":9067,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9066,"column":0},"generated":{"line":9068,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9067,"column":0},"generated":{"line":9069,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9068,"column":0},"generated":{"line":9070,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9069,"column":0},"generated":{"line":9071,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9070,"column":0},"generated":{"line":9072,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9071,"column":0},"generated":{"line":9073,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9072,"column":0},"generated":{"line":9074,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9073,"column":0},"generated":{"line":9075,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9074,"column":0},"generated":{"line":9076,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9075,"column":0},"generated":{"line":9077,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9076,"column":0},"generated":{"line":9078,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9077,"column":0},"generated":{"line":9079,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9078,"column":0},"generated":{"line":9080,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9079,"column":0},"generated":{"line":9081,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9080,"column":0},"generated":{"line":9082,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9081,"column":0},"generated":{"line":9083,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9082,"column":0},"generated":{"line":9084,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9083,"column":0},"generated":{"line":9085,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9084,"column":0},"generated":{"line":9086,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9085,"column":0},"generated":{"line":9087,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9086,"column":0},"generated":{"line":9088,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9087,"column":0},"generated":{"line":9089,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9088,"column":0},"generated":{"line":9090,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9089,"column":0},"generated":{"line":9091,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9090,"column":0},"generated":{"line":9092,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9091,"column":0},"generated":{"line":9093,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9092,"column":0},"generated":{"line":9094,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9093,"column":0},"generated":{"line":9095,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9094,"column":0},"generated":{"line":9096,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9095,"column":0},"generated":{"line":9097,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9096,"column":0},"generated":{"line":9098,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9097,"column":0},"generated":{"line":9099,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9098,"column":0},"generated":{"line":9100,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9099,"column":0},"generated":{"line":9101,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9100,"column":0},"generated":{"line":9102,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9101,"column":0},"generated":{"line":9103,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9102,"column":0},"generated":{"line":9104,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9103,"column":0},"generated":{"line":9105,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9104,"column":0},"generated":{"line":9106,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9105,"column":0},"generated":{"line":9107,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9106,"column":0},"generated":{"line":9108,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9107,"column":0},"generated":{"line":9109,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9108,"column":0},"generated":{"line":9110,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9109,"column":0},"generated":{"line":9111,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9110,"column":0},"generated":{"line":9112,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9111,"column":0},"generated":{"line":9113,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9112,"column":0},"generated":{"line":9114,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9113,"column":0},"generated":{"line":9115,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9114,"column":0},"generated":{"line":9116,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9115,"column":0},"generated":{"line":9117,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9116,"column":0},"generated":{"line":9118,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9117,"column":0},"generated":{"line":9119,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9118,"column":0},"generated":{"line":9120,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9119,"column":0},"generated":{"line":9121,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9120,"column":0},"generated":{"line":9122,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9121,"column":0},"generated":{"line":9123,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9122,"column":0},"generated":{"line":9124,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9123,"column":0},"generated":{"line":9125,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9124,"column":0},"generated":{"line":9126,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9125,"column":0},"generated":{"line":9127,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9126,"column":0},"generated":{"line":9128,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9127,"column":0},"generated":{"line":9129,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9128,"column":0},"generated":{"line":9130,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9129,"column":0},"generated":{"line":9131,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9130,"column":0},"generated":{"line":9132,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9131,"column":0},"generated":{"line":9133,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9132,"column":0},"generated":{"line":9134,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9133,"column":0},"generated":{"line":9135,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9134,"column":0},"generated":{"line":9136,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9135,"column":0},"generated":{"line":9137,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9136,"column":0},"generated":{"line":9138,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9137,"column":0},"generated":{"line":9139,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9138,"column":0},"generated":{"line":9140,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9139,"column":0},"generated":{"line":9141,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9140,"column":0},"generated":{"line":9142,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9141,"column":0},"generated":{"line":9143,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9142,"column":0},"generated":{"line":9144,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9143,"column":0},"generated":{"line":9145,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9144,"column":0},"generated":{"line":9146,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9145,"column":0},"generated":{"line":9147,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9146,"column":0},"generated":{"line":9148,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9147,"column":0},"generated":{"line":9149,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9148,"column":0},"generated":{"line":9150,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9149,"column":0},"generated":{"line":9151,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9150,"column":0},"generated":{"line":9152,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9151,"column":0},"generated":{"line":9153,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9152,"column":0},"generated":{"line":9154,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9153,"column":0},"generated":{"line":9155,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9154,"column":0},"generated":{"line":9156,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9155,"column":0},"generated":{"line":9157,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9156,"column":0},"generated":{"line":9158,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9157,"column":0},"generated":{"line":9159,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9158,"column":0},"generated":{"line":9160,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9159,"column":0},"generated":{"line":9161,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9160,"column":0},"generated":{"line":9162,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9161,"column":0},"generated":{"line":9163,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9162,"column":0},"generated":{"line":9164,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9163,"column":0},"generated":{"line":9165,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9164,"column":0},"generated":{"line":9166,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9165,"column":0},"generated":{"line":9167,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9166,"column":0},"generated":{"line":9168,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9167,"column":0},"generated":{"line":9169,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9168,"column":0},"generated":{"line":9170,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9169,"column":0},"generated":{"line":9171,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9170,"column":0},"generated":{"line":9172,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9171,"column":0},"generated":{"line":9173,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9172,"column":0},"generated":{"line":9174,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9173,"column":0},"generated":{"line":9175,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9174,"column":0},"generated":{"line":9176,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9175,"column":0},"generated":{"line":9177,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9176,"column":0},"generated":{"line":9178,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9177,"column":0},"generated":{"line":9179,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9178,"column":0},"generated":{"line":9180,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9179,"column":0},"generated":{"line":9181,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9180,"column":0},"generated":{"line":9182,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9181,"column":0},"generated":{"line":9183,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9182,"column":0},"generated":{"line":9184,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9183,"column":0},"generated":{"line":9185,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9184,"column":0},"generated":{"line":9186,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9185,"column":0},"generated":{"line":9187,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9186,"column":0},"generated":{"line":9188,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9187,"column":0},"generated":{"line":9189,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9188,"column":0},"generated":{"line":9190,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9189,"column":0},"generated":{"line":9191,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9190,"column":0},"generated":{"line":9192,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9191,"column":0},"generated":{"line":9193,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9192,"column":0},"generated":{"line":9194,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9193,"column":0},"generated":{"line":9195,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9194,"column":0},"generated":{"line":9196,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9195,"column":0},"generated":{"line":9197,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9196,"column":0},"generated":{"line":9198,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9197,"column":0},"generated":{"line":9199,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9198,"column":0},"generated":{"line":9200,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9199,"column":0},"generated":{"line":9201,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9200,"column":0},"generated":{"line":9202,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9201,"column":0},"generated":{"line":9203,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9202,"column":0},"generated":{"line":9204,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9203,"column":0},"generated":{"line":9205,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9204,"column":0},"generated":{"line":9206,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9205,"column":0},"generated":{"line":9207,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9206,"column":0},"generated":{"line":9208,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9207,"column":0},"generated":{"line":9209,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9208,"column":0},"generated":{"line":9210,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9209,"column":0},"generated":{"line":9211,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9210,"column":0},"generated":{"line":9212,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9211,"column":0},"generated":{"line":9213,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9212,"column":0},"generated":{"line":9214,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9213,"column":0},"generated":{"line":9215,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9214,"column":0},"generated":{"line":9216,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9215,"column":0},"generated":{"line":9217,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9216,"column":0},"generated":{"line":9218,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9217,"column":0},"generated":{"line":9219,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9218,"column":0},"generated":{"line":9220,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9219,"column":0},"generated":{"line":9221,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9220,"column":0},"generated":{"line":9222,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9221,"column":0},"generated":{"line":9223,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9222,"column":0},"generated":{"line":9224,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9223,"column":0},"generated":{"line":9225,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9224,"column":0},"generated":{"line":9226,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9225,"column":0},"generated":{"line":9227,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9226,"column":0},"generated":{"line":9228,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9227,"column":0},"generated":{"line":9229,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9228,"column":0},"generated":{"line":9230,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9229,"column":0},"generated":{"line":9231,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9230,"column":0},"generated":{"line":9232,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9231,"column":0},"generated":{"line":9233,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9232,"column":0},"generated":{"line":9234,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9233,"column":0},"generated":{"line":9235,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9234,"column":0},"generated":{"line":9236,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9235,"column":0},"generated":{"line":9237,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9236,"column":0},"generated":{"line":9238,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9237,"column":0},"generated":{"line":9239,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9238,"column":0},"generated":{"line":9240,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9239,"column":0},"generated":{"line":9241,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9240,"column":0},"generated":{"line":9242,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9241,"column":0},"generated":{"line":9243,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9242,"column":0},"generated":{"line":9244,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9243,"column":0},"generated":{"line":9245,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9244,"column":0},"generated":{"line":9246,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9245,"column":0},"generated":{"line":9247,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9246,"column":0},"generated":{"line":9248,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9247,"column":0},"generated":{"line":9249,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9248,"column":0},"generated":{"line":9250,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9249,"column":0},"generated":{"line":9251,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9250,"column":0},"generated":{"line":9252,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9251,"column":0},"generated":{"line":9253,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9252,"column":0},"generated":{"line":9254,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9253,"column":0},"generated":{"line":9255,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9254,"column":0},"generated":{"line":9256,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9255,"column":0},"generated":{"line":9257,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9256,"column":0},"generated":{"line":9258,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9257,"column":0},"generated":{"line":9259,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9258,"column":0},"generated":{"line":9260,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9259,"column":0},"generated":{"line":9261,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9260,"column":0},"generated":{"line":9262,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9261,"column":0},"generated":{"line":9263,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9262,"column":0},"generated":{"line":9264,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9263,"column":0},"generated":{"line":9265,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9264,"column":0},"generated":{"line":9266,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9265,"column":0},"generated":{"line":9267,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9266,"column":0},"generated":{"line":9268,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9267,"column":0},"generated":{"line":9269,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9268,"column":0},"generated":{"line":9270,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9269,"column":0},"generated":{"line":9271,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9270,"column":0},"generated":{"line":9272,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9271,"column":0},"generated":{"line":9273,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9272,"column":0},"generated":{"line":9274,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9273,"column":0},"generated":{"line":9275,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9274,"column":0},"generated":{"line":9276,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9275,"column":0},"generated":{"line":9277,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9276,"column":0},"generated":{"line":9278,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9277,"column":0},"generated":{"line":9279,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9278,"column":0},"generated":{"line":9280,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9279,"column":0},"generated":{"line":9281,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9280,"column":0},"generated":{"line":9282,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9281,"column":0},"generated":{"line":9283,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9282,"column":0},"generated":{"line":9284,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9283,"column":0},"generated":{"line":9285,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9284,"column":0},"generated":{"line":9286,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9285,"column":0},"generated":{"line":9287,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9286,"column":0},"generated":{"line":9288,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9287,"column":0},"generated":{"line":9289,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9288,"column":0},"generated":{"line":9290,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9289,"column":0},"generated":{"line":9291,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9290,"column":0},"generated":{"line":9292,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9291,"column":0},"generated":{"line":9293,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9292,"column":0},"generated":{"line":9294,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9293,"column":0},"generated":{"line":9295,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9294,"column":0},"generated":{"line":9296,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9295,"column":0},"generated":{"line":9297,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9296,"column":0},"generated":{"line":9298,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9297,"column":0},"generated":{"line":9299,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9298,"column":0},"generated":{"line":9300,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9299,"column":0},"generated":{"line":9301,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9300,"column":0},"generated":{"line":9302,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9301,"column":0},"generated":{"line":9303,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9302,"column":0},"generated":{"line":9304,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9303,"column":0},"generated":{"line":9305,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9304,"column":0},"generated":{"line":9306,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9305,"column":0},"generated":{"line":9307,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9306,"column":0},"generated":{"line":9308,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9307,"column":0},"generated":{"line":9309,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9308,"column":0},"generated":{"line":9310,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9309,"column":0},"generated":{"line":9311,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9310,"column":0},"generated":{"line":9312,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9311,"column":0},"generated":{"line":9313,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9312,"column":0},"generated":{"line":9314,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9313,"column":0},"generated":{"line":9315,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9314,"column":0},"generated":{"line":9316,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9315,"column":0},"generated":{"line":9317,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9316,"column":0},"generated":{"line":9318,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9317,"column":0},"generated":{"line":9319,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9318,"column":0},"generated":{"line":9320,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9319,"column":0},"generated":{"line":9321,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9320,"column":0},"generated":{"line":9322,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9321,"column":0},"generated":{"line":9323,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9322,"column":0},"generated":{"line":9324,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9323,"column":0},"generated":{"line":9325,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9324,"column":0},"generated":{"line":9326,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9325,"column":0},"generated":{"line":9327,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9326,"column":0},"generated":{"line":9328,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9327,"column":0},"generated":{"line":9329,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9328,"column":0},"generated":{"line":9330,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9329,"column":0},"generated":{"line":9331,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9330,"column":0},"generated":{"line":9332,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9331,"column":0},"generated":{"line":9333,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9332,"column":0},"generated":{"line":9334,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9333,"column":0},"generated":{"line":9335,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9334,"column":0},"generated":{"line":9336,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9335,"column":0},"generated":{"line":9337,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9336,"column":0},"generated":{"line":9338,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9337,"column":0},"generated":{"line":9339,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9338,"column":0},"generated":{"line":9340,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9339,"column":0},"generated":{"line":9341,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9340,"column":0},"generated":{"line":9342,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9341,"column":0},"generated":{"line":9343,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9342,"column":0},"generated":{"line":9344,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9343,"column":0},"generated":{"line":9345,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9344,"column":0},"generated":{"line":9346,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9345,"column":0},"generated":{"line":9347,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9346,"column":0},"generated":{"line":9348,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9347,"column":0},"generated":{"line":9349,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9348,"column":0},"generated":{"line":9350,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9349,"column":0},"generated":{"line":9351,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9350,"column":0},"generated":{"line":9352,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9351,"column":0},"generated":{"line":9353,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9352,"column":0},"generated":{"line":9354,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9353,"column":0},"generated":{"line":9355,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9354,"column":0},"generated":{"line":9356,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9355,"column":0},"generated":{"line":9357,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9356,"column":0},"generated":{"line":9358,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9357,"column":0},"generated":{"line":9359,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9358,"column":0},"generated":{"line":9360,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9359,"column":0},"generated":{"line":9361,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9360,"column":0},"generated":{"line":9362,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9361,"column":0},"generated":{"line":9363,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9362,"column":0},"generated":{"line":9364,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9363,"column":0},"generated":{"line":9365,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9364,"column":0},"generated":{"line":9366,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9365,"column":0},"generated":{"line":9367,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9366,"column":0},"generated":{"line":9368,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9367,"column":0},"generated":{"line":9369,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9368,"column":0},"generated":{"line":9370,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9369,"column":0},"generated":{"line":9371,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9370,"column":0},"generated":{"line":9372,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9371,"column":0},"generated":{"line":9373,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9372,"column":0},"generated":{"line":9374,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9373,"column":0},"generated":{"line":9375,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9374,"column":0},"generated":{"line":9376,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9375,"column":0},"generated":{"line":9377,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9376,"column":0},"generated":{"line":9378,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9377,"column":0},"generated":{"line":9379,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9378,"column":0},"generated":{"line":9380,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9379,"column":0},"generated":{"line":9381,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9380,"column":0},"generated":{"line":9382,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9381,"column":0},"generated":{"line":9383,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9382,"column":0},"generated":{"line":9384,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9383,"column":0},"generated":{"line":9385,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9384,"column":0},"generated":{"line":9386,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9385,"column":0},"generated":{"line":9387,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9386,"column":0},"generated":{"line":9388,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9387,"column":0},"generated":{"line":9389,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9388,"column":0},"generated":{"line":9390,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9389,"column":0},"generated":{"line":9391,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9390,"column":0},"generated":{"line":9392,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9391,"column":0},"generated":{"line":9393,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9392,"column":0},"generated":{"line":9394,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9393,"column":0},"generated":{"line":9395,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9394,"column":0},"generated":{"line":9396,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9395,"column":0},"generated":{"line":9397,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9396,"column":0},"generated":{"line":9398,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9397,"column":0},"generated":{"line":9399,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9398,"column":0},"generated":{"line":9400,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9399,"column":0},"generated":{"line":9401,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9400,"column":0},"generated":{"line":9402,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9401,"column":0},"generated":{"line":9403,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9402,"column":0},"generated":{"line":9404,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9403,"column":0},"generated":{"line":9405,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9404,"column":0},"generated":{"line":9406,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9405,"column":0},"generated":{"line":9407,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9406,"column":0},"generated":{"line":9408,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9407,"column":0},"generated":{"line":9409,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9408,"column":0},"generated":{"line":9410,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9409,"column":0},"generated":{"line":9411,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9410,"column":0},"generated":{"line":9412,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9411,"column":0},"generated":{"line":9413,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9412,"column":0},"generated":{"line":9414,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9413,"column":0},"generated":{"line":9415,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9414,"column":0},"generated":{"line":9416,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9415,"column":0},"generated":{"line":9417,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9416,"column":0},"generated":{"line":9418,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9417,"column":0},"generated":{"line":9419,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9418,"column":0},"generated":{"line":9420,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9419,"column":0},"generated":{"line":9421,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9420,"column":0},"generated":{"line":9422,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9421,"column":0},"generated":{"line":9423,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9422,"column":0},"generated":{"line":9424,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9423,"column":0},"generated":{"line":9425,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9424,"column":0},"generated":{"line":9426,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9425,"column":0},"generated":{"line":9427,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9426,"column":0},"generated":{"line":9428,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9427,"column":0},"generated":{"line":9429,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9428,"column":0},"generated":{"line":9430,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9429,"column":0},"generated":{"line":9431,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9430,"column":0},"generated":{"line":9432,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9431,"column":0},"generated":{"line":9433,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9432,"column":0},"generated":{"line":9434,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9433,"column":0},"generated":{"line":9435,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9434,"column":0},"generated":{"line":9436,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9435,"column":0},"generated":{"line":9437,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9436,"column":0},"generated":{"line":9438,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9437,"column":0},"generated":{"line":9439,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9438,"column":0},"generated":{"line":9440,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9439,"column":0},"generated":{"line":9441,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9440,"column":0},"generated":{"line":9442,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9441,"column":0},"generated":{"line":9443,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9442,"column":0},"generated":{"line":9444,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9443,"column":0},"generated":{"line":9445,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9444,"column":0},"generated":{"line":9446,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9445,"column":0},"generated":{"line":9447,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9446,"column":0},"generated":{"line":9448,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9447,"column":0},"generated":{"line":9449,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9448,"column":0},"generated":{"line":9450,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9449,"column":0},"generated":{"line":9451,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9450,"column":0},"generated":{"line":9452,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9451,"column":0},"generated":{"line":9453,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9452,"column":0},"generated":{"line":9454,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9453,"column":0},"generated":{"line":9455,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9454,"column":0},"generated":{"line":9456,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9455,"column":0},"generated":{"line":9457,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9456,"column":0},"generated":{"line":9458,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9457,"column":0},"generated":{"line":9459,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9458,"column":0},"generated":{"line":9460,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9459,"column":0},"generated":{"line":9461,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9460,"column":0},"generated":{"line":9462,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9461,"column":0},"generated":{"line":9463,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9462,"column":0},"generated":{"line":9464,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9463,"column":0},"generated":{"line":9465,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9464,"column":0},"generated":{"line":9466,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9465,"column":0},"generated":{"line":9467,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9466,"column":0},"generated":{"line":9468,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9467,"column":0},"generated":{"line":9469,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9468,"column":0},"generated":{"line":9470,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9469,"column":0},"generated":{"line":9471,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9470,"column":0},"generated":{"line":9472,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9471,"column":0},"generated":{"line":9473,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9472,"column":0},"generated":{"line":9474,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9473,"column":0},"generated":{"line":9475,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9474,"column":0},"generated":{"line":9476,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9475,"column":0},"generated":{"line":9477,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9476,"column":0},"generated":{"line":9478,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9477,"column":0},"generated":{"line":9479,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9478,"column":0},"generated":{"line":9480,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9479,"column":0},"generated":{"line":9481,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9480,"column":0},"generated":{"line":9482,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9481,"column":0},"generated":{"line":9483,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9482,"column":0},"generated":{"line":9484,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9483,"column":0},"generated":{"line":9485,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9484,"column":0},"generated":{"line":9486,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9485,"column":0},"generated":{"line":9487,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9486,"column":0},"generated":{"line":9488,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9487,"column":0},"generated":{"line":9489,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9488,"column":0},"generated":{"line":9490,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9489,"column":0},"generated":{"line":9491,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9490,"column":0},"generated":{"line":9492,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9491,"column":0},"generated":{"line":9493,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9492,"column":0},"generated":{"line":9494,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9493,"column":0},"generated":{"line":9495,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9494,"column":0},"generated":{"line":9496,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9495,"column":0},"generated":{"line":9497,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9496,"column":0},"generated":{"line":9498,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9497,"column":0},"generated":{"line":9499,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9498,"column":0},"generated":{"line":9500,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9499,"column":0},"generated":{"line":9501,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9500,"column":0},"generated":{"line":9502,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9501,"column":0},"generated":{"line":9503,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9502,"column":0},"generated":{"line":9504,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9503,"column":0},"generated":{"line":9505,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9504,"column":0},"generated":{"line":9506,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9505,"column":0},"generated":{"line":9507,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9506,"column":0},"generated":{"line":9508,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9507,"column":0},"generated":{"line":9509,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9508,"column":0},"generated":{"line":9510,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9509,"column":0},"generated":{"line":9511,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9510,"column":0},"generated":{"line":9512,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9511,"column":0},"generated":{"line":9513,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9512,"column":0},"generated":{"line":9514,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9513,"column":0},"generated":{"line":9515,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9514,"column":0},"generated":{"line":9516,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9515,"column":0},"generated":{"line":9517,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9516,"column":0},"generated":{"line":9518,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9517,"column":0},"generated":{"line":9519,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9518,"column":0},"generated":{"line":9520,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9519,"column":0},"generated":{"line":9521,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9520,"column":0},"generated":{"line":9522,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9521,"column":0},"generated":{"line":9523,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9522,"column":0},"generated":{"line":9524,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9523,"column":0},"generated":{"line":9525,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9524,"column":0},"generated":{"line":9526,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9525,"column":0},"generated":{"line":9527,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9526,"column":0},"generated":{"line":9528,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9527,"column":0},"generated":{"line":9529,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9528,"column":0},"generated":{"line":9530,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9529,"column":0},"generated":{"line":9531,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9530,"column":0},"generated":{"line":9532,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9531,"column":0},"generated":{"line":9533,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9532,"column":0},"generated":{"line":9534,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9533,"column":0},"generated":{"line":9535,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9534,"column":0},"generated":{"line":9536,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9535,"column":0},"generated":{"line":9537,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9536,"column":0},"generated":{"line":9538,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9537,"column":0},"generated":{"line":9539,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9538,"column":0},"generated":{"line":9540,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9539,"column":0},"generated":{"line":9541,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9540,"column":0},"generated":{"line":9542,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9541,"column":0},"generated":{"line":9543,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9542,"column":0},"generated":{"line":9544,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9543,"column":0},"generated":{"line":9545,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9544,"column":0},"generated":{"line":9546,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9545,"column":0},"generated":{"line":9547,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9546,"column":0},"generated":{"line":9548,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9547,"column":0},"generated":{"line":9549,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9548,"column":0},"generated":{"line":9550,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9549,"column":0},"generated":{"line":9551,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9550,"column":0},"generated":{"line":9552,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9551,"column":0},"generated":{"line":9553,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9552,"column":0},"generated":{"line":9554,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9553,"column":0},"generated":{"line":9555,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9554,"column":0},"generated":{"line":9556,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9555,"column":0},"generated":{"line":9557,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9556,"column":0},"generated":{"line":9558,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9557,"column":0},"generated":{"line":9559,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9558,"column":0},"generated":{"line":9560,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9559,"column":0},"generated":{"line":9561,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9560,"column":0},"generated":{"line":9562,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9561,"column":0},"generated":{"line":9563,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9562,"column":0},"generated":{"line":9564,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9563,"column":0},"generated":{"line":9565,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9564,"column":0},"generated":{"line":9566,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9565,"column":0},"generated":{"line":9567,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9566,"column":0},"generated":{"line":9568,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9567,"column":0},"generated":{"line":9569,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9568,"column":0},"generated":{"line":9570,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9569,"column":0},"generated":{"line":9571,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9570,"column":0},"generated":{"line":9572,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9571,"column":0},"generated":{"line":9573,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9572,"column":0},"generated":{"line":9574,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9573,"column":0},"generated":{"line":9575,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9574,"column":0},"generated":{"line":9576,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9575,"column":0},"generated":{"line":9577,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9576,"column":0},"generated":{"line":9578,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9577,"column":0},"generated":{"line":9579,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9578,"column":0},"generated":{"line":9580,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9579,"column":0},"generated":{"line":9581,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9580,"column":0},"generated":{"line":9582,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9581,"column":0},"generated":{"line":9583,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9582,"column":0},"generated":{"line":9584,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9583,"column":0},"generated":{"line":9585,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9584,"column":0},"generated":{"line":9586,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9585,"column":0},"generated":{"line":9587,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9586,"column":0},"generated":{"line":9588,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9587,"column":0},"generated":{"line":9589,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9588,"column":0},"generated":{"line":9590,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9589,"column":0},"generated":{"line":9591,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9590,"column":0},"generated":{"line":9592,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9591,"column":0},"generated":{"line":9593,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9592,"column":0},"generated":{"line":9594,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9593,"column":0},"generated":{"line":9595,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9594,"column":0},"generated":{"line":9596,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9595,"column":0},"generated":{"line":9597,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9596,"column":0},"generated":{"line":9598,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9597,"column":0},"generated":{"line":9599,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9598,"column":0},"generated":{"line":9600,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9599,"column":0},"generated":{"line":9601,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9600,"column":0},"generated":{"line":9602,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9601,"column":0},"generated":{"line":9603,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9602,"column":0},"generated":{"line":9604,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9603,"column":0},"generated":{"line":9605,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9604,"column":0},"generated":{"line":9606,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9605,"column":0},"generated":{"line":9607,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9606,"column":0},"generated":{"line":9608,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9607,"column":0},"generated":{"line":9609,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9608,"column":0},"generated":{"line":9610,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9609,"column":0},"generated":{"line":9611,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9610,"column":0},"generated":{"line":9612,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9611,"column":0},"generated":{"line":9613,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9612,"column":0},"generated":{"line":9614,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9613,"column":0},"generated":{"line":9615,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9614,"column":0},"generated":{"line":9616,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9615,"column":0},"generated":{"line":9617,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9616,"column":0},"generated":{"line":9618,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9617,"column":0},"generated":{"line":9619,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9618,"column":0},"generated":{"line":9620,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9619,"column":0},"generated":{"line":9621,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9620,"column":0},"generated":{"line":9622,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9621,"column":0},"generated":{"line":9623,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9622,"column":0},"generated":{"line":9624,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9623,"column":0},"generated":{"line":9625,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9624,"column":0},"generated":{"line":9626,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9625,"column":0},"generated":{"line":9627,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9626,"column":0},"generated":{"line":9628,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9627,"column":0},"generated":{"line":9629,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9628,"column":0},"generated":{"line":9630,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9629,"column":0},"generated":{"line":9631,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9630,"column":0},"generated":{"line":9632,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9631,"column":0},"generated":{"line":9633,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9632,"column":0},"generated":{"line":9634,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9633,"column":0},"generated":{"line":9635,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9634,"column":0},"generated":{"line":9636,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9635,"column":0},"generated":{"line":9637,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9636,"column":0},"generated":{"line":9638,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9637,"column":0},"generated":{"line":9639,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9638,"column":0},"generated":{"line":9640,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9639,"column":0},"generated":{"line":9641,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9640,"column":0},"generated":{"line":9642,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9641,"column":0},"generated":{"line":9643,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9642,"column":0},"generated":{"line":9644,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9643,"column":0},"generated":{"line":9645,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9644,"column":0},"generated":{"line":9646,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9645,"column":0},"generated":{"line":9647,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9646,"column":0},"generated":{"line":9648,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9647,"column":0},"generated":{"line":9649,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9648,"column":0},"generated":{"line":9650,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9649,"column":0},"generated":{"line":9651,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9650,"column":0},"generated":{"line":9652,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9651,"column":0},"generated":{"line":9653,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9652,"column":0},"generated":{"line":9654,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9653,"column":0},"generated":{"line":9655,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9654,"column":0},"generated":{"line":9656,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9655,"column":0},"generated":{"line":9657,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9656,"column":0},"generated":{"line":9658,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9657,"column":0},"generated":{"line":9659,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9658,"column":0},"generated":{"line":9660,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9659,"column":0},"generated":{"line":9661,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9660,"column":0},"generated":{"line":9662,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9661,"column":0},"generated":{"line":9663,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9662,"column":0},"generated":{"line":9664,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9663,"column":0},"generated":{"line":9665,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9664,"column":0},"generated":{"line":9666,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9665,"column":0},"generated":{"line":9667,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9666,"column":0},"generated":{"line":9668,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9667,"column":0},"generated":{"line":9669,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9668,"column":0},"generated":{"line":9670,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9669,"column":0},"generated":{"line":9671,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9670,"column":0},"generated":{"line":9672,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9671,"column":0},"generated":{"line":9673,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9672,"column":0},"generated":{"line":9674,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9673,"column":0},"generated":{"line":9675,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9674,"column":0},"generated":{"line":9676,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9675,"column":0},"generated":{"line":9677,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9676,"column":0},"generated":{"line":9678,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9677,"column":0},"generated":{"line":9679,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9678,"column":0},"generated":{"line":9680,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9679,"column":0},"generated":{"line":9681,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9680,"column":0},"generated":{"line":9682,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9681,"column":0},"generated":{"line":9683,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9682,"column":0},"generated":{"line":9684,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9683,"column":0},"generated":{"line":9685,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9684,"column":0},"generated":{"line":9686,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9685,"column":0},"generated":{"line":9687,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9686,"column":0},"generated":{"line":9688,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9687,"column":0},"generated":{"line":9689,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9688,"column":0},"generated":{"line":9690,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9689,"column":0},"generated":{"line":9691,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9690,"column":0},"generated":{"line":9692,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9691,"column":0},"generated":{"line":9693,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9692,"column":0},"generated":{"line":9694,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9693,"column":0},"generated":{"line":9695,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9694,"column":0},"generated":{"line":9696,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9695,"column":0},"generated":{"line":9697,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9696,"column":0},"generated":{"line":9698,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9697,"column":0},"generated":{"line":9699,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9698,"column":0},"generated":{"line":9700,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9699,"column":0},"generated":{"line":9701,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9700,"column":0},"generated":{"line":9702,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9701,"column":0},"generated":{"line":9703,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9702,"column":0},"generated":{"line":9704,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9703,"column":0},"generated":{"line":9705,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9704,"column":0},"generated":{"line":9706,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9705,"column":0},"generated":{"line":9707,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9706,"column":0},"generated":{"line":9708,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9707,"column":0},"generated":{"line":9709,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9708,"column":0},"generated":{"line":9710,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9709,"column":0},"generated":{"line":9711,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9710,"column":0},"generated":{"line":9712,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9711,"column":0},"generated":{"line":9713,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9712,"column":0},"generated":{"line":9714,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9713,"column":0},"generated":{"line":9715,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9714,"column":0},"generated":{"line":9716,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9715,"column":0},"generated":{"line":9717,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9716,"column":0},"generated":{"line":9718,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9717,"column":0},"generated":{"line":9719,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9718,"column":0},"generated":{"line":9720,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9719,"column":0},"generated":{"line":9721,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9720,"column":0},"generated":{"line":9722,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9721,"column":0},"generated":{"line":9723,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9722,"column":0},"generated":{"line":9724,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9723,"column":0},"generated":{"line":9725,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9724,"column":0},"generated":{"line":9726,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9725,"column":0},"generated":{"line":9727,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9726,"column":0},"generated":{"line":9728,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9727,"column":0},"generated":{"line":9729,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9728,"column":0},"generated":{"line":9730,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9729,"column":0},"generated":{"line":9731,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9730,"column":0},"generated":{"line":9732,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9731,"column":0},"generated":{"line":9733,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9732,"column":0},"generated":{"line":9734,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9733,"column":0},"generated":{"line":9735,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9734,"column":0},"generated":{"line":9736,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9735,"column":0},"generated":{"line":9737,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9736,"column":0},"generated":{"line":9738,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9737,"column":0},"generated":{"line":9739,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9738,"column":0},"generated":{"line":9740,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9739,"column":0},"generated":{"line":9741,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9740,"column":0},"generated":{"line":9742,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9741,"column":0},"generated":{"line":9743,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9742,"column":0},"generated":{"line":9744,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9743,"column":0},"generated":{"line":9745,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9744,"column":0},"generated":{"line":9746,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9745,"column":0},"generated":{"line":9747,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9746,"column":0},"generated":{"line":9748,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9747,"column":0},"generated":{"line":9749,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9748,"column":0},"generated":{"line":9750,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9749,"column":0},"generated":{"line":9751,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9750,"column":0},"generated":{"line":9752,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9751,"column":0},"generated":{"line":9753,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9752,"column":0},"generated":{"line":9754,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9753,"column":0},"generated":{"line":9755,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9754,"column":0},"generated":{"line":9756,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9755,"column":0},"generated":{"line":9757,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9756,"column":0},"generated":{"line":9758,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9757,"column":0},"generated":{"line":9759,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9758,"column":0},"generated":{"line":9760,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9759,"column":0},"generated":{"line":9761,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9760,"column":0},"generated":{"line":9762,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9761,"column":0},"generated":{"line":9763,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9762,"column":0},"generated":{"line":9764,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9763,"column":0},"generated":{"line":9765,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9764,"column":0},"generated":{"line":9766,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9765,"column":0},"generated":{"line":9767,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9766,"column":0},"generated":{"line":9768,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9767,"column":0},"generated":{"line":9769,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9768,"column":0},"generated":{"line":9770,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9769,"column":0},"generated":{"line":9771,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9770,"column":0},"generated":{"line":9772,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9771,"column":0},"generated":{"line":9773,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9772,"column":0},"generated":{"line":9774,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9773,"column":0},"generated":{"line":9775,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9774,"column":0},"generated":{"line":9776,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9775,"column":0},"generated":{"line":9777,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9776,"column":0},"generated":{"line":9778,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9777,"column":0},"generated":{"line":9779,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9778,"column":0},"generated":{"line":9780,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9779,"column":0},"generated":{"line":9781,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9780,"column":0},"generated":{"line":9782,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9781,"column":0},"generated":{"line":9783,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9782,"column":0},"generated":{"line":9784,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9783,"column":0},"generated":{"line":9785,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9784,"column":0},"generated":{"line":9786,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9785,"column":0},"generated":{"line":9787,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9786,"column":0},"generated":{"line":9788,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9787,"column":0},"generated":{"line":9789,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9788,"column":0},"generated":{"line":9790,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9789,"column":0},"generated":{"line":9791,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9790,"column":0},"generated":{"line":9792,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9791,"column":0},"generated":{"line":9793,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9792,"column":0},"generated":{"line":9794,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9793,"column":0},"generated":{"line":9795,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9794,"column":0},"generated":{"line":9796,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9795,"column":0},"generated":{"line":9797,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9796,"column":0},"generated":{"line":9798,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9797,"column":0},"generated":{"line":9799,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9798,"column":0},"generated":{"line":9800,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9799,"column":0},"generated":{"line":9801,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9800,"column":0},"generated":{"line":9802,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9801,"column":0},"generated":{"line":9803,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9802,"column":0},"generated":{"line":9804,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9803,"column":0},"generated":{"line":9805,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9804,"column":0},"generated":{"line":9806,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9805,"column":0},"generated":{"line":9807,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9806,"column":0},"generated":{"line":9808,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9807,"column":0},"generated":{"line":9809,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9808,"column":0},"generated":{"line":9810,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9809,"column":0},"generated":{"line":9811,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9810,"column":0},"generated":{"line":9812,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9811,"column":0},"generated":{"line":9813,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9812,"column":0},"generated":{"line":9814,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9813,"column":0},"generated":{"line":9815,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9814,"column":0},"generated":{"line":9816,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9815,"column":0},"generated":{"line":9817,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9816,"column":0},"generated":{"line":9818,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9817,"column":0},"generated":{"line":9819,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9818,"column":0},"generated":{"line":9820,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9819,"column":0},"generated":{"line":9821,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9820,"column":0},"generated":{"line":9822,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9821,"column":0},"generated":{"line":9823,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9822,"column":0},"generated":{"line":9824,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9823,"column":0},"generated":{"line":9825,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9824,"column":0},"generated":{"line":9826,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9825,"column":0},"generated":{"line":9827,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9826,"column":0},"generated":{"line":9828,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9827,"column":0},"generated":{"line":9829,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9828,"column":0},"generated":{"line":9830,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9829,"column":0},"generated":{"line":9831,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9830,"column":0},"generated":{"line":9832,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9831,"column":0},"generated":{"line":9833,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9832,"column":0},"generated":{"line":9834,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9833,"column":0},"generated":{"line":9835,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9834,"column":0},"generated":{"line":9836,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9835,"column":0},"generated":{"line":9837,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9836,"column":0},"generated":{"line":9838,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9837,"column":0},"generated":{"line":9839,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9838,"column":0},"generated":{"line":9840,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9839,"column":0},"generated":{"line":9841,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9840,"column":0},"generated":{"line":9842,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9841,"column":0},"generated":{"line":9843,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9842,"column":0},"generated":{"line":9844,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9843,"column":0},"generated":{"line":9845,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9844,"column":0},"generated":{"line":9846,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9845,"column":0},"generated":{"line":9847,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9846,"column":0},"generated":{"line":9848,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9847,"column":0},"generated":{"line":9849,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9848,"column":0},"generated":{"line":9850,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9849,"column":0},"generated":{"line":9851,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9850,"column":0},"generated":{"line":9852,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9851,"column":0},"generated":{"line":9853,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9852,"column":0},"generated":{"line":9854,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9853,"column":0},"generated":{"line":9855,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9854,"column":0},"generated":{"line":9856,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9855,"column":0},"generated":{"line":9857,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9856,"column":0},"generated":{"line":9858,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9857,"column":0},"generated":{"line":9859,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9858,"column":0},"generated":{"line":9860,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9859,"column":0},"generated":{"line":9861,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9860,"column":0},"generated":{"line":9862,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9861,"column":0},"generated":{"line":9863,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9862,"column":0},"generated":{"line":9864,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9863,"column":0},"generated":{"line":9865,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9864,"column":0},"generated":{"line":9866,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9865,"column":0},"generated":{"line":9867,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9866,"column":0},"generated":{"line":9868,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9867,"column":0},"generated":{"line":9869,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9868,"column":0},"generated":{"line":9870,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9869,"column":0},"generated":{"line":9871,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9870,"column":0},"generated":{"line":9872,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9871,"column":0},"generated":{"line":9873,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9872,"column":0},"generated":{"line":9874,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9873,"column":0},"generated":{"line":9875,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9874,"column":0},"generated":{"line":9876,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9875,"column":0},"generated":{"line":9877,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9876,"column":0},"generated":{"line":9878,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9877,"column":0},"generated":{"line":9879,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9878,"column":0},"generated":{"line":9880,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9879,"column":0},"generated":{"line":9881,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9880,"column":0},"generated":{"line":9882,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9881,"column":0},"generated":{"line":9883,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9882,"column":0},"generated":{"line":9884,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9883,"column":0},"generated":{"line":9885,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9884,"column":0},"generated":{"line":9886,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9885,"column":0},"generated":{"line":9887,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9886,"column":0},"generated":{"line":9888,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9887,"column":0},"generated":{"line":9889,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9888,"column":0},"generated":{"line":9890,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9889,"column":0},"generated":{"line":9891,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9890,"column":0},"generated":{"line":9892,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9891,"column":0},"generated":{"line":9893,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9892,"column":0},"generated":{"line":9894,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9893,"column":0},"generated":{"line":9895,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9894,"column":0},"generated":{"line":9896,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9895,"column":0},"generated":{"line":9897,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9896,"column":0},"generated":{"line":9898,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9897,"column":0},"generated":{"line":9899,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9898,"column":0},"generated":{"line":9900,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9899,"column":0},"generated":{"line":9901,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9900,"column":0},"generated":{"line":9902,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9901,"column":0},"generated":{"line":9903,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9902,"column":0},"generated":{"line":9904,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9903,"column":0},"generated":{"line":9905,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9904,"column":0},"generated":{"line":9906,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9905,"column":0},"generated":{"line":9907,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9906,"column":0},"generated":{"line":9908,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9907,"column":0},"generated":{"line":9909,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9908,"column":0},"generated":{"line":9910,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9909,"column":0},"generated":{"line":9911,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9910,"column":0},"generated":{"line":9912,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9911,"column":0},"generated":{"line":9913,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9912,"column":0},"generated":{"line":9914,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9913,"column":0},"generated":{"line":9915,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9914,"column":0},"generated":{"line":9916,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9915,"column":0},"generated":{"line":9917,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9916,"column":0},"generated":{"line":9918,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9917,"column":0},"generated":{"line":9919,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9918,"column":0},"generated":{"line":9920,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9919,"column":0},"generated":{"line":9921,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9920,"column":0},"generated":{"line":9922,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9921,"column":0},"generated":{"line":9923,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9922,"column":0},"generated":{"line":9924,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9923,"column":0},"generated":{"line":9925,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9924,"column":0},"generated":{"line":9926,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9925,"column":0},"generated":{"line":9927,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9926,"column":0},"generated":{"line":9928,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9927,"column":0},"generated":{"line":9929,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9928,"column":0},"generated":{"line":9930,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9929,"column":0},"generated":{"line":9931,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9930,"column":0},"generated":{"line":9932,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9931,"column":0},"generated":{"line":9933,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9932,"column":0},"generated":{"line":9934,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9933,"column":0},"generated":{"line":9935,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9934,"column":0},"generated":{"line":9936,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9935,"column":0},"generated":{"line":9937,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9936,"column":0},"generated":{"line":9938,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9937,"column":0},"generated":{"line":9939,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9938,"column":0},"generated":{"line":9940,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9939,"column":0},"generated":{"line":9941,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9940,"column":0},"generated":{"line":9942,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9941,"column":0},"generated":{"line":9943,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9942,"column":0},"generated":{"line":9944,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9943,"column":0},"generated":{"line":9945,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9944,"column":0},"generated":{"line":9946,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9945,"column":0},"generated":{"line":9947,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9946,"column":0},"generated":{"line":9948,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9947,"column":0},"generated":{"line":9949,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9948,"column":0},"generated":{"line":9950,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9949,"column":0},"generated":{"line":9951,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9950,"column":0},"generated":{"line":9952,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9951,"column":0},"generated":{"line":9953,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9952,"column":0},"generated":{"line":9954,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9953,"column":0},"generated":{"line":9955,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9954,"column":0},"generated":{"line":9956,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9955,"column":0},"generated":{"line":9957,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9956,"column":0},"generated":{"line":9958,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9957,"column":0},"generated":{"line":9959,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9958,"column":0},"generated":{"line":9960,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9959,"column":0},"generated":{"line":9961,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9960,"column":0},"generated":{"line":9962,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9961,"column":0},"generated":{"line":9963,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9962,"column":0},"generated":{"line":9964,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9963,"column":0},"generated":{"line":9965,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9964,"column":0},"generated":{"line":9966,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9965,"column":0},"generated":{"line":9967,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9966,"column":0},"generated":{"line":9968,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9967,"column":0},"generated":{"line":9969,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9968,"column":0},"generated":{"line":9970,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9969,"column":0},"generated":{"line":9971,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9970,"column":0},"generated":{"line":9972,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9971,"column":0},"generated":{"line":9973,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9972,"column":0},"generated":{"line":9974,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9973,"column":0},"generated":{"line":9975,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9974,"column":0},"generated":{"line":9976,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9975,"column":0},"generated":{"line":9977,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9976,"column":0},"generated":{"line":9978,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9977,"column":0},"generated":{"line":9979,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9978,"column":0},"generated":{"line":9980,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9979,"column":0},"generated":{"line":9981,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9980,"column":0},"generated":{"line":9982,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9981,"column":0},"generated":{"line":9983,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9982,"column":0},"generated":{"line":9984,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9983,"column":0},"generated":{"line":9985,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9984,"column":0},"generated":{"line":9986,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9985,"column":0},"generated":{"line":9987,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9986,"column":0},"generated":{"line":9988,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9987,"column":0},"generated":{"line":9989,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9988,"column":0},"generated":{"line":9990,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9989,"column":0},"generated":{"line":9991,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9990,"column":0},"generated":{"line":9992,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9991,"column":0},"generated":{"line":9993,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9992,"column":0},"generated":{"line":9994,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9993,"column":0},"generated":{"line":9995,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9994,"column":0},"generated":{"line":9996,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9995,"column":0},"generated":{"line":9997,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9996,"column":0},"generated":{"line":9998,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9997,"column":0},"generated":{"line":9999,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9998,"column":0},"generated":{"line":10000,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":9999,"column":0},"generated":{"line":10001,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10000,"column":0},"generated":{"line":10002,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10001,"column":0},"generated":{"line":10003,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10002,"column":0},"generated":{"line":10004,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10003,"column":0},"generated":{"line":10005,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10004,"column":0},"generated":{"line":10006,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10005,"column":0},"generated":{"line":10007,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10006,"column":0},"generated":{"line":10008,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10007,"column":0},"generated":{"line":10009,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10008,"column":0},"generated":{"line":10010,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10009,"column":0},"generated":{"line":10011,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10010,"column":0},"generated":{"line":10012,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10011,"column":0},"generated":{"line":10013,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10012,"column":0},"generated":{"line":10014,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10013,"column":0},"generated":{"line":10015,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10014,"column":0},"generated":{"line":10016,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10015,"column":0},"generated":{"line":10017,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10016,"column":0},"generated":{"line":10018,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10017,"column":0},"generated":{"line":10019,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10018,"column":0},"generated":{"line":10020,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10019,"column":0},"generated":{"line":10021,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10020,"column":0},"generated":{"line":10022,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10021,"column":0},"generated":{"line":10023,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10022,"column":0},"generated":{"line":10024,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10023,"column":0},"generated":{"line":10025,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10024,"column":0},"generated":{"line":10026,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10025,"column":0},"generated":{"line":10027,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10026,"column":0},"generated":{"line":10028,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10027,"column":0},"generated":{"line":10029,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10028,"column":0},"generated":{"line":10030,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10029,"column":0},"generated":{"line":10031,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10030,"column":0},"generated":{"line":10032,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10031,"column":0},"generated":{"line":10033,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10032,"column":0},"generated":{"line":10034,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10033,"column":0},"generated":{"line":10035,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10034,"column":0},"generated":{"line":10036,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10035,"column":0},"generated":{"line":10037,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10036,"column":0},"generated":{"line":10038,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10037,"column":0},"generated":{"line":10039,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10038,"column":0},"generated":{"line":10040,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10039,"column":0},"generated":{"line":10041,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10040,"column":0},"generated":{"line":10042,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10041,"column":0},"generated":{"line":10043,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10042,"column":0},"generated":{"line":10044,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10043,"column":0},"generated":{"line":10045,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10044,"column":0},"generated":{"line":10046,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10045,"column":0},"generated":{"line":10047,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10046,"column":0},"generated":{"line":10048,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10047,"column":0},"generated":{"line":10049,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10048,"column":0},"generated":{"line":10050,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10049,"column":0},"generated":{"line":10051,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10050,"column":0},"generated":{"line":10052,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10051,"column":0},"generated":{"line":10053,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10052,"column":0},"generated":{"line":10054,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10053,"column":0},"generated":{"line":10055,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10054,"column":0},"generated":{"line":10056,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10055,"column":0},"generated":{"line":10057,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10056,"column":0},"generated":{"line":10058,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10057,"column":0},"generated":{"line":10059,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10058,"column":0},"generated":{"line":10060,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10059,"column":0},"generated":{"line":10061,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10060,"column":0},"generated":{"line":10062,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10061,"column":0},"generated":{"line":10063,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10062,"column":0},"generated":{"line":10064,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10063,"column":0},"generated":{"line":10065,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10064,"column":0},"generated":{"line":10066,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10065,"column":0},"generated":{"line":10067,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10066,"column":0},"generated":{"line":10068,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10067,"column":0},"generated":{"line":10069,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10068,"column":0},"generated":{"line":10070,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10069,"column":0},"generated":{"line":10071,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10070,"column":0},"generated":{"line":10072,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10071,"column":0},"generated":{"line":10073,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10072,"column":0},"generated":{"line":10074,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10073,"column":0},"generated":{"line":10075,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10074,"column":0},"generated":{"line":10076,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10075,"column":0},"generated":{"line":10077,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10076,"column":0},"generated":{"line":10078,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10077,"column":0},"generated":{"line":10079,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10078,"column":0},"generated":{"line":10080,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10079,"column":0},"generated":{"line":10081,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10080,"column":0},"generated":{"line":10082,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10081,"column":0},"generated":{"line":10083,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10082,"column":0},"generated":{"line":10084,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10083,"column":0},"generated":{"line":10085,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10084,"column":0},"generated":{"line":10086,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10085,"column":0},"generated":{"line":10087,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10086,"column":0},"generated":{"line":10088,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10087,"column":0},"generated":{"line":10089,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10088,"column":0},"generated":{"line":10090,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10089,"column":0},"generated":{"line":10091,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10090,"column":0},"generated":{"line":10092,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10091,"column":0},"generated":{"line":10093,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10092,"column":0},"generated":{"line":10094,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10093,"column":0},"generated":{"line":10095,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10094,"column":0},"generated":{"line":10096,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10095,"column":0},"generated":{"line":10097,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10096,"column":0},"generated":{"line":10098,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10097,"column":0},"generated":{"line":10099,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10098,"column":0},"generated":{"line":10100,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10099,"column":0},"generated":{"line":10101,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10100,"column":0},"generated":{"line":10102,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10101,"column":0},"generated":{"line":10103,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10102,"column":0},"generated":{"line":10104,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10103,"column":0},"generated":{"line":10105,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10104,"column":0},"generated":{"line":10106,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10105,"column":0},"generated":{"line":10107,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10106,"column":0},"generated":{"line":10108,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10107,"column":0},"generated":{"line":10109,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10108,"column":0},"generated":{"line":10110,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10109,"column":0},"generated":{"line":10111,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10110,"column":0},"generated":{"line":10112,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10111,"column":0},"generated":{"line":10113,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10112,"column":0},"generated":{"line":10114,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10113,"column":0},"generated":{"line":10115,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10114,"column":0},"generated":{"line":10116,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10115,"column":0},"generated":{"line":10117,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10116,"column":0},"generated":{"line":10118,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10117,"column":0},"generated":{"line":10119,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10118,"column":0},"generated":{"line":10120,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10119,"column":0},"generated":{"line":10121,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10120,"column":0},"generated":{"line":10122,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10121,"column":0},"generated":{"line":10123,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10122,"column":0},"generated":{"line":10124,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10123,"column":0},"generated":{"line":10125,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10124,"column":0},"generated":{"line":10126,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10125,"column":0},"generated":{"line":10127,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10126,"column":0},"generated":{"line":10128,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10127,"column":0},"generated":{"line":10129,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10128,"column":0},"generated":{"line":10130,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10129,"column":0},"generated":{"line":10131,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10130,"column":0},"generated":{"line":10132,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10131,"column":0},"generated":{"line":10133,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10132,"column":0},"generated":{"line":10134,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10133,"column":0},"generated":{"line":10135,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10134,"column":0},"generated":{"line":10136,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10135,"column":0},"generated":{"line":10137,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10136,"column":0},"generated":{"line":10138,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10137,"column":0},"generated":{"line":10139,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10138,"column":0},"generated":{"line":10140,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10139,"column":0},"generated":{"line":10141,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10140,"column":0},"generated":{"line":10142,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10141,"column":0},"generated":{"line":10143,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10142,"column":0},"generated":{"line":10144,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10143,"column":0},"generated":{"line":10145,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10144,"column":0},"generated":{"line":10146,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10145,"column":0},"generated":{"line":10147,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10146,"column":0},"generated":{"line":10148,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10147,"column":0},"generated":{"line":10149,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10148,"column":0},"generated":{"line":10150,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10149,"column":0},"generated":{"line":10151,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10150,"column":0},"generated":{"line":10152,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10151,"column":0},"generated":{"line":10153,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10152,"column":0},"generated":{"line":10154,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10153,"column":0},"generated":{"line":10155,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10154,"column":0},"generated":{"line":10156,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10155,"column":0},"generated":{"line":10157,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10156,"column":0},"generated":{"line":10158,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10157,"column":0},"generated":{"line":10159,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10158,"column":0},"generated":{"line":10160,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10159,"column":0},"generated":{"line":10161,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10160,"column":0},"generated":{"line":10162,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10161,"column":0},"generated":{"line":10163,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10162,"column":0},"generated":{"line":10164,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10163,"column":0},"generated":{"line":10165,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10164,"column":0},"generated":{"line":10166,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10165,"column":0},"generated":{"line":10167,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10166,"column":0},"generated":{"line":10168,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10167,"column":0},"generated":{"line":10169,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10168,"column":0},"generated":{"line":10170,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10169,"column":0},"generated":{"line":10171,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10170,"column":0},"generated":{"line":10172,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10171,"column":0},"generated":{"line":10173,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10172,"column":0},"generated":{"line":10174,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10173,"column":0},"generated":{"line":10175,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10174,"column":0},"generated":{"line":10176,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10175,"column":0},"generated":{"line":10177,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10176,"column":0},"generated":{"line":10178,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10177,"column":0},"generated":{"line":10179,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10178,"column":0},"generated":{"line":10180,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10179,"column":0},"generated":{"line":10181,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10180,"column":0},"generated":{"line":10182,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10181,"column":0},"generated":{"line":10183,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10182,"column":0},"generated":{"line":10184,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10183,"column":0},"generated":{"line":10185,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10184,"column":0},"generated":{"line":10186,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10185,"column":0},"generated":{"line":10187,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10186,"column":0},"generated":{"line":10188,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10187,"column":0},"generated":{"line":10189,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10188,"column":0},"generated":{"line":10190,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10189,"column":0},"generated":{"line":10191,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10190,"column":0},"generated":{"line":10192,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10191,"column":0},"generated":{"line":10193,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10192,"column":0},"generated":{"line":10194,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10193,"column":0},"generated":{"line":10195,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10194,"column":0},"generated":{"line":10196,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10195,"column":0},"generated":{"line":10197,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10196,"column":0},"generated":{"line":10198,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10197,"column":0},"generated":{"line":10199,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10198,"column":0},"generated":{"line":10200,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10199,"column":0},"generated":{"line":10201,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10200,"column":0},"generated":{"line":10202,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10201,"column":0},"generated":{"line":10203,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10202,"column":0},"generated":{"line":10204,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10203,"column":0},"generated":{"line":10205,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10204,"column":0},"generated":{"line":10206,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10205,"column":0},"generated":{"line":10207,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10206,"column":0},"generated":{"line":10208,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10207,"column":0},"generated":{"line":10209,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10208,"column":0},"generated":{"line":10210,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10209,"column":0},"generated":{"line":10211,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10210,"column":0},"generated":{"line":10212,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10211,"column":0},"generated":{"line":10213,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10212,"column":0},"generated":{"line":10214,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10213,"column":0},"generated":{"line":10215,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10214,"column":0},"generated":{"line":10216,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10215,"column":0},"generated":{"line":10217,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10216,"column":0},"generated":{"line":10218,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10217,"column":0},"generated":{"line":10219,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10218,"column":0},"generated":{"line":10220,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10219,"column":0},"generated":{"line":10221,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10220,"column":0},"generated":{"line":10222,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10221,"column":0},"generated":{"line":10223,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10222,"column":0},"generated":{"line":10224,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10223,"column":0},"generated":{"line":10225,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10224,"column":0},"generated":{"line":10226,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10225,"column":0},"generated":{"line":10227,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10226,"column":0},"generated":{"line":10228,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10227,"column":0},"generated":{"line":10229,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10228,"column":0},"generated":{"line":10230,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10229,"column":0},"generated":{"line":10231,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10230,"column":0},"generated":{"line":10232,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10231,"column":0},"generated":{"line":10233,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10232,"column":0},"generated":{"line":10234,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10233,"column":0},"generated":{"line":10235,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10234,"column":0},"generated":{"line":10236,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10235,"column":0},"generated":{"line":10237,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10236,"column":0},"generated":{"line":10238,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10237,"column":0},"generated":{"line":10239,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10238,"column":0},"generated":{"line":10240,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10239,"column":0},"generated":{"line":10241,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10240,"column":0},"generated":{"line":10242,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10241,"column":0},"generated":{"line":10243,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10242,"column":0},"generated":{"line":10244,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10243,"column":0},"generated":{"line":10245,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10244,"column":0},"generated":{"line":10246,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10245,"column":0},"generated":{"line":10247,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10246,"column":0},"generated":{"line":10248,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10247,"column":0},"generated":{"line":10249,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10248,"column":0},"generated":{"line":10250,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10249,"column":0},"generated":{"line":10251,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10250,"column":0},"generated":{"line":10252,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10251,"column":0},"generated":{"line":10253,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10252,"column":0},"generated":{"line":10254,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10253,"column":0},"generated":{"line":10255,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10254,"column":0},"generated":{"line":10256,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10255,"column":0},"generated":{"line":10257,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10256,"column":0},"generated":{"line":10258,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10257,"column":0},"generated":{"line":10259,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10258,"column":0},"generated":{"line":10260,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10259,"column":0},"generated":{"line":10261,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10260,"column":0},"generated":{"line":10262,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10261,"column":0},"generated":{"line":10263,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10262,"column":0},"generated":{"line":10264,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10263,"column":0},"generated":{"line":10265,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10264,"column":0},"generated":{"line":10266,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10265,"column":0},"generated":{"line":10267,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10266,"column":0},"generated":{"line":10268,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10267,"column":0},"generated":{"line":10269,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10268,"column":0},"generated":{"line":10270,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10269,"column":0},"generated":{"line":10271,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10270,"column":0},"generated":{"line":10272,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10271,"column":0},"generated":{"line":10273,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10272,"column":0},"generated":{"line":10274,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10273,"column":0},"generated":{"line":10275,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10274,"column":0},"generated":{"line":10276,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10275,"column":0},"generated":{"line":10277,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10276,"column":0},"generated":{"line":10278,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10277,"column":0},"generated":{"line":10279,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10278,"column":0},"generated":{"line":10280,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10279,"column":0},"generated":{"line":10281,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10280,"column":0},"generated":{"line":10282,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10281,"column":0},"generated":{"line":10283,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10282,"column":0},"generated":{"line":10284,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10283,"column":0},"generated":{"line":10285,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10284,"column":0},"generated":{"line":10286,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10285,"column":0},"generated":{"line":10287,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10286,"column":0},"generated":{"line":10288,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10287,"column":0},"generated":{"line":10289,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10288,"column":0},"generated":{"line":10290,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10289,"column":0},"generated":{"line":10291,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10290,"column":0},"generated":{"line":10292,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10291,"column":0},"generated":{"line":10293,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10292,"column":0},"generated":{"line":10294,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10293,"column":0},"generated":{"line":10295,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10294,"column":0},"generated":{"line":10296,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10295,"column":0},"generated":{"line":10297,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10296,"column":0},"generated":{"line":10298,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10297,"column":0},"generated":{"line":10299,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10298,"column":0},"generated":{"line":10300,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10299,"column":0},"generated":{"line":10301,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10300,"column":0},"generated":{"line":10302,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10301,"column":0},"generated":{"line":10303,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10302,"column":0},"generated":{"line":10304,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10303,"column":0},"generated":{"line":10305,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10304,"column":0},"generated":{"line":10306,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10305,"column":0},"generated":{"line":10307,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10306,"column":0},"generated":{"line":10308,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10307,"column":0},"generated":{"line":10309,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10308,"column":0},"generated":{"line":10310,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10309,"column":0},"generated":{"line":10311,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10310,"column":0},"generated":{"line":10312,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10311,"column":0},"generated":{"line":10313,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10312,"column":0},"generated":{"line":10314,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10313,"column":0},"generated":{"line":10315,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10314,"column":0},"generated":{"line":10316,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10315,"column":0},"generated":{"line":10317,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10316,"column":0},"generated":{"line":10318,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10317,"column":0},"generated":{"line":10319,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10318,"column":0},"generated":{"line":10320,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10319,"column":0},"generated":{"line":10321,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10320,"column":0},"generated":{"line":10322,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10321,"column":0},"generated":{"line":10323,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10322,"column":0},"generated":{"line":10324,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10323,"column":0},"generated":{"line":10325,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10324,"column":0},"generated":{"line":10326,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10325,"column":0},"generated":{"line":10327,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10326,"column":0},"generated":{"line":10328,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10327,"column":0},"generated":{"line":10329,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10328,"column":0},"generated":{"line":10330,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10329,"column":0},"generated":{"line":10331,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10330,"column":0},"generated":{"line":10332,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10331,"column":0},"generated":{"line":10333,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10332,"column":0},"generated":{"line":10334,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10333,"column":0},"generated":{"line":10335,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10334,"column":0},"generated":{"line":10336,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10335,"column":0},"generated":{"line":10337,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10336,"column":0},"generated":{"line":10338,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10337,"column":0},"generated":{"line":10339,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10338,"column":0},"generated":{"line":10340,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10339,"column":0},"generated":{"line":10341,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10340,"column":0},"generated":{"line":10342,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10341,"column":0},"generated":{"line":10343,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10342,"column":0},"generated":{"line":10344,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10343,"column":0},"generated":{"line":10345,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10344,"column":0},"generated":{"line":10346,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10345,"column":0},"generated":{"line":10347,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10346,"column":0},"generated":{"line":10348,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10347,"column":0},"generated":{"line":10349,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10348,"column":0},"generated":{"line":10350,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10349,"column":0},"generated":{"line":10351,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10350,"column":0},"generated":{"line":10352,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10351,"column":0},"generated":{"line":10353,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10352,"column":0},"generated":{"line":10354,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10353,"column":0},"generated":{"line":10355,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10354,"column":0},"generated":{"line":10356,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10355,"column":0},"generated":{"line":10357,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10356,"column":0},"generated":{"line":10358,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10357,"column":0},"generated":{"line":10359,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10358,"column":0},"generated":{"line":10360,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10359,"column":0},"generated":{"line":10361,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10360,"column":0},"generated":{"line":10362,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10361,"column":0},"generated":{"line":10363,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10362,"column":0},"generated":{"line":10364,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10363,"column":0},"generated":{"line":10365,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10364,"column":0},"generated":{"line":10366,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10365,"column":0},"generated":{"line":10367,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10366,"column":0},"generated":{"line":10368,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10367,"column":0},"generated":{"line":10369,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10368,"column":0},"generated":{"line":10370,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10369,"column":0},"generated":{"line":10371,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10370,"column":0},"generated":{"line":10372,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10371,"column":0},"generated":{"line":10373,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10372,"column":0},"generated":{"line":10374,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10373,"column":0},"generated":{"line":10375,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10374,"column":0},"generated":{"line":10376,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10375,"column":0},"generated":{"line":10377,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10376,"column":0},"generated":{"line":10378,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10377,"column":0},"generated":{"line":10379,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10378,"column":0},"generated":{"line":10380,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10379,"column":0},"generated":{"line":10381,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10380,"column":0},"generated":{"line":10382,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10381,"column":0},"generated":{"line":10383,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10382,"column":0},"generated":{"line":10384,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10383,"column":0},"generated":{"line":10385,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10384,"column":0},"generated":{"line":10386,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10385,"column":0},"generated":{"line":10387,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10386,"column":0},"generated":{"line":10388,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10387,"column":0},"generated":{"line":10389,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10388,"column":0},"generated":{"line":10390,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10389,"column":0},"generated":{"line":10391,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10390,"column":0},"generated":{"line":10392,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10391,"column":0},"generated":{"line":10393,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10392,"column":0},"generated":{"line":10394,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10393,"column":0},"generated":{"line":10395,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10394,"column":0},"generated":{"line":10396,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10395,"column":0},"generated":{"line":10397,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10396,"column":0},"generated":{"line":10398,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10397,"column":0},"generated":{"line":10399,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10398,"column":0},"generated":{"line":10400,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10399,"column":0},"generated":{"line":10401,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10400,"column":0},"generated":{"line":10402,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10401,"column":0},"generated":{"line":10403,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10402,"column":0},"generated":{"line":10404,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10403,"column":0},"generated":{"line":10405,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10404,"column":0},"generated":{"line":10406,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10405,"column":0},"generated":{"line":10407,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10406,"column":0},"generated":{"line":10408,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10407,"column":0},"generated":{"line":10409,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10408,"column":0},"generated":{"line":10410,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10409,"column":0},"generated":{"line":10411,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10410,"column":0},"generated":{"line":10412,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10411,"column":0},"generated":{"line":10413,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10412,"column":0},"generated":{"line":10414,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10413,"column":0},"generated":{"line":10415,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10414,"column":0},"generated":{"line":10416,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10415,"column":0},"generated":{"line":10417,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10416,"column":0},"generated":{"line":10418,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10417,"column":0},"generated":{"line":10419,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10418,"column":0},"generated":{"line":10420,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10419,"column":0},"generated":{"line":10421,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10420,"column":0},"generated":{"line":10422,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10421,"column":0},"generated":{"line":10423,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10422,"column":0},"generated":{"line":10424,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10423,"column":0},"generated":{"line":10425,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10424,"column":0},"generated":{"line":10426,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10425,"column":0},"generated":{"line":10427,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10426,"column":0},"generated":{"line":10428,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10427,"column":0},"generated":{"line":10429,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10428,"column":0},"generated":{"line":10430,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10429,"column":0},"generated":{"line":10431,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10430,"column":0},"generated":{"line":10432,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10431,"column":0},"generated":{"line":10433,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10432,"column":0},"generated":{"line":10434,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10433,"column":0},"generated":{"line":10435,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10434,"column":0},"generated":{"line":10436,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10435,"column":0},"generated":{"line":10437,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10436,"column":0},"generated":{"line":10438,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10437,"column":0},"generated":{"line":10439,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10438,"column":0},"generated":{"line":10440,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10439,"column":0},"generated":{"line":10441,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10440,"column":0},"generated":{"line":10442,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10441,"column":0},"generated":{"line":10443,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10442,"column":0},"generated":{"line":10444,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10443,"column":0},"generated":{"line":10445,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10444,"column":0},"generated":{"line":10446,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10445,"column":0},"generated":{"line":10447,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10446,"column":0},"generated":{"line":10448,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10447,"column":0},"generated":{"line":10449,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10448,"column":0},"generated":{"line":10450,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10449,"column":0},"generated":{"line":10451,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10450,"column":0},"generated":{"line":10452,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10451,"column":0},"generated":{"line":10453,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10452,"column":0},"generated":{"line":10454,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10453,"column":0},"generated":{"line":10455,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10454,"column":0},"generated":{"line":10456,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10455,"column":0},"generated":{"line":10457,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10456,"column":0},"generated":{"line":10458,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10457,"column":0},"generated":{"line":10459,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10458,"column":0},"generated":{"line":10460,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10459,"column":0},"generated":{"line":10461,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10460,"column":0},"generated":{"line":10462,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10461,"column":0},"generated":{"line":10463,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10462,"column":0},"generated":{"line":10464,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10463,"column":0},"generated":{"line":10465,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10464,"column":0},"generated":{"line":10466,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10465,"column":0},"generated":{"line":10467,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10466,"column":0},"generated":{"line":10468,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10467,"column":0},"generated":{"line":10469,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10468,"column":0},"generated":{"line":10470,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10469,"column":0},"generated":{"line":10471,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10470,"column":0},"generated":{"line":10472,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10471,"column":0},"generated":{"line":10473,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10472,"column":0},"generated":{"line":10474,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10473,"column":0},"generated":{"line":10475,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10474,"column":0},"generated":{"line":10476,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10475,"column":0},"generated":{"line":10477,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10476,"column":0},"generated":{"line":10478,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10477,"column":0},"generated":{"line":10479,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10478,"column":0},"generated":{"line":10480,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10479,"column":0},"generated":{"line":10481,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10480,"column":0},"generated":{"line":10482,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10481,"column":0},"generated":{"line":10483,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10482,"column":0},"generated":{"line":10484,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10483,"column":0},"generated":{"line":10485,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10484,"column":0},"generated":{"line":10486,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10485,"column":0},"generated":{"line":10487,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10486,"column":0},"generated":{"line":10488,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10487,"column":0},"generated":{"line":10489,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10488,"column":0},"generated":{"line":10490,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10489,"column":0},"generated":{"line":10491,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10490,"column":0},"generated":{"line":10492,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10491,"column":0},"generated":{"line":10493,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10492,"column":0},"generated":{"line":10494,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10493,"column":0},"generated":{"line":10495,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10494,"column":0},"generated":{"line":10496,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10495,"column":0},"generated":{"line":10497,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10496,"column":0},"generated":{"line":10498,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10497,"column":0},"generated":{"line":10499,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10498,"column":0},"generated":{"line":10500,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10499,"column":0},"generated":{"line":10501,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10500,"column":0},"generated":{"line":10502,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10501,"column":0},"generated":{"line":10503,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10502,"column":0},"generated":{"line":10504,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10503,"column":0},"generated":{"line":10505,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10504,"column":0},"generated":{"line":10506,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10505,"column":0},"generated":{"line":10507,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10506,"column":0},"generated":{"line":10508,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10507,"column":0},"generated":{"line":10509,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10508,"column":0},"generated":{"line":10510,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10509,"column":0},"generated":{"line":10511,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10510,"column":0},"generated":{"line":10512,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10511,"column":0},"generated":{"line":10513,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10512,"column":0},"generated":{"line":10514,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10513,"column":0},"generated":{"line":10515,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10514,"column":0},"generated":{"line":10516,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10515,"column":0},"generated":{"line":10517,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10516,"column":0},"generated":{"line":10518,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10517,"column":0},"generated":{"line":10519,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10518,"column":0},"generated":{"line":10520,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10519,"column":0},"generated":{"line":10521,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10520,"column":0},"generated":{"line":10522,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10521,"column":0},"generated":{"line":10523,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10522,"column":0},"generated":{"line":10524,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10523,"column":0},"generated":{"line":10525,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10524,"column":0},"generated":{"line":10526,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10525,"column":0},"generated":{"line":10527,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10526,"column":0},"generated":{"line":10528,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10527,"column":0},"generated":{"line":10529,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10528,"column":0},"generated":{"line":10530,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10529,"column":0},"generated":{"line":10531,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10530,"column":0},"generated":{"line":10532,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10531,"column":0},"generated":{"line":10533,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10532,"column":0},"generated":{"line":10534,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10533,"column":0},"generated":{"line":10535,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10534,"column":0},"generated":{"line":10536,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10535,"column":0},"generated":{"line":10537,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10536,"column":0},"generated":{"line":10538,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10537,"column":0},"generated":{"line":10539,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10538,"column":0},"generated":{"line":10540,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10539,"column":0},"generated":{"line":10541,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10540,"column":0},"generated":{"line":10542,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10541,"column":0},"generated":{"line":10543,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10542,"column":0},"generated":{"line":10544,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10543,"column":0},"generated":{"line":10545,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10544,"column":0},"generated":{"line":10546,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10545,"column":0},"generated":{"line":10547,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10546,"column":0},"generated":{"line":10548,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10547,"column":0},"generated":{"line":10549,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10548,"column":0},"generated":{"line":10550,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10549,"column":0},"generated":{"line":10551,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10550,"column":0},"generated":{"line":10552,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10551,"column":0},"generated":{"line":10553,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10552,"column":0},"generated":{"line":10554,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10553,"column":0},"generated":{"line":10555,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10554,"column":0},"generated":{"line":10556,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10555,"column":0},"generated":{"line":10557,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10556,"column":0},"generated":{"line":10558,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10557,"column":0},"generated":{"line":10559,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10558,"column":0},"generated":{"line":10560,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10559,"column":0},"generated":{"line":10561,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10560,"column":0},"generated":{"line":10562,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10561,"column":0},"generated":{"line":10563,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10562,"column":0},"generated":{"line":10564,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10563,"column":0},"generated":{"line":10565,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10564,"column":0},"generated":{"line":10566,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10565,"column":0},"generated":{"line":10567,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10566,"column":0},"generated":{"line":10568,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10567,"column":0},"generated":{"line":10569,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10568,"column":0},"generated":{"line":10570,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10569,"column":0},"generated":{"line":10571,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10570,"column":0},"generated":{"line":10572,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10571,"column":0},"generated":{"line":10573,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10572,"column":0},"generated":{"line":10574,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10573,"column":0},"generated":{"line":10575,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10574,"column":0},"generated":{"line":10576,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10575,"column":0},"generated":{"line":10577,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10576,"column":0},"generated":{"line":10578,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10577,"column":0},"generated":{"line":10579,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10578,"column":0},"generated":{"line":10580,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10579,"column":0},"generated":{"line":10581,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10580,"column":0},"generated":{"line":10582,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10581,"column":0},"generated":{"line":10583,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10582,"column":0},"generated":{"line":10584,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10583,"column":0},"generated":{"line":10585,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10584,"column":0},"generated":{"line":10586,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10585,"column":0},"generated":{"line":10587,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10586,"column":0},"generated":{"line":10588,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10587,"column":0},"generated":{"line":10589,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10588,"column":0},"generated":{"line":10590,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10589,"column":0},"generated":{"line":10591,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10590,"column":0},"generated":{"line":10592,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10591,"column":0},"generated":{"line":10593,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10592,"column":0},"generated":{"line":10594,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10593,"column":0},"generated":{"line":10595,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10594,"column":0},"generated":{"line":10596,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10595,"column":0},"generated":{"line":10597,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10596,"column":0},"generated":{"line":10598,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10597,"column":0},"generated":{"line":10599,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10598,"column":0},"generated":{"line":10600,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10599,"column":0},"generated":{"line":10601,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10600,"column":0},"generated":{"line":10602,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10601,"column":0},"generated":{"line":10603,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10602,"column":0},"generated":{"line":10604,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10603,"column":0},"generated":{"line":10605,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10604,"column":0},"generated":{"line":10606,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10605,"column":0},"generated":{"line":10607,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10606,"column":0},"generated":{"line":10608,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10607,"column":0},"generated":{"line":10609,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10608,"column":0},"generated":{"line":10610,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10609,"column":0},"generated":{"line":10611,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10610,"column":0},"generated":{"line":10612,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10611,"column":0},"generated":{"line":10613,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10612,"column":0},"generated":{"line":10614,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10613,"column":0},"generated":{"line":10615,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10614,"column":0},"generated":{"line":10616,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10615,"column":0},"generated":{"line":10617,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10616,"column":0},"generated":{"line":10618,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10617,"column":0},"generated":{"line":10619,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10618,"column":0},"generated":{"line":10620,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10619,"column":0},"generated":{"line":10621,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10620,"column":0},"generated":{"line":10622,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10621,"column":0},"generated":{"line":10623,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10622,"column":0},"generated":{"line":10624,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10623,"column":0},"generated":{"line":10625,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10624,"column":0},"generated":{"line":10626,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10625,"column":0},"generated":{"line":10627,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10626,"column":0},"generated":{"line":10628,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10627,"column":0},"generated":{"line":10629,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10628,"column":0},"generated":{"line":10630,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10629,"column":0},"generated":{"line":10631,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10630,"column":0},"generated":{"line":10632,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10631,"column":0},"generated":{"line":10633,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10632,"column":0},"generated":{"line":10634,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10633,"column":0},"generated":{"line":10635,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10634,"column":0},"generated":{"line":10636,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10635,"column":0},"generated":{"line":10637,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10636,"column":0},"generated":{"line":10638,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10637,"column":0},"generated":{"line":10639,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10638,"column":0},"generated":{"line":10640,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10639,"column":0},"generated":{"line":10641,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10640,"column":0},"generated":{"line":10642,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10641,"column":0},"generated":{"line":10643,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10642,"column":0},"generated":{"line":10644,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10643,"column":0},"generated":{"line":10645,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10644,"column":0},"generated":{"line":10646,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10645,"column":0},"generated":{"line":10647,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10646,"column":0},"generated":{"line":10648,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10647,"column":0},"generated":{"line":10649,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10648,"column":0},"generated":{"line":10650,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10649,"column":0},"generated":{"line":10651,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10650,"column":0},"generated":{"line":10652,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10651,"column":0},"generated":{"line":10653,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10652,"column":0},"generated":{"line":10654,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10653,"column":0},"generated":{"line":10655,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10654,"column":0},"generated":{"line":10656,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10655,"column":0},"generated":{"line":10657,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10656,"column":0},"generated":{"line":10658,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10657,"column":0},"generated":{"line":10659,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10658,"column":0},"generated":{"line":10660,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10659,"column":0},"generated":{"line":10661,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10660,"column":0},"generated":{"line":10662,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10661,"column":0},"generated":{"line":10663,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10662,"column":0},"generated":{"line":10664,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10663,"column":0},"generated":{"line":10665,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10664,"column":0},"generated":{"line":10666,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10665,"column":0},"generated":{"line":10667,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10666,"column":0},"generated":{"line":10668,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10667,"column":0},"generated":{"line":10669,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10668,"column":0},"generated":{"line":10670,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10669,"column":0},"generated":{"line":10671,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10670,"column":0},"generated":{"line":10672,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10671,"column":0},"generated":{"line":10673,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10672,"column":0},"generated":{"line":10674,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10673,"column":0},"generated":{"line":10675,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10674,"column":0},"generated":{"line":10676,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10675,"column":0},"generated":{"line":10677,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10676,"column":0},"generated":{"line":10678,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10677,"column":0},"generated":{"line":10679,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10678,"column":0},"generated":{"line":10680,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10679,"column":0},"generated":{"line":10681,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10680,"column":0},"generated":{"line":10682,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10681,"column":0},"generated":{"line":10683,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10682,"column":0},"generated":{"line":10684,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10683,"column":0},"generated":{"line":10685,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10684,"column":0},"generated":{"line":10686,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10685,"column":0},"generated":{"line":10687,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10686,"column":0},"generated":{"line":10688,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10687,"column":0},"generated":{"line":10689,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10688,"column":0},"generated":{"line":10690,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10689,"column":0},"generated":{"line":10691,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10690,"column":0},"generated":{"line":10692,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10691,"column":0},"generated":{"line":10693,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10692,"column":0},"generated":{"line":10694,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10693,"column":0},"generated":{"line":10695,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10694,"column":0},"generated":{"line":10696,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10695,"column":0},"generated":{"line":10697,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10696,"column":0},"generated":{"line":10698,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10697,"column":0},"generated":{"line":10699,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10698,"column":0},"generated":{"line":10700,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10699,"column":0},"generated":{"line":10701,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10700,"column":0},"generated":{"line":10702,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10701,"column":0},"generated":{"line":10703,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10702,"column":0},"generated":{"line":10704,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10703,"column":0},"generated":{"line":10705,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10704,"column":0},"generated":{"line":10706,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10705,"column":0},"generated":{"line":10707,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10706,"column":0},"generated":{"line":10708,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10707,"column":0},"generated":{"line":10709,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10708,"column":0},"generated":{"line":10710,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10709,"column":0},"generated":{"line":10711,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10710,"column":0},"generated":{"line":10712,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10711,"column":0},"generated":{"line":10713,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10712,"column":0},"generated":{"line":10714,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10713,"column":0},"generated":{"line":10715,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10714,"column":0},"generated":{"line":10716,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10715,"column":0},"generated":{"line":10717,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10716,"column":0},"generated":{"line":10718,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10717,"column":0},"generated":{"line":10719,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10718,"column":0},"generated":{"line":10720,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10719,"column":0},"generated":{"line":10721,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10720,"column":0},"generated":{"line":10722,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10721,"column":0},"generated":{"line":10723,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10722,"column":0},"generated":{"line":10724,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10723,"column":0},"generated":{"line":10725,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10724,"column":0},"generated":{"line":10726,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10725,"column":0},"generated":{"line":10727,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10726,"column":0},"generated":{"line":10728,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10727,"column":0},"generated":{"line":10729,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10728,"column":0},"generated":{"line":10730,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10729,"column":0},"generated":{"line":10731,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10730,"column":0},"generated":{"line":10732,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10731,"column":0},"generated":{"line":10733,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10732,"column":0},"generated":{"line":10734,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10733,"column":0},"generated":{"line":10735,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10734,"column":0},"generated":{"line":10736,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10735,"column":0},"generated":{"line":10737,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10736,"column":0},"generated":{"line":10738,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10737,"column":0},"generated":{"line":10739,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10738,"column":0},"generated":{"line":10740,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10739,"column":0},"generated":{"line":10741,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10740,"column":0},"generated":{"line":10742,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10741,"column":0},"generated":{"line":10743,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10742,"column":0},"generated":{"line":10744,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10743,"column":0},"generated":{"line":10745,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10744,"column":0},"generated":{"line":10746,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10745,"column":0},"generated":{"line":10747,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10746,"column":0},"generated":{"line":10748,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10747,"column":0},"generated":{"line":10749,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10748,"column":0},"generated":{"line":10750,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10749,"column":0},"generated":{"line":10751,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10750,"column":0},"generated":{"line":10752,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10751,"column":0},"generated":{"line":10753,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10752,"column":0},"generated":{"line":10754,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10753,"column":0},"generated":{"line":10755,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10754,"column":0},"generated":{"line":10756,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10755,"column":0},"generated":{"line":10757,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10756,"column":0},"generated":{"line":10758,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10757,"column":0},"generated":{"line":10759,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10758,"column":0},"generated":{"line":10760,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10759,"column":0},"generated":{"line":10761,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10760,"column":0},"generated":{"line":10762,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10761,"column":0},"generated":{"line":10763,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10762,"column":0},"generated":{"line":10764,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10763,"column":0},"generated":{"line":10765,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10764,"column":0},"generated":{"line":10766,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10765,"column":0},"generated":{"line":10767,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10766,"column":0},"generated":{"line":10768,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10767,"column":0},"generated":{"line":10769,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10768,"column":0},"generated":{"line":10770,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10769,"column":0},"generated":{"line":10771,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10770,"column":0},"generated":{"line":10772,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10771,"column":0},"generated":{"line":10773,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10772,"column":0},"generated":{"line":10774,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10773,"column":0},"generated":{"line":10775,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10774,"column":0},"generated":{"line":10776,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10775,"column":0},"generated":{"line":10777,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10776,"column":0},"generated":{"line":10778,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10777,"column":0},"generated":{"line":10779,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10778,"column":0},"generated":{"line":10780,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10779,"column":0},"generated":{"line":10781,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10780,"column":0},"generated":{"line":10782,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10781,"column":0},"generated":{"line":10783,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10782,"column":0},"generated":{"line":10784,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10783,"column":0},"generated":{"line":10785,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10784,"column":0},"generated":{"line":10786,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10785,"column":0},"generated":{"line":10787,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10786,"column":0},"generated":{"line":10788,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10787,"column":0},"generated":{"line":10789,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10788,"column":0},"generated":{"line":10790,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10789,"column":0},"generated":{"line":10791,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10790,"column":0},"generated":{"line":10792,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10791,"column":0},"generated":{"line":10793,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10792,"column":0},"generated":{"line":10794,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10793,"column":0},"generated":{"line":10795,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10794,"column":0},"generated":{"line":10796,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10795,"column":0},"generated":{"line":10797,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10796,"column":0},"generated":{"line":10798,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10797,"column":0},"generated":{"line":10799,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10798,"column":0},"generated":{"line":10800,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10799,"column":0},"generated":{"line":10801,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10800,"column":0},"generated":{"line":10802,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10801,"column":0},"generated":{"line":10803,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10802,"column":0},"generated":{"line":10804,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10803,"column":0},"generated":{"line":10805,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10804,"column":0},"generated":{"line":10806,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10805,"column":0},"generated":{"line":10807,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10806,"column":0},"generated":{"line":10808,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10807,"column":0},"generated":{"line":10809,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10808,"column":0},"generated":{"line":10810,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10809,"column":0},"generated":{"line":10811,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10810,"column":0},"generated":{"line":10812,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10811,"column":0},"generated":{"line":10813,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10812,"column":0},"generated":{"line":10814,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10813,"column":0},"generated":{"line":10815,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10814,"column":0},"generated":{"line":10816,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10815,"column":0},"generated":{"line":10817,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10816,"column":0},"generated":{"line":10818,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10817,"column":0},"generated":{"line":10819,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10818,"column":0},"generated":{"line":10820,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10819,"column":0},"generated":{"line":10821,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10820,"column":0},"generated":{"line":10822,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10821,"column":0},"generated":{"line":10823,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10822,"column":0},"generated":{"line":10824,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10823,"column":0},"generated":{"line":10825,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10824,"column":0},"generated":{"line":10826,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10825,"column":0},"generated":{"line":10827,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10826,"column":0},"generated":{"line":10828,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10827,"column":0},"generated":{"line":10829,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10828,"column":0},"generated":{"line":10830,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10829,"column":0},"generated":{"line":10831,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10830,"column":0},"generated":{"line":10832,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10831,"column":0},"generated":{"line":10833,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10832,"column":0},"generated":{"line":10834,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10833,"column":0},"generated":{"line":10835,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10834,"column":0},"generated":{"line":10836,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10835,"column":0},"generated":{"line":10837,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10836,"column":0},"generated":{"line":10838,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10837,"column":0},"generated":{"line":10839,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10838,"column":0},"generated":{"line":10840,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10839,"column":0},"generated":{"line":10841,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10840,"column":0},"generated":{"line":10842,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10841,"column":0},"generated":{"line":10843,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10842,"column":0},"generated":{"line":10844,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10843,"column":0},"generated":{"line":10845,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10844,"column":0},"generated":{"line":10846,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10845,"column":0},"generated":{"line":10847,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10846,"column":0},"generated":{"line":10848,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10847,"column":0},"generated":{"line":10849,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10848,"column":0},"generated":{"line":10850,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10849,"column":0},"generated":{"line":10851,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10850,"column":0},"generated":{"line":10852,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10851,"column":0},"generated":{"line":10853,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10852,"column":0},"generated":{"line":10854,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10853,"column":0},"generated":{"line":10855,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10854,"column":0},"generated":{"line":10856,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10855,"column":0},"generated":{"line":10857,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10856,"column":0},"generated":{"line":10858,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10857,"column":0},"generated":{"line":10859,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10858,"column":0},"generated":{"line":10860,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10859,"column":0},"generated":{"line":10861,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10860,"column":0},"generated":{"line":10862,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10861,"column":0},"generated":{"line":10863,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10862,"column":0},"generated":{"line":10864,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10863,"column":0},"generated":{"line":10865,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10864,"column":0},"generated":{"line":10866,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10865,"column":0},"generated":{"line":10867,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10866,"column":0},"generated":{"line":10868,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10867,"column":0},"generated":{"line":10869,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10868,"column":0},"generated":{"line":10870,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10869,"column":0},"generated":{"line":10871,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10870,"column":0},"generated":{"line":10872,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10871,"column":0},"generated":{"line":10873,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10872,"column":0},"generated":{"line":10874,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10873,"column":0},"generated":{"line":10875,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10874,"column":0},"generated":{"line":10876,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10875,"column":0},"generated":{"line":10877,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10876,"column":0},"generated":{"line":10878,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10877,"column":0},"generated":{"line":10879,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10878,"column":0},"generated":{"line":10880,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10879,"column":0},"generated":{"line":10881,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10880,"column":0},"generated":{"line":10882,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10881,"column":0},"generated":{"line":10883,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10882,"column":0},"generated":{"line":10884,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10883,"column":0},"generated":{"line":10885,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10884,"column":0},"generated":{"line":10886,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10885,"column":0},"generated":{"line":10887,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10886,"column":0},"generated":{"line":10888,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10887,"column":0},"generated":{"line":10889,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10888,"column":0},"generated":{"line":10890,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10889,"column":0},"generated":{"line":10891,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10890,"column":0},"generated":{"line":10892,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10891,"column":0},"generated":{"line":10893,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10892,"column":0},"generated":{"line":10894,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10893,"column":0},"generated":{"line":10895,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10894,"column":0},"generated":{"line":10896,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10895,"column":0},"generated":{"line":10897,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10896,"column":0},"generated":{"line":10898,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10897,"column":0},"generated":{"line":10899,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10898,"column":0},"generated":{"line":10900,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10899,"column":0},"generated":{"line":10901,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10900,"column":0},"generated":{"line":10902,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10901,"column":0},"generated":{"line":10903,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10902,"column":0},"generated":{"line":10904,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10903,"column":0},"generated":{"line":10905,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10904,"column":0},"generated":{"line":10906,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10905,"column":0},"generated":{"line":10907,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10906,"column":0},"generated":{"line":10908,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10907,"column":0},"generated":{"line":10909,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10908,"column":0},"generated":{"line":10910,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10909,"column":0},"generated":{"line":10911,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10910,"column":0},"generated":{"line":10912,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10911,"column":0},"generated":{"line":10913,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10912,"column":0},"generated":{"line":10914,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10913,"column":0},"generated":{"line":10915,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10914,"column":0},"generated":{"line":10916,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10915,"column":0},"generated":{"line":10917,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10916,"column":0},"generated":{"line":10918,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10917,"column":0},"generated":{"line":10919,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10918,"column":0},"generated":{"line":10920,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10919,"column":0},"generated":{"line":10921,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10920,"column":0},"generated":{"line":10922,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10921,"column":0},"generated":{"line":10923,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10922,"column":0},"generated":{"line":10924,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10923,"column":0},"generated":{"line":10925,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10924,"column":0},"generated":{"line":10926,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10925,"column":0},"generated":{"line":10927,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10926,"column":0},"generated":{"line":10928,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10927,"column":0},"generated":{"line":10929,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10928,"column":0},"generated":{"line":10930,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10929,"column":0},"generated":{"line":10931,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10930,"column":0},"generated":{"line":10932,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10931,"column":0},"generated":{"line":10933,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10932,"column":0},"generated":{"line":10934,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10933,"column":0},"generated":{"line":10935,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10934,"column":0},"generated":{"line":10936,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10935,"column":0},"generated":{"line":10937,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10936,"column":0},"generated":{"line":10938,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10937,"column":0},"generated":{"line":10939,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10938,"column":0},"generated":{"line":10940,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10939,"column":0},"generated":{"line":10941,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10940,"column":0},"generated":{"line":10942,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10941,"column":0},"generated":{"line":10943,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10942,"column":0},"generated":{"line":10944,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10943,"column":0},"generated":{"line":10945,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10944,"column":0},"generated":{"line":10946,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10945,"column":0},"generated":{"line":10947,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10946,"column":0},"generated":{"line":10948,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10947,"column":0},"generated":{"line":10949,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10948,"column":0},"generated":{"line":10950,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10949,"column":0},"generated":{"line":10951,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10950,"column":0},"generated":{"line":10952,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10951,"column":0},"generated":{"line":10953,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10952,"column":0},"generated":{"line":10954,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10953,"column":0},"generated":{"line":10955,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10954,"column":0},"generated":{"line":10956,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10955,"column":0},"generated":{"line":10957,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10956,"column":0},"generated":{"line":10958,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10957,"column":0},"generated":{"line":10959,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10958,"column":0},"generated":{"line":10960,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10959,"column":0},"generated":{"line":10961,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10960,"column":0},"generated":{"line":10962,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10961,"column":0},"generated":{"line":10963,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10962,"column":0},"generated":{"line":10964,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10963,"column":0},"generated":{"line":10965,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10964,"column":0},"generated":{"line":10966,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10965,"column":0},"generated":{"line":10967,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10966,"column":0},"generated":{"line":10968,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10967,"column":0},"generated":{"line":10969,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10968,"column":0},"generated":{"line":10970,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10969,"column":0},"generated":{"line":10971,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10970,"column":0},"generated":{"line":10972,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10971,"column":0},"generated":{"line":10973,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10972,"column":0},"generated":{"line":10974,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10973,"column":0},"generated":{"line":10975,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10974,"column":0},"generated":{"line":10976,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10975,"column":0},"generated":{"line":10977,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10976,"column":0},"generated":{"line":10978,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10977,"column":0},"generated":{"line":10979,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10978,"column":0},"generated":{"line":10980,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10979,"column":0},"generated":{"line":10981,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10980,"column":0},"generated":{"line":10982,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10981,"column":0},"generated":{"line":10983,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10982,"column":0},"generated":{"line":10984,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10983,"column":0},"generated":{"line":10985,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10984,"column":0},"generated":{"line":10986,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10985,"column":0},"generated":{"line":10987,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10986,"column":0},"generated":{"line":10988,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10987,"column":0},"generated":{"line":10989,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10988,"column":0},"generated":{"line":10990,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10989,"column":0},"generated":{"line":10991,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10990,"column":0},"generated":{"line":10992,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10991,"column":0},"generated":{"line":10993,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10992,"column":0},"generated":{"line":10994,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10993,"column":0},"generated":{"line":10995,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10994,"column":0},"generated":{"line":10996,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10995,"column":0},"generated":{"line":10997,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10996,"column":0},"generated":{"line":10998,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10997,"column":0},"generated":{"line":10999,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10998,"column":0},"generated":{"line":11000,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":10999,"column":0},"generated":{"line":11001,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11000,"column":0},"generated":{"line":11002,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11001,"column":0},"generated":{"line":11003,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11002,"column":0},"generated":{"line":11004,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11003,"column":0},"generated":{"line":11005,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11004,"column":0},"generated":{"line":11006,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11005,"column":0},"generated":{"line":11007,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11006,"column":0},"generated":{"line":11008,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11007,"column":0},"generated":{"line":11009,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11008,"column":0},"generated":{"line":11010,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11009,"column":0},"generated":{"line":11011,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11010,"column":0},"generated":{"line":11012,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11011,"column":0},"generated":{"line":11013,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11012,"column":0},"generated":{"line":11014,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11013,"column":0},"generated":{"line":11015,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11014,"column":0},"generated":{"line":11016,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11015,"column":0},"generated":{"line":11017,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11016,"column":0},"generated":{"line":11018,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11017,"column":0},"generated":{"line":11019,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11018,"column":0},"generated":{"line":11020,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11019,"column":0},"generated":{"line":11021,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11020,"column":0},"generated":{"line":11022,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11021,"column":0},"generated":{"line":11023,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11022,"column":0},"generated":{"line":11024,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11023,"column":0},"generated":{"line":11025,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11024,"column":0},"generated":{"line":11026,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11025,"column":0},"generated":{"line":11027,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11026,"column":0},"generated":{"line":11028,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11027,"column":0},"generated":{"line":11029,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11028,"column":0},"generated":{"line":11030,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11029,"column":0},"generated":{"line":11031,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11030,"column":0},"generated":{"line":11032,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11031,"column":0},"generated":{"line":11033,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11032,"column":0},"generated":{"line":11034,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11033,"column":0},"generated":{"line":11035,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11034,"column":0},"generated":{"line":11036,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11035,"column":0},"generated":{"line":11037,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11036,"column":0},"generated":{"line":11038,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11037,"column":0},"generated":{"line":11039,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11038,"column":0},"generated":{"line":11040,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11039,"column":0},"generated":{"line":11041,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11040,"column":0},"generated":{"line":11042,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11041,"column":0},"generated":{"line":11043,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11042,"column":0},"generated":{"line":11044,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11043,"column":0},"generated":{"line":11045,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11044,"column":0},"generated":{"line":11046,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11045,"column":0},"generated":{"line":11047,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11046,"column":0},"generated":{"line":11048,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11047,"column":0},"generated":{"line":11049,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11048,"column":0},"generated":{"line":11050,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11049,"column":0},"generated":{"line":11051,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11050,"column":0},"generated":{"line":11052,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11051,"column":0},"generated":{"line":11053,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11052,"column":0},"generated":{"line":11054,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11053,"column":0},"generated":{"line":11055,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11054,"column":0},"generated":{"line":11056,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11055,"column":0},"generated":{"line":11057,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11056,"column":0},"generated":{"line":11058,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11057,"column":0},"generated":{"line":11059,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11058,"column":0},"generated":{"line":11060,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11059,"column":0},"generated":{"line":11061,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11060,"column":0},"generated":{"line":11062,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11061,"column":0},"generated":{"line":11063,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11062,"column":0},"generated":{"line":11064,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11063,"column":0},"generated":{"line":11065,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11064,"column":0},"generated":{"line":11066,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11065,"column":0},"generated":{"line":11067,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11066,"column":0},"generated":{"line":11068,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11067,"column":0},"generated":{"line":11069,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11068,"column":0},"generated":{"line":11070,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11069,"column":0},"generated":{"line":11071,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11070,"column":0},"generated":{"line":11072,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11071,"column":0},"generated":{"line":11073,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11072,"column":0},"generated":{"line":11074,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11073,"column":0},"generated":{"line":11075,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11074,"column":0},"generated":{"line":11076,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11075,"column":0},"generated":{"line":11077,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11076,"column":0},"generated":{"line":11078,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11077,"column":0},"generated":{"line":11079,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11078,"column":0},"generated":{"line":11080,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11079,"column":0},"generated":{"line":11081,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11080,"column":0},"generated":{"line":11082,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11081,"column":0},"generated":{"line":11083,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11082,"column":0},"generated":{"line":11084,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11083,"column":0},"generated":{"line":11085,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11084,"column":0},"generated":{"line":11086,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11085,"column":0},"generated":{"line":11087,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11086,"column":0},"generated":{"line":11088,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11087,"column":0},"generated":{"line":11089,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11088,"column":0},"generated":{"line":11090,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11089,"column":0},"generated":{"line":11091,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11090,"column":0},"generated":{"line":11092,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11091,"column":0},"generated":{"line":11093,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11092,"column":0},"generated":{"line":11094,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11093,"column":0},"generated":{"line":11095,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11094,"column":0},"generated":{"line":11096,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11095,"column":0},"generated":{"line":11097,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11096,"column":0},"generated":{"line":11098,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11097,"column":0},"generated":{"line":11099,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11098,"column":0},"generated":{"line":11100,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11099,"column":0},"generated":{"line":11101,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11100,"column":0},"generated":{"line":11102,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11101,"column":0},"generated":{"line":11103,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11102,"column":0},"generated":{"line":11104,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11103,"column":0},"generated":{"line":11105,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11104,"column":0},"generated":{"line":11106,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11105,"column":0},"generated":{"line":11107,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11106,"column":0},"generated":{"line":11108,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11107,"column":0},"generated":{"line":11109,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11108,"column":0},"generated":{"line":11110,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11109,"column":0},"generated":{"line":11111,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11110,"column":0},"generated":{"line":11112,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11111,"column":0},"generated":{"line":11113,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11112,"column":0},"generated":{"line":11114,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11113,"column":0},"generated":{"line":11115,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11114,"column":0},"generated":{"line":11116,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11115,"column":0},"generated":{"line":11117,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11116,"column":0},"generated":{"line":11118,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11117,"column":0},"generated":{"line":11119,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11118,"column":0},"generated":{"line":11120,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11119,"column":0},"generated":{"line":11121,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11120,"column":0},"generated":{"line":11122,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11121,"column":0},"generated":{"line":11123,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11122,"column":0},"generated":{"line":11124,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11123,"column":0},"generated":{"line":11125,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11124,"column":0},"generated":{"line":11126,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11125,"column":0},"generated":{"line":11127,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11126,"column":0},"generated":{"line":11128,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11127,"column":0},"generated":{"line":11129,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11128,"column":0},"generated":{"line":11130,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11129,"column":0},"generated":{"line":11131,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11130,"column":0},"generated":{"line":11132,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11131,"column":0},"generated":{"line":11133,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11132,"column":0},"generated":{"line":11134,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11133,"column":0},"generated":{"line":11135,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11134,"column":0},"generated":{"line":11136,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11135,"column":0},"generated":{"line":11137,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11136,"column":0},"generated":{"line":11138,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11137,"column":0},"generated":{"line":11139,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11138,"column":0},"generated":{"line":11140,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11139,"column":0},"generated":{"line":11141,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11140,"column":0},"generated":{"line":11142,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11141,"column":0},"generated":{"line":11143,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11142,"column":0},"generated":{"line":11144,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11143,"column":0},"generated":{"line":11145,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11144,"column":0},"generated":{"line":11146,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11145,"column":0},"generated":{"line":11147,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11146,"column":0},"generated":{"line":11148,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11147,"column":0},"generated":{"line":11149,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11148,"column":0},"generated":{"line":11150,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11149,"column":0},"generated":{"line":11151,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11150,"column":0},"generated":{"line":11152,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11151,"column":0},"generated":{"line":11153,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11152,"column":0},"generated":{"line":11154,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11153,"column":0},"generated":{"line":11155,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11154,"column":0},"generated":{"line":11156,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11155,"column":0},"generated":{"line":11157,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11156,"column":0},"generated":{"line":11158,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11157,"column":0},"generated":{"line":11159,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11158,"column":0},"generated":{"line":11160,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11159,"column":0},"generated":{"line":11161,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11160,"column":0},"generated":{"line":11162,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11161,"column":0},"generated":{"line":11163,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11162,"column":0},"generated":{"line":11164,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11163,"column":0},"generated":{"line":11165,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11164,"column":0},"generated":{"line":11166,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11165,"column":0},"generated":{"line":11167,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11166,"column":0},"generated":{"line":11168,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11167,"column":0},"generated":{"line":11169,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11168,"column":0},"generated":{"line":11170,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11169,"column":0},"generated":{"line":11171,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11170,"column":0},"generated":{"line":11172,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11171,"column":0},"generated":{"line":11173,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11172,"column":0},"generated":{"line":11174,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11173,"column":0},"generated":{"line":11175,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11174,"column":0},"generated":{"line":11176,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11175,"column":0},"generated":{"line":11177,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11176,"column":0},"generated":{"line":11178,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11177,"column":0},"generated":{"line":11179,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11178,"column":0},"generated":{"line":11180,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11179,"column":0},"generated":{"line":11181,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11180,"column":0},"generated":{"line":11182,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11181,"column":0},"generated":{"line":11183,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11182,"column":0},"generated":{"line":11184,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11183,"column":0},"generated":{"line":11185,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11184,"column":0},"generated":{"line":11186,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11185,"column":0},"generated":{"line":11187,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11186,"column":0},"generated":{"line":11188,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11187,"column":0},"generated":{"line":11189,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11188,"column":0},"generated":{"line":11190,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11189,"column":0},"generated":{"line":11191,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11190,"column":0},"generated":{"line":11192,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11191,"column":0},"generated":{"line":11193,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11192,"column":0},"generated":{"line":11194,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11193,"column":0},"generated":{"line":11195,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11194,"column":0},"generated":{"line":11196,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11195,"column":0},"generated":{"line":11197,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11196,"column":0},"generated":{"line":11198,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11197,"column":0},"generated":{"line":11199,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11198,"column":0},"generated":{"line":11200,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11199,"column":0},"generated":{"line":11201,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11200,"column":0},"generated":{"line":11202,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11201,"column":0},"generated":{"line":11203,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11202,"column":0},"generated":{"line":11204,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11203,"column":0},"generated":{"line":11205,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11204,"column":0},"generated":{"line":11206,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11205,"column":0},"generated":{"line":11207,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11206,"column":0},"generated":{"line":11208,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11207,"column":0},"generated":{"line":11209,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11208,"column":0},"generated":{"line":11210,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11209,"column":0},"generated":{"line":11211,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11210,"column":0},"generated":{"line":11212,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11211,"column":0},"generated":{"line":11213,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11212,"column":0},"generated":{"line":11214,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11213,"column":0},"generated":{"line":11215,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11214,"column":0},"generated":{"line":11216,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11215,"column":0},"generated":{"line":11217,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11216,"column":0},"generated":{"line":11218,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11217,"column":0},"generated":{"line":11219,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11218,"column":0},"generated":{"line":11220,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11219,"column":0},"generated":{"line":11221,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11220,"column":0},"generated":{"line":11222,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11221,"column":0},"generated":{"line":11223,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11222,"column":0},"generated":{"line":11224,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11223,"column":0},"generated":{"line":11225,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11224,"column":0},"generated":{"line":11226,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11225,"column":0},"generated":{"line":11227,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11226,"column":0},"generated":{"line":11228,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11227,"column":0},"generated":{"line":11229,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11228,"column":0},"generated":{"line":11230,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11229,"column":0},"generated":{"line":11231,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11230,"column":0},"generated":{"line":11232,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11231,"column":0},"generated":{"line":11233,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11232,"column":0},"generated":{"line":11234,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11233,"column":0},"generated":{"line":11235,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11234,"column":0},"generated":{"line":11236,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11235,"column":0},"generated":{"line":11237,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11236,"column":0},"generated":{"line":11238,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11237,"column":0},"generated":{"line":11239,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11238,"column":0},"generated":{"line":11240,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11239,"column":0},"generated":{"line":11241,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11240,"column":0},"generated":{"line":11242,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11241,"column":0},"generated":{"line":11243,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11242,"column":0},"generated":{"line":11244,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11243,"column":0},"generated":{"line":11245,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11244,"column":0},"generated":{"line":11246,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11245,"column":0},"generated":{"line":11247,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11246,"column":0},"generated":{"line":11248,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11247,"column":0},"generated":{"line":11249,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11248,"column":0},"generated":{"line":11250,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11249,"column":0},"generated":{"line":11251,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11250,"column":0},"generated":{"line":11252,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11251,"column":0},"generated":{"line":11253,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11252,"column":0},"generated":{"line":11254,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11253,"column":0},"generated":{"line":11255,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11254,"column":0},"generated":{"line":11256,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11255,"column":0},"generated":{"line":11257,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11256,"column":0},"generated":{"line":11258,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11257,"column":0},"generated":{"line":11259,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11258,"column":0},"generated":{"line":11260,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11259,"column":0},"generated":{"line":11261,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11260,"column":0},"generated":{"line":11262,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11261,"column":0},"generated":{"line":11263,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11262,"column":0},"generated":{"line":11264,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11263,"column":0},"generated":{"line":11265,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11264,"column":0},"generated":{"line":11266,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11265,"column":0},"generated":{"line":11267,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11266,"column":0},"generated":{"line":11268,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11267,"column":0},"generated":{"line":11269,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11268,"column":0},"generated":{"line":11270,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11269,"column":0},"generated":{"line":11271,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11270,"column":0},"generated":{"line":11272,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11271,"column":0},"generated":{"line":11273,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11272,"column":0},"generated":{"line":11274,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11273,"column":0},"generated":{"line":11275,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11274,"column":0},"generated":{"line":11276,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11275,"column":0},"generated":{"line":11277,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11276,"column":0},"generated":{"line":11278,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11277,"column":0},"generated":{"line":11279,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11278,"column":0},"generated":{"line":11280,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11279,"column":0},"generated":{"line":11281,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11280,"column":0},"generated":{"line":11282,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11281,"column":0},"generated":{"line":11283,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11282,"column":0},"generated":{"line":11284,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11283,"column":0},"generated":{"line":11285,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11284,"column":0},"generated":{"line":11286,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11285,"column":0},"generated":{"line":11287,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11286,"column":0},"generated":{"line":11288,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11287,"column":0},"generated":{"line":11289,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11288,"column":0},"generated":{"line":11290,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11289,"column":0},"generated":{"line":11291,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11290,"column":0},"generated":{"line":11292,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11291,"column":0},"generated":{"line":11293,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11292,"column":0},"generated":{"line":11294,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11293,"column":0},"generated":{"line":11295,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11294,"column":0},"generated":{"line":11296,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11295,"column":0},"generated":{"line":11297,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11296,"column":0},"generated":{"line":11298,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11297,"column":0},"generated":{"line":11299,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11298,"column":0},"generated":{"line":11300,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11299,"column":0},"generated":{"line":11301,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11300,"column":0},"generated":{"line":11302,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11301,"column":0},"generated":{"line":11303,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11302,"column":0},"generated":{"line":11304,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11303,"column":0},"generated":{"line":11305,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11304,"column":0},"generated":{"line":11306,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11305,"column":0},"generated":{"line":11307,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11306,"column":0},"generated":{"line":11308,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11307,"column":0},"generated":{"line":11309,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11308,"column":0},"generated":{"line":11310,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11309,"column":0},"generated":{"line":11311,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11310,"column":0},"generated":{"line":11312,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11311,"column":0},"generated":{"line":11313,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11312,"column":0},"generated":{"line":11314,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11313,"column":0},"generated":{"line":11315,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11314,"column":0},"generated":{"line":11316,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11315,"column":0},"generated":{"line":11317,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11316,"column":0},"generated":{"line":11318,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11317,"column":0},"generated":{"line":11319,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11318,"column":0},"generated":{"line":11320,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11319,"column":0},"generated":{"line":11321,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11320,"column":0},"generated":{"line":11322,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11321,"column":0},"generated":{"line":11323,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11322,"column":0},"generated":{"line":11324,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11323,"column":0},"generated":{"line":11325,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11324,"column":0},"generated":{"line":11326,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11325,"column":0},"generated":{"line":11327,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11326,"column":0},"generated":{"line":11328,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11327,"column":0},"generated":{"line":11329,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11328,"column":0},"generated":{"line":11330,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11329,"column":0},"generated":{"line":11331,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11330,"column":0},"generated":{"line":11332,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11331,"column":0},"generated":{"line":11333,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11332,"column":0},"generated":{"line":11334,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11333,"column":0},"generated":{"line":11335,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11334,"column":0},"generated":{"line":11336,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11335,"column":0},"generated":{"line":11337,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11336,"column":0},"generated":{"line":11338,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11337,"column":0},"generated":{"line":11339,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11338,"column":0},"generated":{"line":11340,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11339,"column":0},"generated":{"line":11341,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11340,"column":0},"generated":{"line":11342,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11341,"column":0},"generated":{"line":11343,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11342,"column":0},"generated":{"line":11344,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11343,"column":0},"generated":{"line":11345,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11344,"column":0},"generated":{"line":11346,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11345,"column":0},"generated":{"line":11347,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11346,"column":0},"generated":{"line":11348,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11347,"column":0},"generated":{"line":11349,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11348,"column":0},"generated":{"line":11350,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11349,"column":0},"generated":{"line":11351,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11350,"column":0},"generated":{"line":11352,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11351,"column":0},"generated":{"line":11353,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11352,"column":0},"generated":{"line":11354,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11353,"column":0},"generated":{"line":11355,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11354,"column":0},"generated":{"line":11356,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11355,"column":0},"generated":{"line":11357,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11356,"column":0},"generated":{"line":11358,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11357,"column":0},"generated":{"line":11359,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11358,"column":0},"generated":{"line":11360,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11359,"column":0},"generated":{"line":11361,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11360,"column":0},"generated":{"line":11362,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11361,"column":0},"generated":{"line":11363,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11362,"column":0},"generated":{"line":11364,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11363,"column":0},"generated":{"line":11365,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11364,"column":0},"generated":{"line":11366,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11365,"column":0},"generated":{"line":11367,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11366,"column":0},"generated":{"line":11368,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11367,"column":0},"generated":{"line":11369,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11368,"column":0},"generated":{"line":11370,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11369,"column":0},"generated":{"line":11371,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11370,"column":0},"generated":{"line":11372,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11371,"column":0},"generated":{"line":11373,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11372,"column":0},"generated":{"line":11374,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11373,"column":0},"generated":{"line":11375,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11374,"column":0},"generated":{"line":11376,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11375,"column":0},"generated":{"line":11377,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11376,"column":0},"generated":{"line":11378,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11377,"column":0},"generated":{"line":11379,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11378,"column":0},"generated":{"line":11380,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11379,"column":0},"generated":{"line":11381,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11380,"column":0},"generated":{"line":11382,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11381,"column":0},"generated":{"line":11383,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11382,"column":0},"generated":{"line":11384,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11383,"column":0},"generated":{"line":11385,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11384,"column":0},"generated":{"line":11386,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11385,"column":0},"generated":{"line":11387,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11386,"column":0},"generated":{"line":11388,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11387,"column":0},"generated":{"line":11389,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11388,"column":0},"generated":{"line":11390,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11389,"column":0},"generated":{"line":11391,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11390,"column":0},"generated":{"line":11392,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11391,"column":0},"generated":{"line":11393,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11392,"column":0},"generated":{"line":11394,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11393,"column":0},"generated":{"line":11395,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11394,"column":0},"generated":{"line":11396,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11395,"column":0},"generated":{"line":11397,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11396,"column":0},"generated":{"line":11398,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11397,"column":0},"generated":{"line":11399,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11398,"column":0},"generated":{"line":11400,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11399,"column":0},"generated":{"line":11401,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11400,"column":0},"generated":{"line":11402,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11401,"column":0},"generated":{"line":11403,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11402,"column":0},"generated":{"line":11404,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11403,"column":0},"generated":{"line":11405,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11404,"column":0},"generated":{"line":11406,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11405,"column":0},"generated":{"line":11407,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11406,"column":0},"generated":{"line":11408,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11407,"column":0},"generated":{"line":11409,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11408,"column":0},"generated":{"line":11410,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11409,"column":0},"generated":{"line":11411,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11410,"column":0},"generated":{"line":11412,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11411,"column":0},"generated":{"line":11413,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11412,"column":0},"generated":{"line":11414,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11413,"column":0},"generated":{"line":11415,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11414,"column":0},"generated":{"line":11416,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11415,"column":0},"generated":{"line":11417,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11416,"column":0},"generated":{"line":11418,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11417,"column":0},"generated":{"line":11419,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11418,"column":0},"generated":{"line":11420,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11419,"column":0},"generated":{"line":11421,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11420,"column":0},"generated":{"line":11422,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11421,"column":0},"generated":{"line":11423,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11422,"column":0},"generated":{"line":11424,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11423,"column":0},"generated":{"line":11425,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11424,"column":0},"generated":{"line":11426,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11425,"column":0},"generated":{"line":11427,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11426,"column":0},"generated":{"line":11428,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11427,"column":0},"generated":{"line":11429,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11428,"column":0},"generated":{"line":11430,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11429,"column":0},"generated":{"line":11431,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11430,"column":0},"generated":{"line":11432,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11431,"column":0},"generated":{"line":11433,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11432,"column":0},"generated":{"line":11434,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11433,"column":0},"generated":{"line":11435,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11434,"column":0},"generated":{"line":11436,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11435,"column":0},"generated":{"line":11437,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11436,"column":0},"generated":{"line":11438,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11437,"column":0},"generated":{"line":11439,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11438,"column":0},"generated":{"line":11440,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11439,"column":0},"generated":{"line":11441,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11440,"column":0},"generated":{"line":11442,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11441,"column":0},"generated":{"line":11443,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11442,"column":0},"generated":{"line":11444,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11443,"column":0},"generated":{"line":11445,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11444,"column":0},"generated":{"line":11446,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11445,"column":0},"generated":{"line":11447,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11446,"column":0},"generated":{"line":11448,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11447,"column":0},"generated":{"line":11449,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11448,"column":0},"generated":{"line":11450,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11449,"column":0},"generated":{"line":11451,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11450,"column":0},"generated":{"line":11452,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11451,"column":0},"generated":{"line":11453,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11452,"column":0},"generated":{"line":11454,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11453,"column":0},"generated":{"line":11455,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11454,"column":0},"generated":{"line":11456,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11455,"column":0},"generated":{"line":11457,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11456,"column":0},"generated":{"line":11458,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11457,"column":0},"generated":{"line":11459,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11458,"column":0},"generated":{"line":11460,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11459,"column":0},"generated":{"line":11461,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11460,"column":0},"generated":{"line":11462,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11461,"column":0},"generated":{"line":11463,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11462,"column":0},"generated":{"line":11464,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11463,"column":0},"generated":{"line":11465,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11464,"column":0},"generated":{"line":11466,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11465,"column":0},"generated":{"line":11467,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11466,"column":0},"generated":{"line":11468,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11467,"column":0},"generated":{"line":11469,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11468,"column":0},"generated":{"line":11470,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11469,"column":0},"generated":{"line":11471,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11470,"column":0},"generated":{"line":11472,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11471,"column":0},"generated":{"line":11473,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11472,"column":0},"generated":{"line":11474,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11473,"column":0},"generated":{"line":11475,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11474,"column":0},"generated":{"line":11476,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11475,"column":0},"generated":{"line":11477,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11476,"column":0},"generated":{"line":11478,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11477,"column":0},"generated":{"line":11479,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11478,"column":0},"generated":{"line":11480,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11479,"column":0},"generated":{"line":11481,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11480,"column":0},"generated":{"line":11482,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11481,"column":0},"generated":{"line":11483,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11482,"column":0},"generated":{"line":11484,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11483,"column":0},"generated":{"line":11485,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11484,"column":0},"generated":{"line":11486,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11485,"column":0},"generated":{"line":11487,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11486,"column":0},"generated":{"line":11488,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11487,"column":0},"generated":{"line":11489,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11488,"column":0},"generated":{"line":11490,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11489,"column":0},"generated":{"line":11491,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11490,"column":0},"generated":{"line":11492,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11491,"column":0},"generated":{"line":11493,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11492,"column":0},"generated":{"line":11494,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11493,"column":0},"generated":{"line":11495,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11494,"column":0},"generated":{"line":11496,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11495,"column":0},"generated":{"line":11497,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11496,"column":0},"generated":{"line":11498,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11497,"column":0},"generated":{"line":11499,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11498,"column":0},"generated":{"line":11500,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11499,"column":0},"generated":{"line":11501,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11500,"column":0},"generated":{"line":11502,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11501,"column":0},"generated":{"line":11503,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11502,"column":0},"generated":{"line":11504,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11503,"column":0},"generated":{"line":11505,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11504,"column":0},"generated":{"line":11506,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11505,"column":0},"generated":{"line":11507,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11506,"column":0},"generated":{"line":11508,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11507,"column":0},"generated":{"line":11509,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11508,"column":0},"generated":{"line":11510,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11509,"column":0},"generated":{"line":11511,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11510,"column":0},"generated":{"line":11512,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11511,"column":0},"generated":{"line":11513,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11512,"column":0},"generated":{"line":11514,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11513,"column":0},"generated":{"line":11515,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11514,"column":0},"generated":{"line":11516,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11515,"column":0},"generated":{"line":11517,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11516,"column":0},"generated":{"line":11518,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11517,"column":0},"generated":{"line":11519,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11518,"column":0},"generated":{"line":11520,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11519,"column":0},"generated":{"line":11521,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11520,"column":0},"generated":{"line":11522,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11521,"column":0},"generated":{"line":11523,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11522,"column":0},"generated":{"line":11524,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11523,"column":0},"generated":{"line":11525,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11524,"column":0},"generated":{"line":11526,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11525,"column":0},"generated":{"line":11527,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11526,"column":0},"generated":{"line":11528,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11527,"column":0},"generated":{"line":11529,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11528,"column":0},"generated":{"line":11530,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11529,"column":0},"generated":{"line":11531,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11530,"column":0},"generated":{"line":11532,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11531,"column":0},"generated":{"line":11533,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11532,"column":0},"generated":{"line":11534,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11533,"column":0},"generated":{"line":11535,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11534,"column":0},"generated":{"line":11536,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11535,"column":0},"generated":{"line":11537,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11536,"column":0},"generated":{"line":11538,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11537,"column":0},"generated":{"line":11539,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11538,"column":0},"generated":{"line":11540,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11539,"column":0},"generated":{"line":11541,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11540,"column":0},"generated":{"line":11542,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11541,"column":0},"generated":{"line":11543,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11542,"column":0},"generated":{"line":11544,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11543,"column":0},"generated":{"line":11545,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11544,"column":0},"generated":{"line":11546,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11545,"column":0},"generated":{"line":11547,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11546,"column":0},"generated":{"line":11548,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11547,"column":0},"generated":{"line":11549,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11548,"column":0},"generated":{"line":11550,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11549,"column":0},"generated":{"line":11551,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11550,"column":0},"generated":{"line":11552,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11551,"column":0},"generated":{"line":11553,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11552,"column":0},"generated":{"line":11554,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11553,"column":0},"generated":{"line":11555,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11554,"column":0},"generated":{"line":11556,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11555,"column":0},"generated":{"line":11557,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11556,"column":0},"generated":{"line":11558,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11557,"column":0},"generated":{"line":11559,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11558,"column":0},"generated":{"line":11560,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11559,"column":0},"generated":{"line":11561,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11560,"column":0},"generated":{"line":11562,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11561,"column":0},"generated":{"line":11563,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11562,"column":0},"generated":{"line":11564,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11563,"column":0},"generated":{"line":11565,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11564,"column":0},"generated":{"line":11566,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11565,"column":0},"generated":{"line":11567,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11566,"column":0},"generated":{"line":11568,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11567,"column":0},"generated":{"line":11569,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11568,"column":0},"generated":{"line":11570,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11569,"column":0},"generated":{"line":11571,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11570,"column":0},"generated":{"line":11572,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11571,"column":0},"generated":{"line":11573,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11572,"column":0},"generated":{"line":11574,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11573,"column":0},"generated":{"line":11575,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11574,"column":0},"generated":{"line":11576,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11575,"column":0},"generated":{"line":11577,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11576,"column":0},"generated":{"line":11578,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11577,"column":0},"generated":{"line":11579,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11578,"column":0},"generated":{"line":11580,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11579,"column":0},"generated":{"line":11581,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11580,"column":0},"generated":{"line":11582,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11581,"column":0},"generated":{"line":11583,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11582,"column":0},"generated":{"line":11584,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11583,"column":0},"generated":{"line":11585,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11584,"column":0},"generated":{"line":11586,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11585,"column":0},"generated":{"line":11587,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11586,"column":0},"generated":{"line":11588,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11587,"column":0},"generated":{"line":11589,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11588,"column":0},"generated":{"line":11590,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11589,"column":0},"generated":{"line":11591,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11590,"column":0},"generated":{"line":11592,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11591,"column":0},"generated":{"line":11593,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11592,"column":0},"generated":{"line":11594,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11593,"column":0},"generated":{"line":11595,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11594,"column":0},"generated":{"line":11596,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11595,"column":0},"generated":{"line":11597,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11596,"column":0},"generated":{"line":11598,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11597,"column":0},"generated":{"line":11599,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11598,"column":0},"generated":{"line":11600,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11599,"column":0},"generated":{"line":11601,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11600,"column":0},"generated":{"line":11602,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11601,"column":0},"generated":{"line":11603,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11602,"column":0},"generated":{"line":11604,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11603,"column":0},"generated":{"line":11605,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11604,"column":0},"generated":{"line":11606,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11605,"column":0},"generated":{"line":11607,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11606,"column":0},"generated":{"line":11608,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11607,"column":0},"generated":{"line":11609,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11608,"column":0},"generated":{"line":11610,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11609,"column":0},"generated":{"line":11611,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11610,"column":0},"generated":{"line":11612,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11611,"column":0},"generated":{"line":11613,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11612,"column":0},"generated":{"line":11614,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11613,"column":0},"generated":{"line":11615,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11614,"column":0},"generated":{"line":11616,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11615,"column":0},"generated":{"line":11617,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11616,"column":0},"generated":{"line":11618,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11617,"column":0},"generated":{"line":11619,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11618,"column":0},"generated":{"line":11620,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11619,"column":0},"generated":{"line":11621,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11620,"column":0},"generated":{"line":11622,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11621,"column":0},"generated":{"line":11623,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11622,"column":0},"generated":{"line":11624,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11623,"column":0},"generated":{"line":11625,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11624,"column":0},"generated":{"line":11626,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11625,"column":0},"generated":{"line":11627,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11626,"column":0},"generated":{"line":11628,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11627,"column":0},"generated":{"line":11629,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11628,"column":0},"generated":{"line":11630,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11629,"column":0},"generated":{"line":11631,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11630,"column":0},"generated":{"line":11632,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11631,"column":0},"generated":{"line":11633,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11632,"column":0},"generated":{"line":11634,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11633,"column":0},"generated":{"line":11635,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11634,"column":0},"generated":{"line":11636,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11635,"column":0},"generated":{"line":11637,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11636,"column":0},"generated":{"line":11638,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11637,"column":0},"generated":{"line":11639,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11638,"column":0},"generated":{"line":11640,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11639,"column":0},"generated":{"line":11641,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11640,"column":0},"generated":{"line":11642,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11641,"column":0},"generated":{"line":11643,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11642,"column":0},"generated":{"line":11644,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11643,"column":0},"generated":{"line":11645,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11644,"column":0},"generated":{"line":11646,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11645,"column":0},"generated":{"line":11647,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11646,"column":0},"generated":{"line":11648,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11647,"column":0},"generated":{"line":11649,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11648,"column":0},"generated":{"line":11650,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11649,"column":0},"generated":{"line":11651,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11650,"column":0},"generated":{"line":11652,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11651,"column":0},"generated":{"line":11653,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11652,"column":0},"generated":{"line":11654,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11653,"column":0},"generated":{"line":11655,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11654,"column":0},"generated":{"line":11656,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11655,"column":0},"generated":{"line":11657,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11656,"column":0},"generated":{"line":11658,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11657,"column":0},"generated":{"line":11659,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11658,"column":0},"generated":{"line":11660,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11659,"column":0},"generated":{"line":11661,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11660,"column":0},"generated":{"line":11662,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11661,"column":0},"generated":{"line":11663,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11662,"column":0},"generated":{"line":11664,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11663,"column":0},"generated":{"line":11665,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11664,"column":0},"generated":{"line":11666,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11665,"column":0},"generated":{"line":11667,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11666,"column":0},"generated":{"line":11668,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11667,"column":0},"generated":{"line":11669,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11668,"column":0},"generated":{"line":11670,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11669,"column":0},"generated":{"line":11671,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11670,"column":0},"generated":{"line":11672,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11671,"column":0},"generated":{"line":11673,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11672,"column":0},"generated":{"line":11674,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11673,"column":0},"generated":{"line":11675,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11674,"column":0},"generated":{"line":11676,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11675,"column":0},"generated":{"line":11677,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11676,"column":0},"generated":{"line":11678,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11677,"column":0},"generated":{"line":11679,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11678,"column":0},"generated":{"line":11680,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11679,"column":0},"generated":{"line":11681,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11680,"column":0},"generated":{"line":11682,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11681,"column":0},"generated":{"line":11683,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11682,"column":0},"generated":{"line":11684,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11683,"column":0},"generated":{"line":11685,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11684,"column":0},"generated":{"line":11686,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11685,"column":0},"generated":{"line":11687,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11686,"column":0},"generated":{"line":11688,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11687,"column":0},"generated":{"line":11689,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11688,"column":0},"generated":{"line":11690,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11689,"column":0},"generated":{"line":11691,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11690,"column":0},"generated":{"line":11692,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11691,"column":0},"generated":{"line":11693,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11692,"column":0},"generated":{"line":11694,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11693,"column":0},"generated":{"line":11695,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11694,"column":0},"generated":{"line":11696,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11695,"column":0},"generated":{"line":11697,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11696,"column":0},"generated":{"line":11698,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11697,"column":0},"generated":{"line":11699,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11698,"column":0},"generated":{"line":11700,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11699,"column":0},"generated":{"line":11701,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11700,"column":0},"generated":{"line":11702,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11701,"column":0},"generated":{"line":11703,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11702,"column":0},"generated":{"line":11704,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11703,"column":0},"generated":{"line":11705,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11704,"column":0},"generated":{"line":11706,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11705,"column":0},"generated":{"line":11707,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11706,"column":0},"generated":{"line":11708,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11707,"column":0},"generated":{"line":11709,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11708,"column":0},"generated":{"line":11710,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11709,"column":0},"generated":{"line":11711,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11710,"column":0},"generated":{"line":11712,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11711,"column":0},"generated":{"line":11713,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11712,"column":0},"generated":{"line":11714,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11713,"column":0},"generated":{"line":11715,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11714,"column":0},"generated":{"line":11716,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11715,"column":0},"generated":{"line":11717,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11716,"column":0},"generated":{"line":11718,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11717,"column":0},"generated":{"line":11719,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11718,"column":0},"generated":{"line":11720,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11719,"column":0},"generated":{"line":11721,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11720,"column":0},"generated":{"line":11722,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11721,"column":0},"generated":{"line":11723,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11722,"column":0},"generated":{"line":11724,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11723,"column":0},"generated":{"line":11725,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11724,"column":0},"generated":{"line":11726,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11725,"column":0},"generated":{"line":11727,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11726,"column":0},"generated":{"line":11728,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11727,"column":0},"generated":{"line":11729,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11728,"column":0},"generated":{"line":11730,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11729,"column":0},"generated":{"line":11731,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11730,"column":0},"generated":{"line":11732,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11731,"column":0},"generated":{"line":11733,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11732,"column":0},"generated":{"line":11734,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11733,"column":0},"generated":{"line":11735,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11734,"column":0},"generated":{"line":11736,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11735,"column":0},"generated":{"line":11737,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11736,"column":0},"generated":{"line":11738,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11737,"column":0},"generated":{"line":11739,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11738,"column":0},"generated":{"line":11740,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11739,"column":0},"generated":{"line":11741,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11740,"column":0},"generated":{"line":11742,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11741,"column":0},"generated":{"line":11743,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11742,"column":0},"generated":{"line":11744,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11743,"column":0},"generated":{"line":11745,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11744,"column":0},"generated":{"line":11746,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11745,"column":0},"generated":{"line":11747,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11746,"column":0},"generated":{"line":11748,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11747,"column":0},"generated":{"line":11749,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11748,"column":0},"generated":{"line":11750,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11749,"column":0},"generated":{"line":11751,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11750,"column":0},"generated":{"line":11752,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11751,"column":0},"generated":{"line":11753,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11752,"column":0},"generated":{"line":11754,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11753,"column":0},"generated":{"line":11755,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11754,"column":0},"generated":{"line":11756,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11755,"column":0},"generated":{"line":11757,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11756,"column":0},"generated":{"line":11758,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11757,"column":0},"generated":{"line":11759,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11758,"column":0},"generated":{"line":11760,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11759,"column":0},"generated":{"line":11761,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11760,"column":0},"generated":{"line":11762,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11761,"column":0},"generated":{"line":11763,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11762,"column":0},"generated":{"line":11764,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11763,"column":0},"generated":{"line":11765,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11764,"column":0},"generated":{"line":11766,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11765,"column":0},"generated":{"line":11767,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11766,"column":0},"generated":{"line":11768,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11767,"column":0},"generated":{"line":11769,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11768,"column":0},"generated":{"line":11770,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11769,"column":0},"generated":{"line":11771,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11770,"column":0},"generated":{"line":11772,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11771,"column":0},"generated":{"line":11773,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11772,"column":0},"generated":{"line":11774,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11773,"column":0},"generated":{"line":11775,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11774,"column":0},"generated":{"line":11776,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11775,"column":0},"generated":{"line":11777,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11776,"column":0},"generated":{"line":11778,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11777,"column":0},"generated":{"line":11779,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11778,"column":0},"generated":{"line":11780,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11779,"column":0},"generated":{"line":11781,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11780,"column":0},"generated":{"line":11782,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11781,"column":0},"generated":{"line":11783,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11782,"column":0},"generated":{"line":11784,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11783,"column":0},"generated":{"line":11785,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11784,"column":0},"generated":{"line":11786,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11785,"column":0},"generated":{"line":11787,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11786,"column":0},"generated":{"line":11788,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11787,"column":0},"generated":{"line":11789,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11788,"column":0},"generated":{"line":11790,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11789,"column":0},"generated":{"line":11791,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11790,"column":0},"generated":{"line":11792,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11791,"column":0},"generated":{"line":11793,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11792,"column":0},"generated":{"line":11794,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11793,"column":0},"generated":{"line":11795,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11794,"column":0},"generated":{"line":11796,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11795,"column":0},"generated":{"line":11797,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11796,"column":0},"generated":{"line":11798,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11797,"column":0},"generated":{"line":11799,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11798,"column":0},"generated":{"line":11800,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11799,"column":0},"generated":{"line":11801,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11800,"column":0},"generated":{"line":11802,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11801,"column":0},"generated":{"line":11803,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11802,"column":0},"generated":{"line":11804,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11803,"column":0},"generated":{"line":11805,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11804,"column":0},"generated":{"line":11806,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11805,"column":0},"generated":{"line":11807,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11806,"column":0},"generated":{"line":11808,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11807,"column":0},"generated":{"line":11809,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11808,"column":0},"generated":{"line":11810,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11809,"column":0},"generated":{"line":11811,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11810,"column":0},"generated":{"line":11812,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11811,"column":0},"generated":{"line":11813,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11812,"column":0},"generated":{"line":11814,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11813,"column":0},"generated":{"line":11815,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11814,"column":0},"generated":{"line":11816,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11815,"column":0},"generated":{"line":11817,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11816,"column":0},"generated":{"line":11818,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11817,"column":0},"generated":{"line":11819,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11818,"column":0},"generated":{"line":11820,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11819,"column":0},"generated":{"line":11821,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11820,"column":0},"generated":{"line":11822,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11821,"column":0},"generated":{"line":11823,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11822,"column":0},"generated":{"line":11824,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11823,"column":0},"generated":{"line":11825,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11824,"column":0},"generated":{"line":11826,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11825,"column":0},"generated":{"line":11827,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11826,"column":0},"generated":{"line":11828,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11827,"column":0},"generated":{"line":11829,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11828,"column":0},"generated":{"line":11830,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11829,"column":0},"generated":{"line":11831,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11830,"column":0},"generated":{"line":11832,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11831,"column":0},"generated":{"line":11833,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11832,"column":0},"generated":{"line":11834,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11833,"column":0},"generated":{"line":11835,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11834,"column":0},"generated":{"line":11836,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11835,"column":0},"generated":{"line":11837,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11836,"column":0},"generated":{"line":11838,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11837,"column":0},"generated":{"line":11839,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11838,"column":0},"generated":{"line":11840,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11839,"column":0},"generated":{"line":11841,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11840,"column":0},"generated":{"line":11842,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11841,"column":0},"generated":{"line":11843,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11842,"column":0},"generated":{"line":11844,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11843,"column":0},"generated":{"line":11845,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11844,"column":0},"generated":{"line":11846,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11845,"column":0},"generated":{"line":11847,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11846,"column":0},"generated":{"line":11848,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11847,"column":0},"generated":{"line":11849,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11848,"column":0},"generated":{"line":11850,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11849,"column":0},"generated":{"line":11851,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11850,"column":0},"generated":{"line":11852,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11851,"column":0},"generated":{"line":11853,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11852,"column":0},"generated":{"line":11854,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11853,"column":0},"generated":{"line":11855,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11854,"column":0},"generated":{"line":11856,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11855,"column":0},"generated":{"line":11857,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11856,"column":0},"generated":{"line":11858,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11857,"column":0},"generated":{"line":11859,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11858,"column":0},"generated":{"line":11860,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11859,"column":0},"generated":{"line":11861,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11860,"column":0},"generated":{"line":11862,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11861,"column":0},"generated":{"line":11863,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11862,"column":0},"generated":{"line":11864,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11863,"column":0},"generated":{"line":11865,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11864,"column":0},"generated":{"line":11866,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11865,"column":0},"generated":{"line":11867,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11866,"column":0},"generated":{"line":11868,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11867,"column":0},"generated":{"line":11869,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11868,"column":0},"generated":{"line":11870,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11869,"column":0},"generated":{"line":11871,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11870,"column":0},"generated":{"line":11872,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11871,"column":0},"generated":{"line":11873,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11872,"column":0},"generated":{"line":11874,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11873,"column":0},"generated":{"line":11875,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11874,"column":0},"generated":{"line":11876,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11875,"column":0},"generated":{"line":11877,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11876,"column":0},"generated":{"line":11878,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11877,"column":0},"generated":{"line":11879,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11878,"column":0},"generated":{"line":11880,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11879,"column":0},"generated":{"line":11881,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11880,"column":0},"generated":{"line":11882,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11881,"column":0},"generated":{"line":11883,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11882,"column":0},"generated":{"line":11884,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11883,"column":0},"generated":{"line":11885,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11884,"column":0},"generated":{"line":11886,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11885,"column":0},"generated":{"line":11887,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11886,"column":0},"generated":{"line":11888,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11887,"column":0},"generated":{"line":11889,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11888,"column":0},"generated":{"line":11890,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11889,"column":0},"generated":{"line":11891,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11890,"column":0},"generated":{"line":11892,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11891,"column":0},"generated":{"line":11893,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11892,"column":0},"generated":{"line":11894,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11893,"column":0},"generated":{"line":11895,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11894,"column":0},"generated":{"line":11896,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11895,"column":0},"generated":{"line":11897,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11896,"column":0},"generated":{"line":11898,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11897,"column":0},"generated":{"line":11899,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11898,"column":0},"generated":{"line":11900,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11899,"column":0},"generated":{"line":11901,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11900,"column":0},"generated":{"line":11902,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11901,"column":0},"generated":{"line":11903,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11902,"column":0},"generated":{"line":11904,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11903,"column":0},"generated":{"line":11905,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11904,"column":0},"generated":{"line":11906,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11905,"column":0},"generated":{"line":11907,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11906,"column":0},"generated":{"line":11908,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11907,"column":0},"generated":{"line":11909,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11908,"column":0},"generated":{"line":11910,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11909,"column":0},"generated":{"line":11911,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11910,"column":0},"generated":{"line":11912,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11911,"column":0},"generated":{"line":11913,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11912,"column":0},"generated":{"line":11914,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11913,"column":0},"generated":{"line":11915,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11914,"column":0},"generated":{"line":11916,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11915,"column":0},"generated":{"line":11917,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11916,"column":0},"generated":{"line":11918,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11917,"column":0},"generated":{"line":11919,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11918,"column":0},"generated":{"line":11920,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11919,"column":0},"generated":{"line":11921,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11920,"column":0},"generated":{"line":11922,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11921,"column":0},"generated":{"line":11923,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11922,"column":0},"generated":{"line":11924,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11923,"column":0},"generated":{"line":11925,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11924,"column":0},"generated":{"line":11926,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11925,"column":0},"generated":{"line":11927,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11926,"column":0},"generated":{"line":11928,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11927,"column":0},"generated":{"line":11929,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11928,"column":0},"generated":{"line":11930,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11929,"column":0},"generated":{"line":11931,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11930,"column":0},"generated":{"line":11932,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11931,"column":0},"generated":{"line":11933,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11932,"column":0},"generated":{"line":11934,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11933,"column":0},"generated":{"line":11935,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11934,"column":0},"generated":{"line":11936,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11935,"column":0},"generated":{"line":11937,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11936,"column":0},"generated":{"line":11938,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11937,"column":0},"generated":{"line":11939,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11938,"column":0},"generated":{"line":11940,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11939,"column":0},"generated":{"line":11941,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11940,"column":0},"generated":{"line":11942,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11941,"column":0},"generated":{"line":11943,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11942,"column":0},"generated":{"line":11944,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11943,"column":0},"generated":{"line":11945,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11944,"column":0},"generated":{"line":11946,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11945,"column":0},"generated":{"line":11947,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11946,"column":0},"generated":{"line":11948,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11947,"column":0},"generated":{"line":11949,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11948,"column":0},"generated":{"line":11950,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11949,"column":0},"generated":{"line":11951,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11950,"column":0},"generated":{"line":11952,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11951,"column":0},"generated":{"line":11953,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11952,"column":0},"generated":{"line":11954,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11953,"column":0},"generated":{"line":11955,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11954,"column":0},"generated":{"line":11956,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11955,"column":0},"generated":{"line":11957,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11956,"column":0},"generated":{"line":11958,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11957,"column":0},"generated":{"line":11959,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11958,"column":0},"generated":{"line":11960,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11959,"column":0},"generated":{"line":11961,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11960,"column":0},"generated":{"line":11962,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11961,"column":0},"generated":{"line":11963,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11962,"column":0},"generated":{"line":11964,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11963,"column":0},"generated":{"line":11965,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11964,"column":0},"generated":{"line":11966,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11965,"column":0},"generated":{"line":11967,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11966,"column":0},"generated":{"line":11968,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11967,"column":0},"generated":{"line":11969,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11968,"column":0},"generated":{"line":11970,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11969,"column":0},"generated":{"line":11971,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11970,"column":0},"generated":{"line":11972,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11971,"column":0},"generated":{"line":11973,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11972,"column":0},"generated":{"line":11974,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11973,"column":0},"generated":{"line":11975,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11974,"column":0},"generated":{"line":11976,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11975,"column":0},"generated":{"line":11977,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11976,"column":0},"generated":{"line":11978,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11977,"column":0},"generated":{"line":11979,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11978,"column":0},"generated":{"line":11980,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11979,"column":0},"generated":{"line":11981,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11980,"column":0},"generated":{"line":11982,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11981,"column":0},"generated":{"line":11983,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11982,"column":0},"generated":{"line":11984,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11983,"column":0},"generated":{"line":11985,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11984,"column":0},"generated":{"line":11986,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11985,"column":0},"generated":{"line":11987,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11986,"column":0},"generated":{"line":11988,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11987,"column":0},"generated":{"line":11989,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11988,"column":0},"generated":{"line":11990,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11989,"column":0},"generated":{"line":11991,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11990,"column":0},"generated":{"line":11992,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11991,"column":0},"generated":{"line":11993,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11992,"column":0},"generated":{"line":11994,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11993,"column":0},"generated":{"line":11995,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11994,"column":0},"generated":{"line":11996,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11995,"column":0},"generated":{"line":11997,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11996,"column":0},"generated":{"line":11998,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11997,"column":0},"generated":{"line":11999,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11998,"column":0},"generated":{"line":12000,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":11999,"column":0},"generated":{"line":12001,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12000,"column":0},"generated":{"line":12002,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12001,"column":0},"generated":{"line":12003,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12002,"column":0},"generated":{"line":12004,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12003,"column":0},"generated":{"line":12005,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12004,"column":0},"generated":{"line":12006,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12005,"column":0},"generated":{"line":12007,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12006,"column":0},"generated":{"line":12008,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12007,"column":0},"generated":{"line":12009,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12008,"column":0},"generated":{"line":12010,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12009,"column":0},"generated":{"line":12011,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12010,"column":0},"generated":{"line":12012,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12011,"column":0},"generated":{"line":12013,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12012,"column":0},"generated":{"line":12014,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12013,"column":0},"generated":{"line":12015,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12014,"column":0},"generated":{"line":12016,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12015,"column":0},"generated":{"line":12017,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12016,"column":0},"generated":{"line":12018,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12017,"column":0},"generated":{"line":12019,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12018,"column":0},"generated":{"line":12020,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12019,"column":0},"generated":{"line":12021,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12020,"column":0},"generated":{"line":12022,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12021,"column":0},"generated":{"line":12023,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12022,"column":0},"generated":{"line":12024,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12023,"column":0},"generated":{"line":12025,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12024,"column":0},"generated":{"line":12026,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12025,"column":0},"generated":{"line":12027,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12026,"column":0},"generated":{"line":12028,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12027,"column":0},"generated":{"line":12029,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12028,"column":0},"generated":{"line":12030,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12029,"column":0},"generated":{"line":12031,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12030,"column":0},"generated":{"line":12032,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12031,"column":0},"generated":{"line":12033,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12032,"column":0},"generated":{"line":12034,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12033,"column":0},"generated":{"line":12035,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12034,"column":0},"generated":{"line":12036,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12035,"column":0},"generated":{"line":12037,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12036,"column":0},"generated":{"line":12038,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12037,"column":0},"generated":{"line":12039,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12038,"column":0},"generated":{"line":12040,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12039,"column":0},"generated":{"line":12041,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12040,"column":0},"generated":{"line":12042,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12041,"column":0},"generated":{"line":12043,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12042,"column":0},"generated":{"line":12044,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12043,"column":0},"generated":{"line":12045,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12044,"column":0},"generated":{"line":12046,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12045,"column":0},"generated":{"line":12047,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12046,"column":0},"generated":{"line":12048,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12047,"column":0},"generated":{"line":12049,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12048,"column":0},"generated":{"line":12050,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12049,"column":0},"generated":{"line":12051,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12050,"column":0},"generated":{"line":12052,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12051,"column":0},"generated":{"line":12053,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12052,"column":0},"generated":{"line":12054,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12053,"column":0},"generated":{"line":12055,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12054,"column":0},"generated":{"line":12056,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12055,"column":0},"generated":{"line":12057,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12056,"column":0},"generated":{"line":12058,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12057,"column":0},"generated":{"line":12059,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12058,"column":0},"generated":{"line":12060,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12059,"column":0},"generated":{"line":12061,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12060,"column":0},"generated":{"line":12062,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12061,"column":0},"generated":{"line":12063,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12062,"column":0},"generated":{"line":12064,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12063,"column":0},"generated":{"line":12065,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12064,"column":0},"generated":{"line":12066,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12065,"column":0},"generated":{"line":12067,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12066,"column":0},"generated":{"line":12068,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12067,"column":0},"generated":{"line":12069,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12068,"column":0},"generated":{"line":12070,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12069,"column":0},"generated":{"line":12071,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12070,"column":0},"generated":{"line":12072,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12071,"column":0},"generated":{"line":12073,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12072,"column":0},"generated":{"line":12074,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12073,"column":0},"generated":{"line":12075,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12074,"column":0},"generated":{"line":12076,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12075,"column":0},"generated":{"line":12077,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12076,"column":0},"generated":{"line":12078,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12077,"column":0},"generated":{"line":12079,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12078,"column":0},"generated":{"line":12080,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12079,"column":0},"generated":{"line":12081,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12080,"column":0},"generated":{"line":12082,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12081,"column":0},"generated":{"line":12083,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12082,"column":0},"generated":{"line":12084,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12083,"column":0},"generated":{"line":12085,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12084,"column":0},"generated":{"line":12086,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12085,"column":0},"generated":{"line":12087,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12086,"column":0},"generated":{"line":12088,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12087,"column":0},"generated":{"line":12089,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12088,"column":0},"generated":{"line":12090,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12089,"column":0},"generated":{"line":12091,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12090,"column":0},"generated":{"line":12092,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12091,"column":0},"generated":{"line":12093,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12092,"column":0},"generated":{"line":12094,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12093,"column":0},"generated":{"line":12095,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12094,"column":0},"generated":{"line":12096,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12095,"column":0},"generated":{"line":12097,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12096,"column":0},"generated":{"line":12098,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12097,"column":0},"generated":{"line":12099,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12098,"column":0},"generated":{"line":12100,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12099,"column":0},"generated":{"line":12101,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12100,"column":0},"generated":{"line":12102,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12101,"column":0},"generated":{"line":12103,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12102,"column":0},"generated":{"line":12104,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12103,"column":0},"generated":{"line":12105,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12104,"column":0},"generated":{"line":12106,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12105,"column":0},"generated":{"line":12107,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12106,"column":0},"generated":{"line":12108,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12107,"column":0},"generated":{"line":12109,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12108,"column":0},"generated":{"line":12110,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12109,"column":0},"generated":{"line":12111,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12110,"column":0},"generated":{"line":12112,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12111,"column":0},"generated":{"line":12113,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12112,"column":0},"generated":{"line":12114,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12113,"column":0},"generated":{"line":12115,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12114,"column":0},"generated":{"line":12116,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12115,"column":0},"generated":{"line":12117,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12116,"column":0},"generated":{"line":12118,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12117,"column":0},"generated":{"line":12119,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12118,"column":0},"generated":{"line":12120,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12119,"column":0},"generated":{"line":12121,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12120,"column":0},"generated":{"line":12122,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12121,"column":0},"generated":{"line":12123,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12122,"column":0},"generated":{"line":12124,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12123,"column":0},"generated":{"line":12125,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12124,"column":0},"generated":{"line":12126,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12125,"column":0},"generated":{"line":12127,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12126,"column":0},"generated":{"line":12128,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12127,"column":0},"generated":{"line":12129,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12128,"column":0},"generated":{"line":12130,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12129,"column":0},"generated":{"line":12131,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12130,"column":0},"generated":{"line":12132,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12131,"column":0},"generated":{"line":12133,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12132,"column":0},"generated":{"line":12134,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12133,"column":0},"generated":{"line":12135,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12134,"column":0},"generated":{"line":12136,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12135,"column":0},"generated":{"line":12137,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12136,"column":0},"generated":{"line":12138,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12137,"column":0},"generated":{"line":12139,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12138,"column":0},"generated":{"line":12140,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12139,"column":0},"generated":{"line":12141,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12140,"column":0},"generated":{"line":12142,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12141,"column":0},"generated":{"line":12143,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12142,"column":0},"generated":{"line":12144,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12143,"column":0},"generated":{"line":12145,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12144,"column":0},"generated":{"line":12146,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12145,"column":0},"generated":{"line":12147,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12146,"column":0},"generated":{"line":12148,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12147,"column":0},"generated":{"line":12149,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12148,"column":0},"generated":{"line":12150,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12149,"column":0},"generated":{"line":12151,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12150,"column":0},"generated":{"line":12152,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12151,"column":0},"generated":{"line":12153,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12152,"column":0},"generated":{"line":12154,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12153,"column":0},"generated":{"line":12155,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12154,"column":0},"generated":{"line":12156,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12155,"column":0},"generated":{"line":12157,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12156,"column":0},"generated":{"line":12158,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12157,"column":0},"generated":{"line":12159,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12158,"column":0},"generated":{"line":12160,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12159,"column":0},"generated":{"line":12161,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12160,"column":0},"generated":{"line":12162,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12161,"column":0},"generated":{"line":12163,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12162,"column":0},"generated":{"line":12164,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12163,"column":0},"generated":{"line":12165,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12164,"column":0},"generated":{"line":12166,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12165,"column":0},"generated":{"line":12167,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12166,"column":0},"generated":{"line":12168,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12167,"column":0},"generated":{"line":12169,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12168,"column":0},"generated":{"line":12170,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12169,"column":0},"generated":{"line":12171,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12170,"column":0},"generated":{"line":12172,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12171,"column":0},"generated":{"line":12173,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12172,"column":0},"generated":{"line":12174,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12173,"column":0},"generated":{"line":12175,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12174,"column":0},"generated":{"line":12176,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12175,"column":0},"generated":{"line":12177,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12176,"column":0},"generated":{"line":12178,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12177,"column":0},"generated":{"line":12179,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12178,"column":0},"generated":{"line":12180,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12179,"column":0},"generated":{"line":12181,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12180,"column":0},"generated":{"line":12182,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12181,"column":0},"generated":{"line":12183,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12182,"column":0},"generated":{"line":12184,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12183,"column":0},"generated":{"line":12185,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12184,"column":0},"generated":{"line":12186,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12185,"column":0},"generated":{"line":12187,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12186,"column":0},"generated":{"line":12188,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12187,"column":0},"generated":{"line":12189,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12188,"column":0},"generated":{"line":12190,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12189,"column":0},"generated":{"line":12191,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12190,"column":0},"generated":{"line":12192,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12191,"column":0},"generated":{"line":12193,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12192,"column":0},"generated":{"line":12194,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12193,"column":0},"generated":{"line":12195,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12194,"column":0},"generated":{"line":12196,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12195,"column":0},"generated":{"line":12197,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12196,"column":0},"generated":{"line":12198,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12197,"column":0},"generated":{"line":12199,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12198,"column":0},"generated":{"line":12200,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12199,"column":0},"generated":{"line":12201,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12200,"column":0},"generated":{"line":12202,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12201,"column":0},"generated":{"line":12203,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12202,"column":0},"generated":{"line":12204,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12203,"column":0},"generated":{"line":12205,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12204,"column":0},"generated":{"line":12206,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12205,"column":0},"generated":{"line":12207,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12206,"column":0},"generated":{"line":12208,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12207,"column":0},"generated":{"line":12209,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12208,"column":0},"generated":{"line":12210,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12209,"column":0},"generated":{"line":12211,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12210,"column":0},"generated":{"line":12212,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12211,"column":0},"generated":{"line":12213,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12212,"column":0},"generated":{"line":12214,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12213,"column":0},"generated":{"line":12215,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12214,"column":0},"generated":{"line":12216,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12215,"column":0},"generated":{"line":12217,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12216,"column":0},"generated":{"line":12218,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12217,"column":0},"generated":{"line":12219,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12218,"column":0},"generated":{"line":12220,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12219,"column":0},"generated":{"line":12221,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12220,"column":0},"generated":{"line":12222,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12221,"column":0},"generated":{"line":12223,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12222,"column":0},"generated":{"line":12224,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12223,"column":0},"generated":{"line":12225,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12224,"column":0},"generated":{"line":12226,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12225,"column":0},"generated":{"line":12227,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12226,"column":0},"generated":{"line":12228,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12227,"column":0},"generated":{"line":12229,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12228,"column":0},"generated":{"line":12230,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12229,"column":0},"generated":{"line":12231,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12230,"column":0},"generated":{"line":12232,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12231,"column":0},"generated":{"line":12233,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12232,"column":0},"generated":{"line":12234,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12233,"column":0},"generated":{"line":12235,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12234,"column":0},"generated":{"line":12236,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12235,"column":0},"generated":{"line":12237,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12236,"column":0},"generated":{"line":12238,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12237,"column":0},"generated":{"line":12239,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12238,"column":0},"generated":{"line":12240,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12239,"column":0},"generated":{"line":12241,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12240,"column":0},"generated":{"line":12242,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12241,"column":0},"generated":{"line":12243,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12242,"column":0},"generated":{"line":12244,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12243,"column":0},"generated":{"line":12245,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12244,"column":0},"generated":{"line":12246,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12245,"column":0},"generated":{"line":12247,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12246,"column":0},"generated":{"line":12248,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12247,"column":0},"generated":{"line":12249,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12248,"column":0},"generated":{"line":12250,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12249,"column":0},"generated":{"line":12251,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12250,"column":0},"generated":{"line":12252,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12251,"column":0},"generated":{"line":12253,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12252,"column":0},"generated":{"line":12254,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12253,"column":0},"generated":{"line":12255,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12254,"column":0},"generated":{"line":12256,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12255,"column":0},"generated":{"line":12257,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12256,"column":0},"generated":{"line":12258,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12257,"column":0},"generated":{"line":12259,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12258,"column":0},"generated":{"line":12260,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12259,"column":0},"generated":{"line":12261,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12260,"column":0},"generated":{"line":12262,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12261,"column":0},"generated":{"line":12263,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12262,"column":0},"generated":{"line":12264,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12263,"column":0},"generated":{"line":12265,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12264,"column":0},"generated":{"line":12266,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12265,"column":0},"generated":{"line":12267,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12266,"column":0},"generated":{"line":12268,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12267,"column":0},"generated":{"line":12269,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12268,"column":0},"generated":{"line":12270,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12269,"column":0},"generated":{"line":12271,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12270,"column":0},"generated":{"line":12272,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12271,"column":0},"generated":{"line":12273,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12272,"column":0},"generated":{"line":12274,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12273,"column":0},"generated":{"line":12275,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12274,"column":0},"generated":{"line":12276,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12275,"column":0},"generated":{"line":12277,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12276,"column":0},"generated":{"line":12278,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12277,"column":0},"generated":{"line":12279,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12278,"column":0},"generated":{"line":12280,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12279,"column":0},"generated":{"line":12281,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12280,"column":0},"generated":{"line":12282,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12281,"column":0},"generated":{"line":12283,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12282,"column":0},"generated":{"line":12284,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12283,"column":0},"generated":{"line":12285,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12284,"column":0},"generated":{"line":12286,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12285,"column":0},"generated":{"line":12287,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12286,"column":0},"generated":{"line":12288,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12287,"column":0},"generated":{"line":12289,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12288,"column":0},"generated":{"line":12290,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12289,"column":0},"generated":{"line":12291,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12290,"column":0},"generated":{"line":12292,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12291,"column":0},"generated":{"line":12293,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12292,"column":0},"generated":{"line":12294,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12293,"column":0},"generated":{"line":12295,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12294,"column":0},"generated":{"line":12296,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12295,"column":0},"generated":{"line":12297,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12296,"column":0},"generated":{"line":12298,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12297,"column":0},"generated":{"line":12299,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12298,"column":0},"generated":{"line":12300,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12299,"column":0},"generated":{"line":12301,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12300,"column":0},"generated":{"line":12302,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12301,"column":0},"generated":{"line":12303,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12302,"column":0},"generated":{"line":12304,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12303,"column":0},"generated":{"line":12305,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12304,"column":0},"generated":{"line":12306,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12305,"column":0},"generated":{"line":12307,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12306,"column":0},"generated":{"line":12308,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12307,"column":0},"generated":{"line":12309,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12308,"column":0},"generated":{"line":12310,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12309,"column":0},"generated":{"line":12311,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12310,"column":0},"generated":{"line":12312,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12311,"column":0},"generated":{"line":12313,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12312,"column":0},"generated":{"line":12314,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12313,"column":0},"generated":{"line":12315,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12314,"column":0},"generated":{"line":12316,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12315,"column":0},"generated":{"line":12317,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12316,"column":0},"generated":{"line":12318,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12317,"column":0},"generated":{"line":12319,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12318,"column":0},"generated":{"line":12320,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12319,"column":0},"generated":{"line":12321,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12320,"column":0},"generated":{"line":12322,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12321,"column":0},"generated":{"line":12323,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12322,"column":0},"generated":{"line":12324,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12323,"column":0},"generated":{"line":12325,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12324,"column":0},"generated":{"line":12326,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12325,"column":0},"generated":{"line":12327,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12326,"column":0},"generated":{"line":12328,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12327,"column":0},"generated":{"line":12329,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12328,"column":0},"generated":{"line":12330,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12329,"column":0},"generated":{"line":12331,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12330,"column":0},"generated":{"line":12332,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12331,"column":0},"generated":{"line":12333,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12332,"column":0},"generated":{"line":12334,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12333,"column":0},"generated":{"line":12335,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12334,"column":0},"generated":{"line":12336,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12335,"column":0},"generated":{"line":12337,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12336,"column":0},"generated":{"line":12338,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12337,"column":0},"generated":{"line":12339,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12338,"column":0},"generated":{"line":12340,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12339,"column":0},"generated":{"line":12341,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12340,"column":0},"generated":{"line":12342,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12341,"column":0},"generated":{"line":12343,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12342,"column":0},"generated":{"line":12344,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12343,"column":0},"generated":{"line":12345,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12344,"column":0},"generated":{"line":12346,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12345,"column":0},"generated":{"line":12347,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12346,"column":0},"generated":{"line":12348,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12347,"column":0},"generated":{"line":12349,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12348,"column":0},"generated":{"line":12350,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12349,"column":0},"generated":{"line":12351,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12350,"column":0},"generated":{"line":12352,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12351,"column":0},"generated":{"line":12353,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12352,"column":0},"generated":{"line":12354,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12353,"column":0},"generated":{"line":12355,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12354,"column":0},"generated":{"line":12356,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12355,"column":0},"generated":{"line":12357,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12356,"column":0},"generated":{"line":12358,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12357,"column":0},"generated":{"line":12359,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12358,"column":0},"generated":{"line":12360,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12359,"column":0},"generated":{"line":12361,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12360,"column":0},"generated":{"line":12362,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12361,"column":0},"generated":{"line":12363,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12362,"column":0},"generated":{"line":12364,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12363,"column":0},"generated":{"line":12365,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12364,"column":0},"generated":{"line":12366,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12365,"column":0},"generated":{"line":12367,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12366,"column":0},"generated":{"line":12368,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12367,"column":0},"generated":{"line":12369,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12368,"column":0},"generated":{"line":12370,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12369,"column":0},"generated":{"line":12371,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12370,"column":0},"generated":{"line":12372,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12371,"column":0},"generated":{"line":12373,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12372,"column":0},"generated":{"line":12374,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12373,"column":0},"generated":{"line":12375,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12374,"column":0},"generated":{"line":12376,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12375,"column":0},"generated":{"line":12377,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12376,"column":0},"generated":{"line":12378,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12377,"column":0},"generated":{"line":12379,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12378,"column":0},"generated":{"line":12380,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12379,"column":0},"generated":{"line":12381,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12380,"column":0},"generated":{"line":12382,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12381,"column":0},"generated":{"line":12383,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12382,"column":0},"generated":{"line":12384,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12383,"column":0},"generated":{"line":12385,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12384,"column":0},"generated":{"line":12386,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12385,"column":0},"generated":{"line":12387,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12386,"column":0},"generated":{"line":12388,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12387,"column":0},"generated":{"line":12389,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12388,"column":0},"generated":{"line":12390,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12389,"column":0},"generated":{"line":12391,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12390,"column":0},"generated":{"line":12392,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12391,"column":0},"generated":{"line":12393,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12392,"column":0},"generated":{"line":12394,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12393,"column":0},"generated":{"line":12395,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12394,"column":0},"generated":{"line":12396,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12395,"column":0},"generated":{"line":12397,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12396,"column":0},"generated":{"line":12398,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12397,"column":0},"generated":{"line":12399,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12398,"column":0},"generated":{"line":12400,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12399,"column":0},"generated":{"line":12401,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12400,"column":0},"generated":{"line":12402,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12401,"column":0},"generated":{"line":12403,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12402,"column":0},"generated":{"line":12404,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12403,"column":0},"generated":{"line":12405,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12404,"column":0},"generated":{"line":12406,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12405,"column":0},"generated":{"line":12407,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12406,"column":0},"generated":{"line":12408,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12407,"column":0},"generated":{"line":12409,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12408,"column":0},"generated":{"line":12410,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12409,"column":0},"generated":{"line":12411,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12410,"column":0},"generated":{"line":12412,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12411,"column":0},"generated":{"line":12413,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12412,"column":0},"generated":{"line":12414,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12413,"column":0},"generated":{"line":12415,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12414,"column":0},"generated":{"line":12416,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12415,"column":0},"generated":{"line":12417,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12416,"column":0},"generated":{"line":12418,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12417,"column":0},"generated":{"line":12419,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12418,"column":0},"generated":{"line":12420,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12419,"column":0},"generated":{"line":12421,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12420,"column":0},"generated":{"line":12422,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12421,"column":0},"generated":{"line":12423,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12422,"column":0},"generated":{"line":12424,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12423,"column":0},"generated":{"line":12425,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12424,"column":0},"generated":{"line":12426,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12425,"column":0},"generated":{"line":12427,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12426,"column":0},"generated":{"line":12428,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12427,"column":0},"generated":{"line":12429,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12428,"column":0},"generated":{"line":12430,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12429,"column":0},"generated":{"line":12431,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12430,"column":0},"generated":{"line":12432,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12431,"column":0},"generated":{"line":12433,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12432,"column":0},"generated":{"line":12434,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12433,"column":0},"generated":{"line":12435,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12434,"column":0},"generated":{"line":12436,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12435,"column":0},"generated":{"line":12437,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12436,"column":0},"generated":{"line":12438,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12437,"column":0},"generated":{"line":12439,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12438,"column":0},"generated":{"line":12440,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12439,"column":0},"generated":{"line":12441,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12440,"column":0},"generated":{"line":12442,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12441,"column":0},"generated":{"line":12443,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12442,"column":0},"generated":{"line":12444,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12443,"column":0},"generated":{"line":12445,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12444,"column":0},"generated":{"line":12446,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12445,"column":0},"generated":{"line":12447,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12446,"column":0},"generated":{"line":12448,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12447,"column":0},"generated":{"line":12449,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12448,"column":0},"generated":{"line":12450,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12449,"column":0},"generated":{"line":12451,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12450,"column":0},"generated":{"line":12452,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12451,"column":0},"generated":{"line":12453,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12452,"column":0},"generated":{"line":12454,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12453,"column":0},"generated":{"line":12455,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12454,"column":0},"generated":{"line":12456,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12455,"column":0},"generated":{"line":12457,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12456,"column":0},"generated":{"line":12458,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12457,"column":0},"generated":{"line":12459,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12458,"column":0},"generated":{"line":12460,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12459,"column":0},"generated":{"line":12461,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12460,"column":0},"generated":{"line":12462,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12461,"column":0},"generated":{"line":12463,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12462,"column":0},"generated":{"line":12464,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12463,"column":0},"generated":{"line":12465,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12464,"column":0},"generated":{"line":12466,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12465,"column":0},"generated":{"line":12467,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12466,"column":0},"generated":{"line":12468,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12467,"column":0},"generated":{"line":12469,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12468,"column":0},"generated":{"line":12470,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12469,"column":0},"generated":{"line":12471,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12470,"column":0},"generated":{"line":12472,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12471,"column":0},"generated":{"line":12473,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12472,"column":0},"generated":{"line":12474,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12473,"column":0},"generated":{"line":12475,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12474,"column":0},"generated":{"line":12476,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12475,"column":0},"generated":{"line":12477,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12476,"column":0},"generated":{"line":12478,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12477,"column":0},"generated":{"line":12479,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12478,"column":0},"generated":{"line":12480,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12479,"column":0},"generated":{"line":12481,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12480,"column":0},"generated":{"line":12482,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12481,"column":0},"generated":{"line":12483,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12482,"column":0},"generated":{"line":12484,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12483,"column":0},"generated":{"line":12485,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12484,"column":0},"generated":{"line":12486,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12485,"column":0},"generated":{"line":12487,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12486,"column":0},"generated":{"line":12488,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12487,"column":0},"generated":{"line":12489,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12488,"column":0},"generated":{"line":12490,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12489,"column":0},"generated":{"line":12491,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12490,"column":0},"generated":{"line":12492,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12491,"column":0},"generated":{"line":12493,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12492,"column":0},"generated":{"line":12494,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12493,"column":0},"generated":{"line":12495,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12494,"column":0},"generated":{"line":12496,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12495,"column":0},"generated":{"line":12497,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12496,"column":0},"generated":{"line":12498,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12497,"column":0},"generated":{"line":12499,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12498,"column":0},"generated":{"line":12500,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12499,"column":0},"generated":{"line":12501,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12500,"column":0},"generated":{"line":12502,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12501,"column":0},"generated":{"line":12503,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12502,"column":0},"generated":{"line":12504,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12503,"column":0},"generated":{"line":12505,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12504,"column":0},"generated":{"line":12506,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12505,"column":0},"generated":{"line":12507,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12506,"column":0},"generated":{"line":12508,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12507,"column":0},"generated":{"line":12509,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12508,"column":0},"generated":{"line":12510,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12509,"column":0},"generated":{"line":12511,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12510,"column":0},"generated":{"line":12512,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12511,"column":0},"generated":{"line":12513,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12512,"column":0},"generated":{"line":12514,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12513,"column":0},"generated":{"line":12515,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12514,"column":0},"generated":{"line":12516,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12515,"column":0},"generated":{"line":12517,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12516,"column":0},"generated":{"line":12518,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12517,"column":0},"generated":{"line":12519,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12518,"column":0},"generated":{"line":12520,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12519,"column":0},"generated":{"line":12521,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12520,"column":0},"generated":{"line":12522,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12521,"column":0},"generated":{"line":12523,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12522,"column":0},"generated":{"line":12524,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12523,"column":0},"generated":{"line":12525,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12524,"column":0},"generated":{"line":12526,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12525,"column":0},"generated":{"line":12527,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12526,"column":0},"generated":{"line":12528,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12527,"column":0},"generated":{"line":12529,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12528,"column":0},"generated":{"line":12530,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12529,"column":0},"generated":{"line":12531,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12530,"column":0},"generated":{"line":12532,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12531,"column":0},"generated":{"line":12533,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12532,"column":0},"generated":{"line":12534,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12533,"column":0},"generated":{"line":12535,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12534,"column":0},"generated":{"line":12536,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12535,"column":0},"generated":{"line":12537,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12536,"column":0},"generated":{"line":12538,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12537,"column":0},"generated":{"line":12539,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12538,"column":0},"generated":{"line":12540,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12539,"column":0},"generated":{"line":12541,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12540,"column":0},"generated":{"line":12542,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12541,"column":0},"generated":{"line":12543,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12542,"column":0},"generated":{"line":12544,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12543,"column":0},"generated":{"line":12545,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12544,"column":0},"generated":{"line":12546,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12545,"column":0},"generated":{"line":12547,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12546,"column":0},"generated":{"line":12548,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12547,"column":0},"generated":{"line":12549,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12548,"column":0},"generated":{"line":12550,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12549,"column":0},"generated":{"line":12551,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12550,"column":0},"generated":{"line":12552,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12551,"column":0},"generated":{"line":12553,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12552,"column":0},"generated":{"line":12554,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12553,"column":0},"generated":{"line":12555,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12554,"column":0},"generated":{"line":12556,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12555,"column":0},"generated":{"line":12557,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12556,"column":0},"generated":{"line":12558,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12557,"column":0},"generated":{"line":12559,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12558,"column":0},"generated":{"line":12560,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12559,"column":0},"generated":{"line":12561,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12560,"column":0},"generated":{"line":12562,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12561,"column":0},"generated":{"line":12563,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12562,"column":0},"generated":{"line":12564,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12563,"column":0},"generated":{"line":12565,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12564,"column":0},"generated":{"line":12566,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12565,"column":0},"generated":{"line":12567,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12566,"column":0},"generated":{"line":12568,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12567,"column":0},"generated":{"line":12569,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12568,"column":0},"generated":{"line":12570,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12569,"column":0},"generated":{"line":12571,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12570,"column":0},"generated":{"line":12572,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12571,"column":0},"generated":{"line":12573,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12572,"column":0},"generated":{"line":12574,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12573,"column":0},"generated":{"line":12575,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12574,"column":0},"generated":{"line":12576,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12575,"column":0},"generated":{"line":12577,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12576,"column":0},"generated":{"line":12578,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12577,"column":0},"generated":{"line":12579,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12578,"column":0},"generated":{"line":12580,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12579,"column":0},"generated":{"line":12581,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12580,"column":0},"generated":{"line":12582,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12581,"column":0},"generated":{"line":12583,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12582,"column":0},"generated":{"line":12584,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12583,"column":0},"generated":{"line":12585,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12584,"column":0},"generated":{"line":12586,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12585,"column":0},"generated":{"line":12587,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12586,"column":0},"generated":{"line":12588,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12587,"column":0},"generated":{"line":12589,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12588,"column":0},"generated":{"line":12590,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12589,"column":0},"generated":{"line":12591,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12590,"column":0},"generated":{"line":12592,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12591,"column":0},"generated":{"line":12593,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12592,"column":0},"generated":{"line":12594,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12593,"column":0},"generated":{"line":12595,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12594,"column":0},"generated":{"line":12596,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12595,"column":0},"generated":{"line":12597,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12596,"column":0},"generated":{"line":12598,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12597,"column":0},"generated":{"line":12599,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12598,"column":0},"generated":{"line":12600,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12599,"column":0},"generated":{"line":12601,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12600,"column":0},"generated":{"line":12602,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12601,"column":0},"generated":{"line":12603,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12602,"column":0},"generated":{"line":12604,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12603,"column":0},"generated":{"line":12605,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12604,"column":0},"generated":{"line":12606,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12605,"column":0},"generated":{"line":12607,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12606,"column":0},"generated":{"line":12608,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12607,"column":0},"generated":{"line":12609,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12608,"column":0},"generated":{"line":12610,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12609,"column":0},"generated":{"line":12611,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12610,"column":0},"generated":{"line":12612,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12611,"column":0},"generated":{"line":12613,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12612,"column":0},"generated":{"line":12614,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12613,"column":0},"generated":{"line":12615,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12614,"column":0},"generated":{"line":12616,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12615,"column":0},"generated":{"line":12617,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12616,"column":0},"generated":{"line":12618,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12617,"column":0},"generated":{"line":12619,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12618,"column":0},"generated":{"line":12620,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12619,"column":0},"generated":{"line":12621,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12620,"column":0},"generated":{"line":12622,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12621,"column":0},"generated":{"line":12623,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12622,"column":0},"generated":{"line":12624,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12623,"column":0},"generated":{"line":12625,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12624,"column":0},"generated":{"line":12626,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12625,"column":0},"generated":{"line":12627,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12626,"column":0},"generated":{"line":12628,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12627,"column":0},"generated":{"line":12629,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12628,"column":0},"generated":{"line":12630,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12629,"column":0},"generated":{"line":12631,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12630,"column":0},"generated":{"line":12632,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12631,"column":0},"generated":{"line":12633,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12632,"column":0},"generated":{"line":12634,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12633,"column":0},"generated":{"line":12635,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12634,"column":0},"generated":{"line":12636,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12635,"column":0},"generated":{"line":12637,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12636,"column":0},"generated":{"line":12638,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12637,"column":0},"generated":{"line":12639,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12638,"column":0},"generated":{"line":12640,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12639,"column":0},"generated":{"line":12641,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12640,"column":0},"generated":{"line":12642,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12641,"column":0},"generated":{"line":12643,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12642,"column":0},"generated":{"line":12644,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12643,"column":0},"generated":{"line":12645,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12644,"column":0},"generated":{"line":12646,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12645,"column":0},"generated":{"line":12647,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12646,"column":0},"generated":{"line":12648,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12647,"column":0},"generated":{"line":12649,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12648,"column":0},"generated":{"line":12650,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12649,"column":0},"generated":{"line":12651,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12650,"column":0},"generated":{"line":12652,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12651,"column":0},"generated":{"line":12653,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12652,"column":0},"generated":{"line":12654,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12653,"column":0},"generated":{"line":12655,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12654,"column":0},"generated":{"line":12656,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12655,"column":0},"generated":{"line":12657,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12656,"column":0},"generated":{"line":12658,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12657,"column":0},"generated":{"line":12659,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12658,"column":0},"generated":{"line":12660,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12659,"column":0},"generated":{"line":12661,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12660,"column":0},"generated":{"line":12662,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12661,"column":0},"generated":{"line":12663,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12662,"column":0},"generated":{"line":12664,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12663,"column":0},"generated":{"line":12665,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12664,"column":0},"generated":{"line":12666,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12665,"column":0},"generated":{"line":12667,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12666,"column":0},"generated":{"line":12668,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12667,"column":0},"generated":{"line":12669,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12668,"column":0},"generated":{"line":12670,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12669,"column":0},"generated":{"line":12671,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12670,"column":0},"generated":{"line":12672,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12671,"column":0},"generated":{"line":12673,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12672,"column":0},"generated":{"line":12674,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12673,"column":0},"generated":{"line":12675,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12674,"column":0},"generated":{"line":12676,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12675,"column":0},"generated":{"line":12677,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12676,"column":0},"generated":{"line":12678,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12677,"column":0},"generated":{"line":12679,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12678,"column":0},"generated":{"line":12680,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12679,"column":0},"generated":{"line":12681,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12680,"column":0},"generated":{"line":12682,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12681,"column":0},"generated":{"line":12683,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12682,"column":0},"generated":{"line":12684,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12683,"column":0},"generated":{"line":12685,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12684,"column":0},"generated":{"line":12686,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12685,"column":0},"generated":{"line":12687,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12686,"column":0},"generated":{"line":12688,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12687,"column":0},"generated":{"line":12689,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12688,"column":0},"generated":{"line":12690,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12689,"column":0},"generated":{"line":12691,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12690,"column":0},"generated":{"line":12692,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12691,"column":0},"generated":{"line":12693,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12692,"column":0},"generated":{"line":12694,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12693,"column":0},"generated":{"line":12695,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12694,"column":0},"generated":{"line":12696,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12695,"column":0},"generated":{"line":12697,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12696,"column":0},"generated":{"line":12698,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12697,"column":0},"generated":{"line":12699,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12698,"column":0},"generated":{"line":12700,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12699,"column":0},"generated":{"line":12701,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12700,"column":0},"generated":{"line":12702,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12701,"column":0},"generated":{"line":12703,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12702,"column":0},"generated":{"line":12704,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12703,"column":0},"generated":{"line":12705,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12704,"column":0},"generated":{"line":12706,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12705,"column":0},"generated":{"line":12707,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12706,"column":0},"generated":{"line":12708,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12707,"column":0},"generated":{"line":12709,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12708,"column":0},"generated":{"line":12710,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12709,"column":0},"generated":{"line":12711,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12710,"column":0},"generated":{"line":12712,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12711,"column":0},"generated":{"line":12713,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12712,"column":0},"generated":{"line":12714,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12713,"column":0},"generated":{"line":12715,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12714,"column":0},"generated":{"line":12716,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12715,"column":0},"generated":{"line":12717,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12716,"column":0},"generated":{"line":12718,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12717,"column":0},"generated":{"line":12719,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12718,"column":0},"generated":{"line":12720,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12719,"column":0},"generated":{"line":12721,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12720,"column":0},"generated":{"line":12722,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12721,"column":0},"generated":{"line":12723,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12722,"column":0},"generated":{"line":12724,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12723,"column":0},"generated":{"line":12725,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12724,"column":0},"generated":{"line":12726,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12725,"column":0},"generated":{"line":12727,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12726,"column":0},"generated":{"line":12728,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12727,"column":0},"generated":{"line":12729,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12728,"column":0},"generated":{"line":12730,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12729,"column":0},"generated":{"line":12731,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12730,"column":0},"generated":{"line":12732,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12731,"column":0},"generated":{"line":12733,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12732,"column":0},"generated":{"line":12734,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12733,"column":0},"generated":{"line":12735,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12734,"column":0},"generated":{"line":12736,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12735,"column":0},"generated":{"line":12737,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12736,"column":0},"generated":{"line":12738,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12737,"column":0},"generated":{"line":12739,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12738,"column":0},"generated":{"line":12740,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12739,"column":0},"generated":{"line":12741,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12740,"column":0},"generated":{"line":12742,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12741,"column":0},"generated":{"line":12743,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12742,"column":0},"generated":{"line":12744,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12743,"column":0},"generated":{"line":12745,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12744,"column":0},"generated":{"line":12746,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12745,"column":0},"generated":{"line":12747,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12746,"column":0},"generated":{"line":12748,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12747,"column":0},"generated":{"line":12749,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12748,"column":0},"generated":{"line":12750,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12749,"column":0},"generated":{"line":12751,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12750,"column":0},"generated":{"line":12752,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12751,"column":0},"generated":{"line":12753,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12752,"column":0},"generated":{"line":12754,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12753,"column":0},"generated":{"line":12755,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12754,"column":0},"generated":{"line":12756,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12755,"column":0},"generated":{"line":12757,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12756,"column":0},"generated":{"line":12758,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12757,"column":0},"generated":{"line":12759,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12758,"column":0},"generated":{"line":12760,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12759,"column":0},"generated":{"line":12761,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12760,"column":0},"generated":{"line":12762,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12761,"column":0},"generated":{"line":12763,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12762,"column":0},"generated":{"line":12764,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12763,"column":0},"generated":{"line":12765,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12764,"column":0},"generated":{"line":12766,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12765,"column":0},"generated":{"line":12767,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12766,"column":0},"generated":{"line":12768,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12767,"column":0},"generated":{"line":12769,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12768,"column":0},"generated":{"line":12770,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12769,"column":0},"generated":{"line":12771,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12770,"column":0},"generated":{"line":12772,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12771,"column":0},"generated":{"line":12773,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12772,"column":0},"generated":{"line":12774,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12773,"column":0},"generated":{"line":12775,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12774,"column":0},"generated":{"line":12776,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12775,"column":0},"generated":{"line":12777,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12776,"column":0},"generated":{"line":12778,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12777,"column":0},"generated":{"line":12779,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12778,"column":0},"generated":{"line":12780,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12779,"column":0},"generated":{"line":12781,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12780,"column":0},"generated":{"line":12782,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12781,"column":0},"generated":{"line":12783,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12782,"column":0},"generated":{"line":12784,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12783,"column":0},"generated":{"line":12785,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12784,"column":0},"generated":{"line":12786,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12785,"column":0},"generated":{"line":12787,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12786,"column":0},"generated":{"line":12788,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12787,"column":0},"generated":{"line":12789,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12788,"column":0},"generated":{"line":12790,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12789,"column":0},"generated":{"line":12791,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12790,"column":0},"generated":{"line":12792,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12791,"column":0},"generated":{"line":12793,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12792,"column":0},"generated":{"line":12794,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12793,"column":0},"generated":{"line":12795,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12794,"column":0},"generated":{"line":12796,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12795,"column":0},"generated":{"line":12797,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12796,"column":0},"generated":{"line":12798,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12797,"column":0},"generated":{"line":12799,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12798,"column":0},"generated":{"line":12800,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12799,"column":0},"generated":{"line":12801,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12800,"column":0},"generated":{"line":12802,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12801,"column":0},"generated":{"line":12803,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12802,"column":0},"generated":{"line":12804,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12803,"column":0},"generated":{"line":12805,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12804,"column":0},"generated":{"line":12806,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12805,"column":0},"generated":{"line":12807,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12806,"column":0},"generated":{"line":12808,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12807,"column":0},"generated":{"line":12809,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12808,"column":0},"generated":{"line":12810,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12809,"column":0},"generated":{"line":12811,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12810,"column":0},"generated":{"line":12812,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12811,"column":0},"generated":{"line":12813,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12812,"column":0},"generated":{"line":12814,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12813,"column":0},"generated":{"line":12815,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12814,"column":0},"generated":{"line":12816,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12815,"column":0},"generated":{"line":12817,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12816,"column":0},"generated":{"line":12818,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12817,"column":0},"generated":{"line":12819,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12818,"column":0},"generated":{"line":12820,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12819,"column":0},"generated":{"line":12821,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12820,"column":0},"generated":{"line":12822,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12821,"column":0},"generated":{"line":12823,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12822,"column":0},"generated":{"line":12824,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12823,"column":0},"generated":{"line":12825,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12824,"column":0},"generated":{"line":12826,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12825,"column":0},"generated":{"line":12827,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12826,"column":0},"generated":{"line":12828,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12827,"column":0},"generated":{"line":12829,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12828,"column":0},"generated":{"line":12830,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12829,"column":0},"generated":{"line":12831,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12830,"column":0},"generated":{"line":12832,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12831,"column":0},"generated":{"line":12833,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12832,"column":0},"generated":{"line":12834,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12833,"column":0},"generated":{"line":12835,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12834,"column":0},"generated":{"line":12836,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12835,"column":0},"generated":{"line":12837,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12836,"column":0},"generated":{"line":12838,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12837,"column":0},"generated":{"line":12839,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12838,"column":0},"generated":{"line":12840,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12839,"column":0},"generated":{"line":12841,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12840,"column":0},"generated":{"line":12842,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12841,"column":0},"generated":{"line":12843,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12842,"column":0},"generated":{"line":12844,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12843,"column":0},"generated":{"line":12845,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12844,"column":0},"generated":{"line":12846,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12845,"column":0},"generated":{"line":12847,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12846,"column":0},"generated":{"line":12848,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12847,"column":0},"generated":{"line":12849,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12848,"column":0},"generated":{"line":12850,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12849,"column":0},"generated":{"line":12851,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12850,"column":0},"generated":{"line":12852,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12851,"column":0},"generated":{"line":12853,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12852,"column":0},"generated":{"line":12854,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12853,"column":0},"generated":{"line":12855,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12854,"column":0},"generated":{"line":12856,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12855,"column":0},"generated":{"line":12857,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12856,"column":0},"generated":{"line":12858,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12857,"column":0},"generated":{"line":12859,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12858,"column":0},"generated":{"line":12860,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12859,"column":0},"generated":{"line":12861,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12860,"column":0},"generated":{"line":12862,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12861,"column":0},"generated":{"line":12863,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12862,"column":0},"generated":{"line":12864,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12863,"column":0},"generated":{"line":12865,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12864,"column":0},"generated":{"line":12866,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12865,"column":0},"generated":{"line":12867,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12866,"column":0},"generated":{"line":12868,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12867,"column":0},"generated":{"line":12869,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12868,"column":0},"generated":{"line":12870,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12869,"column":0},"generated":{"line":12871,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12870,"column":0},"generated":{"line":12872,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12871,"column":0},"generated":{"line":12873,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12872,"column":0},"generated":{"line":12874,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12873,"column":0},"generated":{"line":12875,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12874,"column":0},"generated":{"line":12876,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12875,"column":0},"generated":{"line":12877,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12876,"column":0},"generated":{"line":12878,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12877,"column":0},"generated":{"line":12879,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12878,"column":0},"generated":{"line":12880,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12879,"column":0},"generated":{"line":12881,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12880,"column":0},"generated":{"line":12882,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12881,"column":0},"generated":{"line":12883,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12882,"column":0},"generated":{"line":12884,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12883,"column":0},"generated":{"line":12885,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12884,"column":0},"generated":{"line":12886,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12885,"column":0},"generated":{"line":12887,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12886,"column":0},"generated":{"line":12888,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12887,"column":0},"generated":{"line":12889,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12888,"column":0},"generated":{"line":12890,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12889,"column":0},"generated":{"line":12891,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12890,"column":0},"generated":{"line":12892,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12891,"column":0},"generated":{"line":12893,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12892,"column":0},"generated":{"line":12894,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12893,"column":0},"generated":{"line":12895,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12894,"column":0},"generated":{"line":12896,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12895,"column":0},"generated":{"line":12897,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12896,"column":0},"generated":{"line":12898,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12897,"column":0},"generated":{"line":12899,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12898,"column":0},"generated":{"line":12900,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12899,"column":0},"generated":{"line":12901,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12900,"column":0},"generated":{"line":12902,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12901,"column":0},"generated":{"line":12903,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12902,"column":0},"generated":{"line":12904,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12903,"column":0},"generated":{"line":12905,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12904,"column":0},"generated":{"line":12906,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12905,"column":0},"generated":{"line":12907,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12906,"column":0},"generated":{"line":12908,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12907,"column":0},"generated":{"line":12909,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12908,"column":0},"generated":{"line":12910,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12909,"column":0},"generated":{"line":12911,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12910,"column":0},"generated":{"line":12912,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12911,"column":0},"generated":{"line":12913,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12912,"column":0},"generated":{"line":12914,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12913,"column":0},"generated":{"line":12915,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12914,"column":0},"generated":{"line":12916,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12915,"column":0},"generated":{"line":12917,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12916,"column":0},"generated":{"line":12918,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12917,"column":0},"generated":{"line":12919,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12918,"column":0},"generated":{"line":12920,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12919,"column":0},"generated":{"line":12921,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12920,"column":0},"generated":{"line":12922,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12921,"column":0},"generated":{"line":12923,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12922,"column":0},"generated":{"line":12924,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12923,"column":0},"generated":{"line":12925,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12924,"column":0},"generated":{"line":12926,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12925,"column":0},"generated":{"line":12927,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12926,"column":0},"generated":{"line":12928,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12927,"column":0},"generated":{"line":12929,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12928,"column":0},"generated":{"line":12930,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12929,"column":0},"generated":{"line":12931,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12930,"column":0},"generated":{"line":12932,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12931,"column":0},"generated":{"line":12933,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12932,"column":0},"generated":{"line":12934,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12933,"column":0},"generated":{"line":12935,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12934,"column":0},"generated":{"line":12936,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12935,"column":0},"generated":{"line":12937,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12936,"column":0},"generated":{"line":12938,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12937,"column":0},"generated":{"line":12939,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12938,"column":0},"generated":{"line":12940,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12939,"column":0},"generated":{"line":12941,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12940,"column":0},"generated":{"line":12942,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12941,"column":0},"generated":{"line":12943,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12942,"column":0},"generated":{"line":12944,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12943,"column":0},"generated":{"line":12945,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12944,"column":0},"generated":{"line":12946,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12945,"column":0},"generated":{"line":12947,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12946,"column":0},"generated":{"line":12948,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12947,"column":0},"generated":{"line":12949,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12948,"column":0},"generated":{"line":12950,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12949,"column":0},"generated":{"line":12951,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12950,"column":0},"generated":{"line":12952,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12951,"column":0},"generated":{"line":12953,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12952,"column":0},"generated":{"line":12954,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12953,"column":0},"generated":{"line":12955,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12954,"column":0},"generated":{"line":12956,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12955,"column":0},"generated":{"line":12957,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12956,"column":0},"generated":{"line":12958,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12957,"column":0},"generated":{"line":12959,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12958,"column":0},"generated":{"line":12960,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12959,"column":0},"generated":{"line":12961,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12960,"column":0},"generated":{"line":12962,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12961,"column":0},"generated":{"line":12963,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12962,"column":0},"generated":{"line":12964,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12963,"column":0},"generated":{"line":12965,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12964,"column":0},"generated":{"line":12966,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12965,"column":0},"generated":{"line":12967,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12966,"column":0},"generated":{"line":12968,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12967,"column":0},"generated":{"line":12969,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12968,"column":0},"generated":{"line":12970,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12969,"column":0},"generated":{"line":12971,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12970,"column":0},"generated":{"line":12972,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12971,"column":0},"generated":{"line":12973,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12972,"column":0},"generated":{"line":12974,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12973,"column":0},"generated":{"line":12975,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12974,"column":0},"generated":{"line":12976,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12975,"column":0},"generated":{"line":12977,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12976,"column":0},"generated":{"line":12978,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12977,"column":0},"generated":{"line":12979,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12978,"column":0},"generated":{"line":12980,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12979,"column":0},"generated":{"line":12981,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12980,"column":0},"generated":{"line":12982,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12981,"column":0},"generated":{"line":12983,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12982,"column":0},"generated":{"line":12984,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12983,"column":0},"generated":{"line":12985,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12984,"column":0},"generated":{"line":12986,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12985,"column":0},"generated":{"line":12987,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12986,"column":0},"generated":{"line":12988,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12987,"column":0},"generated":{"line":12989,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12988,"column":0},"generated":{"line":12990,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12989,"column":0},"generated":{"line":12991,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12990,"column":0},"generated":{"line":12992,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12991,"column":0},"generated":{"line":12993,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12992,"column":0},"generated":{"line":12994,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12993,"column":0},"generated":{"line":12995,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12994,"column":0},"generated":{"line":12996,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12995,"column":0},"generated":{"line":12997,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12996,"column":0},"generated":{"line":12998,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12997,"column":0},"generated":{"line":12999,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12998,"column":0},"generated":{"line":13000,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":12999,"column":0},"generated":{"line":13001,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13000,"column":0},"generated":{"line":13002,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13001,"column":0},"generated":{"line":13003,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13002,"column":0},"generated":{"line":13004,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13003,"column":0},"generated":{"line":13005,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13004,"column":0},"generated":{"line":13006,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13005,"column":0},"generated":{"line":13007,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13006,"column":0},"generated":{"line":13008,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13007,"column":0},"generated":{"line":13009,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13008,"column":0},"generated":{"line":13010,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13009,"column":0},"generated":{"line":13011,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13010,"column":0},"generated":{"line":13012,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13011,"column":0},"generated":{"line":13013,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13012,"column":0},"generated":{"line":13014,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13013,"column":0},"generated":{"line":13015,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13014,"column":0},"generated":{"line":13016,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13015,"column":0},"generated":{"line":13017,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13016,"column":0},"generated":{"line":13018,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13017,"column":0},"generated":{"line":13019,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13018,"column":0},"generated":{"line":13020,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13019,"column":0},"generated":{"line":13021,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13020,"column":0},"generated":{"line":13022,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13021,"column":0},"generated":{"line":13023,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13022,"column":0},"generated":{"line":13024,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13023,"column":0},"generated":{"line":13025,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13024,"column":0},"generated":{"line":13026,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13025,"column":0},"generated":{"line":13027,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13026,"column":0},"generated":{"line":13028,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13027,"column":0},"generated":{"line":13029,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13028,"column":0},"generated":{"line":13030,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13029,"column":0},"generated":{"line":13031,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13030,"column":0},"generated":{"line":13032,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13031,"column":0},"generated":{"line":13033,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13032,"column":0},"generated":{"line":13034,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13033,"column":0},"generated":{"line":13035,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13034,"column":0},"generated":{"line":13036,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13035,"column":0},"generated":{"line":13037,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13036,"column":0},"generated":{"line":13038,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13037,"column":0},"generated":{"line":13039,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13038,"column":0},"generated":{"line":13040,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13039,"column":0},"generated":{"line":13041,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13040,"column":0},"generated":{"line":13042,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13041,"column":0},"generated":{"line":13043,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13042,"column":0},"generated":{"line":13044,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13043,"column":0},"generated":{"line":13045,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13044,"column":0},"generated":{"line":13046,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13045,"column":0},"generated":{"line":13047,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13046,"column":0},"generated":{"line":13048,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13047,"column":0},"generated":{"line":13049,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13048,"column":0},"generated":{"line":13050,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13049,"column":0},"generated":{"line":13051,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13050,"column":0},"generated":{"line":13052,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13051,"column":0},"generated":{"line":13053,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13052,"column":0},"generated":{"line":13054,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13053,"column":0},"generated":{"line":13055,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13054,"column":0},"generated":{"line":13056,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13055,"column":0},"generated":{"line":13057,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13056,"column":0},"generated":{"line":13058,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13057,"column":0},"generated":{"line":13059,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13058,"column":0},"generated":{"line":13060,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13059,"column":0},"generated":{"line":13061,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13060,"column":0},"generated":{"line":13062,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13061,"column":0},"generated":{"line":13063,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13062,"column":0},"generated":{"line":13064,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13063,"column":0},"generated":{"line":13065,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13064,"column":0},"generated":{"line":13066,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13065,"column":0},"generated":{"line":13067,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13066,"column":0},"generated":{"line":13068,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13067,"column":0},"generated":{"line":13069,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13068,"column":0},"generated":{"line":13070,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13069,"column":0},"generated":{"line":13071,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13070,"column":0},"generated":{"line":13072,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13071,"column":0},"generated":{"line":13073,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13072,"column":0},"generated":{"line":13074,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13073,"column":0},"generated":{"line":13075,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13074,"column":0},"generated":{"line":13076,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13075,"column":0},"generated":{"line":13077,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13076,"column":0},"generated":{"line":13078,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13077,"column":0},"generated":{"line":13079,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13078,"column":0},"generated":{"line":13080,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13079,"column":0},"generated":{"line":13081,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13080,"column":0},"generated":{"line":13082,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13081,"column":0},"generated":{"line":13083,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13082,"column":0},"generated":{"line":13084,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13083,"column":0},"generated":{"line":13085,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13084,"column":0},"generated":{"line":13086,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13085,"column":0},"generated":{"line":13087,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13086,"column":0},"generated":{"line":13088,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13087,"column":0},"generated":{"line":13089,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13088,"column":0},"generated":{"line":13090,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13089,"column":0},"generated":{"line":13091,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13090,"column":0},"generated":{"line":13092,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13091,"column":0},"generated":{"line":13093,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13092,"column":0},"generated":{"line":13094,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13093,"column":0},"generated":{"line":13095,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13094,"column":0},"generated":{"line":13096,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13095,"column":0},"generated":{"line":13097,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13096,"column":0},"generated":{"line":13098,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13097,"column":0},"generated":{"line":13099,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13098,"column":0},"generated":{"line":13100,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13099,"column":0},"generated":{"line":13101,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13100,"column":0},"generated":{"line":13102,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13101,"column":0},"generated":{"line":13103,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13102,"column":0},"generated":{"line":13104,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13103,"column":0},"generated":{"line":13105,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13104,"column":0},"generated":{"line":13106,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13105,"column":0},"generated":{"line":13107,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13106,"column":0},"generated":{"line":13108,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13107,"column":0},"generated":{"line":13109,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13108,"column":0},"generated":{"line":13110,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13109,"column":0},"generated":{"line":13111,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13110,"column":0},"generated":{"line":13112,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13111,"column":0},"generated":{"line":13113,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13112,"column":0},"generated":{"line":13114,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13113,"column":0},"generated":{"line":13115,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13114,"column":0},"generated":{"line":13116,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13115,"column":0},"generated":{"line":13117,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13116,"column":0},"generated":{"line":13118,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13117,"column":0},"generated":{"line":13119,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13118,"column":0},"generated":{"line":13120,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13119,"column":0},"generated":{"line":13121,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13120,"column":0},"generated":{"line":13122,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13121,"column":0},"generated":{"line":13123,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13122,"column":0},"generated":{"line":13124,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13123,"column":0},"generated":{"line":13125,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13124,"column":0},"generated":{"line":13126,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13125,"column":0},"generated":{"line":13127,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13126,"column":0},"generated":{"line":13128,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13127,"column":0},"generated":{"line":13129,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13128,"column":0},"generated":{"line":13130,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13129,"column":0},"generated":{"line":13131,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13130,"column":0},"generated":{"line":13132,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13131,"column":0},"generated":{"line":13133,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13132,"column":0},"generated":{"line":13134,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13133,"column":0},"generated":{"line":13135,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13134,"column":0},"generated":{"line":13136,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13135,"column":0},"generated":{"line":13137,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13136,"column":0},"generated":{"line":13138,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13137,"column":0},"generated":{"line":13139,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13138,"column":0},"generated":{"line":13140,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13139,"column":0},"generated":{"line":13141,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13140,"column":0},"generated":{"line":13142,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13141,"column":0},"generated":{"line":13143,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13142,"column":0},"generated":{"line":13144,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13143,"column":0},"generated":{"line":13145,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13144,"column":0},"generated":{"line":13146,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13145,"column":0},"generated":{"line":13147,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13146,"column":0},"generated":{"line":13148,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13147,"column":0},"generated":{"line":13149,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13148,"column":0},"generated":{"line":13150,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13149,"column":0},"generated":{"line":13151,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13150,"column":0},"generated":{"line":13152,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13151,"column":0},"generated":{"line":13153,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13152,"column":0},"generated":{"line":13154,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13153,"column":0},"generated":{"line":13155,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13154,"column":0},"generated":{"line":13156,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13155,"column":0},"generated":{"line":13157,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13156,"column":0},"generated":{"line":13158,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13157,"column":0},"generated":{"line":13159,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13158,"column":0},"generated":{"line":13160,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13159,"column":0},"generated":{"line":13161,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13160,"column":0},"generated":{"line":13162,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13161,"column":0},"generated":{"line":13163,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13162,"column":0},"generated":{"line":13164,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13163,"column":0},"generated":{"line":13165,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13164,"column":0},"generated":{"line":13166,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13165,"column":0},"generated":{"line":13167,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13166,"column":0},"generated":{"line":13168,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13167,"column":0},"generated":{"line":13169,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13168,"column":0},"generated":{"line":13170,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13169,"column":0},"generated":{"line":13171,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13170,"column":0},"generated":{"line":13172,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13171,"column":0},"generated":{"line":13173,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13172,"column":0},"generated":{"line":13174,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13173,"column":0},"generated":{"line":13175,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13174,"column":0},"generated":{"line":13176,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13175,"column":0},"generated":{"line":13177,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13176,"column":0},"generated":{"line":13178,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13177,"column":0},"generated":{"line":13179,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13178,"column":0},"generated":{"line":13180,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13179,"column":0},"generated":{"line":13181,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13180,"column":0},"generated":{"line":13182,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13181,"column":0},"generated":{"line":13183,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13182,"column":0},"generated":{"line":13184,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13183,"column":0},"generated":{"line":13185,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13184,"column":0},"generated":{"line":13186,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13185,"column":0},"generated":{"line":13187,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13186,"column":0},"generated":{"line":13188,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13187,"column":0},"generated":{"line":13189,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13188,"column":0},"generated":{"line":13190,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13189,"column":0},"generated":{"line":13191,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13190,"column":0},"generated":{"line":13192,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13191,"column":0},"generated":{"line":13193,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13192,"column":0},"generated":{"line":13194,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13193,"column":0},"generated":{"line":13195,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13194,"column":0},"generated":{"line":13196,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13195,"column":0},"generated":{"line":13197,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13196,"column":0},"generated":{"line":13198,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13197,"column":0},"generated":{"line":13199,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13198,"column":0},"generated":{"line":13200,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13199,"column":0},"generated":{"line":13201,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13200,"column":0},"generated":{"line":13202,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13201,"column":0},"generated":{"line":13203,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13202,"column":0},"generated":{"line":13204,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13203,"column":0},"generated":{"line":13205,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13204,"column":0},"generated":{"line":13206,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13205,"column":0},"generated":{"line":13207,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13206,"column":0},"generated":{"line":13208,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13207,"column":0},"generated":{"line":13209,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13208,"column":0},"generated":{"line":13210,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13209,"column":0},"generated":{"line":13211,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13210,"column":0},"generated":{"line":13212,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13211,"column":0},"generated":{"line":13213,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13212,"column":0},"generated":{"line":13214,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13213,"column":0},"generated":{"line":13215,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13214,"column":0},"generated":{"line":13216,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13215,"column":0},"generated":{"line":13217,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13216,"column":0},"generated":{"line":13218,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13217,"column":0},"generated":{"line":13219,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13218,"column":0},"generated":{"line":13220,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13219,"column":0},"generated":{"line":13221,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13220,"column":0},"generated":{"line":13222,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13221,"column":0},"generated":{"line":13223,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13222,"column":0},"generated":{"line":13224,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13223,"column":0},"generated":{"line":13225,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13224,"column":0},"generated":{"line":13226,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13225,"column":0},"generated":{"line":13227,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13226,"column":0},"generated":{"line":13228,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13227,"column":0},"generated":{"line":13229,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13228,"column":0},"generated":{"line":13230,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13229,"column":0},"generated":{"line":13231,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13230,"column":0},"generated":{"line":13232,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13231,"column":0},"generated":{"line":13233,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13232,"column":0},"generated":{"line":13234,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13233,"column":0},"generated":{"line":13235,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13234,"column":0},"generated":{"line":13236,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13235,"column":0},"generated":{"line":13237,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13236,"column":0},"generated":{"line":13238,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13237,"column":0},"generated":{"line":13239,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13238,"column":0},"generated":{"line":13240,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13239,"column":0},"generated":{"line":13241,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13240,"column":0},"generated":{"line":13242,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13241,"column":0},"generated":{"line":13243,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13242,"column":0},"generated":{"line":13244,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13243,"column":0},"generated":{"line":13245,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13244,"column":0},"generated":{"line":13246,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13245,"column":0},"generated":{"line":13247,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13246,"column":0},"generated":{"line":13248,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13247,"column":0},"generated":{"line":13249,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13248,"column":0},"generated":{"line":13250,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13249,"column":0},"generated":{"line":13251,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13250,"column":0},"generated":{"line":13252,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13251,"column":0},"generated":{"line":13253,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13252,"column":0},"generated":{"line":13254,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13253,"column":0},"generated":{"line":13255,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13254,"column":0},"generated":{"line":13256,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13255,"column":0},"generated":{"line":13257,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13256,"column":0},"generated":{"line":13258,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13257,"column":0},"generated":{"line":13259,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13258,"column":0},"generated":{"line":13260,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13259,"column":0},"generated":{"line":13261,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13260,"column":0},"generated":{"line":13262,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13261,"column":0},"generated":{"line":13263,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13262,"column":0},"generated":{"line":13264,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13263,"column":0},"generated":{"line":13265,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13264,"column":0},"generated":{"line":13266,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13265,"column":0},"generated":{"line":13267,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13266,"column":0},"generated":{"line":13268,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13267,"column":0},"generated":{"line":13269,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13268,"column":0},"generated":{"line":13270,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13269,"column":0},"generated":{"line":13271,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13270,"column":0},"generated":{"line":13272,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13271,"column":0},"generated":{"line":13273,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13272,"column":0},"generated":{"line":13274,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13273,"column":0},"generated":{"line":13275,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13274,"column":0},"generated":{"line":13276,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13275,"column":0},"generated":{"line":13277,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13276,"column":0},"generated":{"line":13278,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13277,"column":0},"generated":{"line":13279,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13278,"column":0},"generated":{"line":13280,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13279,"column":0},"generated":{"line":13281,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13280,"column":0},"generated":{"line":13282,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13281,"column":0},"generated":{"line":13283,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13282,"column":0},"generated":{"line":13284,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13283,"column":0},"generated":{"line":13285,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13284,"column":0},"generated":{"line":13286,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13285,"column":0},"generated":{"line":13287,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13286,"column":0},"generated":{"line":13288,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13287,"column":0},"generated":{"line":13289,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13288,"column":0},"generated":{"line":13290,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13289,"column":0},"generated":{"line":13291,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13290,"column":0},"generated":{"line":13292,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13291,"column":0},"generated":{"line":13293,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13292,"column":0},"generated":{"line":13294,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13293,"column":0},"generated":{"line":13295,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13294,"column":0},"generated":{"line":13296,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13295,"column":0},"generated":{"line":13297,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13296,"column":0},"generated":{"line":13298,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13297,"column":0},"generated":{"line":13299,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13298,"column":0},"generated":{"line":13300,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13299,"column":0},"generated":{"line":13301,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13300,"column":0},"generated":{"line":13302,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13301,"column":0},"generated":{"line":13303,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13302,"column":0},"generated":{"line":13304,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13303,"column":0},"generated":{"line":13305,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13304,"column":0},"generated":{"line":13306,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13305,"column":0},"generated":{"line":13307,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13306,"column":0},"generated":{"line":13308,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13307,"column":0},"generated":{"line":13309,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13308,"column":0},"generated":{"line":13310,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13309,"column":0},"generated":{"line":13311,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13310,"column":0},"generated":{"line":13312,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13311,"column":0},"generated":{"line":13313,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13312,"column":0},"generated":{"line":13314,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13313,"column":0},"generated":{"line":13315,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13314,"column":0},"generated":{"line":13316,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13315,"column":0},"generated":{"line":13317,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13316,"column":0},"generated":{"line":13318,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13317,"column":0},"generated":{"line":13319,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13318,"column":0},"generated":{"line":13320,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13319,"column":0},"generated":{"line":13321,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13320,"column":0},"generated":{"line":13322,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13321,"column":0},"generated":{"line":13323,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13322,"column":0},"generated":{"line":13324,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13323,"column":0},"generated":{"line":13325,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13324,"column":0},"generated":{"line":13326,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13325,"column":0},"generated":{"line":13327,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13326,"column":0},"generated":{"line":13328,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13327,"column":0},"generated":{"line":13329,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13328,"column":0},"generated":{"line":13330,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13329,"column":0},"generated":{"line":13331,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13330,"column":0},"generated":{"line":13332,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13331,"column":0},"generated":{"line":13333,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13332,"column":0},"generated":{"line":13334,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13333,"column":0},"generated":{"line":13335,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13334,"column":0},"generated":{"line":13336,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13335,"column":0},"generated":{"line":13337,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13336,"column":0},"generated":{"line":13338,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13337,"column":0},"generated":{"line":13339,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13338,"column":0},"generated":{"line":13340,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13339,"column":0},"generated":{"line":13341,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13340,"column":0},"generated":{"line":13342,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13341,"column":0},"generated":{"line":13343,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13342,"column":0},"generated":{"line":13344,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13343,"column":0},"generated":{"line":13345,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13344,"column":0},"generated":{"line":13346,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13345,"column":0},"generated":{"line":13347,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13346,"column":0},"generated":{"line":13348,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13347,"column":0},"generated":{"line":13349,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13348,"column":0},"generated":{"line":13350,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13349,"column":0},"generated":{"line":13351,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13350,"column":0},"generated":{"line":13352,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13351,"column":0},"generated":{"line":13353,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13352,"column":0},"generated":{"line":13354,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13353,"column":0},"generated":{"line":13355,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13354,"column":0},"generated":{"line":13356,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13355,"column":0},"generated":{"line":13357,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13356,"column":0},"generated":{"line":13358,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13357,"column":0},"generated":{"line":13359,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13358,"column":0},"generated":{"line":13360,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13359,"column":0},"generated":{"line":13361,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13360,"column":0},"generated":{"line":13362,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13361,"column":0},"generated":{"line":13363,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13362,"column":0},"generated":{"line":13364,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13363,"column":0},"generated":{"line":13365,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13364,"column":0},"generated":{"line":13366,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13365,"column":0},"generated":{"line":13367,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13366,"column":0},"generated":{"line":13368,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13367,"column":0},"generated":{"line":13369,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13368,"column":0},"generated":{"line":13370,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13369,"column":0},"generated":{"line":13371,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13370,"column":0},"generated":{"line":13372,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13371,"column":0},"generated":{"line":13373,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13372,"column":0},"generated":{"line":13374,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13373,"column":0},"generated":{"line":13375,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13374,"column":0},"generated":{"line":13376,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13375,"column":0},"generated":{"line":13377,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13376,"column":0},"generated":{"line":13378,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13377,"column":0},"generated":{"line":13379,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13378,"column":0},"generated":{"line":13380,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13379,"column":0},"generated":{"line":13381,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13380,"column":0},"generated":{"line":13382,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13381,"column":0},"generated":{"line":13383,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13382,"column":0},"generated":{"line":13384,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13383,"column":0},"generated":{"line":13385,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13384,"column":0},"generated":{"line":13386,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13385,"column":0},"generated":{"line":13387,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13386,"column":0},"generated":{"line":13388,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13387,"column":0},"generated":{"line":13389,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13388,"column":0},"generated":{"line":13390,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13389,"column":0},"generated":{"line":13391,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13390,"column":0},"generated":{"line":13392,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13391,"column":0},"generated":{"line":13393,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13392,"column":0},"generated":{"line":13394,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13393,"column":0},"generated":{"line":13395,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13394,"column":0},"generated":{"line":13396,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13395,"column":0},"generated":{"line":13397,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13396,"column":0},"generated":{"line":13398,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13397,"column":0},"generated":{"line":13399,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13398,"column":0},"generated":{"line":13400,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13399,"column":0},"generated":{"line":13401,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13400,"column":0},"generated":{"line":13402,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13401,"column":0},"generated":{"line":13403,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13402,"column":0},"generated":{"line":13404,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13403,"column":0},"generated":{"line":13405,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13404,"column":0},"generated":{"line":13406,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13405,"column":0},"generated":{"line":13407,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13406,"column":0},"generated":{"line":13408,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13407,"column":0},"generated":{"line":13409,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13408,"column":0},"generated":{"line":13410,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13409,"column":0},"generated":{"line":13411,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13410,"column":0},"generated":{"line":13412,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13411,"column":0},"generated":{"line":13413,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13412,"column":0},"generated":{"line":13414,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13413,"column":0},"generated":{"line":13415,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13414,"column":0},"generated":{"line":13416,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13415,"column":0},"generated":{"line":13417,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13416,"column":0},"generated":{"line":13418,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13417,"column":0},"generated":{"line":13419,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13418,"column":0},"generated":{"line":13420,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13419,"column":0},"generated":{"line":13421,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13420,"column":0},"generated":{"line":13422,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13421,"column":0},"generated":{"line":13423,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13422,"column":0},"generated":{"line":13424,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13423,"column":0},"generated":{"line":13425,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13424,"column":0},"generated":{"line":13426,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13425,"column":0},"generated":{"line":13427,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13426,"column":0},"generated":{"line":13428,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13427,"column":0},"generated":{"line":13429,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13428,"column":0},"generated":{"line":13430,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13429,"column":0},"generated":{"line":13431,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13430,"column":0},"generated":{"line":13432,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13431,"column":0},"generated":{"line":13433,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13432,"column":0},"generated":{"line":13434,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13433,"column":0},"generated":{"line":13435,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13434,"column":0},"generated":{"line":13436,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13435,"column":0},"generated":{"line":13437,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13436,"column":0},"generated":{"line":13438,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13437,"column":0},"generated":{"line":13439,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13438,"column":0},"generated":{"line":13440,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13439,"column":0},"generated":{"line":13441,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13440,"column":0},"generated":{"line":13442,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13441,"column":0},"generated":{"line":13443,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13442,"column":0},"generated":{"line":13444,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13443,"column":0},"generated":{"line":13445,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13444,"column":0},"generated":{"line":13446,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13445,"column":0},"generated":{"line":13447,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13446,"column":0},"generated":{"line":13448,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13447,"column":0},"generated":{"line":13449,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13448,"column":0},"generated":{"line":13450,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13449,"column":0},"generated":{"line":13451,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13450,"column":0},"generated":{"line":13452,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13451,"column":0},"generated":{"line":13453,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13452,"column":0},"generated":{"line":13454,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13453,"column":0},"generated":{"line":13455,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13454,"column":0},"generated":{"line":13456,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13455,"column":0},"generated":{"line":13457,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13456,"column":0},"generated":{"line":13458,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13457,"column":0},"generated":{"line":13459,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13458,"column":0},"generated":{"line":13460,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13459,"column":0},"generated":{"line":13461,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13460,"column":0},"generated":{"line":13462,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13461,"column":0},"generated":{"line":13463,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13462,"column":0},"generated":{"line":13464,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13463,"column":0},"generated":{"line":13465,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13464,"column":0},"generated":{"line":13466,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13465,"column":0},"generated":{"line":13467,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13466,"column":0},"generated":{"line":13468,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13467,"column":0},"generated":{"line":13469,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13468,"column":0},"generated":{"line":13470,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13469,"column":0},"generated":{"line":13471,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13470,"column":0},"generated":{"line":13472,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13471,"column":0},"generated":{"line":13473,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13472,"column":0},"generated":{"line":13474,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13473,"column":0},"generated":{"line":13475,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13474,"column":0},"generated":{"line":13476,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13475,"column":0},"generated":{"line":13477,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13476,"column":0},"generated":{"line":13478,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13477,"column":0},"generated":{"line":13479,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13478,"column":0},"generated":{"line":13480,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13479,"column":0},"generated":{"line":13481,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13480,"column":0},"generated":{"line":13482,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13481,"column":0},"generated":{"line":13483,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13482,"column":0},"generated":{"line":13484,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13483,"column":0},"generated":{"line":13485,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13484,"column":0},"generated":{"line":13486,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13485,"column":0},"generated":{"line":13487,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13486,"column":0},"generated":{"line":13488,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13487,"column":0},"generated":{"line":13489,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13488,"column":0},"generated":{"line":13490,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13489,"column":0},"generated":{"line":13491,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13490,"column":0},"generated":{"line":13492,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13491,"column":0},"generated":{"line":13493,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13492,"column":0},"generated":{"line":13494,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13493,"column":0},"generated":{"line":13495,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13494,"column":0},"generated":{"line":13496,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13495,"column":0},"generated":{"line":13497,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13496,"column":0},"generated":{"line":13498,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13497,"column":0},"generated":{"line":13499,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13498,"column":0},"generated":{"line":13500,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13499,"column":0},"generated":{"line":13501,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13500,"column":0},"generated":{"line":13502,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13501,"column":0},"generated":{"line":13503,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13502,"column":0},"generated":{"line":13504,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13503,"column":0},"generated":{"line":13505,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13504,"column":0},"generated":{"line":13506,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13505,"column":0},"generated":{"line":13507,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13506,"column":0},"generated":{"line":13508,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13507,"column":0},"generated":{"line":13509,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13508,"column":0},"generated":{"line":13510,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13509,"column":0},"generated":{"line":13511,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13510,"column":0},"generated":{"line":13512,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13511,"column":0},"generated":{"line":13513,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13512,"column":0},"generated":{"line":13514,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13513,"column":0},"generated":{"line":13515,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13514,"column":0},"generated":{"line":13516,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13515,"column":0},"generated":{"line":13517,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13516,"column":0},"generated":{"line":13518,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13517,"column":0},"generated":{"line":13519,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13518,"column":0},"generated":{"line":13520,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13519,"column":0},"generated":{"line":13521,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13520,"column":0},"generated":{"line":13522,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13521,"column":0},"generated":{"line":13523,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13522,"column":0},"generated":{"line":13524,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13523,"column":0},"generated":{"line":13525,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13524,"column":0},"generated":{"line":13526,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13525,"column":0},"generated":{"line":13527,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13526,"column":0},"generated":{"line":13528,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13527,"column":0},"generated":{"line":13529,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13528,"column":0},"generated":{"line":13530,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13529,"column":0},"generated":{"line":13531,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13530,"column":0},"generated":{"line":13532,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13531,"column":0},"generated":{"line":13533,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13532,"column":0},"generated":{"line":13534,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13533,"column":0},"generated":{"line":13535,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13534,"column":0},"generated":{"line":13536,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13535,"column":0},"generated":{"line":13537,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13536,"column":0},"generated":{"line":13538,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13537,"column":0},"generated":{"line":13539,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13538,"column":0},"generated":{"line":13540,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13539,"column":0},"generated":{"line":13541,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13540,"column":0},"generated":{"line":13542,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13541,"column":0},"generated":{"line":13543,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13542,"column":0},"generated":{"line":13544,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13543,"column":0},"generated":{"line":13545,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13544,"column":0},"generated":{"line":13546,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13545,"column":0},"generated":{"line":13547,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13546,"column":0},"generated":{"line":13548,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13547,"column":0},"generated":{"line":13549,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13548,"column":0},"generated":{"line":13550,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13549,"column":0},"generated":{"line":13551,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13550,"column":0},"generated":{"line":13552,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13551,"column":0},"generated":{"line":13553,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13552,"column":0},"generated":{"line":13554,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13553,"column":0},"generated":{"line":13555,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13554,"column":0},"generated":{"line":13556,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13555,"column":0},"generated":{"line":13557,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13556,"column":0},"generated":{"line":13558,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13557,"column":0},"generated":{"line":13559,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13558,"column":0},"generated":{"line":13560,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13559,"column":0},"generated":{"line":13561,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13560,"column":0},"generated":{"line":13562,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13561,"column":0},"generated":{"line":13563,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13562,"column":0},"generated":{"line":13564,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13563,"column":0},"generated":{"line":13565,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13564,"column":0},"generated":{"line":13566,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13565,"column":0},"generated":{"line":13567,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13566,"column":0},"generated":{"line":13568,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13567,"column":0},"generated":{"line":13569,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13568,"column":0},"generated":{"line":13570,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13569,"column":0},"generated":{"line":13571,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13570,"column":0},"generated":{"line":13572,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13571,"column":0},"generated":{"line":13573,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13572,"column":0},"generated":{"line":13574,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13573,"column":0},"generated":{"line":13575,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13574,"column":0},"generated":{"line":13576,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13575,"column":0},"generated":{"line":13577,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13576,"column":0},"generated":{"line":13578,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13577,"column":0},"generated":{"line":13579,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13578,"column":0},"generated":{"line":13580,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13579,"column":0},"generated":{"line":13581,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13580,"column":0},"generated":{"line":13582,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13581,"column":0},"generated":{"line":13583,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13582,"column":0},"generated":{"line":13584,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13583,"column":0},"generated":{"line":13585,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13584,"column":0},"generated":{"line":13586,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13585,"column":0},"generated":{"line":13587,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13586,"column":0},"generated":{"line":13588,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13587,"column":0},"generated":{"line":13589,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13588,"column":0},"generated":{"line":13590,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13589,"column":0},"generated":{"line":13591,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13590,"column":0},"generated":{"line":13592,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13591,"column":0},"generated":{"line":13593,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13592,"column":0},"generated":{"line":13594,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13593,"column":0},"generated":{"line":13595,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13594,"column":0},"generated":{"line":13596,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13595,"column":0},"generated":{"line":13597,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13596,"column":0},"generated":{"line":13598,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13597,"column":0},"generated":{"line":13599,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13598,"column":0},"generated":{"line":13600,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13599,"column":0},"generated":{"line":13601,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13600,"column":0},"generated":{"line":13602,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13601,"column":0},"generated":{"line":13603,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13602,"column":0},"generated":{"line":13604,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13603,"column":0},"generated":{"line":13605,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13604,"column":0},"generated":{"line":13606,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13605,"column":0},"generated":{"line":13607,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13606,"column":0},"generated":{"line":13608,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13607,"column":0},"generated":{"line":13609,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13608,"column":0},"generated":{"line":13610,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13609,"column":0},"generated":{"line":13611,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13610,"column":0},"generated":{"line":13612,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13611,"column":0},"generated":{"line":13613,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13612,"column":0},"generated":{"line":13614,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13613,"column":0},"generated":{"line":13615,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13614,"column":0},"generated":{"line":13616,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13615,"column":0},"generated":{"line":13617,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13616,"column":0},"generated":{"line":13618,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13617,"column":0},"generated":{"line":13619,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13618,"column":0},"generated":{"line":13620,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13619,"column":0},"generated":{"line":13621,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13620,"column":0},"generated":{"line":13622,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13621,"column":0},"generated":{"line":13623,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13622,"column":0},"generated":{"line":13624,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13623,"column":0},"generated":{"line":13625,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13624,"column":0},"generated":{"line":13626,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13625,"column":0},"generated":{"line":13627,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13626,"column":0},"generated":{"line":13628,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13627,"column":0},"generated":{"line":13629,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13628,"column":0},"generated":{"line":13630,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13629,"column":0},"generated":{"line":13631,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13630,"column":0},"generated":{"line":13632,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13631,"column":0},"generated":{"line":13633,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13632,"column":0},"generated":{"line":13634,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13633,"column":0},"generated":{"line":13635,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13634,"column":0},"generated":{"line":13636,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13635,"column":0},"generated":{"line":13637,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13636,"column":0},"generated":{"line":13638,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13637,"column":0},"generated":{"line":13639,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13638,"column":0},"generated":{"line":13640,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13639,"column":0},"generated":{"line":13641,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13640,"column":0},"generated":{"line":13642,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13641,"column":0},"generated":{"line":13643,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13642,"column":0},"generated":{"line":13644,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13643,"column":0},"generated":{"line":13645,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13644,"column":0},"generated":{"line":13646,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13645,"column":0},"generated":{"line":13647,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13646,"column":0},"generated":{"line":13648,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13647,"column":0},"generated":{"line":13649,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13648,"column":0},"generated":{"line":13650,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13649,"column":0},"generated":{"line":13651,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13650,"column":0},"generated":{"line":13652,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13651,"column":0},"generated":{"line":13653,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13652,"column":0},"generated":{"line":13654,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13653,"column":0},"generated":{"line":13655,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13654,"column":0},"generated":{"line":13656,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13655,"column":0},"generated":{"line":13657,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13656,"column":0},"generated":{"line":13658,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13657,"column":0},"generated":{"line":13659,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13658,"column":0},"generated":{"line":13660,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13659,"column":0},"generated":{"line":13661,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13660,"column":0},"generated":{"line":13662,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13661,"column":0},"generated":{"line":13663,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13662,"column":0},"generated":{"line":13664,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13663,"column":0},"generated":{"line":13665,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13664,"column":0},"generated":{"line":13666,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13665,"column":0},"generated":{"line":13667,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13666,"column":0},"generated":{"line":13668,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13667,"column":0},"generated":{"line":13669,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13668,"column":0},"generated":{"line":13670,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13669,"column":0},"generated":{"line":13671,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13670,"column":0},"generated":{"line":13672,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13671,"column":0},"generated":{"line":13673,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13672,"column":0},"generated":{"line":13674,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13673,"column":0},"generated":{"line":13675,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13674,"column":0},"generated":{"line":13676,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13675,"column":0},"generated":{"line":13677,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13676,"column":0},"generated":{"line":13678,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13677,"column":0},"generated":{"line":13679,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13678,"column":0},"generated":{"line":13680,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13679,"column":0},"generated":{"line":13681,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13680,"column":0},"generated":{"line":13682,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13681,"column":0},"generated":{"line":13683,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13682,"column":0},"generated":{"line":13684,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13683,"column":0},"generated":{"line":13685,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13684,"column":0},"generated":{"line":13686,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13685,"column":0},"generated":{"line":13687,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13686,"column":0},"generated":{"line":13688,"column":0}},{"source":"../node_modules/cannon/build/cannon.js","original":{"line":13687,"column":0},"generated":{"line":13689,"column":0}}],"sources":{"../node_modules/cannon/build/cannon.js":"/*\n * Copyright (c) 2015 cannon.js Authors\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use, copy,\n * modify, merge, publish, distribute, sublicense, and/or sell copies\n * of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&false)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.CANNON=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\nmodule.exports={\n  \"name\": \"cannon\",\n  \"version\": \"0.6.2\",\n  \"description\": \"A lightweight 3D physics engine written in JavaScript.\",\n  \"homepage\": \"https://github.com/schteppe/cannon.js\",\n  \"author\": \"Stefan Hedman <schteppe@gmail.com> (http://steffe.se)\",\n  \"keywords\": [\n    \"cannon.js\",\n    \"cannon\",\n    \"physics\",\n    \"engine\",\n    \"3d\"\n  ],\n  \"main\": \"./build/cannon.js\",\n  \"engines\": {\n    \"node\": \"*\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/schteppe/cannon.js.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/schteppe/cannon.js/issues\"\n  },\n  \"licenses\": [\n    {\n      \"type\": \"MIT\"\n    }\n  ],\n  \"devDependencies\": {\n    \"jshint\": \"latest\",\n    \"uglify-js\": \"latest\",\n    \"nodeunit\": \"^0.9.0\",\n    \"grunt\": \"~0.4.0\",\n    \"grunt-contrib-jshint\": \"~0.1.1\",\n    \"grunt-contrib-nodeunit\": \"^0.4.1\",\n    \"grunt-contrib-concat\": \"~0.1.3\",\n    \"grunt-contrib-uglify\": \"^0.5.1\",\n    \"grunt-browserify\": \"^2.1.4\",\n    \"grunt-contrib-yuidoc\": \"^0.5.2\",\n    \"browserify\": \"*\"\n  },\n  \"dependencies\": {}\n}\n\n},{}],2:[function(_dereq_,module,exports){\n// Export classes\nmodule.exports = {\n    version :                       _dereq_('../package.json').version,\n\n    AABB :                          _dereq_('./collision/AABB'),\n    ArrayCollisionMatrix :          _dereq_('./collision/ArrayCollisionMatrix'),\n    Body :                          _dereq_('./objects/Body'),\n    Box :                           _dereq_('./shapes/Box'),\n    Broadphase :                    _dereq_('./collision/Broadphase'),\n    Constraint :                    _dereq_('./constraints/Constraint'),\n    ContactEquation :               _dereq_('./equations/ContactEquation'),\n    Narrowphase :                   _dereq_('./world/Narrowphase'),\n    ConeTwistConstraint :           _dereq_('./constraints/ConeTwistConstraint'),\n    ContactMaterial :               _dereq_('./material/ContactMaterial'),\n    ConvexPolyhedron :              _dereq_('./shapes/ConvexPolyhedron'),\n    Cylinder :                      _dereq_('./shapes/Cylinder'),\n    DistanceConstraint :            _dereq_('./constraints/DistanceConstraint'),\n    Equation :                      _dereq_('./equations/Equation'),\n    EventTarget :                   _dereq_('./utils/EventTarget'),\n    FrictionEquation :              _dereq_('./equations/FrictionEquation'),\n    GSSolver :                      _dereq_('./solver/GSSolver'),\n    GridBroadphase :                _dereq_('./collision/GridBroadphase'),\n    Heightfield :                   _dereq_('./shapes/Heightfield'),\n    HingeConstraint :               _dereq_('./constraints/HingeConstraint'),\n    LockConstraint :                _dereq_('./constraints/LockConstraint'),\n    Mat3 :                          _dereq_('./math/Mat3'),\n    Material :                      _dereq_('./material/Material'),\n    NaiveBroadphase :               _dereq_('./collision/NaiveBroadphase'),\n    ObjectCollisionMatrix :         _dereq_('./collision/ObjectCollisionMatrix'),\n    Pool :                          _dereq_('./utils/Pool'),\n    Particle :                      _dereq_('./shapes/Particle'),\n    Plane :                         _dereq_('./shapes/Plane'),\n    PointToPointConstraint :        _dereq_('./constraints/PointToPointConstraint'),\n    Quaternion :                    _dereq_('./math/Quaternion'),\n    Ray :                           _dereq_('./collision/Ray'),\n    RaycastVehicle :                _dereq_('./objects/RaycastVehicle'),\n    RaycastResult :                 _dereq_('./collision/RaycastResult'),\n    RigidVehicle :                  _dereq_('./objects/RigidVehicle'),\n    RotationalEquation :            _dereq_('./equations/RotationalEquation'),\n    RotationalMotorEquation :       _dereq_('./equations/RotationalMotorEquation'),\n    SAPBroadphase :                 _dereq_('./collision/SAPBroadphase'),\n    SPHSystem :                     _dereq_('./objects/SPHSystem'),\n    Shape :                         _dereq_('./shapes/Shape'),\n    Solver :                        _dereq_('./solver/Solver'),\n    Sphere :                        _dereq_('./shapes/Sphere'),\n    SplitSolver :                   _dereq_('./solver/SplitSolver'),\n    Spring :                        _dereq_('./objects/Spring'),\n    Trimesh :                       _dereq_('./shapes/Trimesh'),\n    Vec3 :                          _dereq_('./math/Vec3'),\n    Vec3Pool :                      _dereq_('./utils/Vec3Pool'),\n    World :                         _dereq_('./world/World'),\n};\n\n},{\"../package.json\":1,\"./collision/AABB\":3,\"./collision/ArrayCollisionMatrix\":4,\"./collision/Broadphase\":5,\"./collision/GridBroadphase\":6,\"./collision/NaiveBroadphase\":7,\"./collision/ObjectCollisionMatrix\":8,\"./collision/Ray\":9,\"./collision/RaycastResult\":10,\"./collision/SAPBroadphase\":11,\"./constraints/ConeTwistConstraint\":12,\"./constraints/Constraint\":13,\"./constraints/DistanceConstraint\":14,\"./constraints/HingeConstraint\":15,\"./constraints/LockConstraint\":16,\"./constraints/PointToPointConstraint\":17,\"./equations/ContactEquation\":19,\"./equations/Equation\":20,\"./equations/FrictionEquation\":21,\"./equations/RotationalEquation\":22,\"./equations/RotationalMotorEquation\":23,\"./material/ContactMaterial\":24,\"./material/Material\":25,\"./math/Mat3\":27,\"./math/Quaternion\":28,\"./math/Vec3\":30,\"./objects/Body\":31,\"./objects/RaycastVehicle\":32,\"./objects/RigidVehicle\":33,\"./objects/SPHSystem\":34,\"./objects/Spring\":35,\"./shapes/Box\":37,\"./shapes/ConvexPolyhedron\":38,\"./shapes/Cylinder\":39,\"./shapes/Heightfield\":40,\"./shapes/Particle\":41,\"./shapes/Plane\":42,\"./shapes/Shape\":43,\"./shapes/Sphere\":44,\"./shapes/Trimesh\":45,\"./solver/GSSolver\":46,\"./solver/Solver\":47,\"./solver/SplitSolver\":48,\"./utils/EventTarget\":49,\"./utils/Pool\":51,\"./utils/Vec3Pool\":54,\"./world/Narrowphase\":55,\"./world/World\":56}],3:[function(_dereq_,module,exports){\nvar Vec3 = _dereq_('../math/Vec3');\nvar Utils = _dereq_('../utils/Utils');\n\nmodule.exports = AABB;\n\n/**\n * Axis aligned bounding box class.\n * @class AABB\n * @constructor\n * @param {Object} [options]\n * @param {Vec3}   [options.upperBound]\n * @param {Vec3}   [options.lowerBound]\n */\nfunction AABB(options){\n    options = options || {};\n\n    /**\n     * The lower bound of the bounding box.\n     * @property lowerBound\n     * @type {Vec3}\n     */\n    this.lowerBound = new Vec3();\n    if(options.lowerBound){\n        this.lowerBound.copy(options.lowerBound);\n    }\n\n    /**\n     * The upper bound of the bounding box.\n     * @property upperBound\n     * @type {Vec3}\n     */\n    this.upperBound = new Vec3();\n    if(options.upperBound){\n        this.upperBound.copy(options.upperBound);\n    }\n}\n\nvar tmp = new Vec3();\n\n/**\n * Set the AABB bounds from a set of points.\n * @method setFromPoints\n * @param {Array} points An array of Vec3's.\n * @param {Vec3} position\n * @param {Quaternion} quaternion\n * @param {number} skinSize\n * @return {AABB} The self object\n */\nAABB.prototype.setFromPoints = function(points, position, quaternion, skinSize){\n    var l = this.lowerBound,\n        u = this.upperBound,\n        q = quaternion;\n\n    // Set to the first point\n    l.copy(points[0]);\n    if(q){\n        q.vmult(l, l);\n    }\n    u.copy(l);\n\n    for(var i = 1; i<points.length; i++){\n        var p = points[i];\n\n        if(q){\n            q.vmult(p, tmp);\n            p = tmp;\n        }\n\n        if(p.x > u.x){ u.x = p.x; }\n        if(p.x < l.x){ l.x = p.x; }\n        if(p.y > u.y){ u.y = p.y; }\n        if(p.y < l.y){ l.y = p.y; }\n        if(p.z > u.z){ u.z = p.z; }\n        if(p.z < l.z){ l.z = p.z; }\n    }\n\n    // Add offset\n    if (position) {\n        position.vadd(l, l);\n        position.vadd(u, u);\n    }\n\n    if(skinSize){\n        l.x -= skinSize;\n        l.y -= skinSize;\n        l.z -= skinSize;\n        u.x += skinSize;\n        u.y += skinSize;\n        u.z += skinSize;\n    }\n\n    return this;\n};\n\n/**\n * Copy bounds from an AABB to this AABB\n * @method copy\n * @param  {AABB} aabb Source to copy from\n * @return {AABB} The this object, for chainability\n */\nAABB.prototype.copy = function(aabb){\n    this.lowerBound.copy(aabb.lowerBound);\n    this.upperBound.copy(aabb.upperBound);\n    return this;\n};\n\n/**\n * Clone an AABB\n * @method clone\n */\nAABB.prototype.clone = function(){\n    return new AABB().copy(this);\n};\n\n/**\n * Extend this AABB so that it covers the given AABB too.\n * @method extend\n * @param  {AABB} aabb\n */\nAABB.prototype.extend = function(aabb){\n    // Extend lower bound\n    var l = aabb.lowerBound.x;\n    if(this.lowerBound.x > l){\n        this.lowerBound.x = l;\n    }\n\n    // Upper\n    var u = aabb.upperBound.x;\n    if(this.upperBound.x < u){\n        this.upperBound.x = u;\n    }\n\n    // Extend lower bound\n    var l = aabb.lowerBound.y;\n    if(this.lowerBound.y > l){\n        this.lowerBound.y = l;\n    }\n\n    // Upper\n    var u = aabb.upperBound.y;\n    if(this.upperBound.y < u){\n        this.upperBound.y = u;\n    }\n\n    // Extend lower bound\n    var l = aabb.lowerBound.z;\n    if(this.lowerBound.z > l){\n        this.lowerBound.z = l;\n    }\n\n    // Upper\n    var u = aabb.upperBound.z;\n    if(this.upperBound.z < u){\n        this.upperBound.z = u;\n    }\n};\n\n/**\n * Returns true if the given AABB overlaps this AABB.\n * @method overlaps\n * @param  {AABB} aabb\n * @return {Boolean}\n */\nAABB.prototype.overlaps = function(aabb){\n    var l1 = this.lowerBound,\n        u1 = this.upperBound,\n        l2 = aabb.lowerBound,\n        u2 = aabb.upperBound;\n\n    //      l2        u2\n    //      |---------|\n    // |--------|\n    // l1       u1\n\n    return ((l2.x <= u1.x && u1.x <= u2.x) || (l1.x <= u2.x && u2.x <= u1.x)) &&\n           ((l2.y <= u1.y && u1.y <= u2.y) || (l1.y <= u2.y && u2.y <= u1.y)) &&\n           ((l2.z <= u1.z && u1.z <= u2.z) || (l1.z <= u2.z && u2.z <= u1.z));\n};\n\n/**\n * Returns true if the given AABB is fully contained in this AABB.\n * @method contains\n * @param {AABB} aabb\n * @return {Boolean}\n */\nAABB.prototype.contains = function(aabb){\n    var l1 = this.lowerBound,\n        u1 = this.upperBound,\n        l2 = aabb.lowerBound,\n        u2 = aabb.upperBound;\n\n    //      l2        u2\n    //      |---------|\n    // |---------------|\n    // l1              u1\n\n    return (\n        (l1.x <= l2.x && u1.x >= u2.x) &&\n        (l1.y <= l2.y && u1.y >= u2.y) &&\n        (l1.z <= l2.z && u1.z >= u2.z)\n    );\n};\n\n/**\n * @method getCorners\n * @param {Vec3} a\n * @param {Vec3} b\n * @param {Vec3} c\n * @param {Vec3} d\n * @param {Vec3} e\n * @param {Vec3} f\n * @param {Vec3} g\n * @param {Vec3} h\n */\nAABB.prototype.getCorners = function(a, b, c, d, e, f, g, h){\n    var l = this.lowerBound,\n        u = this.upperBound;\n\n    a.copy(l);\n    b.set( u.x, l.y, l.z );\n    c.set( u.x, u.y, l.z );\n    d.set( l.x, u.y, u.z );\n    e.set( u.x, l.y, l.z );\n    f.set( l.x, u.y, l.z );\n    g.set( l.x, l.y, u.z );\n    h.copy(u);\n};\n\nvar transformIntoFrame_corners = [\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3()\n];\n\n/**\n * Get the representation of an AABB in another frame.\n * @method toLocalFrame\n * @param  {Transform} frame\n * @param  {AABB} target\n * @return {AABB} The \"target\" AABB object.\n */\nAABB.prototype.toLocalFrame = function(frame, target){\n\n    var corners = transformIntoFrame_corners;\n    var a = corners[0];\n    var b = corners[1];\n    var c = corners[2];\n    var d = corners[3];\n    var e = corners[4];\n    var f = corners[5];\n    var g = corners[6];\n    var h = corners[7];\n\n    // Get corners in current frame\n    this.getCorners(a, b, c, d, e, f, g, h);\n\n    // Transform them to new local frame\n    for(var i=0; i !== 8; i++){\n        var corner = corners[i];\n        frame.pointToLocal(corner, corner);\n    }\n\n    return target.setFromPoints(corners);\n};\n\n/**\n * Get the representation of an AABB in the global frame.\n * @method toWorldFrame\n * @param  {Transform} frame\n * @param  {AABB} target\n * @return {AABB} The \"target\" AABB object.\n */\nAABB.prototype.toWorldFrame = function(frame, target){\n\n    var corners = transformIntoFrame_corners;\n    var a = corners[0];\n    var b = corners[1];\n    var c = corners[2];\n    var d = corners[3];\n    var e = corners[4];\n    var f = corners[5];\n    var g = corners[6];\n    var h = corners[7];\n\n    // Get corners in current frame\n    this.getCorners(a, b, c, d, e, f, g, h);\n\n    // Transform them to new local frame\n    for(var i=0; i !== 8; i++){\n        var corner = corners[i];\n        frame.pointToWorld(corner, corner);\n    }\n\n    return target.setFromPoints(corners);\n};\n\n},{\"../math/Vec3\":30,\"../utils/Utils\":53}],4:[function(_dereq_,module,exports){\nmodule.exports = ArrayCollisionMatrix;\n\n/**\n * Collision \"matrix\". It's actually a triangular-shaped array of whether two bodies are touching this step, for reference next step\n * @class ArrayCollisionMatrix\n * @constructor\n */\nfunction ArrayCollisionMatrix() {\n\n    /**\n     * The matrix storage\n     * @property matrix\n     * @type {Array}\n     */\n\tthis.matrix = [];\n}\n\n/**\n * Get an element\n * @method get\n * @param  {Number} i\n * @param  {Number} j\n * @return {Number}\n */\nArrayCollisionMatrix.prototype.get = function(i, j) {\n\ti = i.index;\n\tj = j.index;\n    if (j > i) {\n        var temp = j;\n        j = i;\n        i = temp;\n    }\n\treturn this.matrix[(i*(i + 1)>>1) + j-1];\n};\n\n/**\n * Set an element\n * @method set\n * @param {Number} i\n * @param {Number} j\n * @param {Number} value\n */\nArrayCollisionMatrix.prototype.set = function(i, j, value) {\n\ti = i.index;\n\tj = j.index;\n    if (j > i) {\n        var temp = j;\n        j = i;\n        i = temp;\n    }\n\tthis.matrix[(i*(i + 1)>>1) + j-1] = value ? 1 : 0;\n};\n\n/**\n * Sets all elements to zero\n * @method reset\n */\nArrayCollisionMatrix.prototype.reset = function() {\n\tfor (var i=0, l=this.matrix.length; i!==l; i++) {\n\t\tthis.matrix[i]=0;\n\t}\n};\n\n/**\n * Sets the max number of objects\n * @method setNumObjects\n * @param {Number} n\n */\nArrayCollisionMatrix.prototype.setNumObjects = function(n) {\n\tthis.matrix.length = n*(n-1)>>1;\n};\n\n},{}],5:[function(_dereq_,module,exports){\nvar Body = _dereq_('../objects/Body');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar Shape = _dereq_('../shapes/Shape');\nvar Plane = _dereq_('../shapes/Plane');\n\nmodule.exports = Broadphase;\n\n/**\n * Base class for broadphase implementations\n * @class Broadphase\n * @constructor\n * @author schteppe\n */\nfunction Broadphase(){\n    /**\n    * The world to search for collisions in.\n    * @property world\n    * @type {World}\n    */\n    this.world = null;\n\n    /**\n     * If set to true, the broadphase uses bounding boxes for intersection test, else it uses bounding spheres.\n     * @property useBoundingBoxes\n     * @type {Boolean}\n     */\n    this.useBoundingBoxes = false;\n\n    /**\n     * Set to true if the objects in the world moved.\n     * @property {Boolean} dirty\n     */\n    this.dirty = true;\n}\n\n/**\n * Get the collision pairs from the world\n * @method collisionPairs\n * @param {World} world The world to search in\n * @param {Array} p1 Empty array to be filled with body objects\n * @param {Array} p2 Empty array to be filled with body objects\n */\nBroadphase.prototype.collisionPairs = function(world,p1,p2){\n    throw new Error(\"collisionPairs not implemented for this BroadPhase class!\");\n};\n\n/**\n * Check if a body pair needs to be intersection tested at all.\n * @method needBroadphaseCollision\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @return {bool}\n */\nvar Broadphase_needBroadphaseCollision_STATIC_OR_KINEMATIC = Body.STATIC | Body.KINEMATIC;\nBroadphase.prototype.needBroadphaseCollision = function(bodyA,bodyB){\n\n    // Check collision filter masks\n    if( (bodyA.collisionFilterGroup & bodyB.collisionFilterMask)===0 || (bodyB.collisionFilterGroup & bodyA.collisionFilterMask)===0){\n        return false;\n    }\n\n    // Check types\n    if(((bodyA.type & Broadphase_needBroadphaseCollision_STATIC_OR_KINEMATIC)!==0 || bodyA.sleepState === Body.SLEEPING) &&\n       ((bodyB.type & Broadphase_needBroadphaseCollision_STATIC_OR_KINEMATIC)!==0 || bodyB.sleepState === Body.SLEEPING)) {\n        // Both bodies are static, kinematic or sleeping. Skip.\n        return false;\n    }\n\n    return true;\n};\n\n/**\n * Check if the bounding volumes of two bodies intersect.\n * @method intersectionTest\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {array} pairs1\n * @param {array} pairs2\n  */\nBroadphase.prototype.intersectionTest = function(bodyA, bodyB, pairs1, pairs2){\n    if(this.useBoundingBoxes){\n        this.doBoundingBoxBroadphase(bodyA,bodyB,pairs1,pairs2);\n    } else {\n        this.doBoundingSphereBroadphase(bodyA,bodyB,pairs1,pairs2);\n    }\n};\n\n/**\n * Check if the bounding spheres of two bodies are intersecting.\n * @method doBoundingSphereBroadphase\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Array} pairs1 bodyA is appended to this array if intersection\n * @param {Array} pairs2 bodyB is appended to this array if intersection\n */\nvar Broadphase_collisionPairs_r = new Vec3(), // Temp objects\n    Broadphase_collisionPairs_normal =  new Vec3(),\n    Broadphase_collisionPairs_quat =  new Quaternion(),\n    Broadphase_collisionPairs_relpos  =  new Vec3();\nBroadphase.prototype.doBoundingSphereBroadphase = function(bodyA,bodyB,pairs1,pairs2){\n    var r = Broadphase_collisionPairs_r;\n    bodyB.position.vsub(bodyA.position,r);\n    var boundingRadiusSum2 = Math.pow(bodyA.boundingRadius + bodyB.boundingRadius, 2);\n    var norm2 = r.norm2();\n    if(norm2 < boundingRadiusSum2){\n        pairs1.push(bodyA);\n        pairs2.push(bodyB);\n    }\n};\n\n/**\n * Check if the bounding boxes of two bodies are intersecting.\n * @method doBoundingBoxBroadphase\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Array} pairs1\n * @param {Array} pairs2\n */\nBroadphase.prototype.doBoundingBoxBroadphase = function(bodyA,bodyB,pairs1,pairs2){\n    if(bodyA.aabbNeedsUpdate){\n        bodyA.computeAABB();\n    }\n    if(bodyB.aabbNeedsUpdate){\n        bodyB.computeAABB();\n    }\n\n    // Check AABB / AABB\n    if(bodyA.aabb.overlaps(bodyB.aabb)){\n        pairs1.push(bodyA);\n        pairs2.push(bodyB);\n    }\n};\n\n/**\n * Removes duplicate pairs from the pair arrays.\n * @method makePairsUnique\n * @param {Array} pairs1\n * @param {Array} pairs2\n */\nvar Broadphase_makePairsUnique_temp = { keys:[] },\n    Broadphase_makePairsUnique_p1 = [],\n    Broadphase_makePairsUnique_p2 = [];\nBroadphase.prototype.makePairsUnique = function(pairs1,pairs2){\n    var t = Broadphase_makePairsUnique_temp,\n        p1 = Broadphase_makePairsUnique_p1,\n        p2 = Broadphase_makePairsUnique_p2,\n        N = pairs1.length;\n\n    for(var i=0; i!==N; i++){\n        p1[i] = pairs1[i];\n        p2[i] = pairs2[i];\n    }\n\n    pairs1.length = 0;\n    pairs2.length = 0;\n\n    for(var i=0; i!==N; i++){\n        var id1 = p1[i].id,\n            id2 = p2[i].id;\n        var key = id1 < id2 ? id1+\",\"+id2 :  id2+\",\"+id1;\n        t[key] = i;\n        t.keys.push(key);\n    }\n\n    for(var i=0; i!==t.keys.length; i++){\n        var key = t.keys.pop(),\n            pairIndex = t[key];\n        pairs1.push(p1[pairIndex]);\n        pairs2.push(p2[pairIndex]);\n        delete t[key];\n    }\n};\n\n/**\n * To be implemented by subcasses\n * @method setWorld\n * @param {World} world\n */\nBroadphase.prototype.setWorld = function(world){\n};\n\n/**\n * Check if the bounding spheres of two bodies overlap.\n * @method boundingSphereCheck\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @return {boolean}\n */\nvar bsc_dist = new Vec3();\nBroadphase.boundingSphereCheck = function(bodyA,bodyB){\n    var dist = bsc_dist;\n    bodyA.position.vsub(bodyB.position,dist);\n    return Math.pow(bodyA.shape.boundingSphereRadius + bodyB.shape.boundingSphereRadius,2) > dist.norm2();\n};\n\n/**\n * Returns all the bodies within the AABB.\n * @method aabbQuery\n * @param  {World} world\n * @param  {AABB} aabb\n * @param  {array} result An array to store resulting bodies in.\n * @return {array}\n */\nBroadphase.prototype.aabbQuery = function(world, aabb, result){\n    console.warn('.aabbQuery is not implemented in this Broadphase subclass.');\n    return [];\n};\n},{\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/Body\":31,\"../shapes/Plane\":42,\"../shapes/Shape\":43}],6:[function(_dereq_,module,exports){\nmodule.exports = GridBroadphase;\n\nvar Broadphase = _dereq_('./Broadphase');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Shape = _dereq_('../shapes/Shape');\n\n/**\n * Axis aligned uniform grid broadphase.\n * @class GridBroadphase\n * @constructor\n * @extends Broadphase\n * @todo Needs support for more than just planes and spheres.\n * @param {Vec3} aabbMin\n * @param {Vec3} aabbMax\n * @param {Number} nx Number of boxes along x\n * @param {Number} ny Number of boxes along y\n * @param {Number} nz Number of boxes along z\n */\nfunction GridBroadphase(aabbMin,aabbMax,nx,ny,nz){\n    Broadphase.apply(this);\n    this.nx = nx || 10;\n    this.ny = ny || 10;\n    this.nz = nz || 10;\n    this.aabbMin = aabbMin || new Vec3(100,100,100);\n    this.aabbMax = aabbMax || new Vec3(-100,-100,-100);\n\tvar nbins = this.nx * this.ny * this.nz;\n\tif (nbins <= 0) {\n\t\tthrow \"GridBroadphase: Each dimension's n must be >0\";\n\t}\n    this.bins = [];\n\tthis.binLengths = []; //Rather than continually resizing arrays (thrashing the memory), just record length and allow them to grow\n\tthis.bins.length = nbins;\n\tthis.binLengths.length = nbins;\n\tfor (var i=0;i<nbins;i++) {\n\t\tthis.bins[i]=[];\n\t\tthis.binLengths[i]=0;\n\t}\n}\nGridBroadphase.prototype = new Broadphase();\nGridBroadphase.prototype.constructor = GridBroadphase;\n\n/**\n * Get all the collision pairs in the physics world\n * @method collisionPairs\n * @param {World} world\n * @param {Array} pairs1\n * @param {Array} pairs2\n */\nvar GridBroadphase_collisionPairs_d = new Vec3();\nvar GridBroadphase_collisionPairs_binPos = new Vec3();\nGridBroadphase.prototype.collisionPairs = function(world,pairs1,pairs2){\n    var N = world.numObjects(),\n        bodies = world.bodies;\n\n    var max = this.aabbMax,\n        min = this.aabbMin,\n        nx = this.nx,\n        ny = this.ny,\n        nz = this.nz;\n\n\tvar xstep = ny*nz;\n\tvar ystep = nz;\n\tvar zstep = 1;\n\n    var xmax = max.x,\n        ymax = max.y,\n        zmax = max.z,\n        xmin = min.x,\n        ymin = min.y,\n        zmin = min.z;\n\n    var xmult = nx / (xmax-xmin),\n        ymult = ny / (ymax-ymin),\n        zmult = nz / (zmax-zmin);\n\n    var binsizeX = (xmax - xmin) / nx,\n        binsizeY = (ymax - ymin) / ny,\n        binsizeZ = (zmax - zmin) / nz;\n\n\tvar binRadius = Math.sqrt(binsizeX*binsizeX + binsizeY*binsizeY + binsizeZ*binsizeZ) * 0.5;\n\n    var types = Shape.types;\n    var SPHERE =            types.SPHERE,\n        PLANE =             types.PLANE,\n        BOX =               types.BOX,\n        COMPOUND =          types.COMPOUND,\n        CONVEXPOLYHEDRON =  types.CONVEXPOLYHEDRON;\n\n    var bins=this.bins,\n\t\tbinLengths=this.binLengths,\n        Nbins=this.bins.length;\n\n    // Reset bins\n    for(var i=0; i!==Nbins; i++){\n        binLengths[i] = 0;\n    }\n\n    var ceil = Math.ceil;\n\tvar min = Math.min;\n\tvar max = Math.max;\n\n\tfunction addBoxToBins(x0,y0,z0,x1,y1,z1,bi) {\n\t\tvar xoff0 = ((x0 - xmin) * xmult)|0,\n\t\t\tyoff0 = ((y0 - ymin) * ymult)|0,\n\t\t\tzoff0 = ((z0 - zmin) * zmult)|0,\n\t\t\txoff1 = ceil((x1 - xmin) * xmult),\n\t\t\tyoff1 = ceil((y1 - ymin) * ymult),\n\t\t\tzoff1 = ceil((z1 - zmin) * zmult);\n\n\t\tif (xoff0 < 0) { xoff0 = 0; } else if (xoff0 >= nx) { xoff0 = nx - 1; }\n\t\tif (yoff0 < 0) { yoff0 = 0; } else if (yoff0 >= ny) { yoff0 = ny - 1; }\n\t\tif (zoff0 < 0) { zoff0 = 0; } else if (zoff0 >= nz) { zoff0 = nz - 1; }\n\t\tif (xoff1 < 0) { xoff1 = 0; } else if (xoff1 >= nx) { xoff1 = nx - 1; }\n\t\tif (yoff1 < 0) { yoff1 = 0; } else if (yoff1 >= ny) { yoff1 = ny - 1; }\n\t\tif (zoff1 < 0) { zoff1 = 0; } else if (zoff1 >= nz) { zoff1 = nz - 1; }\n\n\t\txoff0 *= xstep;\n\t\tyoff0 *= ystep;\n\t\tzoff0 *= zstep;\n\t\txoff1 *= xstep;\n\t\tyoff1 *= ystep;\n\t\tzoff1 *= zstep;\n\n\t\tfor (var xoff = xoff0; xoff <= xoff1; xoff += xstep) {\n\t\t\tfor (var yoff = yoff0; yoff <= yoff1; yoff += ystep) {\n\t\t\t\tfor (var zoff = zoff0; zoff <= zoff1; zoff += zstep) {\n\t\t\t\t\tvar idx = xoff+yoff+zoff;\n\t\t\t\t\tbins[idx][binLengths[idx]++] = bi;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n    // Put all bodies into the bins\n    for(var i=0; i!==N; i++){\n        var bi = bodies[i];\n        var si = bi.shape;\n\n        switch(si.type){\n        case SPHERE:\n            // Put in bin\n            // check if overlap with other bins\n            var x = bi.position.x,\n                y = bi.position.y,\n                z = bi.position.z;\n            var r = si.radius;\n\n\t\t\taddBoxToBins(x-r, y-r, z-r, x+r, y+r, z+r, bi);\n            break;\n\n        case PLANE:\n            if(si.worldNormalNeedsUpdate){\n                si.computeWorldNormal(bi.quaternion);\n            }\n            var planeNormal = si.worldNormal;\n\n\t\t\t//Relative position from origin of plane object to the first bin\n\t\t\t//Incremented as we iterate through the bins\n\t\t\tvar xreset = xmin + binsizeX*0.5 - bi.position.x,\n\t\t\t\tyreset = ymin + binsizeY*0.5 - bi.position.y,\n\t\t\t\tzreset = zmin + binsizeZ*0.5 - bi.position.z;\n\n            var d = GridBroadphase_collisionPairs_d;\n\t\t\td.set(xreset, yreset, zreset);\n\n\t\t\tfor (var xi = 0, xoff = 0; xi !== nx; xi++, xoff += xstep, d.y = yreset, d.x += binsizeX) {\n\t\t\t\tfor (var yi = 0, yoff = 0; yi !== ny; yi++, yoff += ystep, d.z = zreset, d.y += binsizeY) {\n\t\t\t\t\tfor (var zi = 0, zoff = 0; zi !== nz; zi++, zoff += zstep, d.z += binsizeZ) {\n\t\t\t\t\t\tif (d.dot(planeNormal) < binRadius) {\n\t\t\t\t\t\t\tvar idx = xoff + yoff + zoff;\n\t\t\t\t\t\t\tbins[idx][binLengths[idx]++] = bi;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n            break;\n\n        default:\n\t\t\tif (bi.aabbNeedsUpdate) {\n\t\t\t\tbi.computeAABB();\n\t\t\t}\n\n\t\t\taddBoxToBins(\n\t\t\t\tbi.aabb.lowerBound.x,\n\t\t\t\tbi.aabb.lowerBound.y,\n\t\t\t\tbi.aabb.lowerBound.z,\n\t\t\t\tbi.aabb.upperBound.x,\n\t\t\t\tbi.aabb.upperBound.y,\n\t\t\t\tbi.aabb.upperBound.z,\n\t\t\t\tbi);\n            break;\n        }\n    }\n\n    // Check each bin\n    for(var i=0; i!==Nbins; i++){\n\t\tvar binLength = binLengths[i];\n\t\t//Skip bins with no potential collisions\n\t\tif (binLength > 1) {\n\t\t\tvar bin = bins[i];\n\n\t\t\t// Do N^2 broadphase inside\n\t\t\tfor(var xi=0; xi!==binLength; xi++){\n\t\t\t\tvar bi = bin[xi];\n\t\t\t\tfor(var yi=0; yi!==xi; yi++){\n\t\t\t\t\tvar bj = bin[yi];\n\t\t\t\t\tif(this.needBroadphaseCollision(bi,bj)){\n\t\t\t\t\t\tthis.intersectionTest(bi,bj,pairs1,pairs2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n    }\n\n//\tfor (var zi = 0, zoff=0; zi < nz; zi++, zoff+= zstep) {\n//\t\tconsole.log(\"layer \"+zi);\n//\t\tfor (var yi = 0, yoff=0; yi < ny; yi++, yoff += ystep) {\n//\t\t\tvar row = '';\n//\t\t\tfor (var xi = 0, xoff=0; xi < nx; xi++, xoff += xstep) {\n//\t\t\t\tvar idx = xoff + yoff + zoff;\n//\t\t\t\trow += ' ' + binLengths[idx];\n//\t\t\t}\n//\t\t\tconsole.log(row);\n//\t\t}\n//\t}\n\n    this.makePairsUnique(pairs1,pairs2);\n};\n\n},{\"../math/Vec3\":30,\"../shapes/Shape\":43,\"./Broadphase\":5}],7:[function(_dereq_,module,exports){\nmodule.exports = NaiveBroadphase;\n\nvar Broadphase = _dereq_('./Broadphase');\nvar AABB = _dereq_('./AABB');\n\n/**\n * Naive broadphase implementation, used in lack of better ones.\n * @class NaiveBroadphase\n * @constructor\n * @description The naive broadphase looks at all possible pairs without restriction, therefore it has complexity N^2 (which is bad)\n * @extends Broadphase\n */\nfunction NaiveBroadphase(){\n    Broadphase.apply(this);\n}\nNaiveBroadphase.prototype = new Broadphase();\nNaiveBroadphase.prototype.constructor = NaiveBroadphase;\n\n/**\n * Get all the collision pairs in the physics world\n * @method collisionPairs\n * @param {World} world\n * @param {Array} pairs1\n * @param {Array} pairs2\n */\nNaiveBroadphase.prototype.collisionPairs = function(world,pairs1,pairs2){\n    var bodies = world.bodies,\n        n = bodies.length,\n        i,j,bi,bj;\n\n    // Naive N^2 ftw!\n    for(i=0; i!==n; i++){\n        for(j=0; j!==i; j++){\n\n            bi = bodies[i];\n            bj = bodies[j];\n\n            if(!this.needBroadphaseCollision(bi,bj)){\n                continue;\n            }\n\n            this.intersectionTest(bi,bj,pairs1,pairs2);\n        }\n    }\n};\n\nvar tmpAABB = new AABB();\n\n/**\n * Returns all the bodies within an AABB.\n * @method aabbQuery\n * @param  {World} world\n * @param  {AABB} aabb\n * @param {array} result An array to store resulting bodies in.\n * @return {array}\n */\nNaiveBroadphase.prototype.aabbQuery = function(world, aabb, result){\n    result = result || [];\n\n    for(var i = 0; i < world.bodies.length; i++){\n        var b = world.bodies[i];\n\n        if(b.aabbNeedsUpdate){\n            b.computeAABB();\n        }\n\n        // Ugly hack until Body gets aabb\n        if(b.aabb.overlaps(aabb)){\n            result.push(b);\n        }\n    }\n\n    return result;\n};\n},{\"./AABB\":3,\"./Broadphase\":5}],8:[function(_dereq_,module,exports){\nmodule.exports = ObjectCollisionMatrix;\n\n/**\n * Records what objects are colliding with each other\n * @class ObjectCollisionMatrix\n * @constructor\n */\nfunction ObjectCollisionMatrix() {\n\n    /**\n     * The matrix storage\n     * @property matrix\n     * @type {Object}\n     */\n\tthis.matrix = {};\n}\n\n/**\n * @method get\n * @param  {Number} i\n * @param  {Number} j\n * @return {Number}\n */\nObjectCollisionMatrix.prototype.get = function(i, j) {\n\ti = i.id;\n\tj = j.id;\n    if (j > i) {\n        var temp = j;\n        j = i;\n        i = temp;\n    }\n\treturn i+'-'+j in this.matrix;\n};\n\n/**\n * @method set\n * @param  {Number} i\n * @param  {Number} j\n * @param {Number} value\n */\nObjectCollisionMatrix.prototype.set = function(i, j, value) {\n\ti = i.id;\n\tj = j.id;\n    if (j > i) {\n        var temp = j;\n        j = i;\n        i = temp;\n\t}\n\tif (value) {\n\t\tthis.matrix[i+'-'+j] = true;\n\t}\n\telse {\n\t\tdelete this.matrix[i+'-'+j];\n\t}\n};\n\n/**\n * Empty the matrix\n * @method reset\n */\nObjectCollisionMatrix.prototype.reset = function() {\n\tthis.matrix = {};\n};\n\n/**\n * Set max number of objects\n * @method setNumObjects\n * @param {Number} n\n */\nObjectCollisionMatrix.prototype.setNumObjects = function(n) {\n};\n\n},{}],9:[function(_dereq_,module,exports){\nmodule.exports = Ray;\n\nvar Vec3 = _dereq_('../math/Vec3');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar Transform = _dereq_('../math/Transform');\nvar ConvexPolyhedron = _dereq_('../shapes/ConvexPolyhedron');\nvar Box = _dereq_('../shapes/Box');\nvar RaycastResult = _dereq_('../collision/RaycastResult');\nvar Shape = _dereq_('../shapes/Shape');\nvar AABB = _dereq_('../collision/AABB');\n\n/**\n * A line in 3D space that intersects bodies and return points.\n * @class Ray\n * @constructor\n * @param {Vec3} from\n * @param {Vec3} to\n */\nfunction Ray(from, to){\n    /**\n     * @property {Vec3} from\n     */\n    this.from = from ? from.clone() : new Vec3();\n\n    /**\n     * @property {Vec3} to\n     */\n    this.to = to ? to.clone() : new Vec3();\n\n    /**\n     * @private\n     * @property {Vec3} _direction\n     */\n    this._direction = new Vec3();\n\n    /**\n     * The precision of the ray. Used when checking parallelity etc.\n     * @property {Number} precision\n     */\n    this.precision = 0.0001;\n\n    /**\n     * Set to true if you want the Ray to take .collisionResponse flags into account on bodies and shapes.\n     * @property {Boolean} checkCollisionResponse\n     */\n    this.checkCollisionResponse = true;\n\n    /**\n     * If set to true, the ray skips any hits with normal.dot(rayDirection) < 0.\n     * @property {Boolean} skipBackfaces\n     */\n    this.skipBackfaces = false;\n\n    /**\n     * @property {number} collisionFilterMask\n     * @default -1\n     */\n    this.collisionFilterMask = -1;\n\n    /**\n     * @property {number} collisionFilterGroup\n     * @default -1\n     */\n    this.collisionFilterGroup = -1;\n\n    /**\n     * The intersection mode. Should be Ray.ANY, Ray.ALL or Ray.CLOSEST.\n     * @property {number} mode\n     */\n    this.mode = Ray.ANY;\n\n    /**\n     * Current result object.\n     * @property {RaycastResult} result\n     */\n    this.result = new RaycastResult();\n\n    /**\n     * Will be set to true during intersectWorld() if the ray hit anything.\n     * @property {Boolean} hasHit\n     */\n    this.hasHit = false;\n\n    /**\n     * Current, user-provided result callback. Will be used if mode is Ray.ALL.\n     * @property {Function} callback\n     */\n    this.callback = function(result){};\n}\nRay.prototype.constructor = Ray;\n\nRay.CLOSEST = 1;\nRay.ANY = 2;\nRay.ALL = 4;\n\nvar tmpAABB = new AABB();\nvar tmpArray = [];\n\n/**\n * Do itersection against all bodies in the given World.\n * @method intersectWorld\n * @param  {World} world\n * @param  {object} options\n * @return {Boolean} True if the ray hit anything, otherwise false.\n */\nRay.prototype.intersectWorld = function (world, options) {\n    this.mode = options.mode || Ray.ANY;\n    this.result = options.result || new RaycastResult();\n    this.skipBackfaces = !!options.skipBackfaces;\n    this.collisionFilterMask = typeof(options.collisionFilterMask) !== 'undefined' ? options.collisionFilterMask : -1;\n    this.collisionFilterGroup = typeof(options.collisionFilterGroup) !== 'undefined' ? options.collisionFilterGroup : -1;\n    if(options.from){\n        this.from.copy(options.from);\n    }\n    if(options.to){\n        this.to.copy(options.to);\n    }\n    this.callback = options.callback || function(){};\n    this.hasHit = false;\n\n    this.result.reset();\n    this._updateDirection();\n\n    this.getAABB(tmpAABB);\n    tmpArray.length = 0;\n    world.broadphase.aabbQuery(world, tmpAABB, tmpArray);\n    this.intersectBodies(tmpArray);\n\n    return this.hasHit;\n};\n\nvar v1 = new Vec3(),\n    v2 = new Vec3();\n\n/*\n * As per \"Barycentric Technique\" as named here http://www.blackpawn.com/texts/pointinpoly/default.html But without the division\n */\nRay.pointInTriangle = pointInTriangle;\nfunction pointInTriangle(p, a, b, c) {\n    c.vsub(a,v0);\n    b.vsub(a,v1);\n    p.vsub(a,v2);\n\n    var dot00 = v0.dot( v0 );\n    var dot01 = v0.dot( v1 );\n    var dot02 = v0.dot( v2 );\n    var dot11 = v1.dot( v1 );\n    var dot12 = v1.dot( v2 );\n\n    var u,v;\n\n    return  ( (u = dot11 * dot02 - dot01 * dot12) >= 0 ) &&\n            ( (v = dot00 * dot12 - dot01 * dot02) >= 0 ) &&\n            ( u + v < ( dot00 * dot11 - dot01 * dot01 ) );\n}\n\n/**\n * Shoot a ray at a body, get back information about the hit.\n * @method intersectBody\n * @private\n * @param {Body} body\n * @param {RaycastResult} [result] Deprecated - set the result property of the Ray instead.\n */\nvar intersectBody_xi = new Vec3();\nvar intersectBody_qi = new Quaternion();\nRay.prototype.intersectBody = function (body, result) {\n    if(result){\n        this.result = result;\n        this._updateDirection();\n    }\n    var checkCollisionResponse = this.checkCollisionResponse;\n\n    if(checkCollisionResponse && !body.collisionResponse){\n        return;\n    }\n\n    if((this.collisionFilterGroup & body.collisionFilterMask)===0 || (body.collisionFilterGroup & this.collisionFilterMask)===0){\n        return;\n    }\n\n    var xi = intersectBody_xi;\n    var qi = intersectBody_qi;\n\n    for (var i = 0, N = body.shapes.length; i < N; i++) {\n        var shape = body.shapes[i];\n\n        if(checkCollisionResponse && !shape.collisionResponse){\n            continue; // Skip\n        }\n\n        body.quaternion.mult(body.shapeOrientations[i], qi);\n        body.quaternion.vmult(body.shapeOffsets[i], xi);\n        xi.vadd(body.position, xi);\n\n        this.intersectShape(\n            shape,\n            qi,\n            xi,\n            body\n        );\n\n        if(this.result._shouldStop){\n            break;\n        }\n    }\n};\n\n/**\n * @method intersectBodies\n * @param {Array} bodies An array of Body objects.\n * @param {RaycastResult} [result] Deprecated\n */\nRay.prototype.intersectBodies = function (bodies, result) {\n    if(result){\n        this.result = result;\n        this._updateDirection();\n    }\n\n    for ( var i = 0, l = bodies.length; !this.result._shouldStop && i < l; i ++ ) {\n        this.intersectBody(bodies[i]);\n    }\n};\n\n/**\n * Updates the _direction vector.\n * @private\n * @method _updateDirection\n */\nRay.prototype._updateDirection = function(){\n    this.to.vsub(this.from, this._direction);\n    this._direction.normalize();\n};\n\n/**\n * @method intersectShape\n * @private\n * @param {Shape} shape\n * @param {Quaternion} quat\n * @param {Vec3} position\n * @param {Body} body\n */\nRay.prototype.intersectShape = function(shape, quat, position, body){\n    var from = this.from;\n\n\n    // Checking boundingSphere\n    var distance = distanceFromIntersection(from, this._direction, position);\n    if ( distance > shape.boundingSphereRadius ) {\n        return;\n    }\n\n    var intersectMethod = this[shape.type];\n    if(intersectMethod){\n        intersectMethod.call(this, shape, quat, position, body);\n    }\n};\n\nvar vector = new Vec3();\nvar normal = new Vec3();\nvar intersectPoint = new Vec3();\n\nvar a = new Vec3();\nvar b = new Vec3();\nvar c = new Vec3();\nvar d = new Vec3();\n\nvar tmpRaycastResult = new RaycastResult();\n\n/**\n * @method intersectBox\n * @private\n * @param  {Shape} shape\n * @param  {Quaternion} quat\n * @param  {Vec3} position\n * @param  {Body} body\n */\nRay.prototype.intersectBox = function(shape, quat, position, body){\n    return this.intersectConvex(shape.convexPolyhedronRepresentation, quat, position, body);\n};\nRay.prototype[Shape.types.BOX] = Ray.prototype.intersectBox;\n\n/**\n * @method intersectPlane\n * @private\n * @param  {Shape} shape\n * @param  {Quaternion} quat\n * @param  {Vec3} position\n * @param  {Body} body\n */\nRay.prototype.intersectPlane = function(shape, quat, position, body){\n    var from = this.from;\n    var to = this.to;\n    var direction = this._direction;\n\n    // Get plane normal\n    var worldNormal = new Vec3(0, 0, 1);\n    quat.vmult(worldNormal, worldNormal);\n\n    var len = new Vec3();\n    from.vsub(position, len);\n    var planeToFrom = len.dot(worldNormal);\n    to.vsub(position, len);\n    var planeToTo = len.dot(worldNormal);\n\n    if(planeToFrom * planeToTo > 0){\n        // \"from\" and \"to\" are on the same side of the plane... bail out\n        return;\n    }\n\n    if(from.distanceTo(to) < planeToFrom){\n        return;\n    }\n\n    var n_dot_dir = worldNormal.dot(direction);\n\n    if (Math.abs(n_dot_dir) < this.precision) {\n        // No intersection\n        return;\n    }\n\n    var planePointToFrom = new Vec3();\n    var dir_scaled_with_t = new Vec3();\n    var hitPointWorld = new Vec3();\n\n    from.vsub(position, planePointToFrom);\n    var t = -worldNormal.dot(planePointToFrom) / n_dot_dir;\n    direction.scale(t, dir_scaled_with_t);\n    from.vadd(dir_scaled_with_t, hitPointWorld);\n\n    this.reportIntersection(worldNormal, hitPointWorld, shape, body, -1);\n};\nRay.prototype[Shape.types.PLANE] = Ray.prototype.intersectPlane;\n\n/**\n * Get the world AABB of the ray.\n * @method getAABB\n * @param  {AABB} aabb\n */\nRay.prototype.getAABB = function(result){\n    var to = this.to;\n    var from = this.from;\n    result.lowerBound.x = Math.min(to.x, from.x);\n    result.lowerBound.y = Math.min(to.y, from.y);\n    result.lowerBound.z = Math.min(to.z, from.z);\n    result.upperBound.x = Math.max(to.x, from.x);\n    result.upperBound.y = Math.max(to.y, from.y);\n    result.upperBound.z = Math.max(to.z, from.z);\n};\n\nvar intersectConvexOptions = {\n    faceList: [0]\n};\n\n/**\n * @method intersectHeightfield\n * @private\n * @param  {Shape} shape\n * @param  {Quaternion} quat\n * @param  {Vec3} position\n * @param  {Body} body\n */\nRay.prototype.intersectHeightfield = function(shape, quat, position, body){\n    var data = shape.data,\n        w = shape.elementSize,\n        worldPillarOffset = new Vec3();\n\n    // Convert the ray to local heightfield coordinates\n    var localRay = new Ray(this.from, this.to);\n    Transform.pointToLocalFrame(position, quat, localRay.from, localRay.from);\n    Transform.pointToLocalFrame(position, quat, localRay.to, localRay.to);\n\n    // Get the index of the data points to test against\n    var index = [];\n    var iMinX = null;\n    var iMinY = null;\n    var iMaxX = null;\n    var iMaxY = null;\n\n    var inside = shape.getIndexOfPosition(localRay.from.x, localRay.from.y, index, false);\n    if(inside){\n        iMinX = index[0];\n        iMinY = index[1];\n        iMaxX = index[0];\n        iMaxY = index[1];\n    }\n    inside = shape.getIndexOfPosition(localRay.to.x, localRay.to.y, index, false);\n    if(inside){\n        if (iMinX === null || index[0] < iMinX) { iMinX = index[0]; }\n        if (iMaxX === null || index[0] > iMaxX) { iMaxX = index[0]; }\n        if (iMinY === null || index[1] < iMinY) { iMinY = index[1]; }\n        if (iMaxY === null || index[1] > iMaxY) { iMaxY = index[1]; }\n    }\n\n    if(iMinX === null){\n        return;\n    }\n\n    var minMax = [];\n    shape.getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, minMax);\n    var min = minMax[0];\n    var max = minMax[1];\n\n    // // Bail out if the ray can't touch the bounding box\n    // // TODO\n    // var aabb = new AABB();\n    // this.getAABB(aabb);\n    // if(aabb.intersects()){\n    //     return;\n    // }\n\n    for(var i = iMinX; i <= iMaxX; i++){\n        for(var j = iMinY; j <= iMaxY; j++){\n\n            if(this.result._shouldStop){\n                return;\n            }\n\n            // Lower triangle\n            shape.getConvexTrianglePillar(i, j, false);\n            Transform.pointToWorldFrame(position, quat, shape.pillarOffset, worldPillarOffset);\n            this.intersectConvex(shape.pillarConvex, quat, worldPillarOffset, body, intersectConvexOptions);\n\n            if(this.result._shouldStop){\n                return;\n            }\n\n            // Upper triangle\n            shape.getConvexTrianglePillar(i, j, true);\n            Transform.pointToWorldFrame(position, quat, shape.pillarOffset, worldPillarOffset);\n            this.intersectConvex(shape.pillarConvex, quat, worldPillarOffset, body, intersectConvexOptions);\n        }\n    }\n};\nRay.prototype[Shape.types.HEIGHTFIELD] = Ray.prototype.intersectHeightfield;\n\nvar Ray_intersectSphere_intersectionPoint = new Vec3();\nvar Ray_intersectSphere_normal = new Vec3();\n\n/**\n * @method intersectSphere\n * @private\n * @param  {Shape} shape\n * @param  {Quaternion} quat\n * @param  {Vec3} position\n * @param  {Body} body\n */\nRay.prototype.intersectSphere = function(shape, quat, position, body){\n    var from = this.from,\n        to = this.to,\n        r = shape.radius;\n\n    var a = Math.pow(to.x - from.x, 2) + Math.pow(to.y - from.y, 2) + Math.pow(to.z - from.z, 2);\n    var b = 2 * ((to.x - from.x) * (from.x - position.x) + (to.y - from.y) * (from.y - position.y) + (to.z - from.z) * (from.z - position.z));\n    var c = Math.pow(from.x - position.x, 2) + Math.pow(from.y - position.y, 2) + Math.pow(from.z - position.z, 2) - Math.pow(r, 2);\n\n    var delta = Math.pow(b, 2) - 4 * a * c;\n\n    var intersectionPoint = Ray_intersectSphere_intersectionPoint;\n    var normal = Ray_intersectSphere_normal;\n\n    if(delta < 0){\n        // No intersection\n        return;\n\n    } else if(delta === 0){\n        // single intersection point\n        from.lerp(to, delta, intersectionPoint);\n\n        intersectionPoint.vsub(position, normal);\n        normal.normalize();\n\n        this.reportIntersection(normal, intersectionPoint, shape, body, -1);\n\n    } else {\n        var d1 = (- b - Math.sqrt(delta)) / (2 * a);\n        var d2 = (- b + Math.sqrt(delta)) / (2 * a);\n\n        if(d1 >= 0 && d1 <= 1){\n            from.lerp(to, d1, intersectionPoint);\n            intersectionPoint.vsub(position, normal);\n            normal.normalize();\n            this.reportIntersection(normal, intersectionPoint, shape, body, -1);\n        }\n\n        if(this.result._shouldStop){\n            return;\n        }\n\n        if(d2 >= 0 && d2 <= 1){\n            from.lerp(to, d2, intersectionPoint);\n            intersectionPoint.vsub(position, normal);\n            normal.normalize();\n            this.reportIntersection(normal, intersectionPoint, shape, body, -1);\n        }\n    }\n};\nRay.prototype[Shape.types.SPHERE] = Ray.prototype.intersectSphere;\n\n\nvar intersectConvex_normal = new Vec3();\nvar intersectConvex_minDistNormal = new Vec3();\nvar intersectConvex_minDistIntersect = new Vec3();\nvar intersectConvex_vector = new Vec3();\n\n/**\n * @method intersectConvex\n * @private\n * @param  {Shape} shape\n * @param  {Quaternion} quat\n * @param  {Vec3} position\n * @param  {Body} body\n * @param {object} [options]\n * @param {array} [options.faceList]\n */\nRay.prototype.intersectConvex = function intersectConvex(\n    shape,\n    quat,\n    position,\n    body,\n    options\n){\n    var minDistNormal = intersectConvex_minDistNormal;\n    var normal = intersectConvex_normal;\n    var vector = intersectConvex_vector;\n    var minDistIntersect = intersectConvex_minDistIntersect;\n    var faceList = (options && options.faceList) || null;\n\n    // Checking faces\n    var faces = shape.faces,\n        vertices = shape.vertices,\n        normals = shape.faceNormals;\n    var direction = this._direction;\n\n    var from = this.from;\n    var to = this.to;\n    var fromToDistance = from.distanceTo(to);\n\n    var minDist = -1;\n    var Nfaces = faceList ? faceList.length : faces.length;\n    var result = this.result;\n\n    for (var j = 0; !result._shouldStop && j < Nfaces; j++) {\n        var fi = faceList ? faceList[j] : j;\n\n        var face = faces[fi];\n        var faceNormal = normals[fi];\n        var q = quat;\n        var x = position;\n\n        // determine if ray intersects the plane of the face\n        // note: this works regardless of the direction of the face normal\n\n        // Get plane point in world coordinates...\n        vector.copy(vertices[face[0]]);\n        q.vmult(vector,vector);\n        vector.vadd(x,vector);\n\n        // ...but make it relative to the ray from. We'll fix this later.\n        vector.vsub(from,vector);\n\n        // Get plane normal\n        q.vmult(faceNormal,normal);\n\n        // If this dot product is negative, we have something interesting\n        var dot = direction.dot(normal);\n\n        // Bail out if ray and plane are parallel\n        if ( Math.abs( dot ) < this.precision ){\n            continue;\n        }\n\n        // calc distance to plane\n        var scalar = normal.dot(vector) / dot;\n\n        // if negative distance, then plane is behind ray\n        if (scalar < 0){\n            continue;\n        }\n\n        // if (dot < 0) {\n\n        // Intersection point is from + direction * scalar\n        direction.mult(scalar,intersectPoint);\n        intersectPoint.vadd(from,intersectPoint);\n\n        // a is the point we compare points b and c with.\n        a.copy(vertices[face[0]]);\n        q.vmult(a,a);\n        x.vadd(a,a);\n\n        for(var i = 1; !result._shouldStop && i < face.length - 1; i++){\n            // Transform 3 vertices to world coords\n            b.copy(vertices[face[i]]);\n            c.copy(vertices[face[i+1]]);\n            q.vmult(b,b);\n            q.vmult(c,c);\n            x.vadd(b,b);\n            x.vadd(c,c);\n\n            var distance = intersectPoint.distanceTo(from);\n\n            if(!(pointInTriangle(intersectPoint, a, b, c) || pointInTriangle(intersectPoint, b, a, c)) || distance > fromToDistance){\n                continue;\n            }\n\n            this.reportIntersection(normal, intersectPoint, shape, body, fi);\n        }\n        // }\n    }\n};\nRay.prototype[Shape.types.CONVEXPOLYHEDRON] = Ray.prototype.intersectConvex;\n\nvar intersectTrimesh_normal = new Vec3();\nvar intersectTrimesh_localDirection = new Vec3();\nvar intersectTrimesh_localFrom = new Vec3();\nvar intersectTrimesh_localTo = new Vec3();\nvar intersectTrimesh_worldNormal = new Vec3();\nvar intersectTrimesh_worldIntersectPoint = new Vec3();\nvar intersectTrimesh_localAABB = new AABB();\nvar intersectTrimesh_triangles = [];\nvar intersectTrimesh_treeTransform = new Transform();\n\n/**\n * @method intersectTrimesh\n * @private\n * @param  {Shape} shape\n * @param  {Quaternion} quat\n * @param  {Vec3} position\n * @param  {Body} body\n * @param {object} [options]\n * @todo Optimize by transforming the world to local space first.\n * @todo Use Octree lookup\n */\nRay.prototype.intersectTrimesh = function intersectTrimesh(\n    mesh,\n    quat,\n    position,\n    body,\n    options\n){\n    var normal = intersectTrimesh_normal;\n    var triangles = intersectTrimesh_triangles;\n    var treeTransform = intersectTrimesh_treeTransform;\n    var minDistNormal = intersectConvex_minDistNormal;\n    var vector = intersectConvex_vector;\n    var minDistIntersect = intersectConvex_minDistIntersect;\n    var localAABB = intersectTrimesh_localAABB;\n    var localDirection = intersectTrimesh_localDirection;\n    var localFrom = intersectTrimesh_localFrom;\n    var localTo = intersectTrimesh_localTo;\n    var worldIntersectPoint = intersectTrimesh_worldIntersectPoint;\n    var worldNormal = intersectTrimesh_worldNormal;\n    var faceList = (options && options.faceList) || null;\n\n    // Checking faces\n    var indices = mesh.indices,\n        vertices = mesh.vertices,\n        normals = mesh.faceNormals;\n\n    var from = this.from;\n    var to = this.to;\n    var direction = this._direction;\n\n    var minDist = -1;\n    treeTransform.position.copy(position);\n    treeTransform.quaternion.copy(quat);\n\n    // Transform ray to local space!\n    Transform.vectorToLocalFrame(position, quat, direction, localDirection);\n    //body.vectorToLocalFrame(direction, localDirection);\n    Transform.pointToLocalFrame(position, quat, from, localFrom);\n    //body.pointToLocalFrame(from, localFrom);\n    Transform.pointToLocalFrame(position, quat, to, localTo);\n    //body.pointToLocalFrame(to, localTo);\n    var fromToDistanceSquared = localFrom.distanceSquared(localTo);\n\n    mesh.tree.rayQuery(this, treeTransform, triangles);\n\n    for (var i = 0, N = triangles.length; !this.result._shouldStop && i !== N; i++) {\n        var trianglesIndex = triangles[i];\n\n        mesh.getNormal(trianglesIndex, normal);\n\n        // determine if ray intersects the plane of the face\n        // note: this works regardless of the direction of the face normal\n\n        // Get plane point in world coordinates...\n        mesh.getVertex(indices[trianglesIndex * 3], a);\n\n        // ...but make it relative to the ray from. We'll fix this later.\n        a.vsub(localFrom,vector);\n\n        // Get plane normal\n        // quat.vmult(normal, normal);\n\n        // If this dot product is negative, we have something interesting\n        var dot = localDirection.dot(normal);\n\n        // Bail out if ray and plane are parallel\n        // if (Math.abs( dot ) < this.precision){\n        //     continue;\n        // }\n\n        // calc distance to plane\n        var scalar = normal.dot(vector) / dot;\n\n        // if negative distance, then plane is behind ray\n        if (scalar < 0){\n            continue;\n        }\n\n        // Intersection point is from + direction * scalar\n        localDirection.scale(scalar,intersectPoint);\n        intersectPoint.vadd(localFrom,intersectPoint);\n\n        // Get triangle vertices\n        mesh.getVertex(indices[trianglesIndex * 3 + 1], b);\n        mesh.getVertex(indices[trianglesIndex * 3 + 2], c);\n\n        var squaredDistance = intersectPoint.distanceSquared(localFrom);\n\n        if(!(pointInTriangle(intersectPoint, b, a, c) || pointInTriangle(intersectPoint, a, b, c)) || squaredDistance > fromToDistanceSquared){\n            continue;\n        }\n\n        // transform intersectpoint and normal to world\n        Transform.vectorToWorldFrame(quat, normal, worldNormal);\n        //body.vectorToWorldFrame(normal, worldNormal);\n        Transform.pointToWorldFrame(position, quat, intersectPoint, worldIntersectPoint);\n        //body.pointToWorldFrame(intersectPoint, worldIntersectPoint);\n        this.reportIntersection(worldNormal, worldIntersectPoint, mesh, body, trianglesIndex);\n    }\n    triangles.length = 0;\n};\nRay.prototype[Shape.types.TRIMESH] = Ray.prototype.intersectTrimesh;\n\n\n/**\n * @method reportIntersection\n * @private\n * @param  {Vec3} normal\n * @param  {Vec3} hitPointWorld\n * @param  {Shape} shape\n * @param  {Body} body\n * @return {boolean} True if the intersections should continue\n */\nRay.prototype.reportIntersection = function(normal, hitPointWorld, shape, body, hitFaceIndex){\n    var from = this.from;\n    var to = this.to;\n    var distance = from.distanceTo(hitPointWorld);\n    var result = this.result;\n\n    // Skip back faces?\n    if(this.skipBackfaces && normal.dot(this._direction) > 0){\n        return;\n    }\n\n    result.hitFaceIndex = typeof(hitFaceIndex) !== 'undefined' ? hitFaceIndex : -1;\n\n    switch(this.mode){\n    case Ray.ALL:\n        this.hasHit = true;\n        result.set(\n            from,\n            to,\n            normal,\n            hitPointWorld,\n            shape,\n            body,\n            distance\n        );\n        result.hasHit = true;\n        this.callback(result);\n        break;\n\n    case Ray.CLOSEST:\n\n        // Store if closer than current closest\n        if(distance < result.distance || !result.hasHit){\n            this.hasHit = true;\n            result.hasHit = true;\n            result.set(\n                from,\n                to,\n                normal,\n                hitPointWorld,\n                shape,\n                body,\n                distance\n            );\n        }\n        break;\n\n    case Ray.ANY:\n\n        // Report and stop.\n        this.hasHit = true;\n        result.hasHit = true;\n        result.set(\n            from,\n            to,\n            normal,\n            hitPointWorld,\n            shape,\n            body,\n            distance\n        );\n        result._shouldStop = true;\n        break;\n    }\n};\n\nvar v0 = new Vec3(),\n    intersect = new Vec3();\nfunction distanceFromIntersection(from, direction, position) {\n\n    // v0 is vector from from to position\n    position.vsub(from,v0);\n    var dot = v0.dot(direction);\n\n    // intersect = direction*dot + from\n    direction.mult(dot,intersect);\n    intersect.vadd(from,intersect);\n\n    var distance = position.distanceTo(intersect);\n\n    return distance;\n}\n\n\n},{\"../collision/AABB\":3,\"../collision/RaycastResult\":10,\"../math/Quaternion\":28,\"../math/Transform\":29,\"../math/Vec3\":30,\"../shapes/Box\":37,\"../shapes/ConvexPolyhedron\":38,\"../shapes/Shape\":43}],10:[function(_dereq_,module,exports){\nvar Vec3 = _dereq_('../math/Vec3');\n\nmodule.exports = RaycastResult;\n\n/**\n * Storage for Ray casting data.\n * @class RaycastResult\n * @constructor\n */\nfunction RaycastResult(){\n\n\t/**\n\t * @property {Vec3} rayFromWorld\n\t */\n\tthis.rayFromWorld = new Vec3();\n\n\t/**\n\t * @property {Vec3} rayToWorld\n\t */\n\tthis.rayToWorld = new Vec3();\n\n\t/**\n\t * @property {Vec3} hitNormalWorld\n\t */\n\tthis.hitNormalWorld = new Vec3();\n\n\t/**\n\t * @property {Vec3} hitPointWorld\n\t */\n\tthis.hitPointWorld = new Vec3();\n\n\t/**\n\t * @property {boolean} hasHit\n\t */\n\tthis.hasHit = false;\n\n\t/**\n\t * The hit shape, or null.\n\t * @property {Shape} shape\n\t */\n\tthis.shape = null;\n\n\t/**\n\t * The hit body, or null.\n\t * @property {Body} body\n\t */\n\tthis.body = null;\n\n\t/**\n\t * The index of the hit triangle, if the hit shape was a trimesh.\n\t * @property {number} hitFaceIndex\n\t * @default -1\n\t */\n\tthis.hitFaceIndex = -1;\n\n\t/**\n\t * Distance to the hit. Will be set to -1 if there was no hit.\n\t * @property {number} distance\n\t * @default -1\n\t */\n\tthis.distance = -1;\n\n\t/**\n\t * If the ray should stop traversing the bodies.\n\t * @private\n\t * @property {Boolean} _shouldStop\n\t * @default false\n\t */\n\tthis._shouldStop = false;\n}\n\n/**\n * Reset all result data.\n * @method reset\n */\nRaycastResult.prototype.reset = function () {\n\tthis.rayFromWorld.setZero();\n\tthis.rayToWorld.setZero();\n\tthis.hitNormalWorld.setZero();\n\tthis.hitPointWorld.setZero();\n\tthis.hasHit = false;\n\tthis.shape = null;\n\tthis.body = null;\n\tthis.hitFaceIndex = -1;\n\tthis.distance = -1;\n\tthis._shouldStop = false;\n};\n\n/**\n * @method abort\n */\nRaycastResult.prototype.abort = function(){\n\tthis._shouldStop = true;\n};\n\n/**\n * @method set\n * @param {Vec3} rayFromWorld\n * @param {Vec3} rayToWorld\n * @param {Vec3} hitNormalWorld\n * @param {Vec3} hitPointWorld\n * @param {Shape} shape\n * @param {Body} body\n * @param {number} distance\n */\nRaycastResult.prototype.set = function(\n\trayFromWorld,\n\trayToWorld,\n\thitNormalWorld,\n\thitPointWorld,\n\tshape,\n\tbody,\n\tdistance\n){\n\tthis.rayFromWorld.copy(rayFromWorld);\n\tthis.rayToWorld.copy(rayToWorld);\n\tthis.hitNormalWorld.copy(hitNormalWorld);\n\tthis.hitPointWorld.copy(hitPointWorld);\n\tthis.shape = shape;\n\tthis.body = body;\n\tthis.distance = distance;\n};\n},{\"../math/Vec3\":30}],11:[function(_dereq_,module,exports){\nvar Shape = _dereq_('../shapes/Shape');\nvar Broadphase = _dereq_('../collision/Broadphase');\n\nmodule.exports = SAPBroadphase;\n\n/**\n * Sweep and prune broadphase along one axis.\n *\n * @class SAPBroadphase\n * @constructor\n * @param {World} [world]\n * @extends Broadphase\n */\nfunction SAPBroadphase(world){\n    Broadphase.apply(this);\n\n    /**\n     * List of bodies currently in the broadphase.\n     * @property axisList\n     * @type {Array}\n     */\n    this.axisList = [];\n\n    /**\n     * The world to search in.\n     * @property world\n     * @type {World}\n     */\n    this.world = null;\n\n    /**\n     * Axis to sort the bodies along. Set to 0 for x axis, and 1 for y axis. For best performance, choose an axis that the bodies are spread out more on.\n     * @property axisIndex\n     * @type {Number}\n     */\n    this.axisIndex = 0;\n\n    var axisList = this.axisList;\n\n    this._addBodyHandler = function(e){\n        axisList.push(e.body);\n    };\n\n    this._removeBodyHandler = function(e){\n        var idx = axisList.indexOf(e.body);\n        if(idx !== -1){\n            axisList.splice(idx,1);\n        }\n    };\n\n    if(world){\n        this.setWorld(world);\n    }\n}\nSAPBroadphase.prototype = new Broadphase();\n\n/**\n * Change the world\n * @method setWorld\n * @param  {World} world\n */\nSAPBroadphase.prototype.setWorld = function(world){\n    // Clear the old axis array\n    this.axisList.length = 0;\n\n    // Add all bodies from the new world\n    for(var i=0; i<world.bodies.length; i++){\n        this.axisList.push(world.bodies[i]);\n    }\n\n    // Remove old handlers, if any\n    world.removeEventListener(\"addBody\", this._addBodyHandler);\n    world.removeEventListener(\"removeBody\", this._removeBodyHandler);\n\n    // Add handlers to update the list of bodies.\n    world.addEventListener(\"addBody\", this._addBodyHandler);\n    world.addEventListener(\"removeBody\", this._removeBodyHandler);\n\n    this.world = world;\n    this.dirty = true;\n};\n\n/**\n * @static\n * @method insertionSortX\n * @param  {Array} a\n * @return {Array}\n */\nSAPBroadphase.insertionSortX = function(a) {\n    for(var i=1,l=a.length;i<l;i++) {\n        var v = a[i];\n        for(var j=i - 1;j>=0;j--) {\n            if(a[j].aabb.lowerBound.x <= v.aabb.lowerBound.x){\n                break;\n            }\n            a[j+1] = a[j];\n        }\n        a[j+1] = v;\n    }\n    return a;\n};\n\n/**\n * @static\n * @method insertionSortY\n * @param  {Array} a\n * @return {Array}\n */\nSAPBroadphase.insertionSortY = function(a) {\n    for(var i=1,l=a.length;i<l;i++) {\n        var v = a[i];\n        for(var j=i - 1;j>=0;j--) {\n            if(a[j].aabb.lowerBound.y <= v.aabb.lowerBound.y){\n                break;\n            }\n            a[j+1] = a[j];\n        }\n        a[j+1] = v;\n    }\n    return a;\n};\n\n/**\n * @static\n * @method insertionSortZ\n * @param  {Array} a\n * @return {Array}\n */\nSAPBroadphase.insertionSortZ = function(a) {\n    for(var i=1,l=a.length;i<l;i++) {\n        var v = a[i];\n        for(var j=i - 1;j>=0;j--) {\n            if(a[j].aabb.lowerBound.z <= v.aabb.lowerBound.z){\n                break;\n            }\n            a[j+1] = a[j];\n        }\n        a[j+1] = v;\n    }\n    return a;\n};\n\n/**\n * Collect all collision pairs\n * @method collisionPairs\n * @param  {World} world\n * @param  {Array} p1\n * @param  {Array} p2\n */\nSAPBroadphase.prototype.collisionPairs = function(world,p1,p2){\n    var bodies = this.axisList,\n        N = bodies.length,\n        axisIndex = this.axisIndex,\n        i, j;\n\n    if(this.dirty){\n        this.sortList();\n        this.dirty = false;\n    }\n\n    // Look through the list\n    for(i=0; i !== N; i++){\n        var bi = bodies[i];\n\n        for(j=i+1; j < N; j++){\n            var bj = bodies[j];\n\n            if(!this.needBroadphaseCollision(bi,bj)){\n                continue;\n            }\n\n            if(!SAPBroadphase.checkBounds(bi,bj,axisIndex)){\n                break;\n            }\n\n            this.intersectionTest(bi,bj,p1,p2);\n        }\n    }\n};\n\nSAPBroadphase.prototype.sortList = function(){\n    var axisList = this.axisList;\n    var axisIndex = this.axisIndex;\n    var N = axisList.length;\n\n    // Update AABBs\n    for(var i = 0; i!==N; i++){\n        var bi = axisList[i];\n        if(bi.aabbNeedsUpdate){\n            bi.computeAABB();\n        }\n    }\n\n    // Sort the list\n    if(axisIndex === 0){\n        SAPBroadphase.insertionSortX(axisList);\n    } else if(axisIndex === 1){\n        SAPBroadphase.insertionSortY(axisList);\n    } else if(axisIndex === 2){\n        SAPBroadphase.insertionSortZ(axisList);\n    }\n};\n\n/**\n * Check if the bounds of two bodies overlap, along the given SAP axis.\n * @static\n * @method checkBounds\n * @param  {Body} bi\n * @param  {Body} bj\n * @param  {Number} axisIndex\n * @return {Boolean}\n */\nSAPBroadphase.checkBounds = function(bi, bj, axisIndex){\n    var biPos;\n    var bjPos;\n\n    if(axisIndex === 0){\n        biPos = bi.position.x;\n        bjPos = bj.position.x;\n    } else if(axisIndex === 1){\n        biPos = bi.position.y;\n        bjPos = bj.position.y;\n    } else if(axisIndex === 2){\n        biPos = bi.position.z;\n        bjPos = bj.position.z;\n    }\n\n    var ri = bi.boundingRadius,\n        rj = bj.boundingRadius,\n        boundA1 = biPos - ri,\n        boundA2 = biPos + ri,\n        boundB1 = bjPos - rj,\n        boundB2 = bjPos + rj;\n\n    return boundB1 < boundA2;\n};\n\n/**\n * Computes the variance of the body positions and estimates the best\n * axis to use. Will automatically set property .axisIndex.\n * @method autoDetectAxis\n */\nSAPBroadphase.prototype.autoDetectAxis = function(){\n    var sumX=0,\n        sumX2=0,\n        sumY=0,\n        sumY2=0,\n        sumZ=0,\n        sumZ2=0,\n        bodies = this.axisList,\n        N = bodies.length,\n        invN=1/N;\n\n    for(var i=0; i!==N; i++){\n        var b = bodies[i];\n\n        var centerX = b.position.x;\n        sumX += centerX;\n        sumX2 += centerX*centerX;\n\n        var centerY = b.position.y;\n        sumY += centerY;\n        sumY2 += centerY*centerY;\n\n        var centerZ = b.position.z;\n        sumZ += centerZ;\n        sumZ2 += centerZ*centerZ;\n    }\n\n    var varianceX = sumX2 - sumX*sumX*invN,\n        varianceY = sumY2 - sumY*sumY*invN,\n        varianceZ = sumZ2 - sumZ*sumZ*invN;\n\n    if(varianceX > varianceY){\n        if(varianceX > varianceZ){\n            this.axisIndex = 0;\n        } else{\n            this.axisIndex = 2;\n        }\n    } else if(varianceY > varianceZ){\n        this.axisIndex = 1;\n    } else{\n        this.axisIndex = 2;\n    }\n};\n\n/**\n * Returns all the bodies within an AABB.\n * @method aabbQuery\n * @param  {World} world\n * @param  {AABB} aabb\n * @param {array} result An array to store resulting bodies in.\n * @return {array}\n */\nSAPBroadphase.prototype.aabbQuery = function(world, aabb, result){\n    result = result || [];\n\n    if(this.dirty){\n        this.sortList();\n        this.dirty = false;\n    }\n\n    var axisIndex = this.axisIndex, axis = 'x';\n    if(axisIndex === 1){ axis = 'y'; }\n    if(axisIndex === 2){ axis = 'z'; }\n\n    var axisList = this.axisList;\n    var lower = aabb.lowerBound[axis];\n    var upper = aabb.upperBound[axis];\n    for(var i = 0; i < axisList.length; i++){\n        var b = axisList[i];\n\n        if(b.aabbNeedsUpdate){\n            b.computeAABB();\n        }\n\n        if(b.aabb.overlaps(aabb)){\n            result.push(b);\n        }\n    }\n\n    return result;\n};\n},{\"../collision/Broadphase\":5,\"../shapes/Shape\":43}],12:[function(_dereq_,module,exports){\nmodule.exports = ConeTwistConstraint;\n\nvar Constraint = _dereq_('./Constraint');\nvar PointToPointConstraint = _dereq_('./PointToPointConstraint');\nvar ConeEquation = _dereq_('../equations/ConeEquation');\nvar RotationalEquation = _dereq_('../equations/RotationalEquation');\nvar ContactEquation = _dereq_('../equations/ContactEquation');\nvar Vec3 = _dereq_('../math/Vec3');\n\n/**\n * @class ConeTwistConstraint\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {object} [options]\n * @param {Vec3} [options.pivotA]\n * @param {Vec3} [options.pivotB]\n * @param {Vec3} [options.axisA]\n * @param {Vec3} [options.axisB]\n * @param {Number} [options.maxForce=1e6]\n * @extends PointToPointConstraint\n */\nfunction ConeTwistConstraint(bodyA, bodyB, options){\n    options = options || {};\n    var maxForce = typeof(options.maxForce) !== 'undefined' ? options.maxForce : 1e6;\n\n    // Set pivot point in between\n    var pivotA = options.pivotA ? options.pivotA.clone() : new Vec3();\n    var pivotB = options.pivotB ? options.pivotB.clone() : new Vec3();\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3();\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3();\n\n    PointToPointConstraint.call(this, bodyA, pivotA, bodyB, pivotB, maxForce);\n\n    this.collideConnected = !!options.collideConnected;\n\n    this.angle = typeof(options.angle) !== 'undefined' ? options.angle : 0;\n\n    /**\n     * @property {ConeEquation} coneEquation\n     */\n    var c = this.coneEquation = new ConeEquation(bodyA,bodyB,options);\n\n    /**\n     * @property {RotationalEquation} twistEquation\n     */\n    var t = this.twistEquation = new RotationalEquation(bodyA,bodyB,options);\n    this.twistAngle = typeof(options.twistAngle) !== 'undefined' ? options.twistAngle : 0;\n\n    // Make the cone equation push the bodies toward the cone axis, not outward\n    c.maxForce = 0;\n    c.minForce = -maxForce;\n\n    // Make the twist equation add torque toward the initial position\n    t.maxForce = 0;\n    t.minForce = -maxForce;\n\n    this.equations.push(c, t);\n}\nConeTwistConstraint.prototype = new PointToPointConstraint();\nConeTwistConstraint.constructor = ConeTwistConstraint;\n\nvar ConeTwistConstraint_update_tmpVec1 = new Vec3();\nvar ConeTwistConstraint_update_tmpVec2 = new Vec3();\n\nConeTwistConstraint.prototype.update = function(){\n    var bodyA = this.bodyA,\n        bodyB = this.bodyB,\n        cone = this.coneEquation,\n        twist = this.twistEquation;\n\n    PointToPointConstraint.prototype.update.call(this);\n\n    // Update the axes to the cone constraint\n    bodyA.vectorToWorldFrame(this.axisA, cone.axisA);\n    bodyB.vectorToWorldFrame(this.axisB, cone.axisB);\n\n    // Update the world axes in the twist constraint\n    this.axisA.tangents(twist.axisA, twist.axisA);\n    bodyA.vectorToWorldFrame(twist.axisA, twist.axisA);\n\n    this.axisB.tangents(twist.axisB, twist.axisB);\n    bodyB.vectorToWorldFrame(twist.axisB, twist.axisB);\n\n    cone.angle = this.angle;\n    twist.maxAngle = this.twistAngle;\n};\n\n\n},{\"../equations/ConeEquation\":18,\"../equations/ContactEquation\":19,\"../equations/RotationalEquation\":22,\"../math/Vec3\":30,\"./Constraint\":13,\"./PointToPointConstraint\":17}],13:[function(_dereq_,module,exports){\nmodule.exports = Constraint;\n\nvar Utils = _dereq_('../utils/Utils');\n\n/**\n * Constraint base class\n * @class Constraint\n * @author schteppe\n * @constructor\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {object} [options]\n * @param {boolean} [options.collideConnected=true]\n * @param {boolean} [options.wakeUpBodies=true]\n */\nfunction Constraint(bodyA, bodyB, options){\n    options = Utils.defaults(options,{\n        collideConnected : true,\n        wakeUpBodies : true,\n    });\n\n    /**\n     * Equations to be solved in this constraint\n     * @property equations\n     * @type {Array}\n     */\n    this.equations = [];\n\n    /**\n     * @property {Body} bodyA\n     */\n    this.bodyA = bodyA;\n\n    /**\n     * @property {Body} bodyB\n     */\n    this.bodyB = bodyB;\n\n    /**\n     * @property {Number} id\n     */\n    this.id = Constraint.idCounter++;\n\n    /**\n     * Set to true if you want the bodies to collide when they are connected.\n     * @property collideConnected\n     * @type {boolean}\n     */\n    this.collideConnected = options.collideConnected;\n\n    if(options.wakeUpBodies){\n        if(bodyA){\n            bodyA.wakeUp();\n        }\n        if(bodyB){\n            bodyB.wakeUp();\n        }\n    }\n}\n\n/**\n * Update all the equations with data.\n * @method update\n */\nConstraint.prototype.update = function(){\n    throw new Error(\"method update() not implmemented in this Constraint subclass!\");\n};\n\n/**\n * Enables all equations in the constraint.\n * @method enable\n */\nConstraint.prototype.enable = function(){\n    var eqs = this.equations;\n    for(var i=0; i<eqs.length; i++){\n        eqs[i].enabled = true;\n    }\n};\n\n/**\n * Disables all equations in the constraint.\n * @method disable\n */\nConstraint.prototype.disable = function(){\n    var eqs = this.equations;\n    for(var i=0; i<eqs.length; i++){\n        eqs[i].enabled = false;\n    }\n};\n\nConstraint.idCounter = 0;\n\n},{\"../utils/Utils\":53}],14:[function(_dereq_,module,exports){\nmodule.exports = DistanceConstraint;\n\nvar Constraint = _dereq_('./Constraint');\nvar ContactEquation = _dereq_('../equations/ContactEquation');\n\n/**\n * Constrains two bodies to be at a constant distance from each others center of mass.\n * @class DistanceConstraint\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Number} [distance] The distance to keep. If undefined, it will be set to the current distance between bodyA and bodyB\n * @param {Number} [maxForce=1e6]\n * @extends Constraint\n */\nfunction DistanceConstraint(bodyA,bodyB,distance,maxForce){\n    Constraint.call(this,bodyA,bodyB);\n\n    if(typeof(distance)===\"undefined\") {\n        distance = bodyA.position.distanceTo(bodyB.position);\n    }\n\n    if(typeof(maxForce)===\"undefined\") {\n        maxForce = 1e6;\n    }\n\n    /**\n     * @property {number} distance\n     */\n    this.distance = distance;\n\n    /**\n     * @property {ContactEquation} distanceEquation\n     */\n    var eq = this.distanceEquation = new ContactEquation(bodyA, bodyB);\n    this.equations.push(eq);\n\n    // Make it bidirectional\n    eq.minForce = -maxForce;\n    eq.maxForce =  maxForce;\n}\nDistanceConstraint.prototype = new Constraint();\n\nDistanceConstraint.prototype.update = function(){\n    var bodyA = this.bodyA;\n    var bodyB = this.bodyB;\n    var eq = this.distanceEquation;\n    var halfDist = this.distance * 0.5;\n    var normal = eq.ni;\n\n    bodyB.position.vsub(bodyA.position, normal);\n    normal.normalize();\n    normal.mult(halfDist, eq.ri);\n    normal.mult(-halfDist, eq.rj);\n};\n},{\"../equations/ContactEquation\":19,\"./Constraint\":13}],15:[function(_dereq_,module,exports){\nmodule.exports = HingeConstraint;\n\nvar Constraint = _dereq_('./Constraint');\nvar PointToPointConstraint = _dereq_('./PointToPointConstraint');\nvar RotationalEquation = _dereq_('../equations/RotationalEquation');\nvar RotationalMotorEquation = _dereq_('../equations/RotationalMotorEquation');\nvar ContactEquation = _dereq_('../equations/ContactEquation');\nvar Vec3 = _dereq_('../math/Vec3');\n\n/**\n * Hinge constraint. Think of it as a door hinge. It tries to keep the door in the correct place and with the correct orientation.\n * @class HingeConstraint\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {object} [options]\n * @param {Vec3} [options.pivotA] A point defined locally in bodyA. This defines the offset of axisA.\n * @param {Vec3} [options.axisA] An axis that bodyA can rotate around, defined locally in bodyA.\n * @param {Vec3} [options.pivotB]\n * @param {Vec3} [options.axisB]\n * @param {Number} [options.maxForce=1e6]\n * @extends PointToPointConstraint\n */\nfunction HingeConstraint(bodyA, bodyB, options){\n    options = options || {};\n    var maxForce = typeof(options.maxForce) !== 'undefined' ? options.maxForce : 1e6;\n    var pivotA = options.pivotA ? options.pivotA.clone() : new Vec3();\n    var pivotB = options.pivotB ? options.pivotB.clone() : new Vec3();\n\n    PointToPointConstraint.call(this, bodyA, pivotA, bodyB, pivotB, maxForce);\n\n    /**\n     * Rotation axis, defined locally in bodyA.\n     * @property {Vec3} axisA\n     */\n    var axisA = this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1,0,0);\n    axisA.normalize();\n\n    /**\n     * Rotation axis, defined locally in bodyB.\n     * @property {Vec3} axisB\n     */\n    var axisB = this.axisB = options.axisB ? options.axisB.clone() : new Vec3(1,0,0);\n    axisB.normalize();\n\n    /**\n     * @property {RotationalEquation} rotationalEquation1\n     */\n    var r1 = this.rotationalEquation1 = new RotationalEquation(bodyA,bodyB,options);\n\n    /**\n     * @property {RotationalEquation} rotationalEquation2\n     */\n    var r2 = this.rotationalEquation2 = new RotationalEquation(bodyA,bodyB,options);\n\n    /**\n     * @property {RotationalMotorEquation} motorEquation\n     */\n    var motor = this.motorEquation = new RotationalMotorEquation(bodyA,bodyB,maxForce);\n    motor.enabled = false; // Not enabled by default\n\n    // Equations to be fed to the solver\n    this.equations.push(\n        r1, // rotational1\n        r2, // rotational2\n        motor\n    );\n}\nHingeConstraint.prototype = new PointToPointConstraint();\nHingeConstraint.constructor = HingeConstraint;\n\n/**\n * @method enableMotor\n */\nHingeConstraint.prototype.enableMotor = function(){\n    this.motorEquation.enabled = true;\n};\n\n/**\n * @method disableMotor\n */\nHingeConstraint.prototype.disableMotor = function(){\n    this.motorEquation.enabled = false;\n};\n\n/**\n * @method setMotorSpeed\n * @param {number} speed\n */\nHingeConstraint.prototype.setMotorSpeed = function(speed){\n    this.motorEquation.targetVelocity = speed;\n};\n\n/**\n * @method setMotorMaxForce\n * @param {number} maxForce\n */\nHingeConstraint.prototype.setMotorMaxForce = function(maxForce){\n    this.motorEquation.maxForce = maxForce;\n    this.motorEquation.minForce = -maxForce;\n};\n\nvar HingeConstraint_update_tmpVec1 = new Vec3();\nvar HingeConstraint_update_tmpVec2 = new Vec3();\n\nHingeConstraint.prototype.update = function(){\n    var bodyA = this.bodyA,\n        bodyB = this.bodyB,\n        motor = this.motorEquation,\n        r1 = this.rotationalEquation1,\n        r2 = this.rotationalEquation2,\n        worldAxisA = HingeConstraint_update_tmpVec1,\n        worldAxisB = HingeConstraint_update_tmpVec2;\n\n    var axisA = this.axisA;\n    var axisB = this.axisB;\n\n    PointToPointConstraint.prototype.update.call(this);\n\n    // Get world axes\n    bodyA.quaternion.vmult(axisA, worldAxisA);\n    bodyB.quaternion.vmult(axisB, worldAxisB);\n\n    worldAxisA.tangents(r1.axisA, r2.axisA);\n    r1.axisB.copy(worldAxisB);\n    r2.axisB.copy(worldAxisB);\n\n    if(this.motorEquation.enabled){\n        bodyA.quaternion.vmult(this.axisA, motor.axisA);\n        bodyB.quaternion.vmult(this.axisB, motor.axisB);\n    }\n};\n\n\n},{\"../equations/ContactEquation\":19,\"../equations/RotationalEquation\":22,\"../equations/RotationalMotorEquation\":23,\"../math/Vec3\":30,\"./Constraint\":13,\"./PointToPointConstraint\":17}],16:[function(_dereq_,module,exports){\nmodule.exports = LockConstraint;\n\nvar Constraint = _dereq_('./Constraint');\nvar PointToPointConstraint = _dereq_('./PointToPointConstraint');\nvar RotationalEquation = _dereq_('../equations/RotationalEquation');\nvar RotationalMotorEquation = _dereq_('../equations/RotationalMotorEquation');\nvar ContactEquation = _dereq_('../equations/ContactEquation');\nvar Vec3 = _dereq_('../math/Vec3');\n\n/**\n * Lock constraint. Will remove all degrees of freedom between the bodies.\n * @class LockConstraint\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {object} [options]\n * @param {Number} [options.maxForce=1e6]\n * @extends PointToPointConstraint\n */\nfunction LockConstraint(bodyA, bodyB, options){\n    options = options || {};\n    var maxForce = typeof(options.maxForce) !== 'undefined' ? options.maxForce : 1e6;\n\n    // Set pivot point in between\n    var pivotA = new Vec3();\n    var pivotB = new Vec3();\n    var halfWay = new Vec3();\n    bodyA.position.vadd(bodyB.position, halfWay);\n    halfWay.scale(0.5, halfWay);\n    bodyB.pointToLocalFrame(halfWay, pivotB);\n    bodyA.pointToLocalFrame(halfWay, pivotA);\n    PointToPointConstraint.call(this, bodyA, pivotA, bodyB, pivotB, maxForce);\n\n    /**\n     * @property {RotationalEquation} rotationalEquation1\n     */\n    var r1 = this.rotationalEquation1 = new RotationalEquation(bodyA,bodyB,options);\n\n    /**\n     * @property {RotationalEquation} rotationalEquation2\n     */\n    var r2 = this.rotationalEquation2 = new RotationalEquation(bodyA,bodyB,options);\n\n    /**\n     * @property {RotationalEquation} rotationalEquation3\n     */\n    var r3 = this.rotationalEquation3 = new RotationalEquation(bodyA,bodyB,options);\n\n    this.equations.push(r1, r2, r3);\n}\nLockConstraint.prototype = new PointToPointConstraint();\nLockConstraint.constructor = LockConstraint;\n\nvar LockConstraint_update_tmpVec1 = new Vec3();\nvar LockConstraint_update_tmpVec2 = new Vec3();\n\nLockConstraint.prototype.update = function(){\n    var bodyA = this.bodyA,\n        bodyB = this.bodyB,\n        motor = this.motorEquation,\n        r1 = this.rotationalEquation1,\n        r2 = this.rotationalEquation2,\n        r3 = this.rotationalEquation3,\n        worldAxisA = LockConstraint_update_tmpVec1,\n        worldAxisB = LockConstraint_update_tmpVec2;\n\n    PointToPointConstraint.prototype.update.call(this);\n\n    bodyA.vectorToWorldFrame(Vec3.UNIT_X, r1.axisA);\n    bodyB.vectorToWorldFrame(Vec3.UNIT_Y, r1.axisB);\n\n    bodyA.vectorToWorldFrame(Vec3.UNIT_Y, r2.axisA);\n    bodyB.vectorToWorldFrame(Vec3.UNIT_Z, r2.axisB);\n\n    bodyA.vectorToWorldFrame(Vec3.UNIT_Z, r3.axisA);\n    bodyB.vectorToWorldFrame(Vec3.UNIT_X, r3.axisB);\n};\n\n\n},{\"../equations/ContactEquation\":19,\"../equations/RotationalEquation\":22,\"../equations/RotationalMotorEquation\":23,\"../math/Vec3\":30,\"./Constraint\":13,\"./PointToPointConstraint\":17}],17:[function(_dereq_,module,exports){\nmodule.exports = PointToPointConstraint;\n\nvar Constraint = _dereq_('./Constraint');\nvar ContactEquation = _dereq_('../equations/ContactEquation');\nvar Vec3 = _dereq_('../math/Vec3');\n\n/**\n * Connects two bodies at given offset points.\n * @class PointToPointConstraint\n * @extends Constraint\n * @constructor\n * @param {Body} bodyA\n * @param {Vec3} pivotA The point relative to the center of mass of bodyA which bodyA is constrained to.\n * @param {Body} bodyB Body that will be constrained in a similar way to the same point as bodyA. We will therefore get a link between bodyA and bodyB. If not specified, bodyA will be constrained to a static point.\n * @param {Vec3} pivotB See pivotA.\n * @param {Number} maxForce The maximum force that should be applied to constrain the bodies.\n *\n * @example\n *     var bodyA = new Body({ mass: 1 });\n *     var bodyB = new Body({ mass: 1 });\n *     bodyA.position.set(-1, 0, 0);\n *     bodyB.position.set(1, 0, 0);\n *     bodyA.addShape(shapeA);\n *     bodyB.addShape(shapeB);\n *     world.addBody(bodyA);\n *     world.addBody(bodyB);\n *     var localPivotA = new Vec3(1, 0, 0);\n *     var localPivotB = new Vec3(-1, 0, 0);\n *     var constraint = new PointToPointConstraint(bodyA, localPivotA, bodyB, localPivotB);\n *     world.addConstraint(constraint);\n */\nfunction PointToPointConstraint(bodyA,pivotA,bodyB,pivotB,maxForce){\n    Constraint.call(this,bodyA,bodyB);\n\n    maxForce = typeof(maxForce) !== 'undefined' ? maxForce : 1e6;\n\n    /**\n     * Pivot, defined locally in bodyA.\n     * @property {Vec3} pivotA\n     */\n    this.pivotA = pivotA ? pivotA.clone() : new Vec3();\n\n    /**\n     * Pivot, defined locally in bodyB.\n     * @property {Vec3} pivotB\n     */\n    this.pivotB = pivotB ? pivotB.clone() : new Vec3();\n\n    /**\n     * @property {ContactEquation} equationX\n     */\n    var x = this.equationX = new ContactEquation(bodyA,bodyB);\n\n    /**\n     * @property {ContactEquation} equationY\n     */\n    var y = this.equationY = new ContactEquation(bodyA,bodyB);\n\n    /**\n     * @property {ContactEquation} equationZ\n     */\n    var z = this.equationZ = new ContactEquation(bodyA,bodyB);\n\n    // Equations to be fed to the solver\n    this.equations.push(x, y, z);\n\n    // Make the equations bidirectional\n    x.minForce = y.minForce = z.minForce = -maxForce;\n    x.maxForce = y.maxForce = z.maxForce =  maxForce;\n\n    x.ni.set(1, 0, 0);\n    y.ni.set(0, 1, 0);\n    z.ni.set(0, 0, 1);\n}\nPointToPointConstraint.prototype = new Constraint();\n\nPointToPointConstraint.prototype.update = function(){\n    var bodyA = this.bodyA;\n    var bodyB = this.bodyB;\n    var x = this.equationX;\n    var y = this.equationY;\n    var z = this.equationZ;\n\n    // Rotate the pivots to world space\n    bodyA.quaternion.vmult(this.pivotA,x.ri);\n    bodyB.quaternion.vmult(this.pivotB,x.rj);\n\n    y.ri.copy(x.ri);\n    y.rj.copy(x.rj);\n    z.ri.copy(x.ri);\n    z.rj.copy(x.rj);\n};\n},{\"../equations/ContactEquation\":19,\"../math/Vec3\":30,\"./Constraint\":13}],18:[function(_dereq_,module,exports){\nmodule.exports = ConeEquation;\n\nvar Vec3 = _dereq_('../math/Vec3');\nvar Mat3 = _dereq_('../math/Mat3');\nvar Equation = _dereq_('./Equation');\n\n/**\n * Cone equation. Works to keep the given body world vectors aligned, or tilted within a given angle from each other.\n * @class ConeEquation\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Vec3} [options.axisA] Local axis in A\n * @param {Vec3} [options.axisB] Local axis in B\n * @param {Vec3} [options.angle] The \"cone angle\" to keep\n * @param {number} [options.maxForce=1e6]\n * @extends Equation\n */\nfunction ConeEquation(bodyA, bodyB, options){\n    options = options || {};\n    var maxForce = typeof(options.maxForce) !== 'undefined' ? options.maxForce : 1e6;\n\n    Equation.call(this,bodyA,bodyB,-maxForce, maxForce);\n\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1, 0, 0);\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3(0, 1, 0);\n\n    /**\n     * The cone angle to keep\n     * @property {number} angle\n     */\n    this.angle = typeof(options.angle) !== 'undefined' ? options.angle : 0;\n}\n\nConeEquation.prototype = new Equation();\nConeEquation.prototype.constructor = ConeEquation;\n\nvar tmpVec1 = new Vec3();\nvar tmpVec2 = new Vec3();\n\nConeEquation.prototype.computeB = function(h){\n    var a = this.a,\n        b = this.b,\n\n        ni = this.axisA,\n        nj = this.axisB,\n\n        nixnj = tmpVec1,\n        njxni = tmpVec2,\n\n        GA = this.jacobianElementA,\n        GB = this.jacobianElementB;\n\n    // Caluclate cross products\n    ni.cross(nj, nixnj);\n    nj.cross(ni, njxni);\n\n    // The angle between two vector is:\n    // cos(theta) = a * b / (length(a) * length(b) = { len(a) = len(b) = 1 } = a * b\n\n    // g = a * b\n    // gdot = (b x a) * wi + (a x b) * wj\n    // G = [0 bxa 0 axb]\n    // W = [vi wi vj wj]\n    GA.rotational.copy(njxni);\n    GB.rotational.copy(nixnj);\n\n    var g = Math.cos(this.angle) - ni.dot(nj),\n        GW = this.computeGW(),\n        GiMf = this.computeGiMf();\n\n    var B = - g * a - GW * b - h * GiMf;\n\n    return B;\n};\n\n\n},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],19:[function(_dereq_,module,exports){\nmodule.exports = ContactEquation;\n\nvar Equation = _dereq_('./Equation');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Mat3 = _dereq_('../math/Mat3');\n\n/**\n * Contact/non-penetration constraint equation\n * @class ContactEquation\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @extends Equation\n */\nfunction ContactEquation(bodyA, bodyB, maxForce){\n    maxForce = typeof(maxForce) !== 'undefined' ? maxForce : 1e6;\n    Equation.call(this, bodyA, bodyB, 0, maxForce);\n\n    /**\n     * @property restitution\n     * @type {Number}\n     */\n    this.restitution = 0.0; // \"bounciness\": u1 = -e*u0\n\n    /**\n     * World-oriented vector that goes from the center of bi to the contact point.\n     * @property {Vec3} ri\n     */\n    this.ri = new Vec3();\n\n    /**\n     * World-oriented vector that starts in body j position and goes to the contact point.\n     * @property {Vec3} rj\n     */\n    this.rj = new Vec3();\n\n    /**\n     * Contact normal, pointing out of body i.\n     * @property {Vec3} ni\n     */\n    this.ni = new Vec3();\n}\n\nContactEquation.prototype = new Equation();\nContactEquation.prototype.constructor = ContactEquation;\n\nvar ContactEquation_computeB_temp1 = new Vec3(); // Temp vectors\nvar ContactEquation_computeB_temp2 = new Vec3();\nvar ContactEquation_computeB_temp3 = new Vec3();\nContactEquation.prototype.computeB = function(h){\n    var a = this.a,\n        b = this.b,\n        bi = this.bi,\n        bj = this.bj,\n        ri = this.ri,\n        rj = this.rj,\n        rixn = ContactEquation_computeB_temp1,\n        rjxn = ContactEquation_computeB_temp2,\n\n        vi = bi.velocity,\n        wi = bi.angularVelocity,\n        fi = bi.force,\n        taui = bi.torque,\n\n        vj = bj.velocity,\n        wj = bj.angularVelocity,\n        fj = bj.force,\n        tauj = bj.torque,\n\n        penetrationVec = ContactEquation_computeB_temp3,\n\n        GA = this.jacobianElementA,\n        GB = this.jacobianElementB,\n\n        n = this.ni;\n\n    // Caluclate cross products\n    ri.cross(n,rixn);\n    rj.cross(n,rjxn);\n\n    // g = xj+rj -(xi+ri)\n    // G = [ -ni  -rixn  ni  rjxn ]\n    n.negate(GA.spatial);\n    rixn.negate(GA.rotational);\n    GB.spatial.copy(n);\n    GB.rotational.copy(rjxn);\n\n    // Calculate the penetration vector\n    penetrationVec.copy(bj.position);\n    penetrationVec.vadd(rj,penetrationVec);\n    penetrationVec.vsub(bi.position,penetrationVec);\n    penetrationVec.vsub(ri,penetrationVec);\n\n    var g = n.dot(penetrationVec);\n\n    // Compute iteration\n    var ePlusOne = this.restitution + 1;\n    var GW = ePlusOne * vj.dot(n) - ePlusOne * vi.dot(n) + wj.dot(rjxn) - wi.dot(rixn);\n    var GiMf = this.computeGiMf();\n\n    var B = - g * a - GW * b - h*GiMf;\n\n    return B;\n};\n\nvar ContactEquation_getImpactVelocityAlongNormal_vi = new Vec3();\nvar ContactEquation_getImpactVelocityAlongNormal_vj = new Vec3();\nvar ContactEquation_getImpactVelocityAlongNormal_xi = new Vec3();\nvar ContactEquation_getImpactVelocityAlongNormal_xj = new Vec3();\nvar ContactEquation_getImpactVelocityAlongNormal_relVel = new Vec3();\n\n/**\n * Get the current relative velocity in the contact point.\n * @method getImpactVelocityAlongNormal\n * @return {number}\n */\nContactEquation.prototype.getImpactVelocityAlongNormal = function(){\n    var vi = ContactEquation_getImpactVelocityAlongNormal_vi;\n    var vj = ContactEquation_getImpactVelocityAlongNormal_vj;\n    var xi = ContactEquation_getImpactVelocityAlongNormal_xi;\n    var xj = ContactEquation_getImpactVelocityAlongNormal_xj;\n    var relVel = ContactEquation_getImpactVelocityAlongNormal_relVel;\n\n    this.bi.position.vadd(this.ri, xi);\n    this.bj.position.vadd(this.rj, xj);\n\n    this.bi.getVelocityAtWorldPoint(xi, vi);\n    this.bj.getVelocityAtWorldPoint(xj, vj);\n\n    vi.vsub(vj, relVel);\n\n    return this.ni.dot(relVel);\n};\n\n\n},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],20:[function(_dereq_,module,exports){\nmodule.exports = Equation;\n\nvar JacobianElement = _dereq_('../math/JacobianElement'),\n    Vec3 = _dereq_('../math/Vec3');\n\n/**\n * Equation base class\n * @class Equation\n * @constructor\n * @author schteppe\n * @param {Body} bi\n * @param {Body} bj\n * @param {Number} minForce Minimum (read: negative max) force to be applied by the constraint.\n * @param {Number} maxForce Maximum (read: positive max) force to be applied by the constraint.\n */\nfunction Equation(bi,bj,minForce,maxForce){\n    this.id = Equation.id++;\n\n    /**\n     * @property {number} minForce\n     */\n    this.minForce = typeof(minForce)===\"undefined\" ? -1e6 : minForce;\n\n    /**\n     * @property {number} maxForce\n     */\n    this.maxForce = typeof(maxForce)===\"undefined\" ? 1e6 : maxForce;\n\n    /**\n     * @property bi\n     * @type {Body}\n     */\n    this.bi = bi;\n\n    /**\n     * @property bj\n     * @type {Body}\n     */\n    this.bj = bj;\n\n    /**\n     * SPOOK parameter\n     * @property {number} a\n     */\n    this.a = 0.0;\n\n    /**\n     * SPOOK parameter\n     * @property {number} b\n     */\n    this.b = 0.0;\n\n    /**\n     * SPOOK parameter\n     * @property {number} eps\n     */\n    this.eps = 0.0;\n\n    /**\n     * @property {JacobianElement} jacobianElementA\n     */\n    this.jacobianElementA = new JacobianElement();\n\n    /**\n     * @property {JacobianElement} jacobianElementB\n     */\n    this.jacobianElementB = new JacobianElement();\n\n    /**\n     * @property {boolean} enabled\n     * @default true\n     */\n    this.enabled = true;\n\n    // Set typical spook params\n    this.setSpookParams(1e7,4,1/60);\n}\nEquation.prototype.constructor = Equation;\n\nEquation.id = 0;\n\n/**\n * Recalculates a,b,eps.\n * @method setSpookParams\n */\nEquation.prototype.setSpookParams = function(stiffness,relaxation,timeStep){\n    var d = relaxation,\n        k = stiffness,\n        h = timeStep;\n    this.a = 4.0 / (h * (1 + 4 * d));\n    this.b = (4.0 * d) / (1 + 4 * d);\n    this.eps = 4.0 / (h * h * k * (1 + 4 * d));\n};\n\n/**\n * Computes the RHS of the SPOOK equation\n * @method computeB\n * @return {Number}\n */\nEquation.prototype.computeB = function(a,b,h){\n    var GW = this.computeGW(),\n        Gq = this.computeGq(),\n        GiMf = this.computeGiMf();\n    return - Gq * a - GW * b - GiMf*h;\n};\n\n/**\n * Computes G*q, where q are the generalized body coordinates\n * @method computeGq\n * @return {Number}\n */\nEquation.prototype.computeGq = function(){\n    var GA = this.jacobianElementA,\n        GB = this.jacobianElementB,\n        bi = this.bi,\n        bj = this.bj,\n        xi = bi.position,\n        xj = bj.position;\n    return GA.spatial.dot(xi) + GB.spatial.dot(xj);\n};\n\nvar zero = new Vec3();\n\n/**\n * Computes G*W, where W are the body velocities\n * @method computeGW\n * @return {Number}\n */\nEquation.prototype.computeGW = function(){\n    var GA = this.jacobianElementA,\n        GB = this.jacobianElementB,\n        bi = this.bi,\n        bj = this.bj,\n        vi = bi.velocity,\n        vj = bj.velocity,\n        wi = bi.angularVelocity || zero,\n        wj = bj.angularVelocity || zero;\n    return GA.multiplyVectors(vi,wi) + GB.multiplyVectors(vj,wj);\n};\n\n\n/**\n * Computes G*Wlambda, where W are the body velocities\n * @method computeGWlambda\n * @return {Number}\n */\nEquation.prototype.computeGWlambda = function(){\n    var GA = this.jacobianElementA,\n        GB = this.jacobianElementB,\n        bi = this.bi,\n        bj = this.bj,\n        vi = bi.vlambda,\n        vj = bj.vlambda,\n        wi = bi.wlambda || zero,\n        wj = bj.wlambda || zero;\n    return GA.multiplyVectors(vi,wi) + GB.multiplyVectors(vj,wj);\n};\n\n/**\n * Computes G*inv(M)*f, where M is the mass matrix with diagonal blocks for each body, and f are the forces on the bodies.\n * @method computeGiMf\n * @return {Number}\n */\nvar iMfi = new Vec3(),\n    iMfj = new Vec3(),\n    invIi_vmult_taui = new Vec3(),\n    invIj_vmult_tauj = new Vec3();\nEquation.prototype.computeGiMf = function(){\n    var GA = this.jacobianElementA,\n        GB = this.jacobianElementB,\n        bi = this.bi,\n        bj = this.bj,\n        fi = bi.force,\n        ti = bi.torque,\n        fj = bj.force,\n        tj = bj.torque,\n        invMassi = bi.invMassSolve,\n        invMassj = bj.invMassSolve;\n\n    if(bi.invInertiaWorldSolve){ bi.invInertiaWorldSolve.vmult(ti,invIi_vmult_taui); }\n    else { invIi_vmult_taui.set(0,0,0); }\n    if(bj.invInertiaWorldSolve){ bj.invInertiaWorldSolve.vmult(tj,invIj_vmult_tauj); }\n    else { invIj_vmult_tauj.set(0,0,0); }\n\n    fi.mult(invMassi,iMfi);\n    fj.mult(invMassj,iMfj);\n\n    return GA.multiplyVectors(iMfi,invIi_vmult_taui) + GB.multiplyVectors(iMfj,invIj_vmult_tauj);\n};\n\n/**\n * Computes G*inv(M)*G'\n * @method computeGiMGt\n * @return {Number}\n */\nvar tmp = new Vec3();\nEquation.prototype.computeGiMGt = function(){\n    var GA = this.jacobianElementA,\n        GB = this.jacobianElementB,\n        bi = this.bi,\n        bj = this.bj,\n        invMassi = bi.invMassSolve,\n        invMassj = bj.invMassSolve,\n        invIi = bi.invInertiaWorldSolve,\n        invIj = bj.invInertiaWorldSolve,\n        result = invMassi + invMassj;\n\n    if(invIi){\n        invIi.vmult(GA.rotational,tmp);\n        result += tmp.dot(GA.rotational);\n    }\n\n    if(invIj){\n        invIj.vmult(GB.rotational,tmp);\n        result += tmp.dot(GB.rotational);\n    }\n\n    return  result;\n};\n\nvar addToWlambda_temp = new Vec3(),\n    addToWlambda_Gi = new Vec3(),\n    addToWlambda_Gj = new Vec3(),\n    addToWlambda_ri = new Vec3(),\n    addToWlambda_rj = new Vec3(),\n    addToWlambda_Mdiag = new Vec3();\n\n/**\n * Add constraint velocity to the bodies.\n * @method addToWlambda\n * @param {Number} deltalambda\n */\nEquation.prototype.addToWlambda = function(deltalambda){\n    var GA = this.jacobianElementA,\n        GB = this.jacobianElementB,\n        bi = this.bi,\n        bj = this.bj,\n        temp = addToWlambda_temp;\n\n    // Add to linear velocity\n    // v_lambda += inv(M) * delta_lamba * G\n    GA.spatial.mult(bi.invMassSolve * deltalambda,temp);\n    bi.vlambda.vadd(temp, bi.vlambda);\n\n    GB.spatial.mult(bj.invMassSolve * deltalambda,temp);\n    bj.vlambda.vadd(temp, bj.vlambda);\n\n    // Add to angular velocity\n    if(bi.invInertiaWorldSolve){\n        bi.invInertiaWorldSolve.vmult(GA.rotational,temp);\n        temp.mult(deltalambda,temp);\n        bi.wlambda.vadd(temp,bi.wlambda);\n    }\n\n    if(bj.invInertiaWorldSolve){\n        bj.invInertiaWorldSolve.vmult(GB.rotational,temp);\n        temp.mult(deltalambda,temp);\n        bj.wlambda.vadd(temp,bj.wlambda);\n    }\n};\n\n/**\n * Compute the denominator part of the SPOOK equation: C = G*inv(M)*G' + eps\n * @method computeInvC\n * @param  {Number} eps\n * @return {Number}\n */\nEquation.prototype.computeC = function(){\n    return this.computeGiMGt() + this.eps;\n};\n\n},{\"../math/JacobianElement\":26,\"../math/Vec3\":30}],21:[function(_dereq_,module,exports){\nmodule.exports = FrictionEquation;\n\nvar Equation = _dereq_('./Equation');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Mat3 = _dereq_('../math/Mat3');\n\n/**\n * Constrains the slipping in a contact along a tangent\n * @class FrictionEquation\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Number} slipForce should be +-F_friction = +-mu * F_normal = +-mu * m * g\n * @extends Equation\n */\nfunction FrictionEquation(bodyA, bodyB, slipForce){\n    Equation.call(this,bodyA, bodyB, -slipForce, slipForce);\n    this.ri = new Vec3();\n    this.rj = new Vec3();\n    this.t = new Vec3(); // tangent\n}\n\nFrictionEquation.prototype = new Equation();\nFrictionEquation.prototype.constructor = FrictionEquation;\n\nvar FrictionEquation_computeB_temp1 = new Vec3();\nvar FrictionEquation_computeB_temp2 = new Vec3();\nFrictionEquation.prototype.computeB = function(h){\n    var a = this.a,\n        b = this.b,\n        bi = this.bi,\n        bj = this.bj,\n        ri = this.ri,\n        rj = this.rj,\n        rixt = FrictionEquation_computeB_temp1,\n        rjxt = FrictionEquation_computeB_temp2,\n        t = this.t;\n\n    // Caluclate cross products\n    ri.cross(t,rixt);\n    rj.cross(t,rjxt);\n\n    // G = [-t -rixt t rjxt]\n    // And remember, this is a pure velocity constraint, g is always zero!\n    var GA = this.jacobianElementA,\n        GB = this.jacobianElementB;\n    t.negate(GA.spatial);\n    rixt.negate(GA.rotational);\n    GB.spatial.copy(t);\n    GB.rotational.copy(rjxt);\n\n    var GW = this.computeGW();\n    var GiMf = this.computeGiMf();\n\n    var B = - GW * b - h * GiMf;\n\n    return B;\n};\n\n},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],22:[function(_dereq_,module,exports){\nmodule.exports = RotationalEquation;\n\nvar Vec3 = _dereq_('../math/Vec3');\nvar Mat3 = _dereq_('../math/Mat3');\nvar Equation = _dereq_('./Equation');\n\n/**\n * Rotational constraint. Works to keep the local vectors orthogonal to each other in world space.\n * @class RotationalEquation\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Vec3} [options.axisA]\n * @param {Vec3} [options.axisB]\n * @param {number} [options.maxForce]\n * @extends Equation\n */\nfunction RotationalEquation(bodyA, bodyB, options){\n    options = options || {};\n    var maxForce = typeof(options.maxForce) !== 'undefined' ? options.maxForce : 1e6;\n\n    Equation.call(this,bodyA,bodyB,-maxForce, maxForce);\n\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1, 0, 0);\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3(0, 1, 0);\n\n    this.maxAngle = Math.PI / 2;\n}\n\nRotationalEquation.prototype = new Equation();\nRotationalEquation.prototype.constructor = RotationalEquation;\n\nvar tmpVec1 = new Vec3();\nvar tmpVec2 = new Vec3();\n\nRotationalEquation.prototype.computeB = function(h){\n    var a = this.a,\n        b = this.b,\n\n        ni = this.axisA,\n        nj = this.axisB,\n\n        nixnj = tmpVec1,\n        njxni = tmpVec2,\n\n        GA = this.jacobianElementA,\n        GB = this.jacobianElementB;\n\n    // Caluclate cross products\n    ni.cross(nj, nixnj);\n    nj.cross(ni, njxni);\n\n    // g = ni * nj\n    // gdot = (nj x ni) * wi + (ni x nj) * wj\n    // G = [0 njxni 0 nixnj]\n    // W = [vi wi vj wj]\n    GA.rotational.copy(njxni);\n    GB.rotational.copy(nixnj);\n\n    var g = Math.cos(this.maxAngle) - ni.dot(nj),\n        GW = this.computeGW(),\n        GiMf = this.computeGiMf();\n\n    var B = - g * a - GW * b - h * GiMf;\n\n    return B;\n};\n\n\n},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],23:[function(_dereq_,module,exports){\nmodule.exports = RotationalMotorEquation;\n\nvar Vec3 = _dereq_('../math/Vec3');\nvar Mat3 = _dereq_('../math/Mat3');\nvar Equation = _dereq_('./Equation');\n\n/**\n * Rotational motor constraint. Tries to keep the relative angular velocity of the bodies to a given value.\n * @class RotationalMotorEquation\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Number} maxForce\n * @extends Equation\n */\nfunction RotationalMotorEquation(bodyA, bodyB, maxForce){\n    maxForce = typeof(maxForce)!=='undefined' ? maxForce : 1e6;\n    Equation.call(this,bodyA,bodyB,-maxForce,maxForce);\n\n    /**\n     * World oriented rotational axis\n     * @property {Vec3} axisA\n     */\n    this.axisA = new Vec3();\n\n    /**\n     * World oriented rotational axis\n     * @property {Vec3} axisB\n     */\n    this.axisB = new Vec3(); // World oriented rotational axis\n\n    /**\n     * Motor velocity\n     * @property {Number} targetVelocity\n     */\n    this.targetVelocity = 0;\n}\n\nRotationalMotorEquation.prototype = new Equation();\nRotationalMotorEquation.prototype.constructor = RotationalMotorEquation;\n\nRotationalMotorEquation.prototype.computeB = function(h){\n    var a = this.a,\n        b = this.b,\n        bi = this.bi,\n        bj = this.bj,\n\n        axisA = this.axisA,\n        axisB = this.axisB,\n\n        GA = this.jacobianElementA,\n        GB = this.jacobianElementB;\n\n    // g = 0\n    // gdot = axisA * wi - axisB * wj\n    // gdot = G * W = G * [vi wi vj wj]\n    // =>\n    // G = [0 axisA 0 -axisB]\n\n    GA.rotational.copy(axisA);\n    axisB.negate(GB.rotational);\n\n    var GW = this.computeGW() - this.targetVelocity,\n        GiMf = this.computeGiMf();\n\n    var B = - GW * b - h * GiMf;\n\n    return B;\n};\n\n},{\"../math/Mat3\":27,\"../math/Vec3\":30,\"./Equation\":20}],24:[function(_dereq_,module,exports){\nvar Utils = _dereq_('../utils/Utils');\n\nmodule.exports = ContactMaterial;\n\n/**\n * Defines what happens when two materials meet.\n * @class ContactMaterial\n * @constructor\n * @param {Material} m1\n * @param {Material} m2\n * @param {object} [options]\n * @param {Number} [options.friction=0.3]\n * @param {Number} [options.restitution=0.3]\n * @param {number} [options.contactEquationStiffness=1e7]\n * @param {number} [options.contactEquationRelaxation=3]\n * @param {number} [options.frictionEquationStiffness=1e7]\n * @param {Number} [options.frictionEquationRelaxation=3]\n */\nfunction ContactMaterial(m1, m2, options){\n    options = Utils.defaults(options, {\n        friction: 0.3,\n        restitution: 0.3,\n        contactEquationStiffness: 1e7,\n        contactEquationRelaxation: 3,\n        frictionEquationStiffness: 1e7,\n        frictionEquationRelaxation: 3\n    });\n\n    /**\n     * Identifier of this material\n     * @property {Number} id\n     */\n    this.id = ContactMaterial.idCounter++;\n\n    /**\n     * Participating materials\n     * @property {Array} materials\n     * @todo  Should be .materialA and .materialB instead\n     */\n    this.materials = [m1, m2];\n\n    /**\n     * Friction coefficient\n     * @property {Number} friction\n     */\n    this.friction = options.friction;\n\n    /**\n     * Restitution coefficient\n     * @property {Number} restitution\n     */\n    this.restitution = options.restitution;\n\n    /**\n     * Stiffness of the produced contact equations\n     * @property {Number} contactEquationStiffness\n     */\n    this.contactEquationStiffness = options.contactEquationStiffness;\n\n    /**\n     * Relaxation time of the produced contact equations\n     * @property {Number} contactEquationRelaxation\n     */\n    this.contactEquationRelaxation = options.contactEquationRelaxation;\n\n    /**\n     * Stiffness of the produced friction equations\n     * @property {Number} frictionEquationStiffness\n     */\n    this.frictionEquationStiffness = options.frictionEquationStiffness;\n\n    /**\n     * Relaxation time of the produced friction equations\n     * @property {Number} frictionEquationRelaxation\n     */\n    this.frictionEquationRelaxation = options.frictionEquationRelaxation;\n}\n\nContactMaterial.idCounter = 0;\n\n},{\"../utils/Utils\":53}],25:[function(_dereq_,module,exports){\nmodule.exports = Material;\n\n/**\n * Defines a physics material.\n * @class Material\n * @constructor\n * @param {object} [options]\n * @author schteppe\n */\nfunction Material(options){\n    var name = '';\n    options = options || {};\n\n    // Backwards compatibility fix\n    if(typeof(options) === 'string'){\n        name = options;\n        options = {};\n    } else if(typeof(options) === 'object') {\n        name = '';\n    }\n\n    /**\n     * @property name\n     * @type {String}\n     */\n    this.name = name;\n\n    /**\n     * material id.\n     * @property id\n     * @type {number}\n     */\n    this.id = Material.idCounter++;\n\n    /**\n     * Friction for this material. If non-negative, it will be used instead of the friction given by ContactMaterials. If there's no matching ContactMaterial, the value from .defaultContactMaterial in the World will be used.\n     * @property {number} friction\n     */\n    this.friction = typeof(options.friction) !== 'undefined' ? options.friction : -1;\n\n    /**\n     * Restitution for this material. If non-negative, it will be used instead of the restitution given by ContactMaterials. If there's no matching ContactMaterial, the value from .defaultContactMaterial in the World will be used.\n     * @property {number} restitution\n     */\n    this.restitution = typeof(options.restitution) !== 'undefined' ? options.restitution : -1;\n}\n\nMaterial.idCounter = 0;\n\n},{}],26:[function(_dereq_,module,exports){\nmodule.exports = JacobianElement;\n\nvar Vec3 = _dereq_('./Vec3');\n\n/**\n * An element containing 6 entries, 3 spatial and 3 rotational degrees of freedom.\n * @class JacobianElement\n * @constructor\n */\nfunction JacobianElement(){\n\n    /**\n     * @property {Vec3} spatial\n     */\n    this.spatial = new Vec3();\n\n    /**\n     * @property {Vec3} rotational\n     */\n    this.rotational = new Vec3();\n}\n\n/**\n * Multiply with other JacobianElement\n * @method multiplyElement\n * @param  {JacobianElement} element\n * @return {Number}\n */\nJacobianElement.prototype.multiplyElement = function(element){\n    return element.spatial.dot(this.spatial) + element.rotational.dot(this.rotational);\n};\n\n/**\n * Multiply with two vectors\n * @method multiplyVectors\n * @param  {Vec3} spatial\n * @param  {Vec3} rotational\n * @return {Number}\n */\nJacobianElement.prototype.multiplyVectors = function(spatial,rotational){\n    return spatial.dot(this.spatial) + rotational.dot(this.rotational);\n};\n\n},{\"./Vec3\":30}],27:[function(_dereq_,module,exports){\nmodule.exports = Mat3;\n\nvar Vec3 = _dereq_('./Vec3');\n\n/**\n * A 3x3 matrix.\n * @class Mat3\n * @constructor\n * @param array elements Array of nine elements. Optional.\n * @author schteppe / http://github.com/schteppe\n */\nfunction Mat3(elements){\n    /**\n     * A vector of length 9, containing all matrix elements\n     * @property {Array} elements\n     */\n    if(elements){\n        this.elements = elements;\n    } else {\n        this.elements = [0,0,0,0,0,0,0,0,0];\n    }\n}\n\n/**\n * Sets the matrix to identity\n * @method identity\n * @todo Should perhaps be renamed to setIdentity() to be more clear.\n * @todo Create another function that immediately creates an identity matrix eg. eye()\n */\nMat3.prototype.identity = function(){\n    var e = this.elements;\n    e[0] = 1;\n    e[1] = 0;\n    e[2] = 0;\n\n    e[3] = 0;\n    e[4] = 1;\n    e[5] = 0;\n\n    e[6] = 0;\n    e[7] = 0;\n    e[8] = 1;\n};\n\n/**\n * Set all elements to zero\n * @method setZero\n */\nMat3.prototype.setZero = function(){\n    var e = this.elements;\n    e[0] = 0;\n    e[1] = 0;\n    e[2] = 0;\n    e[3] = 0;\n    e[4] = 0;\n    e[5] = 0;\n    e[6] = 0;\n    e[7] = 0;\n    e[8] = 0;\n};\n\n/**\n * Sets the matrix diagonal elements from a Vec3\n * @method setTrace\n * @param {Vec3} vec3\n */\nMat3.prototype.setTrace = function(vec3){\n    var e = this.elements;\n    e[0] = vec3.x;\n    e[4] = vec3.y;\n    e[8] = vec3.z;\n};\n\n/**\n * Gets the matrix diagonal elements\n * @method getTrace\n * @return {Vec3}\n */\nMat3.prototype.getTrace = function(target){\n    var target = target || new Vec3();\n    var e = this.elements;\n    target.x = e[0];\n    target.y = e[4];\n    target.z = e[8];\n};\n\n/**\n * Matrix-Vector multiplication\n * @method vmult\n * @param {Vec3} v The vector to multiply with\n * @param {Vec3} target Optional, target to save the result in.\n */\nMat3.prototype.vmult = function(v,target){\n    target = target || new Vec3();\n\n    var e = this.elements,\n        x = v.x,\n        y = v.y,\n        z = v.z;\n    target.x = e[0]*x + e[1]*y + e[2]*z;\n    target.y = e[3]*x + e[4]*y + e[5]*z;\n    target.z = e[6]*x + e[7]*y + e[8]*z;\n\n    return target;\n};\n\n/**\n * Matrix-scalar multiplication\n * @method smult\n * @param {Number} s\n */\nMat3.prototype.smult = function(s){\n    for(var i=0; i<this.elements.length; i++){\n        this.elements[i] *= s;\n    }\n};\n\n/**\n * Matrix multiplication\n * @method mmult\n * @param {Mat3} m Matrix to multiply with from left side.\n * @return {Mat3} The result.\n */\nMat3.prototype.mmult = function(m,target){\n    var r = target || new Mat3();\n    for(var i=0; i<3; i++){\n        for(var j=0; j<3; j++){\n            var sum = 0.0;\n            for(var k=0; k<3; k++){\n                sum += m.elements[i+k*3] * this.elements[k+j*3];\n            }\n            r.elements[i+j*3] = sum;\n        }\n    }\n    return r;\n};\n\n/**\n * Scale each column of the matrix\n * @method scale\n * @param {Vec3} v\n * @return {Mat3} The result.\n */\nMat3.prototype.scale = function(v,target){\n    target = target || new Mat3();\n    var e = this.elements,\n        t = target.elements;\n    for(var i=0; i!==3; i++){\n        t[3*i + 0] = v.x * e[3*i + 0];\n        t[3*i + 1] = v.y * e[3*i + 1];\n        t[3*i + 2] = v.z * e[3*i + 2];\n    }\n    return target;\n};\n\n/**\n * Solve Ax=b\n * @method solve\n * @param {Vec3} b The right hand side\n * @param {Vec3} target Optional. Target vector to save in.\n * @return {Vec3} The solution x\n * @todo should reuse arrays\n */\nMat3.prototype.solve = function(b,target){\n    target = target || new Vec3();\n\n    // Construct equations\n    var nr = 3; // num rows\n    var nc = 4; // num cols\n    var eqns = [];\n    for(var i=0; i<nr*nc; i++){\n        eqns.push(0);\n    }\n    var i,j;\n    for(i=0; i<3; i++){\n        for(j=0; j<3; j++){\n            eqns[i+nc*j] = this.elements[i+3*j];\n        }\n    }\n    eqns[3+4*0] = b.x;\n    eqns[3+4*1] = b.y;\n    eqns[3+4*2] = b.z;\n\n    // Compute right upper triangular version of the matrix - Gauss elimination\n    var n = 3, k = n, np;\n    var kp = 4; // num rows\n    var p, els;\n    do {\n        i = k - n;\n        if (eqns[i+nc*i] === 0) {\n            // the pivot is null, swap lines\n            for (j = i + 1; j < k; j++) {\n                if (eqns[i+nc*j] !== 0) {\n                    np = kp;\n                    do {  // do ligne( i ) = ligne( i ) + ligne( k )\n                        p = kp - np;\n                        eqns[p+nc*i] += eqns[p+nc*j];\n                    } while (--np);\n                    break;\n                }\n            }\n        }\n        if (eqns[i+nc*i] !== 0) {\n            for (j = i + 1; j < k; j++) {\n                var multiplier = eqns[i+nc*j] / eqns[i+nc*i];\n                np = kp;\n                do {  // do ligne( k ) = ligne( k ) - multiplier * ligne( i )\n                    p = kp - np;\n                    eqns[p+nc*j] = p <= i ? 0 : eqns[p+nc*j] - eqns[p+nc*i] * multiplier ;\n                } while (--np);\n            }\n        }\n    } while (--n);\n\n    // Get the solution\n    target.z = eqns[2*nc+3] / eqns[2*nc+2];\n    target.y = (eqns[1*nc+3] - eqns[1*nc+2]*target.z) / eqns[1*nc+1];\n    target.x = (eqns[0*nc+3] - eqns[0*nc+2]*target.z - eqns[0*nc+1]*target.y) / eqns[0*nc+0];\n\n    if(isNaN(target.x) || isNaN(target.y) || isNaN(target.z) || target.x===Infinity || target.y===Infinity || target.z===Infinity){\n        throw \"Could not solve equation! Got x=[\"+target.toString()+\"], b=[\"+b.toString()+\"], A=[\"+this.toString()+\"]\";\n    }\n\n    return target;\n};\n\n/**\n * Get an element in the matrix by index. Index starts at 0, not 1!!!\n * @method e\n * @param {Number} row\n * @param {Number} column\n * @param {Number} value Optional. If provided, the matrix element will be set to this value.\n * @return {Number}\n */\nMat3.prototype.e = function( row , column ,value){\n    if(value===undefined){\n        return this.elements[column+3*row];\n    } else {\n        // Set value\n        this.elements[column+3*row] = value;\n    }\n};\n\n/**\n * Copy another matrix into this matrix object.\n * @method copy\n * @param {Mat3} source\n * @return {Mat3} this\n */\nMat3.prototype.copy = function(source){\n    for(var i=0; i < source.elements.length; i++){\n        this.elements[i] = source.elements[i];\n    }\n    return this;\n};\n\n/**\n * Returns a string representation of the matrix.\n * @method toString\n * @return string\n */\nMat3.prototype.toString = function(){\n    var r = \"\";\n    var sep = \",\";\n    for(var i=0; i<9; i++){\n        r += this.elements[i] + sep;\n    }\n    return r;\n};\n\n/**\n * reverse the matrix\n * @method reverse\n * @param {Mat3} target Optional. Target matrix to save in.\n * @return {Mat3} The solution x\n */\nMat3.prototype.reverse = function(target){\n\n    target = target || new Mat3();\n\n    // Construct equations\n    var nr = 3; // num rows\n    var nc = 6; // num cols\n    var eqns = [];\n    for(var i=0; i<nr*nc; i++){\n        eqns.push(0);\n    }\n    var i,j;\n    for(i=0; i<3; i++){\n        for(j=0; j<3; j++){\n            eqns[i+nc*j] = this.elements[i+3*j];\n        }\n    }\n    eqns[3+6*0] = 1;\n    eqns[3+6*1] = 0;\n    eqns[3+6*2] = 0;\n    eqns[4+6*0] = 0;\n    eqns[4+6*1] = 1;\n    eqns[4+6*2] = 0;\n    eqns[5+6*0] = 0;\n    eqns[5+6*1] = 0;\n    eqns[5+6*2] = 1;\n\n    // Compute right upper triangular version of the matrix - Gauss elimination\n    var n = 3, k = n, np;\n    var kp = nc; // num rows\n    var p;\n    do {\n        i = k - n;\n        if (eqns[i+nc*i] === 0) {\n            // the pivot is null, swap lines\n            for (j = i + 1; j < k; j++) {\n                if (eqns[i+nc*j] !== 0) {\n                    np = kp;\n                    do { // do line( i ) = line( i ) + line( k )\n                        p = kp - np;\n                        eqns[p+nc*i] += eqns[p+nc*j];\n                    } while (--np);\n                    break;\n                }\n            }\n        }\n        if (eqns[i+nc*i] !== 0) {\n            for (j = i + 1; j < k; j++) {\n                var multiplier = eqns[i+nc*j] / eqns[i+nc*i];\n                np = kp;\n                do { // do line( k ) = line( k ) - multiplier * line( i )\n                    p = kp - np;\n                    eqns[p+nc*j] = p <= i ? 0 : eqns[p+nc*j] - eqns[p+nc*i] * multiplier ;\n                } while (--np);\n            }\n        }\n    } while (--n);\n\n    // eliminate the upper left triangle of the matrix\n    i = 2;\n    do {\n        j = i-1;\n        do {\n            var multiplier = eqns[i+nc*j] / eqns[i+nc*i];\n            np = nc;\n            do {\n                p = nc - np;\n                eqns[p+nc*j] =  eqns[p+nc*j] - eqns[p+nc*i] * multiplier ;\n            } while (--np);\n        } while (j--);\n    } while (--i);\n\n    // operations on the diagonal\n    i = 2;\n    do {\n        var multiplier = 1 / eqns[i+nc*i];\n        np = nc;\n        do {\n            p = nc - np;\n            eqns[p+nc*i] = eqns[p+nc*i] * multiplier ;\n        } while (--np);\n    } while (i--);\n\n    i = 2;\n    do {\n        j = 2;\n        do {\n            p = eqns[nr+j+nc*i];\n            if( isNaN( p ) || p ===Infinity ){\n                throw \"Could not reverse! A=[\"+this.toString()+\"]\";\n            }\n            target.e( i , j , p );\n        } while (j--);\n    } while (i--);\n\n    return target;\n};\n\n/**\n * Set the matrix from a quaterion\n * @method setRotationFromQuaternion\n * @param {Quaternion} q\n */\nMat3.prototype.setRotationFromQuaternion = function( q ) {\n    var x = q.x, y = q.y, z = q.z, w = q.w,\n        x2 = x + x, y2 = y + y, z2 = z + z,\n        xx = x * x2, xy = x * y2, xz = x * z2,\n        yy = y * y2, yz = y * z2, zz = z * z2,\n        wx = w * x2, wy = w * y2, wz = w * z2,\n        e = this.elements;\n\n    e[3*0 + 0] = 1 - ( yy + zz );\n    e[3*0 + 1] = xy - wz;\n    e[3*0 + 2] = xz + wy;\n\n    e[3*1 + 0] = xy + wz;\n    e[3*1 + 1] = 1 - ( xx + zz );\n    e[3*1 + 2] = yz - wx;\n\n    e[3*2 + 0] = xz - wy;\n    e[3*2 + 1] = yz + wx;\n    e[3*2 + 2] = 1 - ( xx + yy );\n\n    return this;\n};\n\n/**\n * Transpose the matrix\n * @method transpose\n * @param  {Mat3} target Where to store the result.\n * @return {Mat3} The target Mat3, or a new Mat3 if target was omitted.\n */\nMat3.prototype.transpose = function( target ) {\n    target = target || new Mat3();\n\n    var Mt = target.elements,\n        M = this.elements;\n\n    for(var i=0; i!==3; i++){\n        for(var j=0; j!==3; j++){\n            Mt[3*i + j] = M[3*j + i];\n        }\n    }\n\n    return target;\n};\n\n},{\"./Vec3\":30}],28:[function(_dereq_,module,exports){\nmodule.exports = Quaternion;\n\nvar Vec3 = _dereq_('./Vec3');\n\n/**\n * A Quaternion describes a rotation in 3D space. The Quaternion is mathematically defined as Q = x*i + y*j + z*k + w, where (i,j,k) are imaginary basis vectors. (x,y,z) can be seen as a vector related to the axis of rotation, while the real multiplier, w, is related to the amount of rotation.\n * @class Quaternion\n * @constructor\n * @param {Number} x Multiplier of the imaginary basis vector i.\n * @param {Number} y Multiplier of the imaginary basis vector j.\n * @param {Number} z Multiplier of the imaginary basis vector k.\n * @param {Number} w Multiplier of the real part.\n * @see http://en.wikipedia.org/wiki/Quaternion\n */\nfunction Quaternion(x,y,z,w){\n    /**\n     * @property {Number} x\n     */\n    this.x = x!==undefined ? x : 0;\n\n    /**\n     * @property {Number} y\n     */\n    this.y = y!==undefined ? y : 0;\n\n    /**\n     * @property {Number} z\n     */\n    this.z = z!==undefined ? z : 0;\n\n    /**\n     * The multiplier of the real quaternion basis vector.\n     * @property {Number} w\n     */\n    this.w = w!==undefined ? w : 1;\n}\n\n/**\n * Set the value of the quaternion.\n * @method set\n * @param {Number} x\n * @param {Number} y\n * @param {Number} z\n * @param {Number} w\n */\nQuaternion.prototype.set = function(x,y,z,w){\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n};\n\n/**\n * Convert to a readable format\n * @method toString\n * @return string\n */\nQuaternion.prototype.toString = function(){\n    return this.x+\",\"+this.y+\",\"+this.z+\",\"+this.w;\n};\n\n/**\n * Convert to an Array\n * @method toArray\n * @return Array\n */\nQuaternion.prototype.toArray = function(){\n    return [this.x, this.y, this.z, this.w];\n};\n\n/**\n * Set the quaternion components given an axis and an angle.\n * @method setFromAxisAngle\n * @param {Vec3} axis\n * @param {Number} angle in radians\n */\nQuaternion.prototype.setFromAxisAngle = function(axis,angle){\n    var s = Math.sin(angle*0.5);\n    this.x = axis.x * s;\n    this.y = axis.y * s;\n    this.z = axis.z * s;\n    this.w = Math.cos(angle*0.5);\n};\n\n/**\n * Converts the quaternion to axis/angle representation.\n * @method toAxisAngle\n * @param {Vec3} targetAxis Optional. A vector object to reuse for storing the axis.\n * @return Array An array, first elemnt is the axis and the second is the angle in radians.\n */\nQuaternion.prototype.toAxisAngle = function(targetAxis){\n    targetAxis = targetAxis || new Vec3();\n    this.normalize(); // if w>1 acos and sqrt will produce errors, this cant happen if quaternion is normalised\n    var angle = 2 * Math.acos(this.w);\n    var s = Math.sqrt(1-this.w*this.w); // assuming quaternion normalised then w is less than 1, so term always positive.\n    if (s < 0.001) { // test to avoid divide by zero, s is always positive due to sqrt\n        // if s close to zero then direction of axis not important\n        targetAxis.x = this.x; // if it is important that axis is normalised then replace with x=1; y=z=0;\n        targetAxis.y = this.y;\n        targetAxis.z = this.z;\n    } else {\n        targetAxis.x = this.x / s; // normalise axis\n        targetAxis.y = this.y / s;\n        targetAxis.z = this.z / s;\n    }\n    return [targetAxis,angle];\n};\n\nvar sfv_t1 = new Vec3(),\n    sfv_t2 = new Vec3();\n\n/**\n * Set the quaternion value given two vectors. The resulting rotation will be the needed rotation to rotate u to v.\n * @method setFromVectors\n * @param {Vec3} u\n * @param {Vec3} v\n */\nQuaternion.prototype.setFromVectors = function(u,v){\n    if(u.isAntiparallelTo(v)){\n        var t1 = sfv_t1;\n        var t2 = sfv_t2;\n\n        u.tangents(t1,t2);\n        this.setFromAxisAngle(t1,Math.PI);\n    } else {\n        var a = u.cross(v);\n        this.x = a.x;\n        this.y = a.y;\n        this.z = a.z;\n        this.w = Math.sqrt(Math.pow(u.norm(),2) * Math.pow(v.norm(),2)) + u.dot(v);\n        this.normalize();\n    }\n};\n\n/**\n * Quaternion multiplication\n * @method mult\n * @param {Quaternion} q\n * @param {Quaternion} target Optional.\n * @return {Quaternion}\n */\nvar Quaternion_mult_va = new Vec3();\nvar Quaternion_mult_vb = new Vec3();\nvar Quaternion_mult_vaxvb = new Vec3();\nQuaternion.prototype.mult = function(q,target){\n    target = target || new Quaternion();\n    var w = this.w,\n        va = Quaternion_mult_va,\n        vb = Quaternion_mult_vb,\n        vaxvb = Quaternion_mult_vaxvb;\n\n    va.set(this.x,this.y,this.z);\n    vb.set(q.x,q.y,q.z);\n    target.w = w*q.w - va.dot(vb);\n    va.cross(vb,vaxvb);\n\n    target.x = w * vb.x + q.w*va.x + vaxvb.x;\n    target.y = w * vb.y + q.w*va.y + vaxvb.y;\n    target.z = w * vb.z + q.w*va.z + vaxvb.z;\n\n    return target;\n};\n\n/**\n * Get the inverse quaternion rotation.\n * @method inverse\n * @param {Quaternion} target\n * @return {Quaternion}\n */\nQuaternion.prototype.inverse = function(target){\n    var x = this.x, y = this.y, z = this.z, w = this.w;\n    target = target || new Quaternion();\n\n    this.conjugate(target);\n    var inorm2 = 1/(x*x + y*y + z*z + w*w);\n    target.x *= inorm2;\n    target.y *= inorm2;\n    target.z *= inorm2;\n    target.w *= inorm2;\n\n    return target;\n};\n\n/**\n * Get the quaternion conjugate\n * @method conjugate\n * @param {Quaternion} target\n * @return {Quaternion}\n */\nQuaternion.prototype.conjugate = function(target){\n    target = target || new Quaternion();\n\n    target.x = -this.x;\n    target.y = -this.y;\n    target.z = -this.z;\n    target.w = this.w;\n\n    return target;\n};\n\n/**\n * Normalize the quaternion. Note that this changes the values of the quaternion.\n * @method normalize\n */\nQuaternion.prototype.normalize = function(){\n    var l = Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);\n    if ( l === 0 ) {\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n        this.w = 0;\n    } else {\n        l = 1 / l;\n        this.x *= l;\n        this.y *= l;\n        this.z *= l;\n        this.w *= l;\n    }\n};\n\n/**\n * Approximation of quaternion normalization. Works best when quat is already almost-normalized.\n * @method normalizeFast\n * @see http://jsperf.com/fast-quaternion-normalization\n * @author unphased, https://github.com/unphased\n */\nQuaternion.prototype.normalizeFast = function () {\n    var f = (3.0-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2.0;\n    if ( f === 0 ) {\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n        this.w = 0;\n    } else {\n        this.x *= f;\n        this.y *= f;\n        this.z *= f;\n        this.w *= f;\n    }\n};\n\n/**\n * Multiply the quaternion by a vector\n * @method vmult\n * @param {Vec3} v\n * @param {Vec3} target Optional\n * @return {Vec3}\n */\nQuaternion.prototype.vmult = function(v,target){\n    target = target || new Vec3();\n\n    var x = v.x,\n        y = v.y,\n        z = v.z;\n\n    var qx = this.x,\n        qy = this.y,\n        qz = this.z,\n        qw = this.w;\n\n    // q*v\n    var ix =  qw * x + qy * z - qz * y,\n    iy =  qw * y + qz * x - qx * z,\n    iz =  qw * z + qx * y - qy * x,\n    iw = -qx * x - qy * y - qz * z;\n\n    target.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    target.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    target.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\n    return target;\n};\n\n/**\n * Copies value of source to this quaternion.\n * @method copy\n * @param {Quaternion} source\n * @return {Quaternion} this\n */\nQuaternion.prototype.copy = function(source){\n    this.x = source.x;\n    this.y = source.y;\n    this.z = source.z;\n    this.w = source.w;\n    return this;\n};\n\n/**\n * Convert the quaternion to euler angle representation. Order: YZX, as this page describes: http://www.euclideanspace.com/maths/standards/index.htm\n * @method toEuler\n * @param {Vec3} target\n * @param string order Three-character string e.g. \"YZX\", which also is default.\n */\nQuaternion.prototype.toEuler = function(target,order){\n    order = order || \"YZX\";\n\n    var heading, attitude, bank;\n    var x = this.x, y = this.y, z = this.z, w = this.w;\n\n    switch(order){\n    case \"YZX\":\n        var test = x*y + z*w;\n        if (test > 0.499) { // singularity at north pole\n            heading = 2 * Math.atan2(x,w);\n            attitude = Math.PI/2;\n            bank = 0;\n        }\n        if (test < -0.499) { // singularity at south pole\n            heading = -2 * Math.atan2(x,w);\n            attitude = - Math.PI/2;\n            bank = 0;\n        }\n        if(isNaN(heading)){\n            var sqx = x*x;\n            var sqy = y*y;\n            var sqz = z*z;\n            heading = Math.atan2(2*y*w - 2*x*z , 1 - 2*sqy - 2*sqz); // Heading\n            attitude = Math.asin(2*test); // attitude\n            bank = Math.atan2(2*x*w - 2*y*z , 1 - 2*sqx - 2*sqz); // bank\n        }\n        break;\n    default:\n        throw new Error(\"Euler order \"+order+\" not supported yet.\");\n    }\n\n    target.y = heading;\n    target.z = attitude;\n    target.x = bank;\n};\n\n/**\n * See http://www.mathworks.com/matlabcentral/fileexchange/20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/content/SpinCalc.m\n * @method setFromEuler\n * @param {Number} x\n * @param {Number} y\n * @param {Number} z\n * @param {String} order The order to apply angles: 'XYZ' or 'YXZ' or any other combination\n */\nQuaternion.prototype.setFromEuler = function ( x, y, z, order ) {\n    order = order || \"XYZ\";\n\n    var c1 = Math.cos( x / 2 );\n    var c2 = Math.cos( y / 2 );\n    var c3 = Math.cos( z / 2 );\n    var s1 = Math.sin( x / 2 );\n    var s2 = Math.sin( y / 2 );\n    var s3 = Math.sin( z / 2 );\n\n    if ( order === 'XYZ' ) {\n\n        this.x = s1 * c2 * c3 + c1 * s2 * s3;\n        this.y = c1 * s2 * c3 - s1 * c2 * s3;\n        this.z = c1 * c2 * s3 + s1 * s2 * c3;\n        this.w = c1 * c2 * c3 - s1 * s2 * s3;\n\n    } else if ( order === 'YXZ' ) {\n\n        this.x = s1 * c2 * c3 + c1 * s2 * s3;\n        this.y = c1 * s2 * c3 - s1 * c2 * s3;\n        this.z = c1 * c2 * s3 - s1 * s2 * c3;\n        this.w = c1 * c2 * c3 + s1 * s2 * s3;\n\n    } else if ( order === 'ZXY' ) {\n\n        this.x = s1 * c2 * c3 - c1 * s2 * s3;\n        this.y = c1 * s2 * c3 + s1 * c2 * s3;\n        this.z = c1 * c2 * s3 + s1 * s2 * c3;\n        this.w = c1 * c2 * c3 - s1 * s2 * s3;\n\n    } else if ( order === 'ZYX' ) {\n\n        this.x = s1 * c2 * c3 - c1 * s2 * s3;\n        this.y = c1 * s2 * c3 + s1 * c2 * s3;\n        this.z = c1 * c2 * s3 - s1 * s2 * c3;\n        this.w = c1 * c2 * c3 + s1 * s2 * s3;\n\n    } else if ( order === 'YZX' ) {\n\n        this.x = s1 * c2 * c3 + c1 * s2 * s3;\n        this.y = c1 * s2 * c3 + s1 * c2 * s3;\n        this.z = c1 * c2 * s3 - s1 * s2 * c3;\n        this.w = c1 * c2 * c3 - s1 * s2 * s3;\n\n    } else if ( order === 'XZY' ) {\n\n        this.x = s1 * c2 * c3 - c1 * s2 * s3;\n        this.y = c1 * s2 * c3 - s1 * c2 * s3;\n        this.z = c1 * c2 * s3 + s1 * s2 * c3;\n        this.w = c1 * c2 * c3 + s1 * s2 * s3;\n\n    }\n\n    return this;\n\n};\n\nQuaternion.prototype.clone = function(){\n    return new Quaternion(this.x, this.y, this.z, this.w);\n};\n},{\"./Vec3\":30}],29:[function(_dereq_,module,exports){\nvar Vec3 = _dereq_('./Vec3');\nvar Quaternion = _dereq_('./Quaternion');\n\nmodule.exports = Transform;\n\n/**\n * @class Transform\n * @constructor\n */\nfunction Transform(options) {\n    options = options || {};\n\n\t/**\n\t * @property {Vec3} position\n\t */\n\tthis.position = new Vec3();\n    if(options.position){\n        this.position.copy(options.position);\n    }\n\n\t/**\n\t * @property {Quaternion} quaternion\n\t */\n\tthis.quaternion = new Quaternion();\n    if(options.quaternion){\n        this.quaternion.copy(options.quaternion);\n    }\n}\n\nvar tmpQuat = new Quaternion();\n\n/**\n * @static\n * @method pointToLocaFrame\n * @param {Vec3} position\n * @param {Quaternion} quaternion\n * @param {Vec3} worldPoint\n * @param {Vec3} result\n */\nTransform.pointToLocalFrame = function(position, quaternion, worldPoint, result){\n    var result = result || new Vec3();\n    worldPoint.vsub(position, result);\n    quaternion.conjugate(tmpQuat);\n    tmpQuat.vmult(result, result);\n    return result;\n};\n\n/**\n * Get a global point in local transform coordinates.\n * @method pointToLocal\n * @param  {Vec3} point\n * @param  {Vec3} result\n * @return {Vec3} The \"result\" vector object\n */\nTransform.prototype.pointToLocal = function(worldPoint, result){\n    return Transform.pointToLocalFrame(this.position, this.quaternion, worldPoint, result);\n};\n\n/**\n * @static\n * @method pointToWorldFrame\n * @param {Vec3} position\n * @param {Vec3} quaternion\n * @param {Vec3} localPoint\n * @param {Vec3} result\n */\nTransform.pointToWorldFrame = function(position, quaternion, localPoint, result){\n    var result = result || new Vec3();\n    quaternion.vmult(localPoint, result);\n    result.vadd(position, result);\n    return result;\n};\n\n/**\n * Get a local point in global transform coordinates.\n * @method pointToWorld\n * @param  {Vec3} point\n * @param  {Vec3} result\n * @return {Vec3} The \"result\" vector object\n */\nTransform.prototype.pointToWorld = function(localPoint, result){\n    return Transform.pointToWorldFrame(this.position, this.quaternion, localPoint, result);\n};\n\n\nTransform.prototype.vectorToWorldFrame = function(localVector, result){\n    var result = result || new Vec3();\n    this.quaternion.vmult(localVector, result);\n    return result;\n};\n\nTransform.vectorToWorldFrame = function(quaternion, localVector, result){\n    quaternion.vmult(localVector, result);\n    return result;\n};\n\nTransform.vectorToLocalFrame = function(position, quaternion, worldVector, result){\n    var result = result || new Vec3();\n    quaternion.w *= -1;\n    quaternion.vmult(worldVector, result);\n    quaternion.w *= -1;\n    return result;\n};\n\n},{\"./Quaternion\":28,\"./Vec3\":30}],30:[function(_dereq_,module,exports){\nmodule.exports = Vec3;\n\nvar Mat3 = _dereq_('./Mat3');\n\n/**\n * 3-dimensional vector\n * @class Vec3\n * @constructor\n * @param {Number} x\n * @param {Number} y\n * @param {Number} z\n * @author schteppe\n * @example\n *     var v = new Vec3(1, 2, 3);\n *     console.log('x=' + v.x); // x=1\n */\nfunction Vec3(x,y,z){\n    /**\n     * @property x\n     * @type {Number}\n     */\n    this.x = x||0.0;\n\n    /**\n     * @property y\n     * @type {Number}\n     */\n    this.y = y||0.0;\n\n    /**\n     * @property z\n     * @type {Number}\n     */\n    this.z = z||0.0;\n}\n\n/**\n * @static\n * @property {Vec3} ZERO\n */\nVec3.ZERO = new Vec3(0, 0, 0);\n\n/**\n * @static\n * @property {Vec3} UNIT_X\n */\nVec3.UNIT_X = new Vec3(1, 0, 0);\n\n/**\n * @static\n * @property {Vec3} UNIT_Y\n */\nVec3.UNIT_Y = new Vec3(0, 1, 0);\n\n/**\n * @static\n * @property {Vec3} UNIT_Z\n */\nVec3.UNIT_Z = new Vec3(0, 0, 1);\n\n/**\n * Vector cross product\n * @method cross\n * @param {Vec3} v\n * @param {Vec3} target Optional. Target to save in.\n * @return {Vec3}\n */\nVec3.prototype.cross = function(v,target){\n    var vx=v.x, vy=v.y, vz=v.z, x=this.x, y=this.y, z=this.z;\n    target = target || new Vec3();\n\n    target.x = (y * vz) - (z * vy);\n    target.y = (z * vx) - (x * vz);\n    target.z = (x * vy) - (y * vx);\n\n    return target;\n};\n\n/**\n * Set the vectors' 3 elements\n * @method set\n * @param {Number} x\n * @param {Number} y\n * @param {Number} z\n * @return Vec3\n */\nVec3.prototype.set = function(x,y,z){\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n};\n\n/**\n * Set all components of the vector to zero.\n * @method setZero\n */\nVec3.prototype.setZero = function(){\n    this.x = this.y = this.z = 0;\n};\n\n/**\n * Vector addition\n * @method vadd\n * @param {Vec3} v\n * @param {Vec3} target Optional.\n * @return {Vec3}\n */\nVec3.prototype.vadd = function(v,target){\n    if(target){\n        target.x = v.x + this.x;\n        target.y = v.y + this.y;\n        target.z = v.z + this.z;\n    } else {\n        return new Vec3(this.x + v.x,\n                               this.y + v.y,\n                               this.z + v.z);\n    }\n};\n\n/**\n * Vector subtraction\n * @method vsub\n * @param {Vec3} v\n * @param {Vec3} target Optional. Target to save in.\n * @return {Vec3}\n */\nVec3.prototype.vsub = function(v,target){\n    if(target){\n        target.x = this.x - v.x;\n        target.y = this.y - v.y;\n        target.z = this.z - v.z;\n    } else {\n        return new Vec3(this.x-v.x,\n                               this.y-v.y,\n                               this.z-v.z);\n    }\n};\n\n/**\n * Get the cross product matrix a_cross from a vector, such that a x b = a_cross * b = c\n * @method crossmat\n * @see http://www8.cs.umu.se/kurser/TDBD24/VT06/lectures/Lecture6.pdf\n * @return {Mat3}\n */\nVec3.prototype.crossmat = function(){\n    return new Mat3([     0,  -this.z,   this.y,\n                            this.z,        0,  -this.x,\n                           -this.y,   this.x,        0]);\n};\n\n/**\n * Normalize the vector. Note that this changes the values in the vector.\n * @method normalize\n * @return {Number} Returns the norm of the vector\n */\nVec3.prototype.normalize = function(){\n    var x=this.x, y=this.y, z=this.z;\n    var n = Math.sqrt(x*x + y*y + z*z);\n    if(n>0.0){\n        var invN = 1/n;\n        this.x *= invN;\n        this.y *= invN;\n        this.z *= invN;\n    } else {\n        // Make something up\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n    }\n    return n;\n};\n\n/**\n * Get the version of this vector that is of length 1.\n * @method unit\n * @param {Vec3} target Optional target to save in\n * @return {Vec3} Returns the unit vector\n */\nVec3.prototype.unit = function(target){\n    target = target || new Vec3();\n    var x=this.x, y=this.y, z=this.z;\n    var ninv = Math.sqrt(x*x + y*y + z*z);\n    if(ninv>0.0){\n        ninv = 1.0/ninv;\n        target.x = x * ninv;\n        target.y = y * ninv;\n        target.z = z * ninv;\n    } else {\n        target.x = 1;\n        target.y = 0;\n        target.z = 0;\n    }\n    return target;\n};\n\n/**\n * Get the length of the vector\n * @method norm\n * @return {Number}\n * @deprecated Use .length() instead\n */\nVec3.prototype.norm = function(){\n    var x=this.x, y=this.y, z=this.z;\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Get the length of the vector\n * @method length\n * @return {Number}\n */\nVec3.prototype.length = Vec3.prototype.norm;\n\n/**\n * Get the squared length of the vector\n * @method norm2\n * @return {Number}\n * @deprecated Use .lengthSquared() instead.\n */\nVec3.prototype.norm2 = function(){\n    return this.dot(this);\n};\n\n/**\n * Get the squared length of the vector.\n * @method lengthSquared\n * @return {Number}\n */\nVec3.prototype.lengthSquared = Vec3.prototype.norm2;\n\n/**\n * Get distance from this point to another point\n * @method distanceTo\n * @param  {Vec3} p\n * @return {Number}\n */\nVec3.prototype.distanceTo = function(p){\n    var x=this.x, y=this.y, z=this.z;\n    var px=p.x, py=p.y, pz=p.z;\n    return Math.sqrt((px-x)*(px-x)+\n                     (py-y)*(py-y)+\n                     (pz-z)*(pz-z));\n};\n\n/**\n * Get squared distance from this point to another point\n * @method distanceSquared\n * @param  {Vec3} p\n * @return {Number}\n */\nVec3.prototype.distanceSquared = function(p){\n    var x=this.x, y=this.y, z=this.z;\n    var px=p.x, py=p.y, pz=p.z;\n    return (px-x)*(px-x) + (py-y)*(py-y) + (pz-z)*(pz-z);\n};\n\n/**\n * Multiply all the components of the vector with a scalar.\n * @deprecated Use .scale instead\n * @method mult\n * @param {Number} scalar\n * @param {Vec3} target The vector to save the result in.\n * @return {Vec3}\n * @deprecated Use .scale() instead\n */\nVec3.prototype.mult = function(scalar,target){\n    target = target || new Vec3();\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    target.x = scalar * x;\n    target.y = scalar * y;\n    target.z = scalar * z;\n    return target;\n};\n\n/**\n * Multiply the vector with a scalar.\n * @method scale\n * @param {Number} scalar\n * @param {Vec3} target\n * @return {Vec3}\n */\nVec3.prototype.scale = Vec3.prototype.mult;\n\n/**\n * Calculate dot product\n * @method dot\n * @param {Vec3} v\n * @return {Number}\n */\nVec3.prototype.dot = function(v){\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n};\n\n/**\n * @method isZero\n * @return bool\n */\nVec3.prototype.isZero = function(){\n    return this.x===0 && this.y===0 && this.z===0;\n};\n\n/**\n * Make the vector point in the opposite direction.\n * @method negate\n * @param {Vec3} target Optional target to save in\n * @return {Vec3}\n */\nVec3.prototype.negate = function(target){\n    target = target || new Vec3();\n    target.x = -this.x;\n    target.y = -this.y;\n    target.z = -this.z;\n    return target;\n};\n\n/**\n * Compute two artificial tangents to the vector\n * @method tangents\n * @param {Vec3} t1 Vector object to save the first tangent in\n * @param {Vec3} t2 Vector object to save the second tangent in\n */\nvar Vec3_tangents_n = new Vec3();\nvar Vec3_tangents_randVec = new Vec3();\nVec3.prototype.tangents = function(t1,t2){\n    var norm = this.norm();\n    if(norm>0.0){\n        var n = Vec3_tangents_n;\n        var inorm = 1/norm;\n        n.set(this.x*inorm,this.y*inorm,this.z*inorm);\n        var randVec = Vec3_tangents_randVec;\n        if(Math.abs(n.x) < 0.9){\n            randVec.set(1,0,0);\n            n.cross(randVec,t1);\n        } else {\n            randVec.set(0,1,0);\n            n.cross(randVec,t1);\n        }\n        n.cross(t1,t2);\n    } else {\n        // The normal length is zero, make something up\n        t1.set(1, 0, 0);\n        t2.set(0, 1, 0);\n    }\n};\n\n/**\n * Converts to a more readable format\n * @method toString\n * @return string\n */\nVec3.prototype.toString = function(){\n    return this.x+\",\"+this.y+\",\"+this.z;\n};\n\n/**\n * Converts to an array\n * @method toArray\n * @return Array\n */\nVec3.prototype.toArray = function(){\n    return [this.x, this.y, this.z];\n};\n\n/**\n * Copies value of source to this vector.\n * @method copy\n * @param {Vec3} source\n * @return {Vec3} this\n */\nVec3.prototype.copy = function(source){\n    this.x = source.x;\n    this.y = source.y;\n    this.z = source.z;\n    return this;\n};\n\n\n/**\n * Do a linear interpolation between two vectors\n * @method lerp\n * @param {Vec3} v\n * @param {Number} t A number between 0 and 1. 0 will make this function return u, and 1 will make it return v. Numbers in between will generate a vector in between them.\n * @param {Vec3} target\n */\nVec3.prototype.lerp = function(v,t,target){\n    var x=this.x, y=this.y, z=this.z;\n    target.x = x + (v.x-x)*t;\n    target.y = y + (v.y-y)*t;\n    target.z = z + (v.z-z)*t;\n};\n\n/**\n * Check if a vector equals is almost equal to another one.\n * @method almostEquals\n * @param {Vec3} v\n * @param {Number} precision\n * @return bool\n */\nVec3.prototype.almostEquals = function(v,precision){\n    if(precision===undefined){\n        precision = 1e-6;\n    }\n    if( Math.abs(this.x-v.x)>precision ||\n        Math.abs(this.y-v.y)>precision ||\n        Math.abs(this.z-v.z)>precision){\n        return false;\n    }\n    return true;\n};\n\n/**\n * Check if a vector is almost zero\n * @method almostZero\n * @param {Number} precision\n */\nVec3.prototype.almostZero = function(precision){\n    if(precision===undefined){\n        precision = 1e-6;\n    }\n    if( Math.abs(this.x)>precision ||\n        Math.abs(this.y)>precision ||\n        Math.abs(this.z)>precision){\n        return false;\n    }\n    return true;\n};\n\nvar antip_neg = new Vec3();\n\n/**\n * Check if the vector is anti-parallel to another vector.\n * @method isAntiparallelTo\n * @param  {Vec3}  v\n * @param  {Number}  precision Set to zero for exact comparisons\n * @return {Boolean}\n */\nVec3.prototype.isAntiparallelTo = function(v,precision){\n    this.negate(antip_neg);\n    return antip_neg.almostEquals(v,precision);\n};\n\n/**\n * Clone the vector\n * @method clone\n * @return {Vec3}\n */\nVec3.prototype.clone = function(){\n    return new Vec3(this.x, this.y, this.z);\n};\n},{\"./Mat3\":27}],31:[function(_dereq_,module,exports){\nmodule.exports = Body;\n\nvar EventTarget = _dereq_('../utils/EventTarget');\nvar Shape = _dereq_('../shapes/Shape');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Mat3 = _dereq_('../math/Mat3');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar Material = _dereq_('../material/Material');\nvar AABB = _dereq_('../collision/AABB');\nvar Box = _dereq_('../shapes/Box');\n\n/**\n * Base class for all body types.\n * @class Body\n * @constructor\n * @extends EventTarget\n * @param {object} [options]\n * @param {Vec3} [options.position]\n * @param {Vec3} [options.velocity]\n * @param {Vec3} [options.angularVelocity]\n * @param {Quaternion} [options.quaternion]\n * @param {number} [options.mass]\n * @param {Material} [options.material]\n * @param {number} [options.type]\n * @param {number} [options.linearDamping=0.01]\n * @param {number} [options.angularDamping=0.01]\n * @param {boolean} [options.allowSleep=true]\n * @param {number} [options.sleepSpeedLimit=0.1]\n * @param {number} [options.sleepTimeLimit=1]\n * @param {number} [options.collisionFilterGroup=1]\n * @param {number} [options.collisionFilterMask=1]\n * @param {boolean} [options.fixedRotation=false]\n * @param {Body} [options.shape]\n * @example\n *     var body = new Body({\n *         mass: 1\n *     });\n *     var shape = new Sphere(1);\n *     body.addShape(shape);\n *     world.add(body);\n */\nfunction Body(options){\n    options = options || {};\n\n    EventTarget.apply(this);\n\n    this.id = Body.idCounter++;\n\n    /**\n     * Reference to the world the body is living in\n     * @property world\n     * @type {World}\n     */\n    this.world = null;\n\n    /**\n     * Callback function that is used BEFORE stepping the system. Use it to apply forces, for example. Inside the function, \"this\" will refer to this Body object.\n     * @property preStep\n     * @type {Function}\n     * @deprecated Use World events instead\n     */\n    this.preStep = null;\n\n    /**\n     * Callback function that is used AFTER stepping the system. Inside the function, \"this\" will refer to this Body object.\n     * @property postStep\n     * @type {Function}\n     * @deprecated Use World events instead\n     */\n    this.postStep = null;\n\n    this.vlambda = new Vec3();\n\n    /**\n     * @property {Number} collisionFilterGroup\n     */\n    this.collisionFilterGroup = typeof(options.collisionFilterGroup) === 'number' ? options.collisionFilterGroup : 1;\n\n    /**\n     * @property {Number} collisionFilterMask\n     */\n    this.collisionFilterMask = typeof(options.collisionFilterMask) === 'number' ? options.collisionFilterMask : 1;\n\n    /**\n     * Whether to produce contact forces when in contact with other bodies. Note that contacts will be generated, but they will be disabled.\n     * @property {Number} collisionResponse\n     */\n\tthis.collisionResponse = true;\n\n    /**\n     * @property position\n     * @type {Vec3}\n     */\n    this.position = new Vec3();\n\n    if(options.position){\n        this.position.copy(options.position);\n    }\n\n    /**\n     * @property {Vec3} previousPosition\n     */\n    this.previousPosition = new Vec3();\n\n    /**\n     * Initial position of the body\n     * @property initPosition\n     * @type {Vec3}\n     */\n    this.initPosition = new Vec3();\n\n    /**\n     * @property velocity\n     * @type {Vec3}\n     */\n    this.velocity = new Vec3();\n\n    if(options.velocity){\n        this.velocity.copy(options.velocity);\n    }\n\n    /**\n     * @property initVelocity\n     * @type {Vec3}\n     */\n    this.initVelocity = new Vec3();\n\n    /**\n     * Linear force on the body\n     * @property force\n     * @type {Vec3}\n     */\n    this.force = new Vec3();\n\n    var mass = typeof(options.mass) === 'number' ? options.mass : 0;\n\n    /**\n     * @property mass\n     * @type {Number}\n     * @default 0\n     */\n    this.mass = mass;\n\n    /**\n     * @property invMass\n     * @type {Number}\n     */\n    this.invMass = mass > 0 ? 1.0 / mass : 0;\n\n    /**\n     * @property material\n     * @type {Material}\n     */\n    this.material = options.material || null;\n\n    /**\n     * @property linearDamping\n     * @type {Number}\n     */\n    this.linearDamping = typeof(options.linearDamping) === 'number' ? options.linearDamping : 0.01;\n\n    /**\n     * One of: Body.DYNAMIC, Body.STATIC and Body.KINEMATIC.\n     * @property type\n     * @type {Number}\n     */\n    this.type = (mass <= 0.0 ? Body.STATIC : Body.DYNAMIC);\n    if(typeof(options.type) === typeof(Body.STATIC)){\n        this.type = options.type;\n    }\n\n    /**\n     * If true, the body will automatically fall to sleep.\n     * @property allowSleep\n     * @type {Boolean}\n     * @default true\n     */\n    this.allowSleep = typeof(options.allowSleep) !== 'undefined' ? options.allowSleep : true;\n\n    /**\n     * Current sleep state.\n     * @property sleepState\n     * @type {Number}\n     */\n    this.sleepState = 0;\n\n    /**\n     * If the speed (the norm of the velocity) is smaller than this value, the body is considered sleepy.\n     * @property sleepSpeedLimit\n     * @type {Number}\n     * @default 0.1\n     */\n    this.sleepSpeedLimit = typeof(options.sleepSpeedLimit) !== 'undefined' ? options.sleepSpeedLimit : 0.1;\n\n    /**\n     * If the body has been sleepy for this sleepTimeLimit seconds, it is considered sleeping.\n     * @property sleepTimeLimit\n     * @type {Number}\n     * @default 1\n     */\n    this.sleepTimeLimit = typeof(options.sleepTimeLimit) !== 'undefined' ? options.sleepTimeLimit : 1;\n\n    this.timeLastSleepy = 0;\n\n    this._wakeUpAfterNarrowphase = false;\n\n\n    /**\n     * Rotational force on the body, around center of mass\n     * @property {Vec3} torque\n     */\n    this.torque = new Vec3();\n\n    /**\n     * Orientation of the body\n     * @property quaternion\n     * @type {Quaternion}\n     */\n    this.quaternion = new Quaternion();\n\n    if(options.quaternion){\n        this.quaternion.copy(options.quaternion);\n    }\n\n    /**\n     * @property initQuaternion\n     * @type {Quaternion}\n     */\n    this.initQuaternion = new Quaternion();\n\n    /**\n     * @property angularVelocity\n     * @type {Vec3}\n     */\n    this.angularVelocity = new Vec3();\n\n    if(options.angularVelocity){\n        this.angularVelocity.copy(options.angularVelocity);\n    }\n\n    /**\n     * @property initAngularVelocity\n     * @type {Vec3}\n     */\n    this.initAngularVelocity = new Vec3();\n\n    this.interpolatedPosition = new Vec3();\n    this.interpolatedQuaternion = new Quaternion();\n\n    /**\n     * @property shapes\n     * @type {array}\n     */\n    this.shapes = [];\n\n    /**\n     * @property shapeOffsets\n     * @type {array}\n     */\n    this.shapeOffsets = [];\n\n    /**\n     * @property shapeOrientations\n     * @type {array}\n     */\n    this.shapeOrientations = [];\n\n    /**\n     * @property inertia\n     * @type {Vec3}\n     */\n    this.inertia = new Vec3();\n\n    /**\n     * @property {Vec3} invInertia\n     */\n    this.invInertia = new Vec3();\n\n    /**\n     * @property {Mat3} invInertiaWorld\n     */\n    this.invInertiaWorld = new Mat3();\n\n    this.invMassSolve = 0;\n\n    /**\n     * @property {Vec3} invInertiaSolve\n     */\n    this.invInertiaSolve = new Vec3();\n\n    /**\n     * @property {Mat3} invInertiaWorldSolve\n     */\n    this.invInertiaWorldSolve = new Mat3();\n\n    /**\n     * Set to true if you don't want the body to rotate. Make sure to run .updateMassProperties() after changing this.\n     * @property {Boolean} fixedRotation\n     * @default false\n     */\n    this.fixedRotation = typeof(options.fixedRotation) !== \"undefined\" ? options.fixedRotation : false;\n\n    /**\n     * @property {Number} angularDamping\n     */\n    this.angularDamping = typeof(options.angularDamping) !== 'undefined' ? options.angularDamping : 0.01;\n\n    /**\n     * @property aabb\n     * @type {AABB}\n     */\n    this.aabb = new AABB();\n\n    /**\n     * Indicates if the AABB needs to be updated before use.\n     * @property aabbNeedsUpdate\n     * @type {Boolean}\n     */\n    this.aabbNeedsUpdate = true;\n\n    this.wlambda = new Vec3();\n\n    if(options.shape){\n        this.addShape(options.shape);\n    }\n\n    this.updateMassProperties();\n}\nBody.prototype = new EventTarget();\nBody.prototype.constructor = Body;\n\n/**\n * A dynamic body is fully simulated. Can be moved manually by the user, but normally they move according to forces. A dynamic body can collide with all body types. A dynamic body always has finite, non-zero mass.\n * @static\n * @property DYNAMIC\n * @type {Number}\n */\nBody.DYNAMIC = 1;\n\n/**\n * A static body does not move during simulation and behaves as if it has infinite mass. Static bodies can be moved manually by setting the position of the body. The velocity of a static body is always zero. Static bodies do not collide with other static or kinematic bodies.\n * @static\n * @property STATIC\n * @type {Number}\n */\nBody.STATIC = 2;\n\n/**\n * A kinematic body moves under simulation according to its velocity. They do not respond to forces. They can be moved manually, but normally a kinematic body is moved by setting its velocity. A kinematic body behaves as if it has infinite mass. Kinematic bodies do not collide with other static or kinematic bodies.\n * @static\n * @property KINEMATIC\n * @type {Number}\n */\nBody.KINEMATIC = 4;\n\n\n\n/**\n * @static\n * @property AWAKE\n * @type {number}\n */\nBody.AWAKE = 0;\n\n/**\n * @static\n * @property SLEEPY\n * @type {number}\n */\nBody.SLEEPY = 1;\n\n/**\n * @static\n * @property SLEEPING\n * @type {number}\n */\nBody.SLEEPING = 2;\n\nBody.idCounter = 0;\n\n/**\n * Wake the body up.\n * @method wakeUp\n */\nBody.prototype.wakeUp = function(){\n    var s = this.sleepState;\n    this.sleepState = 0;\n    if(s === Body.SLEEPING){\n        this.dispatchEvent({type:\"wakeup\"});\n    }\n};\n\n/**\n * Force body sleep\n * @method sleep\n */\nBody.prototype.sleep = function(){\n    this.sleepState = Body.SLEEPING;\n    this.velocity.set(0,0,0);\n    this.angularVelocity.set(0,0,0);\n};\n\nBody.sleepyEvent = {\n    type: \"sleepy\"\n};\n\nBody.sleepEvent = {\n    type: \"sleep\"\n};\n\n/**\n * Called every timestep to update internal sleep timer and change sleep state if needed.\n * @method sleepTick\n * @param {Number} time The world time in seconds\n */\nBody.prototype.sleepTick = function(time){\n    if(this.allowSleep){\n        var sleepState = this.sleepState;\n        var speedSquared = this.velocity.norm2() + this.angularVelocity.norm2();\n        var speedLimitSquared = Math.pow(this.sleepSpeedLimit,2);\n        if(sleepState===Body.AWAKE && speedSquared < speedLimitSquared){\n            this.sleepState = Body.SLEEPY; // Sleepy\n            this.timeLastSleepy = time;\n            this.dispatchEvent(Body.sleepyEvent);\n        } else if(sleepState===Body.SLEEPY && speedSquared > speedLimitSquared){\n            this.wakeUp(); // Wake up\n        } else if(sleepState===Body.SLEEPY && (time - this.timeLastSleepy ) > this.sleepTimeLimit){\n            this.sleep(); // Sleeping\n            this.dispatchEvent(Body.sleepEvent);\n        }\n    }\n};\n\n/**\n * If the body is sleeping, it should be immovable / have infinite mass during solve. We solve it by having a separate \"solve mass\".\n * @method updateSolveMassProperties\n */\nBody.prototype.updateSolveMassProperties = function(){\n    if(this.sleepState === Body.SLEEPING || this.type === Body.KINEMATIC){\n        this.invMassSolve = 0;\n        this.invInertiaSolve.setZero();\n        this.invInertiaWorldSolve.setZero();\n    } else {\n        this.invMassSolve = this.invMass;\n        this.invInertiaSolve.copy(this.invInertia);\n        this.invInertiaWorldSolve.copy(this.invInertiaWorld);\n    }\n};\n\n/**\n * Convert a world point to local body frame.\n * @method pointToLocalFrame\n * @param  {Vec3} worldPoint\n * @param  {Vec3} result\n * @return {Vec3}\n */\nBody.prototype.pointToLocalFrame = function(worldPoint,result){\n    var result = result || new Vec3();\n    worldPoint.vsub(this.position,result);\n    this.quaternion.conjugate().vmult(result,result);\n    return result;\n};\n\n/**\n * Convert a world vector to local body frame.\n * @method vectorToLocalFrame\n * @param  {Vec3} worldPoint\n * @param  {Vec3} result\n * @return {Vec3}\n */\nBody.prototype.vectorToLocalFrame = function(worldVector, result){\n    var result = result || new Vec3();\n    this.quaternion.conjugate().vmult(worldVector,result);\n    return result;\n};\n\n/**\n * Convert a local body point to world frame.\n * @method pointToWorldFrame\n * @param  {Vec3} localPoint\n * @param  {Vec3} result\n * @return {Vec3}\n */\nBody.prototype.pointToWorldFrame = function(localPoint,result){\n    var result = result || new Vec3();\n    this.quaternion.vmult(localPoint,result);\n    result.vadd(this.position,result);\n    return result;\n};\n\n/**\n * Convert a local body point to world frame.\n * @method vectorToWorldFrame\n * @param  {Vec3} localVector\n * @param  {Vec3} result\n * @return {Vec3}\n */\nBody.prototype.vectorToWorldFrame = function(localVector, result){\n    var result = result || new Vec3();\n    this.quaternion.vmult(localVector, result);\n    return result;\n};\n\nvar tmpVec = new Vec3();\nvar tmpQuat = new Quaternion();\n\n/**\n * Add a shape to the body with a local offset and orientation.\n * @method addShape\n * @param {Shape} shape\n * @param {Vec3} offset\n * @param {Quaternion} quaternion\n * @return {Body} The body object, for chainability.\n */\nBody.prototype.addShape = function(shape, _offset, _orientation){\n    var offset = new Vec3();\n    var orientation = new Quaternion();\n\n    if(_offset){\n        offset.copy(_offset);\n    }\n    if(_orientation){\n        orientation.copy(_orientation);\n    }\n\n    this.shapes.push(shape);\n    this.shapeOffsets.push(offset);\n    this.shapeOrientations.push(orientation);\n    this.updateMassProperties();\n    this.updateBoundingRadius();\n\n    this.aabbNeedsUpdate = true;\n\n    return this;\n};\n\n/**\n * Update the bounding radius of the body. Should be done if any of the shapes are changed.\n * @method updateBoundingRadius\n */\nBody.prototype.updateBoundingRadius = function(){\n    var shapes = this.shapes,\n        shapeOffsets = this.shapeOffsets,\n        N = shapes.length,\n        radius = 0;\n\n    for(var i=0; i!==N; i++){\n        var shape = shapes[i];\n        shape.updateBoundingSphereRadius();\n        var offset = shapeOffsets[i].norm(),\n            r = shape.boundingSphereRadius;\n        if(offset + r > radius){\n            radius = offset + r;\n        }\n    }\n\n    this.boundingRadius = radius;\n};\n\nvar computeAABB_shapeAABB = new AABB();\n\n/**\n * Updates the .aabb\n * @method computeAABB\n * @todo rename to updateAABB()\n */\nBody.prototype.computeAABB = function(){\n    var shapes = this.shapes,\n        shapeOffsets = this.shapeOffsets,\n        shapeOrientations = this.shapeOrientations,\n        N = shapes.length,\n        offset = tmpVec,\n        orientation = tmpQuat,\n        bodyQuat = this.quaternion,\n        aabb = this.aabb,\n        shapeAABB = computeAABB_shapeAABB;\n\n    for(var i=0; i!==N; i++){\n        var shape = shapes[i];\n\n        // Get shape world quaternion\n        shapeOrientations[i].mult(bodyQuat, orientation);\n\n        // Get shape world position\n        orientation.vmult(shapeOffsets[i], offset);\n        offset.vadd(this.position, offset);\n\n        // vec2.rotate(offset, shapeOffsets[i], bodyAngle);\n        // vec2.add(offset, offset, this.position);\n\n        // Get shape AABB\n        shape.calculateWorldAABB(offset, orientation, shapeAABB.lowerBound, shapeAABB.upperBound);\n\n        if(i === 0){\n            aabb.copy(shapeAABB);\n        } else {\n            aabb.extend(shapeAABB);\n        }\n    }\n\n    this.aabbNeedsUpdate = false;\n};\n\nvar uiw_m1 = new Mat3(),\n    uiw_m2 = new Mat3(),\n    uiw_m3 = new Mat3();\n\n/**\n * Update .inertiaWorld and .invInertiaWorld\n * @method updateInertiaWorld\n */\nBody.prototype.updateInertiaWorld = function(force){\n    var I = this.invInertia;\n    if (I.x === I.y && I.y === I.z && !force) {\n        // If inertia M = s*I, where I is identity and s a scalar, then\n        //    R*M*R' = R*(s*I)*R' = s*R*I*R' = s*R*R' = s*I = M\n        // where R is the rotation matrix.\n        // In other words, we don't have to transform the inertia if all\n        // inertia diagonal entries are equal.\n    } else {\n        var m1 = uiw_m1,\n            m2 = uiw_m2,\n            m3 = uiw_m3;\n        m1.setRotationFromQuaternion(this.quaternion);\n        m1.transpose(m2);\n        m1.scale(I,m1);\n        m1.mmult(m2,this.invInertiaWorld);\n        //m3.getTrace(this.invInertiaWorld);\n    }\n\n    /*\n    this.quaternion.vmult(this.inertia,this.inertiaWorld);\n    this.quaternion.vmult(this.invInertia,this.invInertiaWorld);\n    */\n};\n\n/**\n * Apply force to a world point. This could for example be a point on the Body surface. Applying force this way will add to Body.force and Body.torque.\n * @method applyForce\n * @param  {Vec3} force The amount of force to add.\n * @param  {Vec3} worldPoint A world point to apply the force on.\n */\nvar Body_applyForce_r = new Vec3();\nvar Body_applyForce_rotForce = new Vec3();\nBody.prototype.applyForce = function(force,worldPoint){\n    if(this.type !== Body.DYNAMIC){\n        return;\n    }\n\n    // Compute point position relative to the body center\n    var r = Body_applyForce_r;\n    worldPoint.vsub(this.position,r);\n\n    // Compute produced rotational force\n    var rotForce = Body_applyForce_rotForce;\n    r.cross(force,rotForce);\n\n    // Add linear force\n    this.force.vadd(force,this.force);\n\n    // Add rotational force\n    this.torque.vadd(rotForce,this.torque);\n};\n\n/**\n * Apply force to a local point in the body.\n * @method applyLocalForce\n * @param  {Vec3} force The force vector to apply, defined locally in the body frame.\n * @param  {Vec3} localPoint A local point in the body to apply the force on.\n */\nvar Body_applyLocalForce_worldForce = new Vec3();\nvar Body_applyLocalForce_worldPoint = new Vec3();\nBody.prototype.applyLocalForce = function(localForce, localPoint){\n    if(this.type !== Body.DYNAMIC){\n        return;\n    }\n\n    var worldForce = Body_applyLocalForce_worldForce;\n    var worldPoint = Body_applyLocalForce_worldPoint;\n\n    // Transform the force vector to world space\n    this.vectorToWorldFrame(localForce, worldForce);\n    this.pointToWorldFrame(localPoint, worldPoint);\n\n    this.applyForce(worldForce, worldPoint);\n};\n\n/**\n * Apply impulse to a world point. This could for example be a point on the Body surface. An impulse is a force added to a body during a short period of time (impulse = force * time). Impulses will be added to Body.velocity and Body.angularVelocity.\n * @method applyImpulse\n * @param  {Vec3} impulse The amount of impulse to add.\n * @param  {Vec3} worldPoint A world point to apply the force on.\n */\nvar Body_applyImpulse_r = new Vec3();\nvar Body_applyImpulse_velo = new Vec3();\nvar Body_applyImpulse_rotVelo = new Vec3();\nBody.prototype.applyImpulse = function(impulse, worldPoint){\n    if(this.type !== Body.DYNAMIC){\n        return;\n    }\n\n    // Compute point position relative to the body center\n    var r = Body_applyImpulse_r;\n    worldPoint.vsub(this.position,r);\n\n    // Compute produced central impulse velocity\n    var velo = Body_applyImpulse_velo;\n    velo.copy(impulse);\n    velo.mult(this.invMass,velo);\n\n    // Add linear impulse\n    this.velocity.vadd(velo, this.velocity);\n\n    // Compute produced rotational impulse velocity\n    var rotVelo = Body_applyImpulse_rotVelo;\n    r.cross(impulse,rotVelo);\n\n    /*\n    rotVelo.x *= this.invInertia.x;\n    rotVelo.y *= this.invInertia.y;\n    rotVelo.z *= this.invInertia.z;\n    */\n    this.invInertiaWorld.vmult(rotVelo,rotVelo);\n\n    // Add rotational Impulse\n    this.angularVelocity.vadd(rotVelo, this.angularVelocity);\n};\n\n/**\n * Apply locally-defined impulse to a local point in the body.\n * @method applyLocalImpulse\n * @param  {Vec3} force The force vector to apply, defined locally in the body frame.\n * @param  {Vec3} localPoint A local point in the body to apply the force on.\n */\nvar Body_applyLocalImpulse_worldImpulse = new Vec3();\nvar Body_applyLocalImpulse_worldPoint = new Vec3();\nBody.prototype.applyLocalImpulse = function(localImpulse, localPoint){\n    if(this.type !== Body.DYNAMIC){\n        return;\n    }\n\n    var worldImpulse = Body_applyLocalImpulse_worldImpulse;\n    var worldPoint = Body_applyLocalImpulse_worldPoint;\n\n    // Transform the force vector to world space\n    this.vectorToWorldFrame(localImpulse, worldImpulse);\n    this.pointToWorldFrame(localPoint, worldPoint);\n\n    this.applyImpulse(worldImpulse, worldPoint);\n};\n\nvar Body_updateMassProperties_halfExtents = new Vec3();\n\n/**\n * Should be called whenever you change the body shape or mass.\n * @method updateMassProperties\n */\nBody.prototype.updateMassProperties = function(){\n    var halfExtents = Body_updateMassProperties_halfExtents;\n\n    this.invMass = this.mass > 0 ? 1.0 / this.mass : 0;\n    var I = this.inertia;\n    var fixed = this.fixedRotation;\n\n    // Approximate with AABB box\n    this.computeAABB();\n    halfExtents.set(\n        (this.aabb.upperBound.x-this.aabb.lowerBound.x) / 2,\n        (this.aabb.upperBound.y-this.aabb.lowerBound.y) / 2,\n        (this.aabb.upperBound.z-this.aabb.lowerBound.z) / 2\n    );\n    Box.calculateInertia(halfExtents, this.mass, I);\n\n    this.invInertia.set(\n        I.x > 0 && !fixed ? 1.0 / I.x : 0,\n        I.y > 0 && !fixed ? 1.0 / I.y : 0,\n        I.z > 0 && !fixed ? 1.0 / I.z : 0\n    );\n    this.updateInertiaWorld(true);\n};\n\n/**\n * Get world velocity of a point in the body.\n * @method getVelocityAtWorldPoint\n * @param  {Vec3} worldPoint\n * @param  {Vec3} result\n * @return {Vec3} The result vector.\n */\nBody.prototype.getVelocityAtWorldPoint = function(worldPoint, result){\n    var r = new Vec3();\n    worldPoint.vsub(this.position, r);\n    this.angularVelocity.cross(r, result);\n    this.velocity.vadd(result, result);\n    return result;\n};\n\n},{\"../collision/AABB\":3,\"../material/Material\":25,\"../math/Mat3\":27,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../shapes/Box\":37,\"../shapes/Shape\":43,\"../utils/EventTarget\":49}],32:[function(_dereq_,module,exports){\nvar Body = _dereq_('./Body');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar RaycastResult = _dereq_('../collision/RaycastResult');\nvar Ray = _dereq_('../collision/Ray');\nvar WheelInfo = _dereq_('../objects/WheelInfo');\n\nmodule.exports = RaycastVehicle;\n\n/**\n * Vehicle helper class that casts rays from the wheel positions towards the ground and applies forces.\n * @class RaycastVehicle\n * @constructor\n * @param {object} [options]\n * @param {Body} [options.chassisBody] The car chassis body.\n * @param {integer} [options.indexRightAxis] Axis to use for right. x=0, y=1, z=2\n * @param {integer} [options.indexLeftAxis]\n * @param {integer} [options.indexUpAxis]\n */\nfunction RaycastVehicle(options){\n\n    /**\n     * @property {Body} chassisBody\n     */\n    this.chassisBody = options.chassisBody;\n\n    /**\n     * An array of WheelInfo objects.\n     * @property {array} wheelInfos\n     */\n    this.wheelInfos = [];\n\n    /**\n     * Will be set to true if the car is sliding.\n     * @property {boolean} sliding\n     */\n    this.sliding = false;\n\n    /**\n     * @property {World} world\n     */\n    this.world = null;\n\n    /**\n     * Index of the right axis, 0=x, 1=y, 2=z\n     * @property {integer} indexRightAxis\n     * @default 1\n     */\n    this.indexRightAxis = typeof(options.indexRightAxis) !== 'undefined' ? options.indexRightAxis : 1;\n\n    /**\n     * Index of the forward axis, 0=x, 1=y, 2=z\n     * @property {integer} indexForwardAxis\n     * @default 0\n     */\n    this.indexForwardAxis = typeof(options.indexForwardAxis) !== 'undefined' ? options.indexForwardAxis : 0;\n\n    /**\n     * Index of the up axis, 0=x, 1=y, 2=z\n     * @property {integer} indexUpAxis\n     * @default 2\n     */\n    this.indexUpAxis = typeof(options.indexUpAxis) !== 'undefined' ? options.indexUpAxis : 2;\n}\n\nvar tmpVec1 = new Vec3();\nvar tmpVec2 = new Vec3();\nvar tmpVec3 = new Vec3();\nvar tmpVec4 = new Vec3();\nvar tmpVec5 = new Vec3();\nvar tmpVec6 = new Vec3();\nvar tmpRay = new Ray();\n\n/**\n * Add a wheel. For information about the options, see WheelInfo.\n * @method addWheel\n * @param {object} [options]\n */\nRaycastVehicle.prototype.addWheel = function(options){\n    options = options || {};\n\n    var info = new WheelInfo(options);\n    var index = this.wheelInfos.length;\n    this.wheelInfos.push(info);\n\n    return index;\n};\n\n/**\n * Set the steering value of a wheel.\n * @method setSteeringValue\n * @param {number} value\n * @param {integer} wheelIndex\n */\nRaycastVehicle.prototype.setSteeringValue = function(value, wheelIndex){\n    var wheel = this.wheelInfos[wheelIndex];\n    wheel.steering = value;\n};\n\nvar torque = new Vec3();\n\n/**\n * Set the wheel force to apply on one of the wheels each time step\n * @method applyEngineForce\n * @param  {number} value\n * @param  {integer} wheelIndex\n */\nRaycastVehicle.prototype.applyEngineForce = function(value, wheelIndex){\n    this.wheelInfos[wheelIndex].engineForce = value;\n};\n\n/**\n * Set the braking force of a wheel\n * @method setBrake\n * @param {number} brake\n * @param {integer} wheelIndex\n */\nRaycastVehicle.prototype.setBrake = function(brake, wheelIndex){\n    this.wheelInfos[wheelIndex].brake = brake;\n};\n\n/**\n * Add the vehicle including its constraints to the world.\n * @method addToWorld\n * @param {World} world\n */\nRaycastVehicle.prototype.addToWorld = function(world){\n    var constraints = this.constraints;\n    world.add(this.chassisBody);\n    var that = this;\n    this.preStepCallback = function(){\n        that.updateVehicle(world.dt);\n    };\n    world.addEventListener('preStep', this.preStepCallback);\n    this.world = world;\n};\n\n/**\n * Get one of the wheel axles, world-oriented.\n * @private\n * @method getVehicleAxisWorld\n * @param  {integer} axisIndex\n * @param  {Vec3} result\n */\nRaycastVehicle.prototype.getVehicleAxisWorld = function(axisIndex, result){\n    result.set(\n        axisIndex === 0 ? 1 : 0,\n        axisIndex === 1 ? 1 : 0,\n        axisIndex === 2 ? 1 : 0\n    );\n    this.chassisBody.vectorToWorldFrame(result, result);\n};\n\nRaycastVehicle.prototype.updateVehicle = function(timeStep){\n    var wheelInfos = this.wheelInfos;\n    var numWheels = wheelInfos.length;\n    var chassisBody = this.chassisBody;\n\n    for (var i = 0; i < numWheels; i++) {\n        this.updateWheelTransform(i);\n    }\n\n    this.currentVehicleSpeedKmHour = 3.6 * chassisBody.velocity.norm();\n\n    var forwardWorld = new Vec3();\n    this.getVehicleAxisWorld(this.indexForwardAxis, forwardWorld);\n\n    if (forwardWorld.dot(chassisBody.velocity) < 0){\n        this.currentVehicleSpeedKmHour *= -1;\n    }\n\n    // simulate suspension\n    for (var i = 0; i < numWheels; i++) {\n        this.castRay(wheelInfos[i]);\n    }\n\n    this.updateSuspension(timeStep);\n\n    var impulse = new Vec3();\n    var relpos = new Vec3();\n    for (var i = 0; i < numWheels; i++) {\n        //apply suspension force\n        var wheel = wheelInfos[i];\n        var suspensionForce = wheel.suspensionForce;\n        if (suspensionForce > wheel.maxSuspensionForce) {\n            suspensionForce = wheel.maxSuspensionForce;\n        }\n        wheel.raycastResult.hitNormalWorld.scale(suspensionForce * timeStep, impulse);\n\n        wheel.raycastResult.hitPointWorld.vsub(chassisBody.position, relpos);\n        chassisBody.applyImpulse(impulse, wheel.raycastResult.hitPointWorld/*relpos*/);\n    }\n\n    this.updateFriction(timeStep);\n\n    var hitNormalWorldScaledWithProj = new Vec3();\n    var fwd  = new Vec3();\n    var vel = new Vec3();\n    for (i = 0; i < numWheels; i++) {\n        var wheel = wheelInfos[i];\n        //var relpos = new Vec3();\n        //wheel.chassisConnectionPointWorld.vsub(chassisBody.position, relpos);\n        chassisBody.getVelocityAtWorldPoint(wheel.chassisConnectionPointWorld, vel);\n\n        // Hack to get the rotation in the correct direction\n        var m = 1;\n        switch(this.indexUpAxis){\n        case 1:\n            m = -1;\n            break;\n        }\n\n        if (wheel.isInContact) {\n\n            this.getVehicleAxisWorld(this.indexForwardAxis, fwd);\n            var proj = fwd.dot(wheel.raycastResult.hitNormalWorld);\n            wheel.raycastResult.hitNormalWorld.scale(proj, hitNormalWorldScaledWithProj);\n\n            fwd.vsub(hitNormalWorldScaledWithProj, fwd);\n\n            var proj2 = fwd.dot(vel);\n            wheel.deltaRotation = m * proj2 * timeStep / wheel.radius;\n        }\n\n        if((wheel.sliding || !wheel.isInContact) && wheel.engineForce !== 0 && wheel.useCustomSlidingRotationalSpeed){\n            // Apply custom rotation when accelerating and sliding\n            wheel.deltaRotation = (wheel.engineForce > 0 ? 1 : -1) * wheel.customSlidingRotationalSpeed * timeStep;\n        }\n\n        // Lock wheels\n        if(Math.abs(wheel.brake) > Math.abs(wheel.engineForce)){\n            wheel.deltaRotation = 0;\n        }\n\n        wheel.rotation += wheel.deltaRotation; // Use the old value\n        wheel.deltaRotation *= 0.99; // damping of rotation when not in contact\n    }\n};\n\nRaycastVehicle.prototype.updateSuspension = function(deltaTime) {\n    var chassisBody = this.chassisBody;\n    var chassisMass = chassisBody.mass;\n    var wheelInfos = this.wheelInfos;\n    var numWheels = wheelInfos.length;\n\n    for (var w_it = 0; w_it < numWheels; w_it++){\n        var wheel = wheelInfos[w_it];\n\n        if (wheel.isInContact){\n            var force;\n\n            // Spring\n            var susp_length = wheel.suspensionRestLength;\n            var current_length = wheel.suspensionLength;\n            var length_diff = (susp_length - current_length);\n\n            force = wheel.suspensionStiffness * length_diff * wheel.clippedInvContactDotSuspension;\n\n            // Damper\n            var projected_rel_vel = wheel.suspensionRelativeVelocity;\n            var susp_damping;\n            if (projected_rel_vel < 0) {\n                susp_damping = wheel.dampingCompression;\n            } else {\n                susp_damping = wheel.dampingRelaxation;\n            }\n            force -= susp_damping * projected_rel_vel;\n\n            wheel.suspensionForce = force * chassisMass;\n            if (wheel.suspensionForce < 0) {\n                wheel.suspensionForce = 0;\n            }\n        } else {\n            wheel.suspensionForce = 0;\n        }\n    }\n};\n\n/**\n * Remove the vehicle including its constraints from the world.\n * @method removeFromWorld\n * @param {World} world\n */\nRaycastVehicle.prototype.removeFromWorld = function(world){\n    var constraints = this.constraints;\n    world.remove(this.chassisBody);\n    world.removeEventListener('preStep', this.preStepCallback);\n    this.world = null;\n};\n\nvar castRay_rayvector = new Vec3();\nvar castRay_target = new Vec3();\nRaycastVehicle.prototype.castRay = function(wheel) {\n    var rayvector = castRay_rayvector;\n    var target = castRay_target;\n\n    this.updateWheelTransformWorld(wheel);\n    var chassisBody = this.chassisBody;\n\n    var depth = -1;\n\n    var raylen = wheel.suspensionRestLength + wheel.radius;\n\n    wheel.directionWorld.scale(raylen, rayvector);\n    var source = wheel.chassisConnectionPointWorld;\n    source.vadd(rayvector, target);\n    var raycastResult = wheel.raycastResult;\n\n    var param = 0;\n\n    raycastResult.reset();\n    // Turn off ray collision with the chassis temporarily\n    var oldState = chassisBody.collisionResponse;\n    chassisBody.collisionResponse = false;\n\n    // Cast ray against world\n    this.world.rayTest(source, target, raycastResult);\n    chassisBody.collisionResponse = oldState;\n\n    var object = raycastResult.body;\n\n    wheel.raycastResult.groundObject = 0;\n\n    if (object) {\n        depth = raycastResult.distance;\n        wheel.raycastResult.hitNormalWorld  = raycastResult.hitNormalWorld;\n        wheel.isInContact = true;\n\n        var hitDistance = raycastResult.distance;\n        wheel.suspensionLength = hitDistance - wheel.radius;\n\n        // clamp on max suspension travel\n        var minSuspensionLength = wheel.suspensionRestLength - wheel.maxSuspensionTravel;\n        var maxSuspensionLength = wheel.suspensionRestLength + wheel.maxSuspensionTravel;\n        if (wheel.suspensionLength < minSuspensionLength) {\n            wheel.suspensionLength = minSuspensionLength;\n        }\n        if (wheel.suspensionLength > maxSuspensionLength) {\n            wheel.suspensionLength = maxSuspensionLength;\n            wheel.raycastResult.reset();\n        }\n\n        var denominator = wheel.raycastResult.hitNormalWorld.dot(wheel.directionWorld);\n\n        var chassis_velocity_at_contactPoint = new Vec3();\n        chassisBody.getVelocityAtWorldPoint(wheel.raycastResult.hitPointWorld, chassis_velocity_at_contactPoint);\n\n        var projVel = wheel.raycastResult.hitNormalWorld.dot( chassis_velocity_at_contactPoint );\n\n        if (denominator >= -0.1) {\n            wheel.suspensionRelativeVelocity = 0;\n            wheel.clippedInvContactDotSuspension = 1 / 0.1;\n        } else {\n            var inv = -1 / denominator;\n            wheel.suspensionRelativeVelocity = projVel * inv;\n            wheel.clippedInvContactDotSuspension = inv;\n        }\n\n    } else {\n\n        //put wheel info as in rest position\n        wheel.suspensionLength = wheel.suspensionRestLength + 0 * wheel.maxSuspensionTravel;\n        wheel.suspensionRelativeVelocity = 0.0;\n        wheel.directionWorld.scale(-1, wheel.raycastResult.hitNormalWorld);\n        wheel.clippedInvContactDotSuspension = 1.0;\n    }\n\n    return depth;\n};\n\nRaycastVehicle.prototype.updateWheelTransformWorld = function(wheel){\n    wheel.isInContact = false;\n    var chassisBody = this.chassisBody;\n    chassisBody.pointToWorldFrame(wheel.chassisConnectionPointLocal, wheel.chassisConnectionPointWorld);\n    chassisBody.vectorToWorldFrame(wheel.directionLocal, wheel.directionWorld);\n    chassisBody.vectorToWorldFrame(wheel.axleLocal, wheel.axleWorld);\n};\n\n\n/**\n * Update one of the wheel transform.\n * Note when rendering wheels: during each step, wheel transforms are updated BEFORE the chassis; ie. their position becomes invalid after the step. Thus when you render wheels, you must update wheel transforms before rendering them. See raycastVehicle demo for an example.\n * @method updateWheelTransform\n * @param {integer} wheelIndex The wheel index to update.\n */\nRaycastVehicle.prototype.updateWheelTransform = function(wheelIndex){\n    var up = tmpVec4;\n    var right = tmpVec5;\n    var fwd = tmpVec6;\n\n    var wheel = this.wheelInfos[wheelIndex];\n    this.updateWheelTransformWorld(wheel);\n\n    wheel.directionLocal.scale(-1, up);\n    right.copy(wheel.axleLocal);\n    up.cross(right, fwd);\n    fwd.normalize();\n    right.normalize();\n\n    // Rotate around steering over the wheelAxle\n    var steering = wheel.steering;\n    var steeringOrn = new Quaternion();\n    steeringOrn.setFromAxisAngle(up, steering);\n\n    var rotatingOrn = new Quaternion();\n    rotatingOrn.setFromAxisAngle(right, wheel.rotation);\n\n    // World rotation of the wheel\n    var q = wheel.worldTransform.quaternion;\n    this.chassisBody.quaternion.mult(steeringOrn, q);\n    q.mult(rotatingOrn, q);\n\n    q.normalize();\n\n    // world position of the wheel\n    var p = wheel.worldTransform.position;\n    p.copy(wheel.directionWorld);\n    p.scale(wheel.suspensionLength, p);\n    p.vadd(wheel.chassisConnectionPointWorld, p);\n};\n\nvar directions = [\n    new Vec3(1, 0, 0),\n    new Vec3(0, 1, 0),\n    new Vec3(0, 0, 1)\n];\n\n/**\n * Get the world transform of one of the wheels\n * @method getWheelTransformWorld\n * @param  {integer} wheelIndex\n * @return {Transform}\n */\nRaycastVehicle.prototype.getWheelTransformWorld = function(wheelIndex) {\n    return this.wheelInfos[wheelIndex].worldTransform;\n};\n\n\nvar updateFriction_surfNormalWS_scaled_proj = new Vec3();\nvar updateFriction_axle = [];\nvar updateFriction_forwardWS = [];\nvar sideFrictionStiffness2 = 1;\nRaycastVehicle.prototype.updateFriction = function(timeStep) {\n    var surfNormalWS_scaled_proj = updateFriction_surfNormalWS_scaled_proj;\n\n    //calculate the impulse, so that the wheels don't move sidewards\n    var wheelInfos = this.wheelInfos;\n    var numWheels = wheelInfos.length;\n    var chassisBody = this.chassisBody;\n    var forwardWS = updateFriction_forwardWS;\n    var axle = updateFriction_axle;\n\n    var numWheelsOnGround = 0;\n\n    for (var i = 0; i < numWheels; i++) {\n        var wheel = wheelInfos[i];\n\n        var groundObject = wheel.raycastResult.body;\n        if (groundObject){\n            numWheelsOnGround++;\n        }\n\n        wheel.sideImpulse = 0;\n        wheel.forwardImpulse = 0;\n        if(!forwardWS[i]){\n            forwardWS[i] = new Vec3();\n        }\n        if(!axle[i]){\n            axle[i] = new Vec3();\n        }\n    }\n\n    for (var i = 0; i < numWheels; i++){\n        var wheel = wheelInfos[i];\n\n        var groundObject = wheel.raycastResult.body;\n\n        if (groundObject) {\n            var axlei = axle[i];\n            var wheelTrans = this.getWheelTransformWorld(i);\n\n            // Get world axle\n            wheelTrans.vectorToWorldFrame(directions[this.indexRightAxis], axlei);\n\n            var surfNormalWS = wheel.raycastResult.hitNormalWorld;\n            var proj = axlei.dot(surfNormalWS);\n            surfNormalWS.scale(proj, surfNormalWS_scaled_proj);\n            axlei.vsub(surfNormalWS_scaled_proj, axlei);\n            axlei.normalize();\n\n            surfNormalWS.cross(axlei, forwardWS[i]);\n            forwardWS[i].normalize();\n\n            wheel.sideImpulse = resolveSingleBilateral(\n                chassisBody,\n                wheel.raycastResult.hitPointWorld,\n                groundObject,\n                wheel.raycastResult.hitPointWorld,\n                axlei\n            );\n\n            wheel.sideImpulse *= sideFrictionStiffness2;\n        }\n    }\n\n    var sideFactor = 1;\n    var fwdFactor = 0.5;\n\n    this.sliding = false;\n    for (var i = 0; i < numWheels; i++) {\n        var wheel = wheelInfos[i];\n        var groundObject = wheel.raycastResult.body;\n\n        var rollingFriction = 0;\n\n        wheel.slipInfo = 1;\n        if (groundObject) {\n            var defaultRollingFrictionImpulse = 0;\n            var maxImpulse = wheel.brake ? wheel.brake : defaultRollingFrictionImpulse;\n\n            // btWheelContactPoint contactPt(chassisBody,groundObject,wheelInfraycastInfo.hitPointWorld,forwardWS[wheel],maxImpulse);\n            // rollingFriction = calcRollingFriction(contactPt);\n            rollingFriction = calcRollingFriction(chassisBody, groundObject, wheel.raycastResult.hitPointWorld, forwardWS[i], maxImpulse);\n\n            rollingFriction += wheel.engineForce * timeStep;\n\n            // rollingFriction = 0;\n            var factor = maxImpulse / rollingFriction;\n            wheel.slipInfo *= factor;\n        }\n\n        //switch between active rolling (throttle), braking and non-active rolling friction (nthrottle/break)\n\n        wheel.forwardImpulse = 0;\n        wheel.skidInfo = 1;\n\n        if (groundObject) {\n            wheel.skidInfo = 1;\n\n            var maximp = wheel.suspensionForce * timeStep * wheel.frictionSlip;\n            var maximpSide = maximp;\n\n            var maximpSquared = maximp * maximpSide;\n\n            wheel.forwardImpulse = rollingFriction;//wheelInfo.engineForce* timeStep;\n\n            var x = wheel.forwardImpulse * fwdFactor;\n            var y = wheel.sideImpulse * sideFactor;\n\n            var impulseSquared = x * x + y * y;\n\n            wheel.sliding = false;\n            if (impulseSquared > maximpSquared) {\n                this.sliding = true;\n                wheel.sliding = true;\n\n                var factor = maximp / Math.sqrt(impulseSquared);\n\n                wheel.skidInfo *= factor;\n            }\n        }\n    }\n\n    if (this.sliding) {\n        for (var i = 0; i < numWheels; i++) {\n            var wheel = wheelInfos[i];\n            if (wheel.sideImpulse !== 0) {\n                if (wheel.skidInfo < 1){\n                    wheel.forwardImpulse *= wheel.skidInfo;\n                    wheel.sideImpulse *= wheel.skidInfo;\n                }\n            }\n        }\n    }\n\n    // apply the impulses\n    for (var i = 0; i < numWheels; i++) {\n        var wheel = wheelInfos[i];\n\n        var rel_pos = new Vec3();\n        //wheel.raycastResult.hitPointWorld.vsub(chassisBody.position, rel_pos);\n        // cannons applyimpulse is using world coord for the position\n        rel_pos.copy(wheel.raycastResult.hitPointWorld);\n\n        if (wheel.forwardImpulse !== 0) {\n            var impulse = new Vec3();\n            forwardWS[i].scale(wheel.forwardImpulse, impulse);\n            chassisBody.applyImpulse(impulse, rel_pos);\n        }\n\n        if (wheel.sideImpulse !== 0){\n            var groundObject = wheel.raycastResult.body;\n\n            var rel_pos2 = new Vec3();\n            //wheel.raycastResult.hitPointWorld.vsub(groundObject.position, rel_pos2);\n            rel_pos2.copy(wheel.raycastResult.hitPointWorld);\n            var sideImp = new Vec3();\n            axle[i].scale(wheel.sideImpulse, sideImp);\n\n            // Scale the relative position in the up direction with rollInfluence.\n            // If rollInfluence is 1, the impulse will be applied on the hitPoint (easy to roll over), if it is zero it will be applied in the same plane as the center of mass (not easy to roll over).\n            chassisBody.pointToLocalFrame(rel_pos, rel_pos);\n            rel_pos['xyz'[this.indexUpAxis]] *= wheel.rollInfluence;\n            chassisBody.pointToWorldFrame(rel_pos, rel_pos);\n            chassisBody.applyImpulse(sideImp, rel_pos);\n\n            //apply friction impulse on the ground\n            sideImp.scale(-1, sideImp);\n            groundObject.applyImpulse(sideImp, rel_pos2);\n        }\n    }\n};\n\nvar calcRollingFriction_vel1 = new Vec3();\nvar calcRollingFriction_vel2 = new Vec3();\nvar calcRollingFriction_vel = new Vec3();\n\nfunction calcRollingFriction(body0, body1, frictionPosWorld, frictionDirectionWorld, maxImpulse) {\n    var j1 = 0;\n    var contactPosWorld = frictionPosWorld;\n\n    // var rel_pos1 = new Vec3();\n    // var rel_pos2 = new Vec3();\n    var vel1 = calcRollingFriction_vel1;\n    var vel2 = calcRollingFriction_vel2;\n    var vel = calcRollingFriction_vel;\n    // contactPosWorld.vsub(body0.position, rel_pos1);\n    // contactPosWorld.vsub(body1.position, rel_pos2);\n\n    body0.getVelocityAtWorldPoint(contactPosWorld, vel1);\n    body1.getVelocityAtWorldPoint(contactPosWorld, vel2);\n    vel1.vsub(vel2, vel);\n\n    var vrel = frictionDirectionWorld.dot(vel);\n\n    var denom0 = computeImpulseDenominator(body0, frictionPosWorld, frictionDirectionWorld);\n    var denom1 = computeImpulseDenominator(body1, frictionPosWorld, frictionDirectionWorld);\n    var relaxation = 1;\n    var jacDiagABInv = relaxation / (denom0 + denom1);\n\n    // calculate j that moves us to zero relative velocity\n    j1 = -vrel * jacDiagABInv;\n\n    if (maxImpulse < j1) {\n        j1 = maxImpulse;\n    }\n    if (j1 < -maxImpulse) {\n        j1 = -maxImpulse;\n    }\n\n    return j1;\n}\n\nvar computeImpulseDenominator_r0 = new Vec3();\nvar computeImpulseDenominator_c0 = new Vec3();\nvar computeImpulseDenominator_vec = new Vec3();\nvar computeImpulseDenominator_m = new Vec3();\nfunction computeImpulseDenominator(body, pos, normal) {\n    var r0 = computeImpulseDenominator_r0;\n    var c0 = computeImpulseDenominator_c0;\n    var vec = computeImpulseDenominator_vec;\n    var m = computeImpulseDenominator_m;\n\n    pos.vsub(body.position, r0);\n    r0.cross(normal, c0);\n    body.invInertiaWorld.vmult(c0, m);\n    m.cross(r0, vec);\n\n    return body.invMass + normal.dot(vec);\n}\n\n\nvar resolveSingleBilateral_vel1 = new Vec3();\nvar resolveSingleBilateral_vel2 = new Vec3();\nvar resolveSingleBilateral_vel = new Vec3();\n\n//bilateral constraint between two dynamic objects\nfunction resolveSingleBilateral(body1, pos1, body2, pos2, normal, impulse){\n    var normalLenSqr = normal.norm2();\n    if (normalLenSqr > 1.1){\n        return 0; // no impulse\n    }\n    // var rel_pos1 = new Vec3();\n    // var rel_pos2 = new Vec3();\n    // pos1.vsub(body1.position, rel_pos1);\n    // pos2.vsub(body2.position, rel_pos2);\n\n    var vel1 = resolveSingleBilateral_vel1;\n    var vel2 = resolveSingleBilateral_vel2;\n    var vel = resolveSingleBilateral_vel;\n    body1.getVelocityAtWorldPoint(pos1, vel1);\n    body2.getVelocityAtWorldPoint(pos2, vel2);\n\n    vel1.vsub(vel2, vel);\n\n    var rel_vel = normal.dot(vel);\n\n    var contactDamping = 0.2;\n    var massTerm = 1 / (body1.invMass + body2.invMass);\n    var impulse = - contactDamping * rel_vel * massTerm;\n\n    return impulse;\n}\n},{\"../collision/Ray\":9,\"../collision/RaycastResult\":10,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/WheelInfo\":36,\"./Body\":31}],33:[function(_dereq_,module,exports){\nvar Body = _dereq_('./Body');\nvar Sphere = _dereq_('../shapes/Sphere');\nvar Box = _dereq_('../shapes/Box');\nvar Vec3 = _dereq_('../math/Vec3');\nvar HingeConstraint = _dereq_('../constraints/HingeConstraint');\n\nmodule.exports = RigidVehicle;\n\n/**\n * Simple vehicle helper class with spherical rigid body wheels.\n * @class RigidVehicle\n * @constructor\n * @param {Body} [options.chassisBody]\n */\nfunction RigidVehicle(options){\n    this.wheelBodies = [];\n\n    /**\n     * @property coordinateSystem\n     * @type {Vec3}\n     */\n    this.coordinateSystem = typeof(options.coordinateSystem)==='undefined' ? new Vec3(1, 2, 3) : options.coordinateSystem.clone();\n\n    /**\n     * @property {Body} chassisBody\n     */\n    this.chassisBody = options.chassisBody;\n\n    if(!this.chassisBody){\n        // No chassis body given. Create it!\n        var chassisShape = new Box(new Vec3(5, 2, 0.5));\n        this.chassisBody = new Body(1, chassisShape);\n    }\n\n    /**\n     * @property constraints\n     * @type {Array}\n     */\n    this.constraints = [];\n\n    this.wheelAxes = [];\n    this.wheelForces = [];\n}\n\n/**\n * Add a wheel\n * @method addWheel\n * @param {object} options\n * @param {boolean} [options.isFrontWheel]\n * @param {Vec3} [options.position] Position of the wheel, locally in the chassis body.\n * @param {Vec3} [options.direction] Slide direction of the wheel along the suspension.\n * @param {Vec3} [options.axis] Axis of rotation of the wheel, locally defined in the chassis.\n * @param {Body} [options.body] The wheel body.\n */\nRigidVehicle.prototype.addWheel = function(options){\n    options = options || {};\n    var wheelBody = options.body;\n    if(!wheelBody){\n        wheelBody =  new Body(1, new Sphere(1.2));\n    }\n    this.wheelBodies.push(wheelBody);\n    this.wheelForces.push(0);\n\n    // Position constrain wheels\n    var zero = new Vec3();\n    var position = typeof(options.position) !== 'undefined' ? options.position.clone() : new Vec3();\n\n    // Set position locally to the chassis\n    var worldPosition = new Vec3();\n    this.chassisBody.pointToWorldFrame(position, worldPosition);\n    wheelBody.position.set(worldPosition.x, worldPosition.y, worldPosition.z);\n\n    // Constrain wheel\n    var axis = typeof(options.axis) !== 'undefined' ? options.axis.clone() : new Vec3(0, 1, 0);\n    this.wheelAxes.push(axis);\n\n    var hingeConstraint = new HingeConstraint(this.chassisBody, wheelBody, {\n        pivotA: position,\n        axisA: axis,\n        pivotB: Vec3.ZERO,\n        axisB: axis,\n        collideConnected: false\n    });\n    this.constraints.push(hingeConstraint);\n\n    return this.wheelBodies.length - 1;\n};\n\n/**\n * Set the steering value of a wheel.\n * @method setSteeringValue\n * @param {number} value\n * @param {integer} wheelIndex\n * @todo check coordinateSystem\n */\nRigidVehicle.prototype.setSteeringValue = function(value, wheelIndex){\n    // Set angle of the hinge axis\n    var axis = this.wheelAxes[wheelIndex];\n\n    var c = Math.cos(value),\n        s = Math.sin(value),\n        x = axis.x,\n        y = axis.y;\n    this.constraints[wheelIndex].axisA.set(\n        c*x -s*y,\n        s*x +c*y,\n        0\n    );\n};\n\n/**\n * Set the target rotational speed of the hinge constraint.\n * @method setMotorSpeed\n * @param {number} value\n * @param {integer} wheelIndex\n */\nRigidVehicle.prototype.setMotorSpeed = function(value, wheelIndex){\n    var hingeConstraint = this.constraints[wheelIndex];\n    hingeConstraint.enableMotor();\n    hingeConstraint.motorTargetVelocity = value;\n};\n\n/**\n * Set the target rotational speed of the hinge constraint.\n * @method disableMotor\n * @param {number} value\n * @param {integer} wheelIndex\n */\nRigidVehicle.prototype.disableMotor = function(wheelIndex){\n    var hingeConstraint = this.constraints[wheelIndex];\n    hingeConstraint.disableMotor();\n};\n\nvar torque = new Vec3();\n\n/**\n * Set the wheel force to apply on one of the wheels each time step\n * @method setWheelForce\n * @param  {number} value\n * @param  {integer} wheelIndex\n */\nRigidVehicle.prototype.setWheelForce = function(value, wheelIndex){\n    this.wheelForces[wheelIndex] = value;\n};\n\n/**\n * Apply a torque on one of the wheels.\n * @method applyWheelForce\n * @param  {number} value\n * @param  {integer} wheelIndex\n */\nRigidVehicle.prototype.applyWheelForce = function(value, wheelIndex){\n    var axis = this.wheelAxes[wheelIndex];\n    var wheelBody = this.wheelBodies[wheelIndex];\n    var bodyTorque = wheelBody.torque;\n\n    axis.scale(value, torque);\n    wheelBody.vectorToWorldFrame(torque, torque);\n    bodyTorque.vadd(torque, bodyTorque);\n};\n\n/**\n * Add the vehicle including its constraints to the world.\n * @method addToWorld\n * @param {World} world\n */\nRigidVehicle.prototype.addToWorld = function(world){\n    var constraints = this.constraints;\n    var bodies = this.wheelBodies.concat([this.chassisBody]);\n\n    for (var i = 0; i < bodies.length; i++) {\n        world.add(bodies[i]);\n    }\n\n    for (var i = 0; i < constraints.length; i++) {\n        world.addConstraint(constraints[i]);\n    }\n\n    world.addEventListener('preStep', this._update.bind(this));\n};\n\nRigidVehicle.prototype._update = function(){\n    var wheelForces = this.wheelForces;\n    for (var i = 0; i < wheelForces.length; i++) {\n        this.applyWheelForce(wheelForces[i], i);\n    }\n};\n\n/**\n * Remove the vehicle including its constraints from the world.\n * @method removeFromWorld\n * @param {World} world\n */\nRigidVehicle.prototype.removeFromWorld = function(world){\n    var constraints = this.constraints;\n    var bodies = this.wheelBodies.concat([this.chassisBody]);\n\n    for (var i = 0; i < bodies.length; i++) {\n        world.remove(bodies[i]);\n    }\n\n    for (var i = 0; i < constraints.length; i++) {\n        world.removeConstraint(constraints[i]);\n    }\n};\n\nvar worldAxis = new Vec3();\n\n/**\n * Get current rotational velocity of a wheel\n * @method getWheelSpeed\n * @param {integer} wheelIndex\n */\nRigidVehicle.prototype.getWheelSpeed = function(wheelIndex){\n    var axis = this.wheelAxes[wheelIndex];\n    var wheelBody = this.wheelBodies[wheelIndex];\n    var w = wheelBody.angularVelocity;\n    this.chassisBody.vectorToWorldFrame(axis, worldAxis);\n    return w.dot(worldAxis);\n};\n\n},{\"../constraints/HingeConstraint\":15,\"../math/Vec3\":30,\"../shapes/Box\":37,\"../shapes/Sphere\":44,\"./Body\":31}],34:[function(_dereq_,module,exports){\nmodule.exports = SPHSystem;\n\nvar Shape = _dereq_('../shapes/Shape');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar Particle = _dereq_('../shapes/Particle');\nvar Body = _dereq_('../objects/Body');\nvar Material = _dereq_('../material/Material');\n\n/**\n * Smoothed-particle hydrodynamics system\n * @class SPHSystem\n * @constructor\n */\nfunction SPHSystem(){\n    this.particles = [];\n\t\n    /**\n     * Density of the system (kg/m3).\n     * @property {number} density\n     */\n    this.density = 1;\n\t\n    /**\n     * Distance below which two particles are considered to be neighbors.\n     * It should be adjusted so there are about 15-20 neighbor particles within this radius.\n     * @property {number} smoothingRadius\n     */\n    this.smoothingRadius = 1;\n    this.speedOfSound = 1;\n\t\n    /**\n     * Viscosity of the system.\n     * @property {number} viscosity\n     */\n    this.viscosity = 0.01;\n    this.eps = 0.000001;\n\n    // Stuff Computed per particle\n    this.pressures = [];\n    this.densities = [];\n    this.neighbors = [];\n}\n\n/**\n * Add a particle to the system.\n * @method add\n * @param {Body} particle\n */\nSPHSystem.prototype.add = function(particle){\n    this.particles.push(particle);\n    if(this.neighbors.length < this.particles.length){\n        this.neighbors.push([]);\n    }\n};\n\n/**\n * Remove a particle from the system.\n * @method remove\n * @param {Body} particle\n */\nSPHSystem.prototype.remove = function(particle){\n    var idx = this.particles.indexOf(particle);\n    if(idx !== -1){\n        this.particles.splice(idx,1);\n        if(this.neighbors.length > this.particles.length){\n            this.neighbors.pop();\n        }\n    }\n};\n\n/**\n * Get neighbors within smoothing volume, save in the array neighbors\n * @method getNeighbors\n * @param {Body} particle\n * @param {Array} neighbors\n */\nvar SPHSystem_getNeighbors_dist = new Vec3();\nSPHSystem.prototype.getNeighbors = function(particle,neighbors){\n    var N = this.particles.length,\n        id = particle.id,\n        R2 = this.smoothingRadius * this.smoothingRadius,\n        dist = SPHSystem_getNeighbors_dist;\n    for(var i=0; i!==N; i++){\n        var p = this.particles[i];\n        p.position.vsub(particle.position,dist);\n        if(id!==p.id && dist.norm2() < R2){\n            neighbors.push(p);\n        }\n    }\n};\n\n// Temp vectors for calculation\nvar SPHSystem_update_dist = new Vec3(),\n    SPHSystem_update_a_pressure = new Vec3(),\n    SPHSystem_update_a_visc = new Vec3(),\n    SPHSystem_update_gradW = new Vec3(),\n    SPHSystem_update_r_vec = new Vec3(),\n    SPHSystem_update_u = new Vec3(); // Relative velocity\nSPHSystem.prototype.update = function(){\n    var N = this.particles.length,\n        dist = SPHSystem_update_dist,\n        cs = this.speedOfSound,\n        eps = this.eps;\n\n    for(var i=0; i!==N; i++){\n        var p = this.particles[i]; // Current particle\n        var neighbors = this.neighbors[i];\n\n        // Get neighbors\n        neighbors.length = 0;\n        this.getNeighbors(p,neighbors);\n        neighbors.push(this.particles[i]); // Add current too\n        var numNeighbors = neighbors.length;\n\n        // Accumulate density for the particle\n        var sum = 0.0;\n        for(var j=0; j!==numNeighbors; j++){\n\n            //printf(\"Current particle has position %f %f %f\\n\",objects[id].pos.x(),objects[id].pos.y(),objects[id].pos.z());\n            p.position.vsub(neighbors[j].position, dist);\n            var len = dist.norm();\n\n            var weight = this.w(len);\n            sum += neighbors[j].mass * weight;\n        }\n\n        // Save\n        this.densities[i] = sum;\n        this.pressures[i] = cs * cs * (this.densities[i] - this.density);\n    }\n\n    // Add forces\n\n    // Sum to these accelerations\n    var a_pressure= SPHSystem_update_a_pressure;\n    var a_visc =    SPHSystem_update_a_visc;\n    var gradW =     SPHSystem_update_gradW;\n    var r_vec =     SPHSystem_update_r_vec;\n    var u =         SPHSystem_update_u;\n\n    for(var i=0; i!==N; i++){\n\n        var particle = this.particles[i];\n\n        a_pressure.set(0,0,0);\n        a_visc.set(0,0,0);\n\n        // Init vars\n        var Pij;\n        var nabla;\n        var Vij;\n\n        // Sum up for all other neighbors\n        var neighbors = this.neighbors[i];\n        var numNeighbors = neighbors.length;\n\n        //printf(\"Neighbors: \");\n        for(var j=0; j!==numNeighbors; j++){\n\n            var neighbor = neighbors[j];\n            //printf(\"%d \",nj);\n\n            // Get r once for all..\n            particle.position.vsub(neighbor.position,r_vec);\n            var r = r_vec.norm();\n\n            // Pressure contribution\n            Pij = -neighbor.mass * (this.pressures[i] / (this.densities[i]*this.densities[i] + eps) + this.pressures[j] / (this.densities[j]*this.densities[j] + eps));\n            this.gradw(r_vec, gradW);\n            // Add to pressure acceleration\n            gradW.mult(Pij , gradW);\n            a_pressure.vadd(gradW, a_pressure);\n\n            // Viscosity contribution\n            neighbor.velocity.vsub(particle.velocity, u);\n            u.mult( 1.0 / (0.0001+this.densities[i] * this.densities[j]) * this.viscosity * neighbor.mass , u );\n            nabla = this.nablaw(r);\n            u.mult(nabla,u);\n            // Add to viscosity acceleration\n            a_visc.vadd( u, a_visc );\n        }\n\n        // Calculate force\n        a_visc.mult(particle.mass, a_visc);\n        a_pressure.mult(particle.mass, a_pressure);\n\n        // Add force to particles\n        particle.force.vadd(a_visc, particle.force);\n        particle.force.vadd(a_pressure, particle.force);\n    }\n};\n\n// Calculate the weight using the W(r) weightfunction\nSPHSystem.prototype.w = function(r){\n    // 315\n    var h = this.smoothingRadius;\n    return 315.0/(64.0*Math.PI*Math.pow(h,9)) * Math.pow(h*h-r*r,3);\n};\n\n// calculate gradient of the weight function\nSPHSystem.prototype.gradw = function(rVec,resultVec){\n    var r = rVec.norm(),\n        h = this.smoothingRadius;\n    rVec.mult(945.0/(32.0*Math.PI*Math.pow(h,9)) * Math.pow((h*h-r*r),2) , resultVec);\n};\n\n// Calculate nabla(W)\nSPHSystem.prototype.nablaw = function(r){\n    var h = this.smoothingRadius;\n    var nabla = 945.0/(32.0*Math.PI*Math.pow(h,9)) * (h*h-r*r)*(7*r*r - 3*h*h);\n    return nabla;\n};\n\n},{\"../material/Material\":25,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/Body\":31,\"../shapes/Particle\":41,\"../shapes/Shape\":43}],35:[function(_dereq_,module,exports){\nvar Vec3 = _dereq_('../math/Vec3');\n\nmodule.exports = Spring;\n\n/**\n * A spring, connecting two bodies.\n *\n * @class Spring\n * @constructor\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Object} [options]\n * @param {number} [options.restLength]   A number > 0. Default: 1\n * @param {number} [options.stiffness]    A number >= 0. Default: 100\n * @param {number} [options.damping]      A number >= 0. Default: 1\n * @param {Vec3}  [options.worldAnchorA] Where to hook the spring to body A, in world coordinates.\n * @param {Vec3}  [options.worldAnchorB]\n * @param {Vec3}  [options.localAnchorA] Where to hook the spring to body A, in local body coordinates.\n * @param {Vec3}  [options.localAnchorB]\n */\nfunction Spring(bodyA,bodyB,options){\n    options = options || {};\n\n    /**\n     * Rest length of the spring.\n     * @property restLength\n     * @type {number}\n     */\n    this.restLength = typeof(options.restLength) === \"number\" ? options.restLength : 1;\n\n    /**\n     * Stiffness of the spring.\n     * @property stiffness\n     * @type {number}\n     */\n    this.stiffness = options.stiffness || 100;\n\n    /**\n     * Damping of the spring.\n     * @property damping\n     * @type {number}\n     */\n    this.damping = options.damping || 1;\n\n    /**\n     * First connected body.\n     * @property bodyA\n     * @type {Body}\n     */\n    this.bodyA = bodyA;\n\n    /**\n     * Second connected body.\n     * @property bodyB\n     * @type {Body}\n     */\n    this.bodyB = bodyB;\n\n    /**\n     * Anchor for bodyA in local bodyA coordinates.\n     * @property localAnchorA\n     * @type {Vec3}\n     */\n    this.localAnchorA = new Vec3();\n\n    /**\n     * Anchor for bodyB in local bodyB coordinates.\n     * @property localAnchorB\n     * @type {Vec3}\n     */\n    this.localAnchorB = new Vec3();\n\n    if(options.localAnchorA){\n        this.localAnchorA.copy(options.localAnchorA);\n    }\n    if(options.localAnchorB){\n        this.localAnchorB.copy(options.localAnchorB);\n    }\n    if(options.worldAnchorA){\n        this.setWorldAnchorA(options.worldAnchorA);\n    }\n    if(options.worldAnchorB){\n        this.setWorldAnchorB(options.worldAnchorB);\n    }\n}\n\n/**\n * Set the anchor point on body A, using world coordinates.\n * @method setWorldAnchorA\n * @param {Vec3} worldAnchorA\n */\nSpring.prototype.setWorldAnchorA = function(worldAnchorA){\n    this.bodyA.pointToLocalFrame(worldAnchorA,this.localAnchorA);\n};\n\n/**\n * Set the anchor point on body B, using world coordinates.\n * @method setWorldAnchorB\n * @param {Vec3} worldAnchorB\n */\nSpring.prototype.setWorldAnchorB = function(worldAnchorB){\n    this.bodyB.pointToLocalFrame(worldAnchorB,this.localAnchorB);\n};\n\n/**\n * Get the anchor point on body A, in world coordinates.\n * @method getWorldAnchorA\n * @param {Vec3} result The vector to store the result in.\n */\nSpring.prototype.getWorldAnchorA = function(result){\n    this.bodyA.pointToWorldFrame(this.localAnchorA,result);\n};\n\n/**\n * Get the anchor point on body B, in world coordinates.\n * @method getWorldAnchorB\n * @param {Vec3} result The vector to store the result in.\n */\nSpring.prototype.getWorldAnchorB = function(result){\n    this.bodyB.pointToWorldFrame(this.localAnchorB,result);\n};\n\nvar applyForce_r =              new Vec3(),\n    applyForce_r_unit =         new Vec3(),\n    applyForce_u =              new Vec3(),\n    applyForce_f =              new Vec3(),\n    applyForce_worldAnchorA =   new Vec3(),\n    applyForce_worldAnchorB =   new Vec3(),\n    applyForce_ri =             new Vec3(),\n    applyForce_rj =             new Vec3(),\n    applyForce_ri_x_f =         new Vec3(),\n    applyForce_rj_x_f =         new Vec3(),\n    applyForce_tmp =            new Vec3();\n\n/**\n * Apply the spring force to the connected bodies.\n * @method applyForce\n */\nSpring.prototype.applyForce = function(){\n    var k = this.stiffness,\n        d = this.damping,\n        l = this.restLength,\n        bodyA = this.bodyA,\n        bodyB = this.bodyB,\n        r = applyForce_r,\n        r_unit = applyForce_r_unit,\n        u = applyForce_u,\n        f = applyForce_f,\n        tmp = applyForce_tmp;\n\n    var worldAnchorA = applyForce_worldAnchorA,\n        worldAnchorB = applyForce_worldAnchorB,\n        ri = applyForce_ri,\n        rj = applyForce_rj,\n        ri_x_f = applyForce_ri_x_f,\n        rj_x_f = applyForce_rj_x_f;\n\n    // Get world anchors\n    this.getWorldAnchorA(worldAnchorA);\n    this.getWorldAnchorB(worldAnchorB);\n\n    // Get offset points\n    worldAnchorA.vsub(bodyA.position,ri);\n    worldAnchorB.vsub(bodyB.position,rj);\n\n    // Compute distance vector between world anchor points\n    worldAnchorB.vsub(worldAnchorA,r);\n    var rlen = r.norm();\n    r_unit.copy(r);\n    r_unit.normalize();\n\n    // Compute relative velocity of the anchor points, u\n    bodyB.velocity.vsub(bodyA.velocity,u);\n    // Add rotational velocity\n\n    bodyB.angularVelocity.cross(rj,tmp);\n    u.vadd(tmp,u);\n    bodyA.angularVelocity.cross(ri,tmp);\n    u.vsub(tmp,u);\n\n    // F = - k * ( x - L ) - D * ( u )\n    r_unit.mult(-k*(rlen-l) - d*u.dot(r_unit), f);\n\n    // Add forces to bodies\n    bodyA.force.vsub(f,bodyA.force);\n    bodyB.force.vadd(f,bodyB.force);\n\n    // Angular force\n    ri.cross(f,ri_x_f);\n    rj.cross(f,rj_x_f);\n    bodyA.torque.vsub(ri_x_f,bodyA.torque);\n    bodyB.torque.vadd(rj_x_f,bodyB.torque);\n};\n\n},{\"../math/Vec3\":30}],36:[function(_dereq_,module,exports){\nvar Vec3 = _dereq_('../math/Vec3');\nvar Transform = _dereq_('../math/Transform');\nvar RaycastResult = _dereq_('../collision/RaycastResult');\nvar Utils = _dereq_('../utils/Utils');\n\nmodule.exports = WheelInfo;\n\n/**\n * @class WheelInfo\n * @constructor\n * @param {Object} [options]\n *\n * @param {Vec3} [options.chassisConnectionPointLocal]\n * @param {Vec3} [options.chassisConnectionPointWorld]\n * @param {Vec3} [options.directionLocal]\n * @param {Vec3} [options.directionWorld]\n * @param {Vec3} [options.axleLocal]\n * @param {Vec3} [options.axleWorld]\n * @param {number} [options.suspensionRestLength=1]\n * @param {number} [options.suspensionMaxLength=2]\n * @param {number} [options.radius=1]\n * @param {number} [options.suspensionStiffness=100]\n * @param {number} [options.dampingCompression=10]\n * @param {number} [options.dampingRelaxation=10]\n * @param {number} [options.frictionSlip=10000]\n * @param {number} [options.steering=0]\n * @param {number} [options.rotation=0]\n * @param {number} [options.deltaRotation=0]\n * @param {number} [options.rollInfluence=0.01]\n * @param {number} [options.maxSuspensionForce]\n * @param {boolean} [options.isFrontWheel=true]\n * @param {number} [options.clippedInvContactDotSuspension=1]\n * @param {number} [options.suspensionRelativeVelocity=0]\n * @param {number} [options.suspensionForce=0]\n * @param {number} [options.skidInfo=0]\n * @param {number} [options.suspensionLength=0]\n * @param {number} [options.maxSuspensionTravel=1]\n * @param {boolean} [options.useCustomSlidingRotationalSpeed=false]\n * @param {number} [options.customSlidingRotationalSpeed=-0.1]\n */\nfunction WheelInfo(options){\n    options = Utils.defaults(options, {\n        chassisConnectionPointLocal: new Vec3(),\n        chassisConnectionPointWorld: new Vec3(),\n        directionLocal: new Vec3(),\n        directionWorld: new Vec3(),\n        axleLocal: new Vec3(),\n        axleWorld: new Vec3(),\n        suspensionRestLength: 1,\n        suspensionMaxLength: 2,\n        radius: 1,\n        suspensionStiffness: 100,\n        dampingCompression: 10,\n        dampingRelaxation: 10,\n        frictionSlip: 10000,\n        steering: 0,\n        rotation: 0,\n        deltaRotation: 0,\n        rollInfluence: 0.01,\n        maxSuspensionForce: Number.MAX_VALUE,\n        isFrontWheel: true,\n        clippedInvContactDotSuspension: 1,\n        suspensionRelativeVelocity: 0,\n        suspensionForce: 0,\n        skidInfo: 0,\n        suspensionLength: 0,\n        maxSuspensionTravel: 1,\n        useCustomSlidingRotationalSpeed: false,\n        customSlidingRotationalSpeed: -0.1\n    });\n\n    /**\n     * Max travel distance of the suspension, in meters.\n     * @property {number} maxSuspensionTravel\n     */\n    this.maxSuspensionTravel = options.maxSuspensionTravel;\n\n    /**\n     * Speed to apply to the wheel rotation when the wheel is sliding.\n     * @property {number} customSlidingRotationalSpeed\n     */\n    this.customSlidingRotationalSpeed = options.customSlidingRotationalSpeed;\n\n    /**\n     * If the customSlidingRotationalSpeed should be used.\n     * @property {Boolean} useCustomSlidingRotationalSpeed\n     */\n    this.useCustomSlidingRotationalSpeed = options.useCustomSlidingRotationalSpeed;\n\n    /**\n     * @property {Boolean} sliding\n     */\n    this.sliding = false;\n\n    /**\n     * Connection point, defined locally in the chassis body frame.\n     * @property {Vec3} chassisConnectionPointLocal\n     */\n    this.chassisConnectionPointLocal = options.chassisConnectionPointLocal.clone();\n\n    /**\n     * @property {Vec3} chassisConnectionPointWorld\n     */\n    this.chassisConnectionPointWorld = options.chassisConnectionPointWorld.clone();\n\n    /**\n     * @property {Vec3} directionLocal\n     */\n    this.directionLocal = options.directionLocal.clone();\n\n    /**\n     * @property {Vec3} directionWorld\n     */\n    this.directionWorld = options.directionWorld.clone();\n\n    /**\n     * @property {Vec3} axleLocal\n     */\n    this.axleLocal = options.axleLocal.clone();\n\n    /**\n     * @property {Vec3} axleWorld\n     */\n    this.axleWorld = options.axleWorld.clone();\n\n    /**\n     * @property {number} suspensionRestLength\n     */\n    this.suspensionRestLength = options.suspensionRestLength;\n\n    /**\n     * @property {number} suspensionMaxLength\n     */\n    this.suspensionMaxLength = options.suspensionMaxLength;\n\n    /**\n     * @property {number} radius\n     */\n    this.radius = options.radius;\n\n    /**\n     * @property {number} suspensionStiffness\n     */\n    this.suspensionStiffness = options.suspensionStiffness;\n\n    /**\n     * @property {number} dampingCompression\n     */\n    this.dampingCompression = options.dampingCompression;\n\n    /**\n     * @property {number} dampingRelaxation\n     */\n    this.dampingRelaxation = options.dampingRelaxation;\n\n    /**\n     * @property {number} frictionSlip\n     */\n    this.frictionSlip = options.frictionSlip;\n\n    /**\n     * @property {number} steering\n     */\n    this.steering = 0;\n\n    /**\n     * Rotation value, in radians.\n     * @property {number} rotation\n     */\n    this.rotation = 0;\n\n    /**\n     * @property {number} deltaRotation\n     */\n    this.deltaRotation = 0;\n\n    /**\n     * @property {number} rollInfluence\n     */\n    this.rollInfluence = options.rollInfluence;\n\n    /**\n     * @property {number} maxSuspensionForce\n     */\n    this.maxSuspensionForce = options.maxSuspensionForce;\n\n    /**\n     * @property {number} engineForce\n     */\n    this.engineForce = 0;\n\n    /**\n     * @property {number} brake\n     */\n    this.brake = 0;\n\n    /**\n     * @property {number} isFrontWheel\n     */\n    this.isFrontWheel = options.isFrontWheel;\n\n    /**\n     * @property {number} clippedInvContactDotSuspension\n     */\n    this.clippedInvContactDotSuspension = 1;\n\n    /**\n     * @property {number} suspensionRelativeVelocity\n     */\n    this.suspensionRelativeVelocity = 0;\n\n    /**\n     * @property {number} suspensionForce\n     */\n    this.suspensionForce = 0;\n\n    /**\n     * @property {number} skidInfo\n     */\n    this.skidInfo = 0;\n\n    /**\n     * @property {number} suspensionLength\n     */\n    this.suspensionLength = 0;\n\n    /**\n     * @property {number} sideImpulse\n     */\n    this.sideImpulse = 0;\n\n    /**\n     * @property {number} forwardImpulse\n     */\n    this.forwardImpulse = 0;\n\n    /**\n     * The result from raycasting\n     * @property {RaycastResult} raycastResult\n     */\n    this.raycastResult = new RaycastResult();\n\n    /**\n     * Wheel world transform\n     * @property {Transform} worldTransform\n     */\n    this.worldTransform = new Transform();\n\n    /**\n     * @property {boolean} isInContact\n     */\n    this.isInContact = false;\n}\n\nvar chassis_velocity_at_contactPoint = new Vec3();\nvar relpos = new Vec3();\nvar chassis_velocity_at_contactPoint = new Vec3();\nWheelInfo.prototype.updateWheel = function(chassis){\n    var raycastResult = this.raycastResult;\n\n    if (this.isInContact){\n        var project= raycastResult.hitNormalWorld.dot(raycastResult.directionWorld);\n        raycastResult.hitPointWorld.vsub(chassis.position, relpos);\n        chassis.getVelocityAtWorldPoint(relpos, chassis_velocity_at_contactPoint);\n        var projVel = raycastResult.hitNormalWorld.dot( chassis_velocity_at_contactPoint );\n        if (project >= -0.1) {\n            this.suspensionRelativeVelocity = 0.0;\n            this.clippedInvContactDotSuspension = 1.0 / 0.1;\n        } else {\n            var inv = -1 / project;\n            this.suspensionRelativeVelocity = projVel * inv;\n            this.clippedInvContactDotSuspension = inv;\n        }\n\n    } else {\n        // Not in contact : position wheel in a nice (rest length) position\n        raycastResult.suspensionLength = this.suspensionRestLength;\n        this.suspensionRelativeVelocity = 0.0;\n        raycastResult.directionWorld.scale(-1, raycastResult.hitNormalWorld);\n        this.clippedInvContactDotSuspension = 1.0;\n    }\n};\n},{\"../collision/RaycastResult\":10,\"../math/Transform\":29,\"../math/Vec3\":30,\"../utils/Utils\":53}],37:[function(_dereq_,module,exports){\nmodule.exports = Box;\n\nvar Shape = _dereq_('./Shape');\nvar Vec3 = _dereq_('../math/Vec3');\nvar ConvexPolyhedron = _dereq_('./ConvexPolyhedron');\n\n/**\n * A 3d box shape.\n * @class Box\n * @constructor\n * @param {Vec3} halfExtents\n * @author schteppe\n * @extends Shape\n */\nfunction Box(halfExtents){\n    Shape.call(this);\n\n    this.type = Shape.types.BOX;\n\n    /**\n     * @property halfExtents\n     * @type {Vec3}\n     */\n    this.halfExtents = halfExtents;\n\n    /**\n     * Used by the contact generator to make contacts with other convex polyhedra for example\n     * @property convexPolyhedronRepresentation\n     * @type {ConvexPolyhedron}\n     */\n    this.convexPolyhedronRepresentation = null;\n\n    this.updateConvexPolyhedronRepresentation();\n    this.updateBoundingSphereRadius();\n}\nBox.prototype = new Shape();\nBox.prototype.constructor = Box;\n\n/**\n * Updates the local convex polyhedron representation used for some collisions.\n * @method updateConvexPolyhedronRepresentation\n */\nBox.prototype.updateConvexPolyhedronRepresentation = function(){\n    var sx = this.halfExtents.x;\n    var sy = this.halfExtents.y;\n    var sz = this.halfExtents.z;\n    var V = Vec3;\n\n    var vertices = [\n        new V(-sx,-sy,-sz),\n        new V( sx,-sy,-sz),\n        new V( sx, sy,-sz),\n        new V(-sx, sy,-sz),\n        new V(-sx,-sy, sz),\n        new V( sx,-sy, sz),\n        new V( sx, sy, sz),\n        new V(-sx, sy, sz)\n    ];\n\n    var indices = [\n        [3,2,1,0], // -z\n        [4,5,6,7], // +z\n        [5,4,0,1], // -y\n        [2,3,7,6], // +y\n        [0,4,7,3], // -x\n        [1,2,6,5], // +x\n    ];\n\n    var axes = [\n        new V(0, 0, 1),\n        new V(0, 1, 0),\n        new V(1, 0, 0)\n    ];\n\n    var h = new ConvexPolyhedron(vertices, indices);\n    this.convexPolyhedronRepresentation = h;\n    h.material = this.material;\n};\n\n/**\n * @method calculateLocalInertia\n * @param  {Number} mass\n * @param  {Vec3} target\n * @return {Vec3}\n */\nBox.prototype.calculateLocalInertia = function(mass,target){\n    target = target || new Vec3();\n    Box.calculateInertia(this.halfExtents, mass, target);\n    return target;\n};\n\nBox.calculateInertia = function(halfExtents,mass,target){\n    var e = halfExtents;\n    target.x = 1.0 / 12.0 * mass * (   2*e.y*2*e.y + 2*e.z*2*e.z );\n    target.y = 1.0 / 12.0 * mass * (   2*e.x*2*e.x + 2*e.z*2*e.z );\n    target.z = 1.0 / 12.0 * mass * (   2*e.y*2*e.y + 2*e.x*2*e.x );\n};\n\n/**\n * Get the box 6 side normals\n * @method getSideNormals\n * @param {array}      sixTargetVectors An array of 6 vectors, to store the resulting side normals in.\n * @param {Quaternion} quat             Orientation to apply to the normal vectors. If not provided, the vectors will be in respect to the local frame.\n * @return {array}\n */\nBox.prototype.getSideNormals = function(sixTargetVectors,quat){\n    var sides = sixTargetVectors;\n    var ex = this.halfExtents;\n    sides[0].set(  ex.x,     0,     0);\n    sides[1].set(     0,  ex.y,     0);\n    sides[2].set(     0,     0,  ex.z);\n    sides[3].set( -ex.x,     0,     0);\n    sides[4].set(     0, -ex.y,     0);\n    sides[5].set(     0,     0, -ex.z);\n\n    if(quat!==undefined){\n        for(var i=0; i!==sides.length; i++){\n            quat.vmult(sides[i],sides[i]);\n        }\n    }\n\n    return sides;\n};\n\nBox.prototype.volume = function(){\n    return 8.0 * this.halfExtents.x * this.halfExtents.y * this.halfExtents.z;\n};\n\nBox.prototype.updateBoundingSphereRadius = function(){\n    this.boundingSphereRadius = this.halfExtents.norm();\n};\n\nvar worldCornerTempPos = new Vec3();\nvar worldCornerTempNeg = new Vec3();\nBox.prototype.forEachWorldCorner = function(pos,quat,callback){\n\n    var e = this.halfExtents;\n    var corners = [[  e.x,  e.y,  e.z],\n                   [ -e.x,  e.y,  e.z],\n                   [ -e.x, -e.y,  e.z],\n                   [ -e.x, -e.y, -e.z],\n                   [  e.x, -e.y, -e.z],\n                   [  e.x,  e.y, -e.z],\n                   [ -e.x,  e.y, -e.z],\n                   [  e.x, -e.y,  e.z]];\n    for(var i=0; i<corners.length; i++){\n        worldCornerTempPos.set(corners[i][0],corners[i][1],corners[i][2]);\n        quat.vmult(worldCornerTempPos,worldCornerTempPos);\n        pos.vadd(worldCornerTempPos,worldCornerTempPos);\n        callback(worldCornerTempPos.x,\n                 worldCornerTempPos.y,\n                 worldCornerTempPos.z);\n    }\n};\n\nvar worldCornersTemp = [\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3()\n];\nBox.prototype.calculateWorldAABB = function(pos,quat,min,max){\n\n    var e = this.halfExtents;\n    worldCornersTemp[0].set(e.x, e.y, e.z);\n    worldCornersTemp[1].set(-e.x,  e.y, e.z);\n    worldCornersTemp[2].set(-e.x, -e.y, e.z);\n    worldCornersTemp[3].set(-e.x, -e.y, -e.z);\n    worldCornersTemp[4].set(e.x, -e.y, -e.z);\n    worldCornersTemp[5].set(e.x,  e.y, -e.z);\n    worldCornersTemp[6].set(-e.x,  e.y, -e.z);\n    worldCornersTemp[7].set(e.x, -e.y,  e.z);\n\n    var wc = worldCornersTemp[0];\n    quat.vmult(wc, wc);\n    pos.vadd(wc, wc);\n    max.copy(wc);\n    min.copy(wc);\n    for(var i=1; i<8; i++){\n        var wc = worldCornersTemp[i];\n        quat.vmult(wc, wc);\n        pos.vadd(wc, wc);\n        var x = wc.x;\n        var y = wc.y;\n        var z = wc.z;\n        if(x > max.x){\n            max.x = x;\n        }\n        if(y > max.y){\n            max.y = y;\n        }\n        if(z > max.z){\n            max.z = z;\n        }\n\n        if(x < min.x){\n            min.x = x;\n        }\n        if(y < min.y){\n            min.y = y;\n        }\n        if(z < min.z){\n            min.z = z;\n        }\n    }\n\n    // Get each axis max\n    // min.set(Infinity,Infinity,Infinity);\n    // max.set(-Infinity,-Infinity,-Infinity);\n    // this.forEachWorldCorner(pos,quat,function(x,y,z){\n    //     if(x > max.x){\n    //         max.x = x;\n    //     }\n    //     if(y > max.y){\n    //         max.y = y;\n    //     }\n    //     if(z > max.z){\n    //         max.z = z;\n    //     }\n\n    //     if(x < min.x){\n    //         min.x = x;\n    //     }\n    //     if(y < min.y){\n    //         min.y = y;\n    //     }\n    //     if(z < min.z){\n    //         min.z = z;\n    //     }\n    // });\n};\n\n},{\"../math/Vec3\":30,\"./ConvexPolyhedron\":38,\"./Shape\":43}],38:[function(_dereq_,module,exports){\nmodule.exports = ConvexPolyhedron;\n\nvar Shape = _dereq_('./Shape');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar Transform = _dereq_('../math/Transform');\n\n/**\n * A set of polygons describing a convex shape.\n * @class ConvexPolyhedron\n * @constructor\n * @extends Shape\n * @description The shape MUST be convex for the code to work properly. No polygons may be coplanar (contained\n * in the same 3D plane), instead these should be merged into one polygon.\n *\n * @param {array} points An array of Vec3's\n * @param {array} faces Array of integer arrays, describing which vertices that is included in each face.\n *\n * @author qiao / https://github.com/qiao (original author, see https://github.com/qiao/three.js/commit/85026f0c769e4000148a67d45a9e9b9c5108836f)\n * @author schteppe / https://github.com/schteppe\n * @see http://www.altdevblogaday.com/2011/05/13/contact-generation-between-3d-convex-meshes/\n * @see http://bullet.googlecode.com/svn/trunk/src/BulletCollision/NarrowPhaseCollision/btPolyhedralContactClipping.cpp\n *\n * @todo Move the clipping functions to ContactGenerator?\n * @todo Automatically merge coplanar polygons in constructor.\n */\nfunction ConvexPolyhedron(points, faces, uniqueAxes) {\n    var that = this;\n    Shape.call(this);\n    this.type = Shape.types.CONVEXPOLYHEDRON;\n\n    /**\n     * Array of Vec3\n     * @property vertices\n     * @type {Array}\n     */\n    this.vertices = points||[];\n\n    this.worldVertices = []; // World transformed version of .vertices\n    this.worldVerticesNeedsUpdate = true;\n\n    /**\n     * Array of integer arrays, indicating which vertices each face consists of\n     * @property faces\n     * @type {Array}\n     */\n    this.faces = faces||[];\n\n    /**\n     * Array of Vec3\n     * @property faceNormals\n     * @type {Array}\n     */\n    this.faceNormals = [];\n    this.computeNormals();\n\n    this.worldFaceNormalsNeedsUpdate = true;\n    this.worldFaceNormals = []; // World transformed version of .faceNormals\n\n    /**\n     * Array of Vec3\n     * @property uniqueEdges\n     * @type {Array}\n     */\n    this.uniqueEdges = [];\n\n    /**\n     * If given, these locally defined, normalized axes are the only ones being checked when doing separating axis check.\n     * @property {Array} uniqueAxes\n     */\n    this.uniqueAxes = uniqueAxes ? uniqueAxes.slice() : null;\n\n    this.computeEdges();\n    this.updateBoundingSphereRadius();\n}\nConvexPolyhedron.prototype = new Shape();\nConvexPolyhedron.prototype.constructor = ConvexPolyhedron;\n\nvar computeEdges_tmpEdge = new Vec3();\n/**\n * Computes uniqueEdges\n * @method computeEdges\n */\nConvexPolyhedron.prototype.computeEdges = function(){\n    var faces = this.faces;\n    var vertices = this.vertices;\n    var nv = vertices.length;\n    var edges = this.uniqueEdges;\n\n    edges.length = 0;\n\n    var edge = computeEdges_tmpEdge;\n\n    for(var i=0; i !== faces.length; i++){\n        var face = faces[i];\n        var numVertices = face.length;\n        for(var j = 0; j !== numVertices; j++){\n            var k = ( j+1 ) % numVertices;\n            vertices[face[j]].vsub(vertices[face[k]], edge);\n            edge.normalize();\n            var found = false;\n            for(var p=0; p !== edges.length; p++){\n                if (edges[p].almostEquals(edge) || edges[p].almostEquals(edge)){\n                    found = true;\n                    break;\n                }\n            }\n\n            if (!found){\n                edges.push(edge.clone());\n            }\n        }\n    }\n};\n\n/**\n * Compute the normals of the faces. Will reuse existing Vec3 objects in the .faceNormals array if they exist.\n * @method computeNormals\n */\nConvexPolyhedron.prototype.computeNormals = function(){\n    this.faceNormals.length = this.faces.length;\n\n    // Generate normals\n    for(var i=0; i<this.faces.length; i++){\n\n        // Check so all vertices exists for this face\n        for(var j=0; j<this.faces[i].length; j++){\n            if(!this.vertices[this.faces[i][j]]){\n                throw new Error(\"Vertex \"+this.faces[i][j]+\" not found!\");\n            }\n        }\n\n        var n = this.faceNormals[i] || new Vec3();\n        this.getFaceNormal(i,n);\n        n.negate(n);\n        this.faceNormals[i] = n;\n        var vertex = this.vertices[this.faces[i][0]];\n        if(n.dot(vertex) < 0){\n            console.error(\".faceNormals[\" + i + \"] = Vec3(\"+n.toString()+\") looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.\");\n            for(var j=0; j<this.faces[i].length; j++){\n                console.warn(\".vertices[\"+this.faces[i][j]+\"] = Vec3(\"+this.vertices[this.faces[i][j]].toString()+\")\");\n            }\n        }\n    }\n};\n\n/**\n * Get face normal given 3 vertices\n * @static\n * @method getFaceNormal\n * @param {Vec3} va\n * @param {Vec3} vb\n * @param {Vec3} vc\n * @param {Vec3} target\n */\nvar cb = new Vec3();\nvar ab = new Vec3();\nConvexPolyhedron.computeNormal = function ( va, vb, vc, target ) {\n    vb.vsub(va,ab);\n    vc.vsub(vb,cb);\n    cb.cross(ab,target);\n    if ( !target.isZero() ) {\n        target.normalize();\n    }\n};\n\n/**\n * Compute the normal of a face from its vertices\n * @method getFaceNormal\n * @param  {Number} i\n * @param  {Vec3} target\n */\nConvexPolyhedron.prototype.getFaceNormal = function(i,target){\n    var f = this.faces[i];\n    var va = this.vertices[f[0]];\n    var vb = this.vertices[f[1]];\n    var vc = this.vertices[f[2]];\n    return ConvexPolyhedron.computeNormal(va,vb,vc,target);\n};\n\n/**\n * @method clipAgainstHull\n * @param {Vec3} posA\n * @param {Quaternion} quatA\n * @param {ConvexPolyhedron} hullB\n * @param {Vec3} posB\n * @param {Quaternion} quatB\n * @param {Vec3} separatingNormal\n * @param {Number} minDist Clamp distance\n * @param {Number} maxDist\n * @param {array} result The an array of contact point objects, see clipFaceAgainstHull\n * @see http://bullet.googlecode.com/svn/trunk/src/BulletCollision/NarrowPhaseCollision/btPolyhedralContactClipping.cpp\n */\nvar cah_WorldNormal = new Vec3();\nConvexPolyhedron.prototype.clipAgainstHull = function(posA,quatA,hullB,posB,quatB,separatingNormal,minDist,maxDist,result){\n    var WorldNormal = cah_WorldNormal;\n    var hullA = this;\n    var curMaxDist = maxDist;\n    var closestFaceB = -1;\n    var dmax = -Number.MAX_VALUE;\n    for(var face=0; face < hullB.faces.length; face++){\n        WorldNormal.copy(hullB.faceNormals[face]);\n        quatB.vmult(WorldNormal,WorldNormal);\n        //posB.vadd(WorldNormal,WorldNormal);\n        var d = WorldNormal.dot(separatingNormal);\n        if (d > dmax){\n            dmax = d;\n            closestFaceB = face;\n        }\n    }\n    var worldVertsB1 = [];\n    var polyB = hullB.faces[closestFaceB];\n    var numVertices = polyB.length;\n    for(var e0=0; e0<numVertices; e0++){\n        var b = hullB.vertices[polyB[e0]];\n        var worldb = new Vec3();\n        worldb.copy(b);\n        quatB.vmult(worldb,worldb);\n        posB.vadd(worldb,worldb);\n        worldVertsB1.push(worldb);\n    }\n\n    if (closestFaceB>=0){\n        this.clipFaceAgainstHull(separatingNormal,\n                                 posA,\n                                 quatA,\n                                 worldVertsB1,\n                                 minDist,\n                                 maxDist,\n                                 result);\n    }\n};\n\n/**\n * Find the separating axis between this hull and another\n * @method findSeparatingAxis\n * @param {ConvexPolyhedron} hullB\n * @param {Vec3} posA\n * @param {Quaternion} quatA\n * @param {Vec3} posB\n * @param {Quaternion} quatB\n * @param {Vec3} target The target vector to save the axis in\n * @return {bool} Returns false if a separation is found, else true\n */\nvar fsa_faceANormalWS3 = new Vec3(),\n    fsa_Worldnormal1 = new Vec3(),\n    fsa_deltaC = new Vec3(),\n    fsa_worldEdge0 = new Vec3(),\n    fsa_worldEdge1 = new Vec3(),\n    fsa_Cross = new Vec3();\nConvexPolyhedron.prototype.findSeparatingAxis = function(hullB,posA,quatA,posB,quatB,target, faceListA, faceListB){\n    var faceANormalWS3 = fsa_faceANormalWS3,\n        Worldnormal1 = fsa_Worldnormal1,\n        deltaC = fsa_deltaC,\n        worldEdge0 = fsa_worldEdge0,\n        worldEdge1 = fsa_worldEdge1,\n        Cross = fsa_Cross;\n\n    var dmin = Number.MAX_VALUE;\n    var hullA = this;\n    var curPlaneTests=0;\n\n    if(!hullA.uniqueAxes){\n\n        var numFacesA = faceListA ? faceListA.length : hullA.faces.length;\n\n        // Test face normals from hullA\n        for(var i=0; i<numFacesA; i++){\n            var fi = faceListA ? faceListA[i] : i;\n\n            // Get world face normal\n            faceANormalWS3.copy(hullA.faceNormals[fi]);\n            quatA.vmult(faceANormalWS3,faceANormalWS3);\n\n            var d = hullA.testSepAxis(faceANormalWS3, hullB, posA, quatA, posB, quatB);\n            if(d===false){\n                return false;\n            }\n\n            if(d<dmin){\n                dmin = d;\n                target.copy(faceANormalWS3);\n            }\n        }\n\n    } else {\n\n        // Test unique axes\n        for(var i = 0; i !== hullA.uniqueAxes.length; i++){\n\n            // Get world axis\n            quatA.vmult(hullA.uniqueAxes[i],faceANormalWS3);\n\n            var d = hullA.testSepAxis(faceANormalWS3, hullB, posA, quatA, posB, quatB);\n            if(d===false){\n                return false;\n            }\n\n            if(d<dmin){\n                dmin = d;\n                target.copy(faceANormalWS3);\n            }\n        }\n    }\n\n    if(!hullB.uniqueAxes){\n\n        // Test face normals from hullB\n        var numFacesB = faceListB ? faceListB.length : hullB.faces.length;\n        for(var i=0;i<numFacesB;i++){\n\n            var fi = faceListB ? faceListB[i] : i;\n\n            Worldnormal1.copy(hullB.faceNormals[fi]);\n            quatB.vmult(Worldnormal1,Worldnormal1);\n            curPlaneTests++;\n            var d = hullA.testSepAxis(Worldnormal1, hullB,posA,quatA,posB,quatB);\n            if(d===false){\n                return false;\n            }\n\n            if(d<dmin){\n                dmin = d;\n                target.copy(Worldnormal1);\n            }\n        }\n    } else {\n\n        // Test unique axes in B\n        for(var i = 0; i !== hullB.uniqueAxes.length; i++){\n            quatB.vmult(hullB.uniqueAxes[i],Worldnormal1);\n\n            curPlaneTests++;\n            var d = hullA.testSepAxis(Worldnormal1, hullB,posA,quatA,posB,quatB);\n            if(d===false){\n                return false;\n            }\n\n            if(d<dmin){\n                dmin = d;\n                target.copy(Worldnormal1);\n            }\n        }\n    }\n\n    // Test edges\n    for(var e0=0; e0 !== hullA.uniqueEdges.length; e0++){\n\n        // Get world edge\n        quatA.vmult(hullA.uniqueEdges[e0],worldEdge0);\n\n        for(var e1=0; e1 !== hullB.uniqueEdges.length; e1++){\n\n            // Get world edge 2\n            quatB.vmult(hullB.uniqueEdges[e1], worldEdge1);\n            worldEdge0.cross(worldEdge1,Cross);\n\n            if(!Cross.almostZero()){\n                Cross.normalize();\n                var dist = hullA.testSepAxis(Cross, hullB, posA, quatA, posB, quatB);\n                if(dist === false){\n                    return false;\n                }\n                if(dist < dmin){\n                    dmin = dist;\n                    target.copy(Cross);\n                }\n            }\n        }\n    }\n\n    posB.vsub(posA,deltaC);\n    if((deltaC.dot(target))>0.0){\n        target.negate(target);\n    }\n\n    return true;\n};\n\nvar maxminA=[], maxminB=[];\n\n/**\n * Test separating axis against two hulls. Both hulls are projected onto the axis and the overlap size is returned if there is one.\n * @method testSepAxis\n * @param {Vec3} axis\n * @param {ConvexPolyhedron} hullB\n * @param {Vec3} posA\n * @param {Quaternion} quatA\n * @param {Vec3} posB\n * @param {Quaternion} quatB\n * @return {number} The overlap depth, or FALSE if no penetration.\n */\nConvexPolyhedron.prototype.testSepAxis = function(axis, hullB, posA, quatA, posB, quatB){\n    var hullA=this;\n    ConvexPolyhedron.project(hullA, axis, posA, quatA, maxminA);\n    ConvexPolyhedron.project(hullB, axis, posB, quatB, maxminB);\n    var maxA = maxminA[0];\n    var minA = maxminA[1];\n    var maxB = maxminB[0];\n    var minB = maxminB[1];\n    if(maxA<minB || maxB<minA){\n        return false; // Separated\n    }\n    var d0 = maxA - minB;\n    var d1 = maxB - minA;\n    var depth = d0<d1 ? d0:d1;\n    return depth;\n};\n\nvar cli_aabbmin = new Vec3(),\n    cli_aabbmax = new Vec3();\n\n/**\n * @method calculateLocalInertia\n * @param  {Number} mass\n * @param  {Vec3} target\n */\nConvexPolyhedron.prototype.calculateLocalInertia = function(mass,target){\n    // Approximate with box inertia\n    // Exact inertia calculation is overkill, but see http://geometrictools.com/Documentation/PolyhedralMassProperties.pdf for the correct way to do it\n    this.computeLocalAABB(cli_aabbmin,cli_aabbmax);\n    var x = cli_aabbmax.x - cli_aabbmin.x,\n        y = cli_aabbmax.y - cli_aabbmin.y,\n        z = cli_aabbmax.z - cli_aabbmin.z;\n    target.x = 1.0 / 12.0 * mass * ( 2*y*2*y + 2*z*2*z );\n    target.y = 1.0 / 12.0 * mass * ( 2*x*2*x + 2*z*2*z );\n    target.z = 1.0 / 12.0 * mass * ( 2*y*2*y + 2*x*2*x );\n};\n\n/**\n * @method getPlaneConstantOfFace\n * @param  {Number} face_i Index of the face\n * @return {Number}\n */\nConvexPolyhedron.prototype.getPlaneConstantOfFace = function(face_i){\n    var f = this.faces[face_i];\n    var n = this.faceNormals[face_i];\n    var v = this.vertices[f[0]];\n    var c = -n.dot(v);\n    return c;\n};\n\n/**\n * Clip a face against a hull.\n * @method clipFaceAgainstHull\n * @param {Vec3} separatingNormal\n * @param {Vec3} posA\n * @param {Quaternion} quatA\n * @param {Array} worldVertsB1 An array of Vec3 with vertices in the world frame.\n * @param {Number} minDist Distance clamping\n * @param {Number} maxDist\n * @param Array result Array to store resulting contact points in. Will be objects with properties: point, depth, normal. These are represented in world coordinates.\n */\nvar cfah_faceANormalWS = new Vec3(),\n    cfah_edge0 = new Vec3(),\n    cfah_WorldEdge0 = new Vec3(),\n    cfah_worldPlaneAnormal1 = new Vec3(),\n    cfah_planeNormalWS1 = new Vec3(),\n    cfah_worldA1 = new Vec3(),\n    cfah_localPlaneNormal = new Vec3(),\n    cfah_planeNormalWS = new Vec3();\nConvexPolyhedron.prototype.clipFaceAgainstHull = function(separatingNormal, posA, quatA, worldVertsB1, minDist, maxDist,result){\n    var faceANormalWS = cfah_faceANormalWS,\n        edge0 = cfah_edge0,\n        WorldEdge0 = cfah_WorldEdge0,\n        worldPlaneAnormal1 = cfah_worldPlaneAnormal1,\n        planeNormalWS1 = cfah_planeNormalWS1,\n        worldA1 = cfah_worldA1,\n        localPlaneNormal = cfah_localPlaneNormal,\n        planeNormalWS = cfah_planeNormalWS;\n\n    var hullA = this;\n    var worldVertsB2 = [];\n    var pVtxIn = worldVertsB1;\n    var pVtxOut = worldVertsB2;\n    // Find the face with normal closest to the separating axis\n    var closestFaceA = -1;\n    var dmin = Number.MAX_VALUE;\n    for(var face=0; face<hullA.faces.length; face++){\n        faceANormalWS.copy(hullA.faceNormals[face]);\n        quatA.vmult(faceANormalWS,faceANormalWS);\n        //posA.vadd(faceANormalWS,faceANormalWS);\n        var d = faceANormalWS.dot(separatingNormal);\n        if (d < dmin){\n            dmin = d;\n            closestFaceA = face;\n        }\n    }\n    if (closestFaceA < 0){\n        // console.log(\"--- did not find any closest face... ---\");\n        return;\n    }\n    //console.log(\"closest A: \",closestFaceA);\n    // Get the face and construct connected faces\n    var polyA = hullA.faces[closestFaceA];\n    polyA.connectedFaces = [];\n    for(var i=0; i<hullA.faces.length; i++){\n        for(var j=0; j<hullA.faces[i].length; j++){\n            if(polyA.indexOf(hullA.faces[i][j])!==-1 /* Sharing a vertex*/ && i!==closestFaceA /* Not the one we are looking for connections from */ && polyA.connectedFaces.indexOf(i)===-1 /* Not already added */ ){\n                polyA.connectedFaces.push(i);\n            }\n        }\n    }\n    // Clip the polygon to the back of the planes of all faces of hull A, that are adjacent to the witness face\n    var numContacts = pVtxIn.length;\n    var numVerticesA = polyA.length;\n    var res = [];\n    for(var e0=0; e0<numVerticesA; e0++){\n        var a = hullA.vertices[polyA[e0]];\n        var b = hullA.vertices[polyA[(e0+1)%numVerticesA]];\n        a.vsub(b,edge0);\n        WorldEdge0.copy(edge0);\n        quatA.vmult(WorldEdge0,WorldEdge0);\n        posA.vadd(WorldEdge0,WorldEdge0);\n        worldPlaneAnormal1.copy(this.faceNormals[closestFaceA]);//transA.getBasis()* btVector3(polyA.m_plane[0],polyA.m_plane[1],polyA.m_plane[2]);\n        quatA.vmult(worldPlaneAnormal1,worldPlaneAnormal1);\n        posA.vadd(worldPlaneAnormal1,worldPlaneAnormal1);\n        WorldEdge0.cross(worldPlaneAnormal1,planeNormalWS1);\n        planeNormalWS1.negate(planeNormalWS1);\n        worldA1.copy(a);\n        quatA.vmult(worldA1,worldA1);\n        posA.vadd(worldA1,worldA1);\n        var planeEqWS1 = -worldA1.dot(planeNormalWS1);\n        var planeEqWS;\n        if(true){\n            var otherFace = polyA.connectedFaces[e0];\n            localPlaneNormal.copy(this.faceNormals[otherFace]);\n            var localPlaneEq = this.getPlaneConstantOfFace(otherFace);\n\n            planeNormalWS.copy(localPlaneNormal);\n            quatA.vmult(planeNormalWS,planeNormalWS);\n            //posA.vadd(planeNormalWS,planeNormalWS);\n            var planeEqWS = localPlaneEq - planeNormalWS.dot(posA);\n        } else  {\n            planeNormalWS.copy(planeNormalWS1);\n            planeEqWS = planeEqWS1;\n        }\n\n        // Clip face against our constructed plane\n        this.clipFaceAgainstPlane(pVtxIn, pVtxOut, planeNormalWS, planeEqWS);\n\n        // Throw away all clipped points, but save the reamining until next clip\n        while(pVtxIn.length){\n            pVtxIn.shift();\n        }\n        while(pVtxOut.length){\n            pVtxIn.push(pVtxOut.shift());\n        }\n    }\n\n    //console.log(\"Resulting points after clip:\",pVtxIn);\n\n    // only keep contact points that are behind the witness face\n    localPlaneNormal.copy(this.faceNormals[closestFaceA]);\n\n    var localPlaneEq = this.getPlaneConstantOfFace(closestFaceA);\n    planeNormalWS.copy(localPlaneNormal);\n    quatA.vmult(planeNormalWS,planeNormalWS);\n\n    var planeEqWS = localPlaneEq - planeNormalWS.dot(posA);\n    for (var i=0; i<pVtxIn.length; i++){\n        var depth = planeNormalWS.dot(pVtxIn[i]) + planeEqWS; //???\n        /*console.log(\"depth calc from normal=\",planeNormalWS.toString(),\" and constant \"+planeEqWS+\" and vertex \",pVtxIn[i].toString(),\" gives \"+depth);*/\n        if (depth <=minDist){\n            console.log(\"clamped: depth=\"+depth+\" to minDist=\"+(minDist+\"\"));\n            depth = minDist;\n        }\n\n        if (depth <=maxDist){\n            var point = pVtxIn[i];\n            if(depth<=0){\n                /*console.log(\"Got contact point \",point.toString(),\n                  \", depth=\",depth,\n                  \"contact normal=\",separatingNormal.toString(),\n                  \"plane\",planeNormalWS.toString(),\n                  \"planeConstant\",planeEqWS);*/\n                var p = {\n                    point:point,\n                    normal:planeNormalWS,\n                    depth: depth,\n                };\n                result.push(p);\n            }\n        }\n    }\n};\n\n/**\n * Clip a face in a hull against the back of a plane.\n * @method clipFaceAgainstPlane\n * @param {Array} inVertices\n * @param {Array} outVertices\n * @param {Vec3} planeNormal\n * @param {Number} planeConstant The constant in the mathematical plane equation\n */\nConvexPolyhedron.prototype.clipFaceAgainstPlane = function(inVertices,outVertices, planeNormal, planeConstant){\n    var n_dot_first, n_dot_last;\n    var numVerts = inVertices.length;\n\n    if(numVerts < 2){\n        return outVertices;\n    }\n\n    var firstVertex = inVertices[inVertices.length-1],\n        lastVertex =   inVertices[0];\n\n    n_dot_first = planeNormal.dot(firstVertex) + planeConstant;\n\n    for(var vi = 0; vi < numVerts; vi++){\n        lastVertex = inVertices[vi];\n        n_dot_last = planeNormal.dot(lastVertex) + planeConstant;\n        if(n_dot_first < 0){\n            if(n_dot_last < 0){\n                // Start < 0, end < 0, so output lastVertex\n                var newv = new Vec3();\n                newv.copy(lastVertex);\n                outVertices.push(newv);\n            } else {\n                // Start < 0, end >= 0, so output intersection\n                var newv = new Vec3();\n                firstVertex.lerp(lastVertex,\n                                 n_dot_first / (n_dot_first - n_dot_last),\n                                 newv);\n                outVertices.push(newv);\n            }\n        } else {\n            if(n_dot_last<0){\n                // Start >= 0, end < 0 so output intersection and end\n                var newv = new Vec3();\n                firstVertex.lerp(lastVertex,\n                                 n_dot_first / (n_dot_first - n_dot_last),\n                                 newv);\n                outVertices.push(newv);\n                outVertices.push(lastVertex);\n            }\n        }\n        firstVertex = lastVertex;\n        n_dot_first = n_dot_last;\n    }\n    return outVertices;\n};\n\n// Updates .worldVertices and sets .worldVerticesNeedsUpdate to false.\nConvexPolyhedron.prototype.computeWorldVertices = function(position,quat){\n    var N = this.vertices.length;\n    while(this.worldVertices.length < N){\n        this.worldVertices.push( new Vec3() );\n    }\n\n    var verts = this.vertices,\n        worldVerts = this.worldVertices;\n    for(var i=0; i!==N; i++){\n        quat.vmult( verts[i] , worldVerts[i] );\n        position.vadd( worldVerts[i] , worldVerts[i] );\n    }\n\n    this.worldVerticesNeedsUpdate = false;\n};\n\nvar computeLocalAABB_worldVert = new Vec3();\nConvexPolyhedron.prototype.computeLocalAABB = function(aabbmin,aabbmax){\n    var n = this.vertices.length,\n        vertices = this.vertices,\n        worldVert = computeLocalAABB_worldVert;\n\n    aabbmin.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n    aabbmax.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n\n    for(var i=0; i<n; i++){\n        var v = vertices[i];\n        if     (v.x < aabbmin.x){\n            aabbmin.x = v.x;\n        } else if(v.x > aabbmax.x){\n            aabbmax.x = v.x;\n        }\n        if     (v.y < aabbmin.y){\n            aabbmin.y = v.y;\n        } else if(v.y > aabbmax.y){\n            aabbmax.y = v.y;\n        }\n        if     (v.z < aabbmin.z){\n            aabbmin.z = v.z;\n        } else if(v.z > aabbmax.z){\n            aabbmax.z = v.z;\n        }\n    }\n};\n\n/**\n * Updates .worldVertices and sets .worldVerticesNeedsUpdate to false.\n * @method computeWorldFaceNormals\n * @param  {Quaternion} quat\n */\nConvexPolyhedron.prototype.computeWorldFaceNormals = function(quat){\n    var N = this.faceNormals.length;\n    while(this.worldFaceNormals.length < N){\n        this.worldFaceNormals.push( new Vec3() );\n    }\n\n    var normals = this.faceNormals,\n        worldNormals = this.worldFaceNormals;\n    for(var i=0; i!==N; i++){\n        quat.vmult( normals[i] , worldNormals[i] );\n    }\n\n    this.worldFaceNormalsNeedsUpdate = false;\n};\n\n/**\n * @method updateBoundingSphereRadius\n */\nConvexPolyhedron.prototype.updateBoundingSphereRadius = function(){\n    // Assume points are distributed with local (0,0,0) as center\n    var max2 = 0;\n    var verts = this.vertices;\n    for(var i=0, N=verts.length; i!==N; i++) {\n        var norm2 = verts[i].norm2();\n        if(norm2 > max2){\n            max2 = norm2;\n        }\n    }\n    this.boundingSphereRadius = Math.sqrt(max2);\n};\n\nvar tempWorldVertex = new Vec3();\n\n/**\n * @method calculateWorldAABB\n * @param {Vec3}        pos\n * @param {Quaternion}  quat\n * @param {Vec3}        min\n * @param {Vec3}        max\n */\nConvexPolyhedron.prototype.calculateWorldAABB = function(pos,quat,min,max){\n    var n = this.vertices.length, verts = this.vertices;\n    var minx,miny,minz,maxx,maxy,maxz;\n    for(var i=0; i<n; i++){\n        tempWorldVertex.copy(verts[i]);\n        quat.vmult(tempWorldVertex,tempWorldVertex);\n        pos.vadd(tempWorldVertex,tempWorldVertex);\n        var v = tempWorldVertex;\n        if     (v.x < minx || minx===undefined){\n            minx = v.x;\n        } else if(v.x > maxx || maxx===undefined){\n            maxx = v.x;\n        }\n\n        if     (v.y < miny || miny===undefined){\n            miny = v.y;\n        } else if(v.y > maxy || maxy===undefined){\n            maxy = v.y;\n        }\n\n        if     (v.z < minz || minz===undefined){\n            minz = v.z;\n        } else if(v.z > maxz || maxz===undefined){\n            maxz = v.z;\n        }\n    }\n    min.set(minx,miny,minz);\n    max.set(maxx,maxy,maxz);\n};\n\n/**\n * Get approximate convex volume\n * @method volume\n * @return {Number}\n */\nConvexPolyhedron.prototype.volume = function(){\n    return 4.0 * Math.PI * this.boundingSphereRadius / 3.0;\n};\n\n/**\n * Get an average of all the vertices positions\n * @method getAveragePointLocal\n * @param  {Vec3} target\n * @return {Vec3}\n */\nConvexPolyhedron.prototype.getAveragePointLocal = function(target){\n    target = target || new Vec3();\n    var n = this.vertices.length,\n        verts = this.vertices;\n    for(var i=0; i<n; i++){\n        target.vadd(verts[i],target);\n    }\n    target.mult(1/n,target);\n    return target;\n};\n\n/**\n * Transform all local points. Will change the .vertices\n * @method transformAllPoints\n * @param  {Vec3} offset\n * @param  {Quaternion} quat\n */\nConvexPolyhedron.prototype.transformAllPoints = function(offset,quat){\n    var n = this.vertices.length,\n        verts = this.vertices;\n\n    // Apply rotation\n    if(quat){\n        // Rotate vertices\n        for(var i=0; i<n; i++){\n            var v = verts[i];\n            quat.vmult(v,v);\n        }\n        // Rotate face normals\n        for(var i=0; i<this.faceNormals.length; i++){\n            var v = this.faceNormals[i];\n            quat.vmult(v,v);\n        }\n        /*\n        // Rotate edges\n        for(var i=0; i<this.uniqueEdges.length; i++){\n            var v = this.uniqueEdges[i];\n            quat.vmult(v,v);\n        }*/\n    }\n\n    // Apply offset\n    if(offset){\n        for(var i=0; i<n; i++){\n            var v = verts[i];\n            v.vadd(offset,v);\n        }\n    }\n};\n\n/**\n * Checks whether p is inside the polyhedra. Must be in local coords. The point lies outside of the convex hull of the other points if and only if the direction of all the vectors from it to those other points are on less than one half of a sphere around it.\n * @method pointIsInside\n * @param  {Vec3} p      A point given in local coordinates\n * @return {Boolean}\n */\nvar ConvexPolyhedron_pointIsInside = new Vec3();\nvar ConvexPolyhedron_vToP = new Vec3();\nvar ConvexPolyhedron_vToPointInside = new Vec3();\nConvexPolyhedron.prototype.pointIsInside = function(p){\n    var n = this.vertices.length,\n        verts = this.vertices,\n        faces = this.faces,\n        normals = this.faceNormals;\n    var positiveResult = null;\n    var N = this.faces.length;\n    var pointInside = ConvexPolyhedron_pointIsInside;\n    this.getAveragePointLocal(pointInside);\n    for(var i=0; i<N; i++){\n        var numVertices = this.faces[i].length;\n        var n = normals[i];\n        var v = verts[faces[i][0]]; // We only need one point in the face\n\n        // This dot product determines which side of the edge the point is\n        var vToP = ConvexPolyhedron_vToP;\n        p.vsub(v,vToP);\n        var r1 = n.dot(vToP);\n\n        var vToPointInside = ConvexPolyhedron_vToPointInside;\n        pointInside.vsub(v,vToPointInside);\n        var r2 = n.dot(vToPointInside);\n\n        if((r1<0 && r2>0) || (r1>0 && r2<0)){\n            return false; // Encountered some other sign. Exit.\n        } else {\n        }\n    }\n\n    // If we got here, all dot products were of the same sign.\n    return positiveResult ? 1 : -1;\n};\n\n/**\n * Get max and min dot product of a convex hull at position (pos,quat) projected onto an axis. Results are saved in the array maxmin.\n * @static\n * @method project\n * @param {ConvexPolyhedron} hull\n * @param {Vec3} axis\n * @param {Vec3} pos\n * @param {Quaternion} quat\n * @param {array} result result[0] and result[1] will be set to maximum and minimum, respectively.\n */\nvar project_worldVertex = new Vec3();\nvar project_localAxis = new Vec3();\nvar project_localOrigin = new Vec3();\nConvexPolyhedron.project = function(hull, axis, pos, quat, result){\n    var n = hull.vertices.length,\n        worldVertex = project_worldVertex,\n        localAxis = project_localAxis,\n        max = 0,\n        min = 0,\n        localOrigin = project_localOrigin,\n        vs = hull.vertices;\n\n    localOrigin.setZero();\n\n    // Transform the axis to local\n    Transform.vectorToLocalFrame(pos, quat, axis, localAxis);\n    Transform.pointToLocalFrame(pos, quat, localOrigin, localOrigin);\n    var add = localOrigin.dot(localAxis);\n\n    min = max = vs[0].dot(localAxis);\n\n    for(var i = 1; i < n; i++){\n        var val = vs[i].dot(localAxis);\n\n        if(val > max){\n            max = val;\n        }\n\n        if(val < min){\n            min = val;\n        }\n    }\n\n    min -= add;\n    max -= add;\n\n    if(min > max){\n        // Inconsistent - swap\n        var temp = min;\n        min = max;\n        max = temp;\n    }\n    // Output\n    result[0] = max;\n    result[1] = min;\n};\n\n},{\"../math/Quaternion\":28,\"../math/Transform\":29,\"../math/Vec3\":30,\"./Shape\":43}],39:[function(_dereq_,module,exports){\nmodule.exports = Cylinder;\n\nvar Shape = _dereq_('./Shape');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar ConvexPolyhedron = _dereq_('./ConvexPolyhedron');\n\n/**\n * @class Cylinder\n * @constructor\n * @extends ConvexPolyhedron\n * @author schteppe / https://github.com/schteppe\n * @param {Number} radiusTop\n * @param {Number} radiusBottom\n * @param {Number} height\n * @param {Number} numSegments The number of segments to build the cylinder out of\n */\nfunction Cylinder( radiusTop, radiusBottom, height , numSegments ) {\n    var N = numSegments,\n        verts = [],\n        axes = [],\n        faces = [],\n        bottomface = [],\n        topface = [],\n        cos = Math.cos,\n        sin = Math.sin;\n\n    // First bottom point\n    verts.push(new Vec3(radiusBottom*cos(0),\n                               radiusBottom*sin(0),\n                               -height*0.5));\n    bottomface.push(0);\n\n    // First top point\n    verts.push(new Vec3(radiusTop*cos(0),\n                               radiusTop*sin(0),\n                               height*0.5));\n    topface.push(1);\n\n    for(var i=0; i<N; i++){\n        var theta = 2*Math.PI/N * (i+1);\n        var thetaN = 2*Math.PI/N * (i+0.5);\n        if(i<N-1){\n            // Bottom\n            verts.push(new Vec3(radiusBottom*cos(theta),\n                                       radiusBottom*sin(theta),\n                                       -height*0.5));\n            bottomface.push(2*i+2);\n            // Top\n            verts.push(new Vec3(radiusTop*cos(theta),\n                                       radiusTop*sin(theta),\n                                       height*0.5));\n            topface.push(2*i+3);\n\n            // Face\n            faces.push([2*i+2, 2*i+3, 2*i+1,2*i]);\n        } else {\n            faces.push([0,1, 2*i+1, 2*i]); // Connect\n        }\n\n        // Axis: we can cut off half of them if we have even number of segments\n        if(N % 2 === 1 || i < N / 2){\n            axes.push(new Vec3(cos(thetaN), sin(thetaN), 0));\n        }\n    }\n    faces.push(topface);\n    axes.push(new Vec3(0,0,1));\n\n    // Reorder bottom face\n    var temp = [];\n    for(var i=0; i<bottomface.length; i++){\n        temp.push(bottomface[bottomface.length - i - 1]);\n    }\n    faces.push(temp);\n\n    this.type = Shape.types.CONVEXPOLYHEDRON;\n    ConvexPolyhedron.call( this, verts, faces, axes );\n}\n\nCylinder.prototype = new ConvexPolyhedron();\n\n},{\"../math/Quaternion\":28,\"../math/Vec3\":30,\"./ConvexPolyhedron\":38,\"./Shape\":43}],40:[function(_dereq_,module,exports){\nvar Shape = _dereq_('./Shape');\nvar ConvexPolyhedron = _dereq_('./ConvexPolyhedron');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Utils = _dereq_('../utils/Utils');\n\nmodule.exports = Heightfield;\n\n/**\n * Heightfield shape class. Height data is given as an array. These data points are spread out evenly with a given distance.\n * @class Heightfield\n * @extends Shape\n * @constructor\n * @param {Array} data An array of Y values that will be used to construct the terrain.\n * @param {object} options\n * @param {Number} [options.minValue] Minimum value of the data points in the data array. Will be computed automatically if not given.\n * @param {Number} [options.maxValue] Maximum value.\n * @param {Number} [options.elementSize=0.1] World spacing between the data points in X direction.\n * @todo Should be possible to use along all axes, not just y\n *\n * @example\n *     // Generate some height data (y-values).\n *     var data = [];\n *     for(var i = 0; i < 1000; i++){\n *         var y = 0.5 * Math.cos(0.2 * i);\n *         data.push(y);\n *     }\n *\n *     // Create the heightfield shape\n *     var heightfieldShape = new Heightfield(data, {\n *         elementSize: 1 // Distance between the data points in X and Y directions\n *     });\n *     var heightfieldBody = new Body();\n *     heightfieldBody.addShape(heightfieldShape);\n *     world.addBody(heightfieldBody);\n */\nfunction Heightfield(data, options){\n    options = Utils.defaults(options, {\n        maxValue : null,\n        minValue : null,\n        elementSize : 1\n    });\n\n    /**\n     * An array of numbers, or height values, that are spread out along the x axis.\n     * @property {array} data\n     */\n    this.data = data;\n\n    /**\n     * Max value of the data\n     * @property {number} maxValue\n     */\n    this.maxValue = options.maxValue;\n\n    /**\n     * Max value of the data\n     * @property {number} minValue\n     */\n    this.minValue = options.minValue;\n\n    /**\n     * The width of each element\n     * @property {number} elementSize\n     * @todo elementSizeX and Y\n     */\n    this.elementSize = options.elementSize;\n\n    if(options.minValue === null){\n        this.updateMinValue();\n    }\n    if(options.maxValue === null){\n        this.updateMaxValue();\n    }\n\n    this.cacheEnabled = true;\n\n    Shape.call(this);\n\n    this.pillarConvex = new ConvexPolyhedron();\n    this.pillarOffset = new Vec3();\n\n    this.type = Shape.types.HEIGHTFIELD;\n    this.updateBoundingSphereRadius();\n\n    // \"i_j_isUpper\" => { convex: ..., offset: ... }\n    // for example:\n    // _cachedPillars[\"0_2_1\"]\n    this._cachedPillars = {};\n}\nHeightfield.prototype = new Shape();\n\n/**\n * Call whenever you change the data array.\n * @method update\n */\nHeightfield.prototype.update = function(){\n    this._cachedPillars = {};\n};\n\n/**\n * Update the .minValue property\n * @method updateMinValue\n */\nHeightfield.prototype.updateMinValue = function(){\n    var data = this.data;\n    var minValue = data[0][0];\n    for(var i=0; i !== data.length; i++){\n        for(var j=0; j !== data[i].length; j++){\n            var v = data[i][j];\n            if(v < minValue){\n                minValue = v;\n            }\n        }\n    }\n    this.minValue = minValue;\n};\n\n/**\n * Update the .maxValue property\n * @method updateMaxValue\n */\nHeightfield.prototype.updateMaxValue = function(){\n    var data = this.data;\n    var maxValue = data[0][0];\n    for(var i=0; i !== data.length; i++){\n        for(var j=0; j !== data[i].length; j++){\n            var v = data[i][j];\n            if(v > maxValue){\n                maxValue = v;\n            }\n        }\n    }\n    this.maxValue = maxValue;\n};\n\n/**\n * Set the height value at an index. Don't forget to update maxValue and minValue after you're done.\n * @method setHeightValueAtIndex\n * @param {integer} xi\n * @param {integer} yi\n * @param {number} value\n */\nHeightfield.prototype.setHeightValueAtIndex = function(xi, yi, value){\n    var data = this.data;\n    data[xi][yi] = value;\n\n    // Invalidate cache\n    this.clearCachedConvexTrianglePillar(xi, yi, false);\n    if(xi > 0){\n        this.clearCachedConvexTrianglePillar(xi - 1, yi, true);\n        this.clearCachedConvexTrianglePillar(xi - 1, yi, false);\n    }\n    if(yi > 0){\n        this.clearCachedConvexTrianglePillar(xi, yi - 1, true);\n        this.clearCachedConvexTrianglePillar(xi, yi - 1, false);\n    }\n    if(yi > 0 && xi > 0){\n        this.clearCachedConvexTrianglePillar(xi - 1, yi - 1, true);\n    }\n};\n\n/**\n * Get max/min in a rectangle in the matrix data\n * @method getRectMinMax\n * @param  {integer} iMinX\n * @param  {integer} iMinY\n * @param  {integer} iMaxX\n * @param  {integer} iMaxY\n * @param  {array} [result] An array to store the results in.\n * @return {array} The result array, if it was passed in. Minimum will be at position 0 and max at 1.\n */\nHeightfield.prototype.getRectMinMax = function (iMinX, iMinY, iMaxX, iMaxY, result) {\n    result = result || [];\n\n    // Get max and min of the data\n    var data = this.data,\n        max = this.minValue; // Set first value\n    for(var i = iMinX; i <= iMaxX; i++){\n        for(var j = iMinY; j <= iMaxY; j++){\n            var height = data[i][j];\n            if(height > max){\n                max = height;\n            }\n        }\n    }\n\n    result[0] = this.minValue;\n    result[1] = max;\n};\n\n/**\n * Get the index of a local position on the heightfield. The indexes indicate the rectangles, so if your terrain is made of N x N height data points, you will have rectangle indexes ranging from 0 to N-1.\n * @method getIndexOfPosition\n * @param  {number} x\n * @param  {number} y\n * @param  {array} result Two-element array\n * @param  {boolean} clamp If the position should be clamped to the heightfield edge.\n * @return {boolean}\n */\nHeightfield.prototype.getIndexOfPosition = function (x, y, result, clamp) {\n\n    // Get the index of the data points to test against\n    var w = this.elementSize;\n    var data = this.data;\n    var xi = Math.floor(x / w);\n    var yi = Math.floor(y / w);\n\n    result[0] = xi;\n    result[1] = yi;\n\n    if(clamp){\n        // Clamp index to edges\n        if(xi < 0){ xi = 0; }\n        if(yi < 0){ yi = 0; }\n        if(xi >= data.length - 1){ xi = data.length - 1; }\n        if(yi >= data[0].length - 1){ yi = data[0].length - 1; }\n    }\n\n    // Bail out if we are out of the terrain\n    if(xi < 0 || yi < 0 || xi >= data.length-1 || yi >= data[0].length-1){\n        return false;\n    }\n\n    return true;\n};\n\nHeightfield.prototype.getHeightAt = function(x, y, edgeClamp){\n    var idx = [];\n    this.getIndexOfPosition(x, y, idx, edgeClamp);\n\n    // TODO: get upper or lower triangle, then use barycentric interpolation to get the height in the triangle.\n    var minmax = [];\n    this.getRectMinMax(idx[0], idx[1] + 1, idx[0], idx[1] + 1, minmax);\n\n    return (minmax[0] + minmax[1]) / 2; // average\n};\n\nHeightfield.prototype.getCacheConvexTrianglePillarKey = function(xi, yi, getUpperTriangle){\n    return xi + '_' + yi + '_' + (getUpperTriangle ? 1 : 0);\n};\n\nHeightfield.prototype.getCachedConvexTrianglePillar = function(xi, yi, getUpperTriangle){\n    return this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)];\n};\n\nHeightfield.prototype.setCachedConvexTrianglePillar = function(xi, yi, getUpperTriangle, convex, offset){\n    this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)] = {\n        convex: convex,\n        offset: offset\n    };\n};\n\nHeightfield.prototype.clearCachedConvexTrianglePillar = function(xi, yi, getUpperTriangle){\n    delete this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)];\n};\n\n/**\n * Get a triangle in the terrain in the form of a triangular convex shape.\n * @method getConvexTrianglePillar\n * @param  {integer} i\n * @param  {integer} j\n * @param  {boolean} getUpperTriangle\n */\nHeightfield.prototype.getConvexTrianglePillar = function(xi, yi, getUpperTriangle){\n    var result = this.pillarConvex;\n    var offsetResult = this.pillarOffset;\n\n    if(this.cacheEnabled){\n        var data = this.getCachedConvexTrianglePillar(xi, yi, getUpperTriangle);\n        if(data){\n            this.pillarConvex = data.convex;\n            this.pillarOffset = data.offset;\n            return;\n        }\n\n        result = new ConvexPolyhedron();\n        offsetResult = new Vec3();\n\n        this.pillarConvex = result;\n        this.pillarOffset = offsetResult;\n    }\n\n    var data = this.data;\n    var elementSize = this.elementSize;\n    var faces = result.faces;\n\n    // Reuse verts if possible\n    result.vertices.length = 6;\n    for (var i = 0; i < 6; i++) {\n        if(!result.vertices[i]){\n            result.vertices[i] = new Vec3();\n        }\n    }\n\n    // Reuse faces if possible\n    faces.length = 5;\n    for (var i = 0; i < 5; i++) {\n        if(!faces[i]){\n            faces[i] = [];\n        }\n    }\n\n    var verts = result.vertices;\n\n    var h = (Math.min(\n        data[xi][yi],\n        data[xi+1][yi],\n        data[xi][yi+1],\n        data[xi+1][yi+1]\n    ) - this.minValue ) / 2 + this.minValue;\n\n    if (!getUpperTriangle) {\n\n        // Center of the triangle pillar - all polygons are given relative to this one\n        offsetResult.set(\n            (xi + 0.25) * elementSize, // sort of center of a triangle\n            (yi + 0.25) * elementSize,\n            h // vertical center\n        );\n\n        // Top triangle verts\n        verts[0].set(\n            -0.25 * elementSize,\n            -0.25 * elementSize,\n            data[xi][yi] - h\n        );\n        verts[1].set(\n            0.75 * elementSize,\n            -0.25 * elementSize,\n            data[xi + 1][yi] - h\n        );\n        verts[2].set(\n            -0.25 * elementSize,\n            0.75 * elementSize,\n            data[xi][yi + 1] - h\n        );\n\n        // bottom triangle verts\n        verts[3].set(\n            -0.25 * elementSize,\n            -0.25 * elementSize,\n            -h-1\n        );\n        verts[4].set(\n            0.75 * elementSize,\n            -0.25 * elementSize,\n            -h-1\n        );\n        verts[5].set(\n            -0.25 * elementSize,\n            0.75  * elementSize,\n            -h-1\n        );\n\n        // top triangle\n        faces[0][0] = 0;\n        faces[0][1] = 1;\n        faces[0][2] = 2;\n\n        // bottom triangle\n        faces[1][0] = 5;\n        faces[1][1] = 4;\n        faces[1][2] = 3;\n\n        // -x facing quad\n        faces[2][0] = 0;\n        faces[2][1] = 2;\n        faces[2][2] = 5;\n        faces[2][3] = 3;\n\n        // -y facing quad\n        faces[3][0] = 1;\n        faces[3][1] = 0;\n        faces[3][2] = 3;\n        faces[3][3] = 4;\n\n        // +xy facing quad\n        faces[4][0] = 4;\n        faces[4][1] = 5;\n        faces[4][2] = 2;\n        faces[4][3] = 1;\n\n\n    } else {\n\n        // Center of the triangle pillar - all polygons are given relative to this one\n        offsetResult.set(\n            (xi + 0.75) * elementSize, // sort of center of a triangle\n            (yi + 0.75) * elementSize,\n            h // vertical center\n        );\n\n        // Top triangle verts\n        verts[0].set(\n            0.25 * elementSize,\n            0.25 * elementSize,\n            data[xi + 1][yi + 1] - h\n        );\n        verts[1].set(\n            -0.75 * elementSize,\n            0.25 * elementSize,\n            data[xi][yi + 1] - h\n        );\n        verts[2].set(\n            0.25 * elementSize,\n            -0.75 * elementSize,\n            data[xi + 1][yi] - h\n        );\n\n        // bottom triangle verts\n        verts[3].set(\n            0.25 * elementSize,\n            0.25 * elementSize,\n            - h-1\n        );\n        verts[4].set(\n            -0.75 * elementSize,\n            0.25 * elementSize,\n            - h-1\n        );\n        verts[5].set(\n            0.25 * elementSize,\n            -0.75 * elementSize,\n            - h-1\n        );\n\n        // Top triangle\n        faces[0][0] = 0;\n        faces[0][1] = 1;\n        faces[0][2] = 2;\n\n        // bottom triangle\n        faces[1][0] = 5;\n        faces[1][1] = 4;\n        faces[1][2] = 3;\n\n        // +x facing quad\n        faces[2][0] = 2;\n        faces[2][1] = 5;\n        faces[2][2] = 3;\n        faces[2][3] = 0;\n\n        // +y facing quad\n        faces[3][0] = 3;\n        faces[3][1] = 4;\n        faces[3][2] = 1;\n        faces[3][3] = 0;\n\n        // -xy facing quad\n        faces[4][0] = 1;\n        faces[4][1] = 4;\n        faces[4][2] = 5;\n        faces[4][3] = 2;\n    }\n\n    result.computeNormals();\n    result.computeEdges();\n    result.updateBoundingSphereRadius();\n\n    this.setCachedConvexTrianglePillar(xi, yi, getUpperTriangle, result, offsetResult);\n};\n\nHeightfield.prototype.calculateLocalInertia = function(mass, target){\n    target = target || new Vec3();\n    target.set(0, 0, 0);\n    return target;\n};\n\nHeightfield.prototype.volume = function(){\n    return Number.MAX_VALUE; // The terrain is infinite\n};\n\nHeightfield.prototype.calculateWorldAABB = function(pos, quat, min, max){\n    // TODO: do it properly\n    min.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n    max.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n};\n\nHeightfield.prototype.updateBoundingSphereRadius = function(){\n    // Use the bounding box of the min/max values\n    var data = this.data,\n        s = this.elementSize;\n    this.boundingSphereRadius = new Vec3(data.length * s, data[0].length * s, Math.max(Math.abs(this.maxValue), Math.abs(this.minValue))).norm();\n};\n\n},{\"../math/Vec3\":30,\"../utils/Utils\":53,\"./ConvexPolyhedron\":38,\"./Shape\":43}],41:[function(_dereq_,module,exports){\nmodule.exports = Particle;\n\nvar Shape = _dereq_('./Shape');\nvar Vec3 = _dereq_('../math/Vec3');\n\n/**\n * Particle shape.\n * @class Particle\n * @constructor\n * @author schteppe\n * @extends Shape\n */\nfunction Particle(){\n    Shape.call(this);\n\n    this.type = Shape.types.PARTICLE;\n}\nParticle.prototype = new Shape();\nParticle.prototype.constructor = Particle;\n\n/**\n * @method calculateLocalInertia\n * @param  {Number} mass\n * @param  {Vec3} target\n * @return {Vec3}\n */\nParticle.prototype.calculateLocalInertia = function(mass,target){\n    target = target || new Vec3();\n    target.set(0, 0, 0);\n    return target;\n};\n\nParticle.prototype.volume = function(){\n    return 0;\n};\n\nParticle.prototype.updateBoundingSphereRadius = function(){\n    this.boundingSphereRadius = 0;\n};\n\nParticle.prototype.calculateWorldAABB = function(pos,quat,min,max){\n    // Get each axis max\n    min.copy(pos);\n    max.copy(pos);\n};\n\n},{\"../math/Vec3\":30,\"./Shape\":43}],42:[function(_dereq_,module,exports){\nmodule.exports = Plane;\n\nvar Shape = _dereq_('./Shape');\nvar Vec3 = _dereq_('../math/Vec3');\n\n/**\n * A plane, facing in the Z direction. The plane has its surface at z=0 and everything below z=0 is assumed to be solid plane. To make the plane face in some other direction than z, you must put it inside a RigidBody and rotate that body. See the demos.\n * @class Plane\n * @constructor\n * @extends Shape\n * @author schteppe\n */\nfunction Plane(){\n    Shape.call(this);\n    this.type = Shape.types.PLANE;\n\n    // World oriented normal\n    this.worldNormal = new Vec3();\n    this.worldNormalNeedsUpdate = true;\n\n    this.boundingSphereRadius = Number.MAX_VALUE;\n}\nPlane.prototype = new Shape();\nPlane.prototype.constructor = Plane;\n\nPlane.prototype.computeWorldNormal = function(quat){\n    var n = this.worldNormal;\n    n.set(0,0,1);\n    quat.vmult(n,n);\n    this.worldNormalNeedsUpdate = false;\n};\n\nPlane.prototype.calculateLocalInertia = function(mass,target){\n    target = target || new Vec3();\n    return target;\n};\n\nPlane.prototype.volume = function(){\n    return Number.MAX_VALUE; // The plane is infinite...\n};\n\nvar tempNormal = new Vec3();\nPlane.prototype.calculateWorldAABB = function(pos, quat, min, max){\n    // The plane AABB is infinite, except if the normal is pointing along any axis\n    tempNormal.set(0,0,1); // Default plane normal is z\n    quat.vmult(tempNormal,tempNormal);\n    var maxVal = Number.MAX_VALUE;\n    min.set(-maxVal, -maxVal, -maxVal);\n    max.set(maxVal, maxVal, maxVal);\n\n    if(tempNormal.x === 1){ max.x = pos.x; }\n    if(tempNormal.y === 1){ max.y = pos.y; }\n    if(tempNormal.z === 1){ max.z = pos.z; }\n\n    if(tempNormal.x === -1){ min.x = pos.x; }\n    if(tempNormal.y === -1){ min.y = pos.y; }\n    if(tempNormal.z === -1){ min.z = pos.z; }\n};\n\nPlane.prototype.updateBoundingSphereRadius = function(){\n    this.boundingSphereRadius = Number.MAX_VALUE;\n};\n},{\"../math/Vec3\":30,\"./Shape\":43}],43:[function(_dereq_,module,exports){\nmodule.exports = Shape;\n\nvar Shape = _dereq_('./Shape');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar Material = _dereq_('../material/Material');\n\n/**\n * Base class for shapes\n * @class Shape\n * @constructor\n * @author schteppe\n * @todo Should have a mechanism for caching bounding sphere radius instead of calculating it each time\n */\nfunction Shape(){\n\n    /**\n     * Identifyer of the Shape.\n     * @property {number} id\n     */\n    this.id = Shape.idCounter++;\n\n    /**\n     * The type of this shape. Must be set to an int > 0 by subclasses.\n     * @property type\n     * @type {Number}\n     * @see Shape.types\n     */\n    this.type = 0;\n\n    /**\n     * The local bounding sphere radius of this shape.\n     * @property {Number} boundingSphereRadius\n     */\n    this.boundingSphereRadius = 0;\n\n    /**\n     * Whether to produce contact forces when in contact with other bodies. Note that contacts will be generated, but they will be disabled.\n     * @property {boolean} collisionResponse\n     */\n    this.collisionResponse = true;\n\n    /**\n     * @property {Material} material\n     */\n    this.material = null;\n}\nShape.prototype.constructor = Shape;\n\n/**\n * Computes the bounding sphere radius. The result is stored in the property .boundingSphereRadius\n * @method updateBoundingSphereRadius\n * @return {Number}\n */\nShape.prototype.updateBoundingSphereRadius = function(){\n    throw \"computeBoundingSphereRadius() not implemented for shape type \"+this.type;\n};\n\n/**\n * Get the volume of this shape\n * @method volume\n * @return {Number}\n */\nShape.prototype.volume = function(){\n    throw \"volume() not implemented for shape type \"+this.type;\n};\n\n/**\n * Calculates the inertia in the local frame for this shape.\n * @method calculateLocalInertia\n * @return {Vec3}\n * @see http://en.wikipedia.org/wiki/List_of_moments_of_inertia\n */\nShape.prototype.calculateLocalInertia = function(mass,target){\n    throw \"calculateLocalInertia() not implemented for shape type \"+this.type;\n};\n\nShape.idCounter = 0;\n\n/**\n * The available shape types.\n * @static\n * @property types\n * @type {Object}\n */\nShape.types = {\n    SPHERE:1,\n    PLANE:2,\n    BOX:4,\n    COMPOUND:8,\n    CONVEXPOLYHEDRON:16,\n    HEIGHTFIELD:32,\n    PARTICLE:64,\n    CYLINDER:128,\n    TRIMESH:256\n};\n\n\n},{\"../material/Material\":25,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"./Shape\":43}],44:[function(_dereq_,module,exports){\nmodule.exports = Sphere;\n\nvar Shape = _dereq_('./Shape');\nvar Vec3 = _dereq_('../math/Vec3');\n\n/**\n * Spherical shape\n * @class Sphere\n * @constructor\n * @extends Shape\n * @param {Number} radius The radius of the sphere, a non-negative number.\n * @author schteppe / http://github.com/schteppe\n */\nfunction Sphere(radius){\n    Shape.call(this);\n\n    /**\n     * @property {Number} radius\n     */\n    this.radius = radius!==undefined ? Number(radius) : 1.0;\n    this.type = Shape.types.SPHERE;\n\n    if(this.radius < 0){\n        throw new Error('The sphere radius cannot be negative.');\n    }\n\n    this.updateBoundingSphereRadius();\n}\nSphere.prototype = new Shape();\nSphere.prototype.constructor = Sphere;\n\nSphere.prototype.calculateLocalInertia = function(mass,target){\n    target = target || new Vec3();\n    var I = 2.0*mass*this.radius*this.radius/5.0;\n    target.x = I;\n    target.y = I;\n    target.z = I;\n    return target;\n};\n\nSphere.prototype.volume = function(){\n    return 4.0 * Math.PI * this.radius / 3.0;\n};\n\nSphere.prototype.updateBoundingSphereRadius = function(){\n    this.boundingSphereRadius = this.radius;\n};\n\nSphere.prototype.calculateWorldAABB = function(pos,quat,min,max){\n    var r = this.radius;\n    var axes = ['x','y','z'];\n    for(var i=0; i<axes.length; i++){\n        var ax = axes[i];\n        min[ax] = pos[ax] - r;\n        max[ax] = pos[ax] + r;\n    }\n};\n\n},{\"../math/Vec3\":30,\"./Shape\":43}],45:[function(_dereq_,module,exports){\nmodule.exports = Trimesh;\n\nvar Shape = _dereq_('./Shape');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar Transform = _dereq_('../math/Transform');\nvar AABB = _dereq_('../collision/AABB');\nvar Octree = _dereq_('../utils/Octree');\n\n/**\n * @class Trimesh\n * @constructor\n * @param {array} vertices\n * @param {array} indices\n * @extends Shape\n * @example\n *     // How to make a mesh with a single triangle\n *     var vertices = [\n *         0, 0, 0, // vertex 0\n *         1, 0, 0, // vertex 1\n *         0, 1, 0  // vertex 2\n *     ];\n *     var indices = [\n *         0, 1, 2  // triangle 0\n *     ];\n *     var trimeshShape = new Trimesh(vertices, indices);\n */\nfunction Trimesh(vertices, indices) {\n    Shape.call(this);\n    this.type = Shape.types.TRIMESH;\n\n    /**\n     * @property vertices\n     * @type {Array}\n     */\n    this.vertices = new Float32Array(vertices);\n\n    /**\n     * Array of integers, indicating which vertices each triangle consists of. The length of this array is thus 3 times the number of triangles.\n     * @property indices\n     * @type {Array}\n     */\n    this.indices = new Int16Array(indices);\n\n    /**\n     * The normals data.\n     * @property normals\n     * @type {Array}\n     */\n    this.normals = new Float32Array(indices.length);\n\n    /**\n     * The local AABB of the mesh.\n     * @property aabb\n     * @type {Array}\n     */\n    this.aabb = new AABB();\n\n    /**\n     * References to vertex pairs, making up all unique edges in the trimesh.\n     * @property {array} edges\n     */\n    this.edges = null;\n\n    /**\n     * Local scaling of the mesh. Use .setScale() to set it.\n     * @property {Vec3} scale\n     */\n    this.scale = new Vec3(1, 1, 1);\n\n    /**\n     * The indexed triangles. Use .updateTree() to update it.\n     * @property {Octree} tree\n     */\n    this.tree = new Octree();\n\n    this.updateEdges();\n    this.updateNormals();\n    this.updateAABB();\n    this.updateBoundingSphereRadius();\n    this.updateTree();\n}\nTrimesh.prototype = new Shape();\nTrimesh.prototype.constructor = Trimesh;\n\nvar computeNormals_n = new Vec3();\n\n/**\n * @method updateTree\n */\nTrimesh.prototype.updateTree = function(){\n    var tree = this.tree;\n\n    tree.reset();\n    tree.aabb.copy(this.aabb);\n    var scale = this.scale; // The local mesh AABB is scaled, but the octree AABB should be unscaled\n    tree.aabb.lowerBound.x *= 1 / scale.x;\n    tree.aabb.lowerBound.y *= 1 / scale.y;\n    tree.aabb.lowerBound.z *= 1 / scale.z;\n    tree.aabb.upperBound.x *= 1 / scale.x;\n    tree.aabb.upperBound.y *= 1 / scale.y;\n    tree.aabb.upperBound.z *= 1 / scale.z;\n\n    // Insert all triangles\n    var triangleAABB = new AABB();\n    var a = new Vec3();\n    var b = new Vec3();\n    var c = new Vec3();\n    var points = [a, b, c];\n    for (var i = 0; i < this.indices.length / 3; i++) {\n        //this.getTriangleVertices(i, a, b, c);\n\n        // Get unscaled triangle verts\n        var i3 = i * 3;\n        this._getUnscaledVertex(this.indices[i3], a);\n        this._getUnscaledVertex(this.indices[i3 + 1], b);\n        this._getUnscaledVertex(this.indices[i3 + 2], c);\n\n        triangleAABB.setFromPoints(points);\n        tree.insert(triangleAABB, i);\n    }\n    tree.removeEmptyNodes();\n};\n\nvar unscaledAABB = new AABB();\n\n/**\n * Get triangles in a local AABB from the trimesh.\n * @method getTrianglesInAABB\n * @param  {AABB} aabb\n * @param  {array} result An array of integers, referencing the queried triangles.\n */\nTrimesh.prototype.getTrianglesInAABB = function(aabb, result){\n    unscaledAABB.copy(aabb);\n\n    // Scale it to local\n    var scale = this.scale;\n    var isx = scale.x;\n    var isy = scale.y;\n    var isz = scale.z;\n    var l = unscaledAABB.lowerBound;\n    var u = unscaledAABB.upperBound;\n    l.x /= isx;\n    l.y /= isy;\n    l.z /= isz;\n    u.x /= isx;\n    u.y /= isy;\n    u.z /= isz;\n\n    return this.tree.aabbQuery(unscaledAABB, result);\n};\n\n/**\n * @method setScale\n * @param {Vec3} scale\n */\nTrimesh.prototype.setScale = function(scale){\n    var wasUniform = this.scale.x === this.scale.y === this.scale.z;\n    var isUniform = scale.x === scale.y === scale.z;\n\n    if(!(wasUniform && isUniform)){\n        // Non-uniform scaling. Need to update normals.\n        this.updateNormals();\n    }\n    this.scale.copy(scale);\n    this.updateAABB();\n    this.updateBoundingSphereRadius();\n};\n\n/**\n * Compute the normals of the faces. Will save in the .normals array.\n * @method updateNormals\n */\nTrimesh.prototype.updateNormals = function(){\n    var n = computeNormals_n;\n\n    // Generate normals\n    var normals = this.normals;\n    for(var i=0; i < this.indices.length / 3; i++){\n        var i3 = i * 3;\n\n        var a = this.indices[i3],\n            b = this.indices[i3 + 1],\n            c = this.indices[i3 + 2];\n\n        this.getVertex(a, va);\n        this.getVertex(b, vb);\n        this.getVertex(c, vc);\n\n        Trimesh.computeNormal(vb, va, vc, n);\n\n        normals[i3] = n.x;\n        normals[i3 + 1] = n.y;\n        normals[i3 + 2] = n.z;\n    }\n};\n\n/**\n * Update the .edges property\n * @method updateEdges\n */\nTrimesh.prototype.updateEdges = function(){\n    var edges = {};\n    var add = function(indexA, indexB){\n        var key = a < b ? a + '_' + b : b + '_' + a;\n        edges[key] = true;\n    };\n    for(var i=0; i < this.indices.length / 3; i++){\n        var i3 = i * 3;\n        var a = this.indices[i3],\n            b = this.indices[i3 + 1],\n            c = this.indices[i3 + 2];\n        add(a,b);\n        add(b,c);\n        add(c,a);\n    }\n    var keys = Object.keys(edges);\n    this.edges = new Int16Array(keys.length * 2);\n    for (var i = 0; i < keys.length; i++) {\n        var indices = keys[i].split('_');\n        this.edges[2 * i] = parseInt(indices[0], 10);\n        this.edges[2 * i + 1] = parseInt(indices[1], 10);\n    }\n};\n\n/**\n * Get an edge vertex\n * @method getEdgeVertex\n * @param  {number} edgeIndex\n * @param  {number} firstOrSecond 0 or 1, depending on which one of the vertices you need.\n * @param  {Vec3} vertexStore Where to store the result\n */\nTrimesh.prototype.getEdgeVertex = function(edgeIndex, firstOrSecond, vertexStore){\n    var vertexIndex = this.edges[edgeIndex * 2 + (firstOrSecond ? 1 : 0)];\n    this.getVertex(vertexIndex, vertexStore);\n};\n\nvar getEdgeVector_va = new Vec3();\nvar getEdgeVector_vb = new Vec3();\n\n/**\n * Get a vector along an edge.\n * @method getEdgeVector\n * @param  {number} edgeIndex\n * @param  {Vec3} vectorStore\n */\nTrimesh.prototype.getEdgeVector = function(edgeIndex, vectorStore){\n    var va = getEdgeVector_va;\n    var vb = getEdgeVector_vb;\n    this.getEdgeVertex(edgeIndex, 0, va);\n    this.getEdgeVertex(edgeIndex, 1, vb);\n    vb.vsub(va, vectorStore);\n};\n\n/**\n * Get face normal given 3 vertices\n * @static\n * @method computeNormal\n * @param {Vec3} va\n * @param {Vec3} vb\n * @param {Vec3} vc\n * @param {Vec3} target\n */\nvar cb = new Vec3();\nvar ab = new Vec3();\nTrimesh.computeNormal = function ( va, vb, vc, target ) {\n    vb.vsub(va,ab);\n    vc.vsub(vb,cb);\n    cb.cross(ab,target);\n    if ( !target.isZero() ) {\n        target.normalize();\n    }\n};\n\nvar va = new Vec3();\nvar vb = new Vec3();\nvar vc = new Vec3();\n\n/**\n * Get vertex i.\n * @method getVertex\n * @param  {number} i\n * @param  {Vec3} out\n * @return {Vec3} The \"out\" vector object\n */\nTrimesh.prototype.getVertex = function(i, out){\n    var scale = this.scale;\n    this._getUnscaledVertex(i, out);\n    out.x *= scale.x;\n    out.y *= scale.y;\n    out.z *= scale.z;\n    return out;\n};\n\n/**\n * Get raw vertex i\n * @private\n * @method _getUnscaledVertex\n * @param  {number} i\n * @param  {Vec3} out\n * @return {Vec3} The \"out\" vector object\n */\nTrimesh.prototype._getUnscaledVertex = function(i, out){\n    var i3 = i * 3;\n    var vertices = this.vertices;\n    return out.set(\n        vertices[i3],\n        vertices[i3 + 1],\n        vertices[i3 + 2]\n    );\n};\n\n/**\n * Get a vertex from the trimesh,transformed by the given position and quaternion.\n * @method getWorldVertex\n * @param  {number} i\n * @param  {Vec3} pos\n * @param  {Quaternion} quat\n * @param  {Vec3} out\n * @return {Vec3} The \"out\" vector object\n */\nTrimesh.prototype.getWorldVertex = function(i, pos, quat, out){\n    this.getVertex(i, out);\n    Transform.pointToWorldFrame(pos, quat, out, out);\n    return out;\n};\n\n/**\n * Get the three vertices for triangle i.\n * @method getTriangleVertices\n * @param  {number} i\n * @param  {Vec3} a\n * @param  {Vec3} b\n * @param  {Vec3} c\n */\nTrimesh.prototype.getTriangleVertices = function(i, a, b, c){\n    var i3 = i * 3;\n    this.getVertex(this.indices[i3], a);\n    this.getVertex(this.indices[i3 + 1], b);\n    this.getVertex(this.indices[i3 + 2], c);\n};\n\n/**\n * Compute the normal of triangle i.\n * @method getNormal\n * @param  {Number} i\n * @param  {Vec3} target\n * @return {Vec3} The \"target\" vector object\n */\nTrimesh.prototype.getNormal = function(i, target){\n    var i3 = i * 3;\n    return target.set(\n        this.normals[i3],\n        this.normals[i3 + 1],\n        this.normals[i3 + 2]\n    );\n};\n\nvar cli_aabb = new AABB();\n\n/**\n * @method calculateLocalInertia\n * @param  {Number} mass\n * @param  {Vec3} target\n * @return {Vec3} The \"target\" vector object\n */\nTrimesh.prototype.calculateLocalInertia = function(mass,target){\n    // Approximate with box inertia\n    // Exact inertia calculation is overkill, but see http://geometrictools.com/Documentation/PolyhedralMassProperties.pdf for the correct way to do it\n    this.computeLocalAABB(cli_aabb);\n    var x = cli_aabb.upperBound.x - cli_aabb.lowerBound.x,\n        y = cli_aabb.upperBound.y - cli_aabb.lowerBound.y,\n        z = cli_aabb.upperBound.z - cli_aabb.lowerBound.z;\n    return target.set(\n        1.0 / 12.0 * mass * ( 2*y*2*y + 2*z*2*z ),\n        1.0 / 12.0 * mass * ( 2*x*2*x + 2*z*2*z ),\n        1.0 / 12.0 * mass * ( 2*y*2*y + 2*x*2*x )\n    );\n};\n\nvar computeLocalAABB_worldVert = new Vec3();\n\n/**\n * Compute the local AABB for the trimesh\n * @method computeLocalAABB\n * @param  {AABB} aabb\n */\nTrimesh.prototype.computeLocalAABB = function(aabb){\n    var l = aabb.lowerBound,\n        u = aabb.upperBound,\n        n = this.vertices.length,\n        vertices = this.vertices,\n        v = computeLocalAABB_worldVert;\n\n    this.getVertex(0, v);\n    l.copy(v);\n    u.copy(v);\n\n    for(var i=0; i !== n; i++){\n        this.getVertex(i, v);\n\n        if(v.x < l.x){\n            l.x = v.x;\n        } else if(v.x > u.x){\n            u.x = v.x;\n        }\n\n        if(v.y < l.y){\n            l.y = v.y;\n        } else if(v.y > u.y){\n            u.y = v.y;\n        }\n\n        if(v.z < l.z){\n            l.z = v.z;\n        } else if(v.z > u.z){\n            u.z = v.z;\n        }\n    }\n};\n\n\n/**\n * Update the .aabb property\n * @method updateAABB\n */\nTrimesh.prototype.updateAABB = function(){\n    this.computeLocalAABB(this.aabb);\n};\n\n/**\n * Will update the .boundingSphereRadius property\n * @method updateBoundingSphereRadius\n */\nTrimesh.prototype.updateBoundingSphereRadius = function(){\n    // Assume points are distributed with local (0,0,0) as center\n    var max2 = 0;\n    var vertices = this.vertices;\n    var v = new Vec3();\n    for(var i=0, N=vertices.length / 3; i !== N; i++) {\n        this.getVertex(i, v);\n        var norm2 = v.norm2();\n        if(norm2 > max2){\n            max2 = norm2;\n        }\n    }\n    this.boundingSphereRadius = Math.sqrt(max2);\n};\n\nvar tempWorldVertex = new Vec3();\nvar calculateWorldAABB_frame = new Transform();\nvar calculateWorldAABB_aabb = new AABB();\n\n/**\n * @method calculateWorldAABB\n * @param {Vec3}        pos\n * @param {Quaternion}  quat\n * @param {Vec3}        min\n * @param {Vec3}        max\n */\nTrimesh.prototype.calculateWorldAABB = function(pos,quat,min,max){\n    /*\n    var n = this.vertices.length / 3,\n        verts = this.vertices;\n    var minx,miny,minz,maxx,maxy,maxz;\n\n    var v = tempWorldVertex;\n    for(var i=0; i<n; i++){\n        this.getVertex(i, v);\n        quat.vmult(v, v);\n        pos.vadd(v, v);\n        if (v.x < minx || minx===undefined){\n            minx = v.x;\n        } else if(v.x > maxx || maxx===undefined){\n            maxx = v.x;\n        }\n\n        if (v.y < miny || miny===undefined){\n            miny = v.y;\n        } else if(v.y > maxy || maxy===undefined){\n            maxy = v.y;\n        }\n\n        if (v.z < minz || minz===undefined){\n            minz = v.z;\n        } else if(v.z > maxz || maxz===undefined){\n            maxz = v.z;\n        }\n    }\n    min.set(minx,miny,minz);\n    max.set(maxx,maxy,maxz);\n    */\n\n    // Faster approximation using local AABB\n    var frame = calculateWorldAABB_frame;\n    var result = calculateWorldAABB_aabb;\n    frame.position = pos;\n    frame.quaternion = quat;\n    this.aabb.toWorldFrame(frame, result);\n    min.copy(result.lowerBound);\n    max.copy(result.upperBound);\n};\n\n/**\n * Get approximate volume\n * @method volume\n * @return {Number}\n */\nTrimesh.prototype.volume = function(){\n    return 4.0 * Math.PI * this.boundingSphereRadius / 3.0;\n};\n\n/**\n * Create a Trimesh instance, shaped as a torus.\n * @static\n * @method createTorus\n * @param  {number} [radius=1]\n * @param  {number} [tube=0.5]\n * @param  {number} [radialSegments=8]\n * @param  {number} [tubularSegments=6]\n * @param  {number} [arc=6.283185307179586]\n * @return {Trimesh} A torus\n */\nTrimesh.createTorus = function (radius, tube, radialSegments, tubularSegments, arc) {\n    radius = radius || 1;\n    tube = tube || 0.5;\n    radialSegments = radialSegments || 8;\n    tubularSegments = tubularSegments || 6;\n    arc = arc || Math.PI * 2;\n\n    var vertices = [];\n    var indices = [];\n\n    for ( var j = 0; j <= radialSegments; j ++ ) {\n        for ( var i = 0; i <= tubularSegments; i ++ ) {\n            var u = i / tubularSegments * arc;\n            var v = j / radialSegments * Math.PI * 2;\n\n            var x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n            var y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n            var z = tube * Math.sin( v );\n\n            vertices.push( x, y, z );\n        }\n    }\n\n    for ( var j = 1; j <= radialSegments; j ++ ) {\n        for ( var i = 1; i <= tubularSegments; i ++ ) {\n            var a = ( tubularSegments + 1 ) * j + i - 1;\n            var b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n            var c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n            var d = ( tubularSegments + 1 ) * j + i;\n\n            indices.push(a, b, d);\n            indices.push(b, c, d);\n        }\n    }\n\n    return new Trimesh(vertices, indices);\n};\n\n},{\"../collision/AABB\":3,\"../math/Quaternion\":28,\"../math/Transform\":29,\"../math/Vec3\":30,\"../utils/Octree\":50,\"./Shape\":43}],46:[function(_dereq_,module,exports){\nmodule.exports = GSSolver;\n\nvar Vec3 = _dereq_('../math/Vec3');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar Solver = _dereq_('./Solver');\n\n/**\n * Constraint equation Gauss-Seidel solver.\n * @class GSSolver\n * @constructor\n * @todo The spook parameters should be specified for each constraint, not globally.\n * @author schteppe / https://github.com/schteppe\n * @see https://www8.cs.umu.se/kurser/5DV058/VT09/lectures/spooknotes.pdf\n * @extends Solver\n */\nfunction GSSolver(){\n    Solver.call(this);\n\n    /**\n     * The number of solver iterations determines quality of the constraints in the world. The more iterations, the more correct simulation. More iterations need more computations though. If you have a large gravity force in your world, you will need more iterations.\n     * @property iterations\n     * @type {Number}\n     * @todo write more about solver and iterations in the wiki\n     */\n    this.iterations = 10;\n\n    /**\n     * When tolerance is reached, the system is assumed to be converged.\n     * @property tolerance\n     * @type {Number}\n     */\n    this.tolerance = 1e-7;\n}\nGSSolver.prototype = new Solver();\n\nvar GSSolver_solve_lambda = []; // Just temporary number holders that we want to reuse each solve.\nvar GSSolver_solve_invCs = [];\nvar GSSolver_solve_Bs = [];\nGSSolver.prototype.solve = function(dt,world){\n    var iter = 0,\n        maxIter = this.iterations,\n        tolSquared = this.tolerance*this.tolerance,\n        equations = this.equations,\n        Neq = equations.length,\n        bodies = world.bodies,\n        Nbodies = bodies.length,\n        h = dt,\n        q, B, invC, deltalambda, deltalambdaTot, GWlambda, lambdaj;\n\n    // Update solve mass\n    if(Neq !== 0){\n        for(var i=0; i!==Nbodies; i++){\n            bodies[i].updateSolveMassProperties();\n        }\n    }\n\n    // Things that does not change during iteration can be computed once\n    var invCs = GSSolver_solve_invCs,\n        Bs = GSSolver_solve_Bs,\n        lambda = GSSolver_solve_lambda;\n    invCs.length = Neq;\n    Bs.length = Neq;\n    lambda.length = Neq;\n    for(var i=0; i!==Neq; i++){\n        var c = equations[i];\n        lambda[i] = 0.0;\n        Bs[i] = c.computeB(h);\n        invCs[i] = 1.0 / c.computeC();\n    }\n\n    if(Neq !== 0){\n\n        // Reset vlambda\n        for(var i=0; i!==Nbodies; i++){\n            var b=bodies[i],\n                vlambda=b.vlambda,\n                wlambda=b.wlambda;\n            vlambda.set(0,0,0);\n            if(wlambda){\n                wlambda.set(0,0,0);\n            }\n        }\n\n        // Iterate over equations\n        for(iter=0; iter!==maxIter; iter++){\n\n            // Accumulate the total error for each iteration.\n            deltalambdaTot = 0.0;\n\n            for(var j=0; j!==Neq; j++){\n\n                var c = equations[j];\n\n                // Compute iteration\n                B = Bs[j];\n                invC = invCs[j];\n                lambdaj = lambda[j];\n                GWlambda = c.computeGWlambda();\n                deltalambda = invC * ( B - GWlambda - c.eps * lambdaj );\n\n                // Clamp if we are not within the min/max interval\n                if(lambdaj + deltalambda < c.minForce){\n                    deltalambda = c.minForce - lambdaj;\n                } else if(lambdaj + deltalambda > c.maxForce){\n                    deltalambda = c.maxForce - lambdaj;\n                }\n                lambda[j] += deltalambda;\n\n                deltalambdaTot += deltalambda > 0.0 ? deltalambda : -deltalambda; // abs(deltalambda)\n\n                c.addToWlambda(deltalambda);\n            }\n\n            // If the total error is small enough - stop iterate\n            if(deltalambdaTot*deltalambdaTot < tolSquared){\n                break;\n            }\n        }\n\n        // Add result to velocity\n        for(var i=0; i!==Nbodies; i++){\n            var b=bodies[i],\n                v=b.velocity,\n                w=b.angularVelocity;\n            v.vadd(b.vlambda, v);\n            if(w){\n                w.vadd(b.wlambda, w);\n            }\n        }\n    }\n\n    return iter;\n};\n\n},{\"../math/Quaternion\":28,\"../math/Vec3\":30,\"./Solver\":47}],47:[function(_dereq_,module,exports){\nmodule.exports = Solver;\n\n/**\n * Constraint equation solver base class.\n * @class Solver\n * @constructor\n * @author schteppe / https://github.com/schteppe\n */\nfunction Solver(){\n    /**\n     * All equations to be solved\n     * @property {Array} equations\n     */\n    this.equations = [];\n}\n\n/**\n * Should be implemented in subclasses!\n * @method solve\n * @param  {Number} dt\n * @param  {World} world\n */\nSolver.prototype.solve = function(dt,world){\n    // Should return the number of iterations done!\n    return 0;\n};\n\n/**\n * Add an equation\n * @method addEquation\n * @param {Equation} eq\n */\nSolver.prototype.addEquation = function(eq){\n    if (eq.enabled) {\n        this.equations.push(eq);\n    }\n};\n\n/**\n * Remove an equation\n * @method removeEquation\n * @param {Equation} eq\n */\nSolver.prototype.removeEquation = function(eq){\n    var eqs = this.equations;\n    var i = eqs.indexOf(eq);\n    if(i !== -1){\n        eqs.splice(i,1);\n    }\n};\n\n/**\n * Add all equations\n * @method removeAllEquations\n */\nSolver.prototype.removeAllEquations = function(){\n    this.equations.length = 0;\n};\n\n\n},{}],48:[function(_dereq_,module,exports){\nmodule.exports = SplitSolver;\n\nvar Vec3 = _dereq_('../math/Vec3');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar Solver = _dereq_('./Solver');\nvar Body = _dereq_('../objects/Body');\n\n/**\n * Splits the equations into islands and solves them independently. Can improve performance.\n * @class SplitSolver\n * @constructor\n * @extends Solver\n * @param {Solver} subsolver\n */\nfunction SplitSolver(subsolver){\n    Solver.call(this);\n    this.iterations = 10;\n    this.tolerance = 1e-7;\n    this.subsolver = subsolver;\n    this.nodes = [];\n    this.nodePool = [];\n\n    // Create needed nodes, reuse if possible\n    while(this.nodePool.length < 128){\n        this.nodePool.push(this.createNode());\n    }\n}\nSplitSolver.prototype = new Solver();\n\n// Returns the number of subsystems\nvar SplitSolver_solve_nodes = []; // All allocated node objects\nvar SplitSolver_solve_nodePool = []; // All allocated node objects\nvar SplitSolver_solve_eqs = [];   // Temp array\nvar SplitSolver_solve_bds = [];   // Temp array\nvar SplitSolver_solve_dummyWorld = {bodies:[]}; // Temp object\n\nvar STATIC = Body.STATIC;\nfunction getUnvisitedNode(nodes){\n    var Nnodes = nodes.length;\n    for(var i=0; i!==Nnodes; i++){\n        var node = nodes[i];\n        if(!node.visited && !(node.body.type & STATIC)){\n            return node;\n        }\n    }\n    return false;\n}\n\nvar queue = [];\nfunction bfs(root,visitFunc,bds,eqs){\n    queue.push(root);\n    root.visited = true;\n    visitFunc(root,bds,eqs);\n    while(queue.length) {\n        var node = queue.pop();\n        // Loop over unvisited child nodes\n        var child;\n        while((child = getUnvisitedNode(node.children))) {\n            child.visited = true;\n            visitFunc(child,bds,eqs);\n            queue.push(child);\n        }\n    }\n}\n\nfunction visitFunc(node,bds,eqs){\n    bds.push(node.body);\n    var Neqs = node.eqs.length;\n    for(var i=0; i!==Neqs; i++){\n        var eq = node.eqs[i];\n        if(eqs.indexOf(eq) === -1){\n            eqs.push(eq);\n        }\n    }\n}\n\nSplitSolver.prototype.createNode = function(){\n    return { body:null, children:[], eqs:[], visited:false };\n};\n\n/**\n * Solve the subsystems\n * @method solve\n * @param  {Number} dt\n * @param  {World} world\n */\nSplitSolver.prototype.solve = function(dt,world){\n    var nodes=SplitSolver_solve_nodes,\n        nodePool=this.nodePool,\n        bodies=world.bodies,\n        equations=this.equations,\n        Neq=equations.length,\n        Nbodies=bodies.length,\n        subsolver=this.subsolver;\n\n    // Create needed nodes, reuse if possible\n    while(nodePool.length < Nbodies){\n        nodePool.push(this.createNode());\n    }\n    nodes.length = Nbodies;\n    for (var i = 0; i < Nbodies; i++) {\n        nodes[i] = nodePool[i];\n    }\n\n    // Reset node values\n    for(var i=0; i!==Nbodies; i++){\n        var node = nodes[i];\n        node.body = bodies[i];\n        node.children.length = 0;\n        node.eqs.length = 0;\n        node.visited = false;\n    }\n    for(var k=0; k!==Neq; k++){\n        var eq=equations[k],\n            i=bodies.indexOf(eq.bi),\n            j=bodies.indexOf(eq.bj),\n            ni=nodes[i],\n            nj=nodes[j];\n        ni.children.push(nj);\n        ni.eqs.push(eq);\n        nj.children.push(ni);\n        nj.eqs.push(eq);\n    }\n\n    var child, n=0, eqs=SplitSolver_solve_eqs;\n\n    subsolver.tolerance = this.tolerance;\n    subsolver.iterations = this.iterations;\n\n    var dummyWorld = SplitSolver_solve_dummyWorld;\n    while((child = getUnvisitedNode(nodes))){\n        eqs.length = 0;\n        dummyWorld.bodies.length = 0;\n        bfs(child, visitFunc, dummyWorld.bodies, eqs);\n\n        var Neqs = eqs.length;\n\n        eqs = eqs.sort(sortById);\n\n        for(var i=0; i!==Neqs; i++){\n            subsolver.addEquation(eqs[i]);\n        }\n\n        var iter = subsolver.solve(dt,dummyWorld);\n        subsolver.removeAllEquations();\n        n++;\n    }\n\n    return n;\n};\n\nfunction sortById(a, b){\n    return b.id - a.id;\n}\n},{\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/Body\":31,\"./Solver\":47}],49:[function(_dereq_,module,exports){\n/**\n * Base class for objects that dispatches events.\n * @class EventTarget\n * @constructor\n */\nvar EventTarget = function () {\n\n};\n\nmodule.exports = EventTarget;\n\nEventTarget.prototype = {\n    constructor: EventTarget,\n\n    /**\n     * Add an event listener\n     * @method addEventListener\n     * @param  {String} type\n     * @param  {Function} listener\n     * @return {EventTarget} The self object, for chainability.\n     */\n    addEventListener: function ( type, listener ) {\n        if ( this._listeners === undefined ){ this._listeners = {}; }\n        var listeners = this._listeners;\n        if ( listeners[ type ] === undefined ) {\n            listeners[ type ] = [];\n        }\n        if ( listeners[ type ].indexOf( listener ) === - 1 ) {\n            listeners[ type ].push( listener );\n        }\n        return this;\n    },\n\n    /**\n     * Check if an event listener is added\n     * @method hasEventListener\n     * @param  {String} type\n     * @param  {Function} listener\n     * @return {Boolean}\n     */\n    hasEventListener: function ( type, listener ) {\n        if ( this._listeners === undefined ){ return false; }\n        var listeners = this._listeners;\n        if ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\n            return true;\n        }\n        return false;\n    },\n\n    /**\n     * Remove an event listener\n     * @method removeEventListener\n     * @param  {String} type\n     * @param  {Function} listener\n     * @return {EventTarget} The self object, for chainability.\n     */\n    removeEventListener: function ( type, listener ) {\n        if ( this._listeners === undefined ){ return this; }\n        var listeners = this._listeners;\n        if ( listeners[type] === undefined ){ return this; }\n        var index = listeners[ type ].indexOf( listener );\n        if ( index !== - 1 ) {\n            listeners[ type ].splice( index, 1 );\n        }\n        return this;\n    },\n\n    /**\n     * Emit an event.\n     * @method dispatchEvent\n     * @param  {Object} event\n     * @param  {String} event.type\n     * @return {EventTarget} The self object, for chainability.\n     */\n    dispatchEvent: function ( event ) {\n        if ( this._listeners === undefined ){ return this; }\n        var listeners = this._listeners;\n        var listenerArray = listeners[ event.type ];\n        if ( listenerArray !== undefined ) {\n            event.target = this;\n            for ( var i = 0, l = listenerArray.length; i < l; i ++ ) {\n                listenerArray[ i ].call( this, event );\n            }\n        }\n        return this;\n    }\n};\n\n},{}],50:[function(_dereq_,module,exports){\nvar AABB = _dereq_('../collision/AABB');\nvar Vec3 = _dereq_('../math/Vec3');\n\nmodule.exports = Octree;\n\n/**\n * @class OctreeNode\n * @param {object} [options]\n * @param {Octree} [options.root]\n * @param {AABB} [options.aabb]\n */\nfunction OctreeNode(options){\n    options = options || {};\n\n    /**\n     * The root node\n     * @property {OctreeNode} root\n     */\n    this.root = options.root || null;\n\n    /**\n     * Boundary of this node\n     * @property {AABB} aabb\n     */\n    this.aabb = options.aabb ? options.aabb.clone() : new AABB();\n\n    /**\n     * Contained data at the current node level.\n     * @property {Array} data\n     */\n    this.data = [];\n\n    /**\n     * Children to this node\n     * @property {Array} children\n     */\n    this.children = [];\n}\n\n/**\n * @class Octree\n * @param {AABB} aabb The total AABB of the tree\n * @param {object} [options]\n * @param {number} [options.maxDepth=8]\n * @extends OctreeNode\n */\nfunction Octree(aabb, options){\n    options = options || {};\n    options.root = null;\n    options.aabb = aabb;\n    OctreeNode.call(this, options);\n\n    /**\n     * Maximum subdivision depth\n     * @property {number} maxDepth\n     */\n    this.maxDepth = typeof(options.maxDepth) !== 'undefined' ? options.maxDepth : 8;\n}\nOctree.prototype = new OctreeNode();\n\nOctreeNode.prototype.reset = function(aabb, options){\n    this.children.length = this.data.length = 0;\n};\n\n/**\n * Insert data into this node\n * @method insert\n * @param  {AABB} aabb\n * @param  {object} elementData\n * @return {boolean} True if successful, otherwise false\n */\nOctreeNode.prototype.insert = function(aabb, elementData, level){\n    var nodeData = this.data;\n    level = level || 0;\n\n    // Ignore objects that do not belong in this node\n    if (!this.aabb.contains(aabb)){\n        return false; // object cannot be added\n    }\n\n    var children = this.children;\n\n    if(level < (this.maxDepth || this.root.maxDepth)){\n        // Subdivide if there are no children yet\n        var subdivided = false;\n        if (!children.length){\n            this.subdivide();\n            subdivided = true;\n        }\n\n        // add to whichever node will accept it\n        for (var i = 0; i !== 8; i++) {\n            if (children[i].insert(aabb, elementData, level + 1)){\n                return true;\n            }\n        }\n\n        if(subdivided){\n            // No children accepted! Might as well just remove em since they contain none\n            children.length = 0;\n        }\n    }\n\n    // Too deep, or children didnt want it. add it in current node\n    nodeData.push(elementData);\n\n    return true;\n};\n\nvar halfDiagonal = new Vec3();\n\n/**\n * Create 8 equally sized children nodes and put them in the .children array.\n * @method subdivide\n */\nOctreeNode.prototype.subdivide = function() {\n    var aabb = this.aabb;\n    var l = aabb.lowerBound;\n    var u = aabb.upperBound;\n\n    var children = this.children;\n\n    children.push(\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,0,0) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,0,0) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,1,0) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,1,1) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,1,1) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,0,1) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,0,1) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,1,0) }) })\n    );\n\n    u.vsub(l, halfDiagonal);\n    halfDiagonal.scale(0.5, halfDiagonal);\n\n    var root = this.root || this;\n\n    for (var i = 0; i !== 8; i++) {\n        var child = children[i];\n\n        // Set current node as root\n        child.root = root;\n\n        // Compute bounds\n        var lowerBound = child.aabb.lowerBound;\n        lowerBound.x *= halfDiagonal.x;\n        lowerBound.y *= halfDiagonal.y;\n        lowerBound.z *= halfDiagonal.z;\n\n        lowerBound.vadd(l, lowerBound);\n\n        // Upper bound is always lower bound + halfDiagonal\n        lowerBound.vadd(halfDiagonal, child.aabb.upperBound);\n    }\n};\n\n/**\n * Get all data, potentially within an AABB\n * @method aabbQuery\n * @param  {AABB} aabb\n * @param  {array} result\n * @return {array} The \"result\" object\n */\nOctreeNode.prototype.aabbQuery = function(aabb, result) {\n\n    var nodeData = this.data;\n\n    // abort if the range does not intersect this node\n    // if (!this.aabb.overlaps(aabb)){\n    //     return result;\n    // }\n\n    // Add objects at this level\n    // Array.prototype.push.apply(result, nodeData);\n\n    // Add child data\n    // @todo unwrap recursion into a queue / loop, that's faster in JS\n    var children = this.children;\n\n\n    // for (var i = 0, N = this.children.length; i !== N; i++) {\n    //     children[i].aabbQuery(aabb, result);\n    // }\n\n    var queue = [this];\n    while (queue.length) {\n        var node = queue.pop();\n        if (node.aabb.overlaps(aabb)){\n            Array.prototype.push.apply(result, node.data);\n        }\n        Array.prototype.push.apply(queue, node.children);\n    }\n\n    return result;\n};\n\nvar tmpAABB = new AABB();\n\n/**\n * Get all data, potentially intersected by a ray.\n * @method rayQuery\n * @param  {Ray} ray\n * @param  {Transform} treeTransform\n * @param  {array} result\n * @return {array} The \"result\" object\n */\nOctreeNode.prototype.rayQuery = function(ray, treeTransform, result) {\n\n    // Use aabb query for now.\n    // @todo implement real ray query which needs less lookups\n    ray.getAABB(tmpAABB);\n    tmpAABB.toLocalFrame(treeTransform, tmpAABB);\n    this.aabbQuery(tmpAABB, result);\n\n    return result;\n};\n\n/**\n * @method removeEmptyNodes\n */\nOctreeNode.prototype.removeEmptyNodes = function() {\n    var queue = [this];\n    while (queue.length) {\n        var node = queue.pop();\n        for (var i = node.children.length - 1; i >= 0; i--) {\n            if(!node.children[i].data.length){\n                node.children.splice(i, 1);\n            }\n        }\n        Array.prototype.push.apply(queue, node.children);\n    }\n};\n\n},{\"../collision/AABB\":3,\"../math/Vec3\":30}],51:[function(_dereq_,module,exports){\nmodule.exports = Pool;\n\n/**\n * For pooling objects that can be reused.\n * @class Pool\n * @constructor\n */\nfunction Pool(){\n    /**\n     * The pooled objects\n     * @property {Array} objects\n     */\n    this.objects = [];\n\n    /**\n     * Constructor of the objects\n     * @property {mixed} type\n     */\n    this.type = Object;\n}\n\n/**\n * Release an object after use\n * @method release\n * @param {Object} obj\n */\nPool.prototype.release = function(){\n    var Nargs = arguments.length;\n    for(var i=0; i!==Nargs; i++){\n        this.objects.push(arguments[i]);\n    }\n};\n\n/**\n * Get an object\n * @method get\n * @return {mixed}\n */\nPool.prototype.get = function(){\n    if(this.objects.length===0){\n        return this.constructObject();\n    } else {\n        return this.objects.pop();\n    }\n};\n\n/**\n * Construct an object. Should be implmented in each subclass.\n * @method constructObject\n * @return {mixed}\n */\nPool.prototype.constructObject = function(){\n    throw new Error(\"constructObject() not implemented in this Pool subclass yet!\");\n};\n\n},{}],52:[function(_dereq_,module,exports){\nmodule.exports = TupleDictionary;\n\n/**\n * @class TupleDictionary\n * @constructor\n */\nfunction TupleDictionary() {\n\n    /**\n     * The data storage\n     * @property data\n     * @type {Object}\n     */\n    this.data = { keys:[] };\n}\n\n/**\n * @method get\n * @param  {Number} i\n * @param  {Number} j\n * @return {Number}\n */\nTupleDictionary.prototype.get = function(i, j) {\n    if (i > j) {\n        // swap\n        var temp = j;\n        j = i;\n        i = temp;\n    }\n    return this.data[i+'-'+j];\n};\n\n/**\n * @method set\n * @param  {Number} i\n * @param  {Number} j\n * @param {Number} value\n */\nTupleDictionary.prototype.set = function(i, j, value) {\n    if (i > j) {\n        var temp = j;\n        j = i;\n        i = temp;\n    }\n    var key = i+'-'+j;\n\n    // Check if key already exists\n    if(!this.get(i,j)){\n        this.data.keys.push(key);\n    }\n\n    this.data[key] = value;\n};\n\n/**\n * @method reset\n */\nTupleDictionary.prototype.reset = function() {\n    var data = this.data,\n        keys = data.keys;\n    while(keys.length > 0){\n        var key = keys.pop();\n        delete data[key];\n    }\n};\n\n},{}],53:[function(_dereq_,module,exports){\nfunction Utils(){}\n\nmodule.exports = Utils;\n\n/**\n * Extend an options object with default values.\n * @static\n * @method defaults\n * @param  {object} options The options object. May be falsy: in this case, a new object is created and returned.\n * @param  {object} defaults An object containing default values.\n * @return {object} The modified options object.\n */\nUtils.defaults = function(options, defaults){\n    options = options || {};\n\n    for(var key in defaults){\n        if(!(key in options)){\n            options[key] = defaults[key];\n        }\n    }\n\n    return options;\n};\n\n},{}],54:[function(_dereq_,module,exports){\nmodule.exports = Vec3Pool;\n\nvar Vec3 = _dereq_('../math/Vec3');\nvar Pool = _dereq_('./Pool');\n\n/**\n * @class Vec3Pool\n * @constructor\n * @extends Pool\n */\nfunction Vec3Pool(){\n    Pool.call(this);\n    this.type = Vec3;\n}\nVec3Pool.prototype = new Pool();\n\n/**\n * Construct a vector\n * @method constructObject\n * @return {Vec3}\n */\nVec3Pool.prototype.constructObject = function(){\n    return new Vec3();\n};\n\n},{\"../math/Vec3\":30,\"./Pool\":51}],55:[function(_dereq_,module,exports){\nmodule.exports = Narrowphase;\n\nvar AABB = _dereq_('../collision/AABB');\nvar Shape = _dereq_('../shapes/Shape');\nvar Ray = _dereq_('../collision/Ray');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Transform = _dereq_('../math/Transform');\nvar ConvexPolyhedron = _dereq_('../shapes/ConvexPolyhedron');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar Solver = _dereq_('../solver/Solver');\nvar Vec3Pool = _dereq_('../utils/Vec3Pool');\nvar ContactEquation = _dereq_('../equations/ContactEquation');\nvar FrictionEquation = _dereq_('../equations/FrictionEquation');\n\n/**\n * Helper class for the World. Generates ContactEquations.\n * @class Narrowphase\n * @constructor\n * @todo Sphere-ConvexPolyhedron contacts\n * @todo Contact reduction\n * @todo  should move methods to prototype\n */\nfunction Narrowphase(world){\n\n    /**\n     * Internal storage of pooled contact points.\n     * @property {Array} contactPointPool\n     */\n    this.contactPointPool = [];\n\n    this.frictionEquationPool = [];\n\n    this.result = [];\n    this.frictionResult = [];\n\n    /**\n     * Pooled vectors.\n     * @property {Vec3Pool} v3pool\n     */\n    this.v3pool = new Vec3Pool();\n\n    this.world = world;\n    this.currentContactMaterial = null;\n\n    /**\n     * @property {Boolean} enableFrictionReduction\n     */\n    this.enableFrictionReduction = false;\n}\n\n/**\n * Make a contact object, by using the internal pool or creating a new one.\n * @method createContactEquation\n * @return {ContactEquation}\n */\nNarrowphase.prototype.createContactEquation = function(bi, bj, si, sj, rsi, rsj){\n    var c;\n    if(this.contactPointPool.length){\n        c = this.contactPointPool.pop();\n        c.bi = bi;\n        c.bj = bj;\n    } else {\n        c = new ContactEquation(bi, bj);\n    }\n\n    c.enabled = bi.collisionResponse && bj.collisionResponse && si.collisionResponse && sj.collisionResponse;\n\n    var cm = this.currentContactMaterial;\n\n    c.restitution = cm.restitution;\n\n    c.setSpookParams(\n        cm.contactEquationStiffness,\n        cm.contactEquationRelaxation,\n        this.world.dt\n    );\n\n    var matA = si.material || bi.material;\n    var matB = sj.material || bj.material;\n    if(matA && matB && matA.restitution >= 0 && matB.restitution >= 0){\n        c.restitution = matA.restitution * matB.restitution;\n    }\n\n    c.si = rsi || si;\n    c.sj = rsj || sj;\n\n    return c;\n};\n\nNarrowphase.prototype.createFrictionEquationsFromContact = function(contactEquation, outArray){\n    var bodyA = contactEquation.bi;\n    var bodyB = contactEquation.bj;\n    var shapeA = contactEquation.si;\n    var shapeB = contactEquation.sj;\n\n    var world = this.world;\n    var cm = this.currentContactMaterial;\n\n    // If friction or restitution were specified in the material, use them\n    var friction = cm.friction;\n    var matA = shapeA.material || bodyA.material;\n    var matB = shapeB.material || bodyB.material;\n    if(matA && matB && matA.friction >= 0 && matB.friction >= 0){\n        friction = matA.friction * matB.friction;\n    }\n\n    if(friction > 0){\n\n        // Create 2 tangent equations\n        var mug = friction * world.gravity.length();\n        var reducedMass = (bodyA.invMass + bodyB.invMass);\n        if(reducedMass > 0){\n            reducedMass = 1/reducedMass;\n        }\n        var pool = this.frictionEquationPool;\n        var c1 = pool.length ? pool.pop() : new FrictionEquation(bodyA,bodyB,mug*reducedMass);\n        var c2 = pool.length ? pool.pop() : new FrictionEquation(bodyA,bodyB,mug*reducedMass);\n\n        c1.bi = c2.bi = bodyA;\n        c1.bj = c2.bj = bodyB;\n        c1.minForce = c2.minForce = -mug*reducedMass;\n        c1.maxForce = c2.maxForce = mug*reducedMass;\n\n        // Copy over the relative vectors\n        c1.ri.copy(contactEquation.ri);\n        c1.rj.copy(contactEquation.rj);\n        c2.ri.copy(contactEquation.ri);\n        c2.rj.copy(contactEquation.rj);\n\n        // Construct tangents\n        contactEquation.ni.tangents(c1.t, c2.t);\n\n        // Set spook params\n        c1.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, world.dt);\n        c2.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, world.dt);\n\n        c1.enabled = c2.enabled = contactEquation.enabled;\n\n        outArray.push(c1, c2);\n\n        return true;\n    }\n\n    return false;\n};\n\nvar averageNormal = new Vec3();\nvar averageContactPointA = new Vec3();\nvar averageContactPointB = new Vec3();\n\n// Take the average N latest contact point on the plane.\nNarrowphase.prototype.createFrictionFromAverage = function(numContacts){\n    // The last contactEquation\n    var c = this.result[this.result.length - 1];\n\n    // Create the result: two \"average\" friction equations\n    if (!this.createFrictionEquationsFromContact(c, this.frictionResult) || numContacts === 1) {\n        return;\n    }\n\n    var f1 = this.frictionResult[this.frictionResult.length - 2];\n    var f2 = this.frictionResult[this.frictionResult.length - 1];\n\n    averageNormal.setZero();\n    averageContactPointA.setZero();\n    averageContactPointB.setZero();\n\n    var bodyA = c.bi;\n    var bodyB = c.bj;\n    for(var i=0; i!==numContacts; i++){\n        c = this.result[this.result.length - 1 - i];\n        if(c.bodyA !== bodyA){\n            averageNormal.vadd(c.ni, averageNormal); // vec2.add(eq.t, eq.t, c.normalA);\n            averageContactPointA.vadd(c.ri, averageContactPointA); // vec2.add(eq.contactPointA, eq.contactPointA, c.contactPointA);\n            averageContactPointB.vadd(c.rj, averageContactPointB);\n        } else {\n            averageNormal.vsub(c.ni, averageNormal); // vec2.sub(eq.t, eq.t, c.normalA);\n            averageContactPointA.vadd(c.rj, averageContactPointA); // vec2.add(eq.contactPointA, eq.contactPointA, c.contactPointA);\n            averageContactPointB.vadd(c.ri, averageContactPointB);\n        }\n    }\n\n    var invNumContacts = 1 / numContacts;\n    averageContactPointA.scale(invNumContacts, f1.ri); // vec2.scale(eq.contactPointA, eq.contactPointA, invNumContacts);\n    averageContactPointB.scale(invNumContacts, f1.rj); // vec2.scale(eq.contactPointB, eq.contactPointB, invNumContacts);\n    f2.ri.copy(f1.ri); // Should be the same\n    f2.rj.copy(f1.rj);\n    averageNormal.normalize();\n    averageNormal.tangents(f1.t, f2.t);\n    // return eq;\n};\n\n\nvar tmpVec1 = new Vec3();\nvar tmpVec2 = new Vec3();\nvar tmpQuat1 = new Quaternion();\nvar tmpQuat2 = new Quaternion();\n\n/**\n * Generate all contacts between a list of body pairs\n * @method getContacts\n * @param {array} p1 Array of body indices\n * @param {array} p2 Array of body indices\n * @param {World} world\n * @param {array} result Array to store generated contacts\n * @param {array} oldcontacts Optional. Array of reusable contact objects\n */\nNarrowphase.prototype.getContacts = function(p1, p2, world, result, oldcontacts, frictionResult, frictionPool){\n    // Save old contact objects\n    this.contactPointPool = oldcontacts;\n    this.frictionEquationPool = frictionPool;\n    this.result = result;\n    this.frictionResult = frictionResult;\n\n    var qi = tmpQuat1;\n    var qj = tmpQuat2;\n    var xi = tmpVec1;\n    var xj = tmpVec2;\n\n    for(var k=0, N=p1.length; k!==N; k++){\n\n        // Get current collision bodies\n        var bi = p1[k],\n            bj = p2[k];\n\n        // Get contact material\n        var bodyContactMaterial = null;\n        if(bi.material && bj.material){\n            bodyContactMaterial = world.getContactMaterial(bi.material,bj.material) || null;\n        }\n\n        for (var i = 0; i < bi.shapes.length; i++) {\n            bi.quaternion.mult(bi.shapeOrientations[i], qi);\n            bi.quaternion.vmult(bi.shapeOffsets[i], xi);\n            xi.vadd(bi.position, xi);\n            var si = bi.shapes[i];\n\n            for (var j = 0; j < bj.shapes.length; j++) {\n\n                // Compute world transform of shapes\n                bj.quaternion.mult(bj.shapeOrientations[j], qj);\n                bj.quaternion.vmult(bj.shapeOffsets[j], xj);\n                xj.vadd(bj.position, xj);\n                var sj = bj.shapes[j];\n\n                if(xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius){\n                    continue;\n                }\n\n                // Get collision material\n                var shapeContactMaterial = null;\n                if(si.material && sj.material){\n                    shapeContactMaterial = world.getContactMaterial(si.material,sj.material) || null;\n                }\n\n                this.currentContactMaterial = shapeContactMaterial || bodyContactMaterial || world.defaultContactMaterial;\n\n                // Get contacts\n                var resolver = this[si.type | sj.type];\n                if(resolver){\n                    if (si.type < sj.type) {\n                        resolver.call(this, si, sj, xi, xj, qi, qj, bi, bj, si, sj);\n                    } else {\n                        resolver.call(this, sj, si, xj, xi, qj, qi, bj, bi, si, sj);\n                    }\n                }\n            }\n        }\n    }\n};\n\nvar numWarnings = 0;\nvar maxWarnings = 10;\n\nfunction warn(msg){\n    if(numWarnings > maxWarnings){\n        return;\n    }\n\n    numWarnings++;\n\n    console.warn(msg);\n}\n\nNarrowphase.prototype[Shape.types.BOX | Shape.types.BOX] =\nNarrowphase.prototype.boxBox = function(si,sj,xi,xj,qi,qj,bi,bj){\n    si.convexPolyhedronRepresentation.material = si.material;\n    sj.convexPolyhedronRepresentation.material = sj.material;\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n    sj.convexPolyhedronRepresentation.collisionResponse = sj.collisionResponse;\n    this.convexConvex(si.convexPolyhedronRepresentation,sj.convexPolyhedronRepresentation,xi,xj,qi,qj,bi,bj,si,sj);\n};\n\nNarrowphase.prototype[Shape.types.BOX | Shape.types.CONVEXPOLYHEDRON] =\nNarrowphase.prototype.boxConvex = function(si,sj,xi,xj,qi,qj,bi,bj){\n    si.convexPolyhedronRepresentation.material = si.material;\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n    this.convexConvex(si.convexPolyhedronRepresentation,sj,xi,xj,qi,qj,bi,bj,si,sj);\n};\n\nNarrowphase.prototype[Shape.types.BOX | Shape.types.PARTICLE] =\nNarrowphase.prototype.boxParticle = function(si,sj,xi,xj,qi,qj,bi,bj){\n    si.convexPolyhedronRepresentation.material = si.material;\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n    this.convexParticle(si.convexPolyhedronRepresentation,sj,xi,xj,qi,qj,bi,bj,si,sj);\n};\n\n/**\n * @method sphereSphere\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.SPHERE] =\nNarrowphase.prototype.sphereSphere = function(si,sj,xi,xj,qi,qj,bi,bj){\n    // We will have only one contact in this case\n    var r = this.createContactEquation(bi,bj,si,sj);\n\n    // Contact normal\n    xj.vsub(xi, r.ni);\n    r.ni.normalize();\n\n    // Contact point locations\n    r.ri.copy(r.ni);\n    r.rj.copy(r.ni);\n    r.ri.mult(si.radius, r.ri);\n    r.rj.mult(-sj.radius, r.rj);\n\n    r.ri.vadd(xi, r.ri);\n    r.ri.vsub(bi.position, r.ri);\n\n    r.rj.vadd(xj, r.rj);\n    r.rj.vsub(bj.position, r.rj);\n\n    this.result.push(r);\n\n    this.createFrictionEquationsFromContact(r, this.frictionResult);\n};\n\n/**\n * @method planeTrimesh\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nvar planeTrimesh_normal = new Vec3();\nvar planeTrimesh_relpos = new Vec3();\nvar planeTrimesh_projected = new Vec3();\nNarrowphase.prototype[Shape.types.PLANE | Shape.types.TRIMESH] =\nNarrowphase.prototype.planeTrimesh = function(\n    planeShape,\n    trimeshShape,\n    planePos,\n    trimeshPos,\n    planeQuat,\n    trimeshQuat,\n    planeBody,\n    trimeshBody\n){\n    // Make contacts!\n    var v = new Vec3();\n\n    var normal = planeTrimesh_normal;\n    normal.set(0,0,1);\n    planeQuat.vmult(normal,normal); // Turn normal according to plane\n\n    for(var i=0; i<trimeshShape.vertices.length / 3; i++){\n\n        // Get world vertex from trimesh\n        trimeshShape.getVertex(i, v);\n\n        // Safe up\n        var v2 = new Vec3();\n        v2.copy(v);\n        Transform.pointToWorldFrame(trimeshPos, trimeshQuat, v2, v);\n\n        // Check plane side\n        var relpos = planeTrimesh_relpos;\n        v.vsub(planePos, relpos);\n        var dot = normal.dot(relpos);\n\n        if(dot <= 0.0){\n            var r = this.createContactEquation(planeBody,trimeshBody,planeShape,trimeshShape);\n\n            r.ni.copy(normal); // Contact normal is the plane normal\n\n            // Get vertex position projected on plane\n            var projected = planeTrimesh_projected;\n            normal.scale(relpos.dot(normal), projected);\n            v.vsub(projected,projected);\n\n            // ri is the projected world position minus plane position\n            r.ri.copy(projected);\n            r.ri.vsub(planeBody.position, r.ri);\n\n            r.rj.copy(v);\n            r.rj.vsub(trimeshBody.position, r.rj);\n\n            // Store result\n            this.result.push(r);\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\n        }\n    }\n};\n\n/**\n * @method sphereTrimesh\n * @param  {Shape}      sphereShape\n * @param  {Shape}      trimeshShape\n * @param  {Vec3}       spherePos\n * @param  {Vec3}       trimeshPos\n * @param  {Quaternion} sphereQuat\n * @param  {Quaternion} trimeshQuat\n * @param  {Body}       sphereBody\n * @param  {Body}       trimeshBody\n */\nvar sphereTrimesh_normal = new Vec3();\nvar sphereTrimesh_relpos = new Vec3();\nvar sphereTrimesh_projected = new Vec3();\nvar sphereTrimesh_v = new Vec3();\nvar sphereTrimesh_v2 = new Vec3();\nvar sphereTrimesh_edgeVertexA = new Vec3();\nvar sphereTrimesh_edgeVertexB = new Vec3();\nvar sphereTrimesh_edgeVector = new Vec3();\nvar sphereTrimesh_edgeVectorUnit = new Vec3();\nvar sphereTrimesh_localSpherePos = new Vec3();\nvar sphereTrimesh_tmp = new Vec3();\nvar sphereTrimesh_va = new Vec3();\nvar sphereTrimesh_vb = new Vec3();\nvar sphereTrimesh_vc = new Vec3();\nvar sphereTrimesh_localSphereAABB = new AABB();\nvar sphereTrimesh_triangles = [];\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.TRIMESH] =\nNarrowphase.prototype.sphereTrimesh = function (\n    sphereShape,\n    trimeshShape,\n    spherePos,\n    trimeshPos,\n    sphereQuat,\n    trimeshQuat,\n    sphereBody,\n    trimeshBody\n) {\n\n    var edgeVertexA = sphereTrimesh_edgeVertexA;\n    var edgeVertexB = sphereTrimesh_edgeVertexB;\n    var edgeVector = sphereTrimesh_edgeVector;\n    var edgeVectorUnit = sphereTrimesh_edgeVectorUnit;\n    var localSpherePos = sphereTrimesh_localSpherePos;\n    var tmp = sphereTrimesh_tmp;\n    var localSphereAABB = sphereTrimesh_localSphereAABB;\n    var v2 = sphereTrimesh_v2;\n    var relpos = sphereTrimesh_relpos;\n    var triangles = sphereTrimesh_triangles;\n\n    // Convert sphere position to local in the trimesh\n    Transform.pointToLocalFrame(trimeshPos, trimeshQuat, spherePos, localSpherePos);\n\n    // Get the aabb of the sphere locally in the trimesh\n    var sphereRadius = sphereShape.radius;\n    localSphereAABB.lowerBound.set(\n        localSpherePos.x - sphereRadius,\n        localSpherePos.y - sphereRadius,\n        localSpherePos.z - sphereRadius\n    );\n    localSphereAABB.upperBound.set(\n        localSpherePos.x + sphereRadius,\n        localSpherePos.y + sphereRadius,\n        localSpherePos.z + sphereRadius\n    );\n\n    trimeshShape.getTrianglesInAABB(localSphereAABB, triangles);\n    //for (var i = 0; i < trimeshShape.indices.length / 3; i++) triangles.push(i); // All\n\n    // Vertices\n    var v = sphereTrimesh_v;\n    var radiusSquared = sphereShape.radius * sphereShape.radius;\n    for(var i=0; i<triangles.length; i++){\n        for (var j = 0; j < 3; j++) {\n\n            trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + j], v);\n\n            // Check vertex overlap in sphere\n            v.vsub(localSpherePos, relpos);\n\n            if(relpos.norm2() <= radiusSquared){\n\n                // Safe up\n                v2.copy(v);\n                Transform.pointToWorldFrame(trimeshPos, trimeshQuat, v2, v);\n\n                v.vsub(spherePos, relpos);\n\n                var r = this.createContactEquation(sphereBody,trimeshBody,sphereShape,trimeshShape);\n                r.ni.copy(relpos);\n                r.ni.normalize();\n\n                // ri is the vector from sphere center to the sphere surface\n                r.ri.copy(r.ni);\n                r.ri.scale(sphereShape.radius, r.ri);\n                r.ri.vadd(spherePos, r.ri);\n                r.ri.vsub(sphereBody.position, r.ri);\n\n                r.rj.copy(v);\n                r.rj.vsub(trimeshBody.position, r.rj);\n\n                // Store result\n                this.result.push(r);\n                this.createFrictionEquationsFromContact(r, this.frictionResult);\n            }\n        }\n    }\n\n    // Check all edges\n    for(var i=0; i<triangles.length; i++){\n        for (var j = 0; j < 3; j++) {\n\n            trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + j], edgeVertexA);\n            trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + ((j+1)%3)], edgeVertexB);\n            edgeVertexB.vsub(edgeVertexA, edgeVector);\n\n            // Project sphere position to the edge\n            localSpherePos.vsub(edgeVertexB, tmp);\n            var positionAlongEdgeB = tmp.dot(edgeVector);\n\n            localSpherePos.vsub(edgeVertexA, tmp);\n            var positionAlongEdgeA = tmp.dot(edgeVector);\n\n            if(positionAlongEdgeA > 0 && positionAlongEdgeB < 0){\n\n                // Now check the orthogonal distance from edge to sphere center\n                localSpherePos.vsub(edgeVertexA, tmp);\n\n                edgeVectorUnit.copy(edgeVector);\n                edgeVectorUnit.normalize();\n                positionAlongEdgeA = tmp.dot(edgeVectorUnit);\n\n                edgeVectorUnit.scale(positionAlongEdgeA, tmp);\n                tmp.vadd(edgeVertexA, tmp);\n\n                // tmp is now the sphere center position projected to the edge, defined locally in the trimesh frame\n                var dist = tmp.distanceTo(localSpherePos);\n                if(dist < sphereShape.radius){\n                    var r = this.createContactEquation(sphereBody, trimeshBody, sphereShape, trimeshShape);\n\n                    tmp.vsub(localSpherePos, r.ni);\n                    r.ni.normalize();\n                    r.ni.scale(sphereShape.radius, r.ri);\n\n                    Transform.pointToWorldFrame(trimeshPos, trimeshQuat, tmp, tmp);\n                    tmp.vsub(trimeshBody.position, r.rj);\n\n                    Transform.vectorToWorldFrame(trimeshQuat, r.ni, r.ni);\n                    Transform.vectorToWorldFrame(trimeshQuat, r.ri, r.ri);\n\n                    this.result.push(r);\n                    this.createFrictionEquationsFromContact(r, this.frictionResult);\n                }\n            }\n        }\n    }\n\n    // Triangle faces\n    var va = sphereTrimesh_va;\n    var vb = sphereTrimesh_vb;\n    var vc = sphereTrimesh_vc;\n    var normal = sphereTrimesh_normal;\n    for(var i=0, N = triangles.length; i !== N; i++){\n        trimeshShape.getTriangleVertices(triangles[i], va, vb, vc);\n        trimeshShape.getNormal(triangles[i], normal);\n        localSpherePos.vsub(va, tmp);\n        var dist = tmp.dot(normal);\n        normal.scale(dist, tmp);\n        localSpherePos.vsub(tmp, tmp);\n\n        // tmp is now the sphere position projected to the triangle plane\n        dist = tmp.distanceTo(localSpherePos);\n        if(Ray.pointInTriangle(tmp, va, vb, vc) && dist < sphereShape.radius){\n            var r = this.createContactEquation(sphereBody, trimeshBody, sphereShape, trimeshShape);\n\n            tmp.vsub(localSpherePos, r.ni);\n            r.ni.normalize();\n            r.ni.scale(sphereShape.radius, r.ri);\n\n            Transform.pointToWorldFrame(trimeshPos, trimeshQuat, tmp, tmp);\n            tmp.vsub(trimeshBody.position, r.rj);\n\n            Transform.vectorToWorldFrame(trimeshQuat, r.ni, r.ni);\n            Transform.vectorToWorldFrame(trimeshQuat, r.ri, r.ri);\n\n            this.result.push(r);\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\n        }\n    }\n\n    triangles.length = 0;\n};\n\nvar point_on_plane_to_sphere = new Vec3();\nvar plane_to_sphere_ortho = new Vec3();\n\n/**\n * @method spherePlane\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.PLANE] =\nNarrowphase.prototype.spherePlane = function(si,sj,xi,xj,qi,qj,bi,bj){\n    // We will have one contact in this case\n    var r = this.createContactEquation(bi,bj,si,sj);\n\n    // Contact normal\n    r.ni.set(0,0,1);\n    qj.vmult(r.ni, r.ni);\n    r.ni.negate(r.ni); // body i is the sphere, flip normal\n    r.ni.normalize(); // Needed?\n\n    // Vector from sphere center to contact point\n    r.ni.mult(si.radius, r.ri);\n\n    // Project down sphere on plane\n    xi.vsub(xj, point_on_plane_to_sphere);\n    r.ni.mult(r.ni.dot(point_on_plane_to_sphere), plane_to_sphere_ortho);\n    point_on_plane_to_sphere.vsub(plane_to_sphere_ortho,r.rj); // The sphere position projected to plane\n\n    if(-point_on_plane_to_sphere.dot(r.ni) <= si.radius){\n\n        // Make it relative to the body\n        var ri = r.ri;\n        var rj = r.rj;\n        ri.vadd(xi, ri);\n        ri.vsub(bi.position, ri);\n        rj.vadd(xj, rj);\n        rj.vsub(bj.position, rj);\n\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n    }\n};\n\n// See http://bulletphysics.com/Bullet/BulletFull/SphereTriangleDetector_8cpp_source.html\nvar pointInPolygon_edge = new Vec3();\nvar pointInPolygon_edge_x_normal = new Vec3();\nvar pointInPolygon_vtp = new Vec3();\nfunction pointInPolygon(verts, normal, p){\n    var positiveResult = null;\n    var N = verts.length;\n    for(var i=0; i!==N; i++){\n        var v = verts[i];\n\n        // Get edge to the next vertex\n        var edge = pointInPolygon_edge;\n        verts[(i+1) % (N)].vsub(v,edge);\n\n        // Get cross product between polygon normal and the edge\n        var edge_x_normal = pointInPolygon_edge_x_normal;\n        //var edge_x_normal = new Vec3();\n        edge.cross(normal,edge_x_normal);\n\n        // Get vector between point and current vertex\n        var vertex_to_p = pointInPolygon_vtp;\n        p.vsub(v,vertex_to_p);\n\n        // This dot product determines which side of the edge the point is\n        var r = edge_x_normal.dot(vertex_to_p);\n\n        // If all such dot products have same sign, we are inside the polygon.\n        if(positiveResult===null || (r>0 && positiveResult===true) || (r<=0 && positiveResult===false)){\n            if(positiveResult===null){\n                positiveResult = r>0;\n            }\n            continue;\n        } else {\n            return false; // Encountered some other sign. Exit.\n        }\n    }\n\n    // If we got here, all dot products were of the same sign.\n    return true;\n}\n\nvar box_to_sphere = new Vec3();\nvar sphereBox_ns = new Vec3();\nvar sphereBox_ns1 = new Vec3();\nvar sphereBox_ns2 = new Vec3();\nvar sphereBox_sides = [new Vec3(),new Vec3(),new Vec3(),new Vec3(),new Vec3(),new Vec3()];\nvar sphereBox_sphere_to_corner = new Vec3();\nvar sphereBox_side_ns = new Vec3();\nvar sphereBox_side_ns1 = new Vec3();\nvar sphereBox_side_ns2 = new Vec3();\n\n/**\n * @method sphereBox\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.BOX] =\nNarrowphase.prototype.sphereBox = function(si,sj,xi,xj,qi,qj,bi,bj){\n    var v3pool = this.v3pool;\n\n    // we refer to the box as body j\n    var sides = sphereBox_sides;\n    xi.vsub(xj,box_to_sphere);\n    sj.getSideNormals(sides,qj);\n    var R =     si.radius;\n    var penetrating_sides = [];\n\n    // Check side (plane) intersections\n    var found = false;\n\n    // Store the resulting side penetration info\n    var side_ns = sphereBox_side_ns;\n    var side_ns1 = sphereBox_side_ns1;\n    var side_ns2 = sphereBox_side_ns2;\n    var side_h = null;\n    var side_penetrations = 0;\n    var side_dot1 = 0;\n    var side_dot2 = 0;\n    var side_distance = null;\n    for(var idx=0,nsides=sides.length; idx!==nsides && found===false; idx++){\n        // Get the plane side normal (ns)\n        var ns = sphereBox_ns;\n        ns.copy(sides[idx]);\n\n        var h = ns.norm();\n        ns.normalize();\n\n        // The normal/distance dot product tells which side of the plane we are\n        var dot = box_to_sphere.dot(ns);\n\n        if(dot<h+R && dot>0){\n            // Intersects plane. Now check the other two dimensions\n            var ns1 = sphereBox_ns1;\n            var ns2 = sphereBox_ns2;\n            ns1.copy(sides[(idx+1)%3]);\n            ns2.copy(sides[(idx+2)%3]);\n            var h1 = ns1.norm();\n            var h2 = ns2.norm();\n            ns1.normalize();\n            ns2.normalize();\n            var dot1 = box_to_sphere.dot(ns1);\n            var dot2 = box_to_sphere.dot(ns2);\n            if(dot1<h1 && dot1>-h1 && dot2<h2 && dot2>-h2){\n                var dist = Math.abs(dot-h-R);\n                if(side_distance===null || dist < side_distance){\n                    side_distance = dist;\n                    side_dot1 = dot1;\n                    side_dot2 = dot2;\n                    side_h = h;\n                    side_ns.copy(ns);\n                    side_ns1.copy(ns1);\n                    side_ns2.copy(ns2);\n                    side_penetrations++;\n                }\n            }\n        }\n    }\n    if(side_penetrations){\n        found = true;\n        var r = this.createContactEquation(bi,bj,si,sj);\n        side_ns.mult(-R,r.ri); // Sphere r\n        r.ni.copy(side_ns);\n        r.ni.negate(r.ni); // Normal should be out of sphere\n        side_ns.mult(side_h,side_ns);\n        side_ns1.mult(side_dot1,side_ns1);\n        side_ns.vadd(side_ns1,side_ns);\n        side_ns2.mult(side_dot2,side_ns2);\n        side_ns.vadd(side_ns2,r.rj);\n\n        // Make relative to bodies\n        r.ri.vadd(xi, r.ri);\n        r.ri.vsub(bi.position, r.ri);\n        r.rj.vadd(xj, r.rj);\n        r.rj.vsub(bj.position, r.rj);\n\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n    }\n\n    // Check corners\n    var rj = v3pool.get();\n    var sphere_to_corner = sphereBox_sphere_to_corner;\n    for(var j=0; j!==2 && !found; j++){\n        for(var k=0; k!==2 && !found; k++){\n            for(var l=0; l!==2 && !found; l++){\n                rj.set(0,0,0);\n                if(j){\n                    rj.vadd(sides[0],rj);\n                } else {\n                    rj.vsub(sides[0],rj);\n                }\n                if(k){\n                    rj.vadd(sides[1],rj);\n                } else {\n                    rj.vsub(sides[1],rj);\n                }\n                if(l){\n                    rj.vadd(sides[2],rj);\n                } else {\n                    rj.vsub(sides[2],rj);\n                }\n\n                // World position of corner\n                xj.vadd(rj,sphere_to_corner);\n                sphere_to_corner.vsub(xi,sphere_to_corner);\n\n                if(sphere_to_corner.norm2() < R*R){\n                    found = true;\n                    var r = this.createContactEquation(bi,bj,si,sj);\n                    r.ri.copy(sphere_to_corner);\n                    r.ri.normalize();\n                    r.ni.copy(r.ri);\n                    r.ri.mult(R,r.ri);\n                    r.rj.copy(rj);\n\n                    // Make relative to bodies\n                    r.ri.vadd(xi, r.ri);\n                    r.ri.vsub(bi.position, r.ri);\n                    r.rj.vadd(xj, r.rj);\n                    r.rj.vsub(bj.position, r.rj);\n\n                    this.result.push(r);\n                    this.createFrictionEquationsFromContact(r, this.frictionResult);\n                }\n            }\n        }\n    }\n    v3pool.release(rj);\n    rj = null;\n\n    // Check edges\n    var edgeTangent = v3pool.get();\n    var edgeCenter = v3pool.get();\n    var r = v3pool.get(); // r = edge center to sphere center\n    var orthogonal = v3pool.get();\n    var dist = v3pool.get();\n    var Nsides = sides.length;\n    for(var j=0; j!==Nsides && !found; j++){\n        for(var k=0; k!==Nsides && !found; k++){\n            if(j%3 !== k%3){\n                // Get edge tangent\n                sides[k].cross(sides[j],edgeTangent);\n                edgeTangent.normalize();\n                sides[j].vadd(sides[k], edgeCenter);\n                r.copy(xi);\n                r.vsub(edgeCenter,r);\n                r.vsub(xj,r);\n                var orthonorm = r.dot(edgeTangent); // distance from edge center to sphere center in the tangent direction\n                edgeTangent.mult(orthonorm,orthogonal); // Vector from edge center to sphere center in the tangent direction\n\n                // Find the third side orthogonal to this one\n                var l = 0;\n                while(l===j%3 || l===k%3){\n                    l++;\n                }\n\n                // vec from edge center to sphere projected to the plane orthogonal to the edge tangent\n                dist.copy(xi);\n                dist.vsub(orthogonal,dist);\n                dist.vsub(edgeCenter,dist);\n                dist.vsub(xj,dist);\n\n                // Distances in tangent direction and distance in the plane orthogonal to it\n                var tdist = Math.abs(orthonorm);\n                var ndist = dist.norm();\n\n                if(tdist < sides[l].norm() && ndist<R){\n                    found = true;\n                    var res = this.createContactEquation(bi,bj,si,sj);\n                    edgeCenter.vadd(orthogonal,res.rj); // box rj\n                    res.rj.copy(res.rj);\n                    dist.negate(res.ni);\n                    res.ni.normalize();\n\n                    res.ri.copy(res.rj);\n                    res.ri.vadd(xj,res.ri);\n                    res.ri.vsub(xi,res.ri);\n                    res.ri.normalize();\n                    res.ri.mult(R,res.ri);\n\n                    // Make relative to bodies\n                    res.ri.vadd(xi, res.ri);\n                    res.ri.vsub(bi.position, res.ri);\n                    res.rj.vadd(xj, res.rj);\n                    res.rj.vsub(bj.position, res.rj);\n\n                    this.result.push(res);\n                    this.createFrictionEquationsFromContact(res, this.frictionResult);\n                }\n            }\n        }\n    }\n    v3pool.release(edgeTangent,edgeCenter,r,orthogonal,dist);\n};\n\nvar convex_to_sphere = new Vec3();\nvar sphereConvex_edge = new Vec3();\nvar sphereConvex_edgeUnit = new Vec3();\nvar sphereConvex_sphereToCorner = new Vec3();\nvar sphereConvex_worldCorner = new Vec3();\nvar sphereConvex_worldNormal = new Vec3();\nvar sphereConvex_worldPoint = new Vec3();\nvar sphereConvex_worldSpherePointClosestToPlane = new Vec3();\nvar sphereConvex_penetrationVec = new Vec3();\nvar sphereConvex_sphereToWorldPoint = new Vec3();\n\n/**\n * @method sphereConvex\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.CONVEXPOLYHEDRON] =\nNarrowphase.prototype.sphereConvex = function(si,sj,xi,xj,qi,qj,bi,bj){\n    var v3pool = this.v3pool;\n    xi.vsub(xj,convex_to_sphere);\n    var normals = sj.faceNormals;\n    var faces = sj.faces;\n    var verts = sj.vertices;\n    var R =     si.radius;\n    var penetrating_sides = [];\n\n    // if(convex_to_sphere.norm2() > si.boundingSphereRadius + sj.boundingSphereRadius){\n    //     return;\n    // }\n\n    // Check corners\n    for(var i=0; i!==verts.length; i++){\n        var v = verts[i];\n\n        // World position of corner\n        var worldCorner = sphereConvex_worldCorner;\n        qj.vmult(v,worldCorner);\n        xj.vadd(worldCorner,worldCorner);\n        var sphere_to_corner = sphereConvex_sphereToCorner;\n        worldCorner.vsub(xi, sphere_to_corner);\n        if(sphere_to_corner.norm2() < R * R){\n            found = true;\n            var r = this.createContactEquation(bi,bj,si,sj);\n            r.ri.copy(sphere_to_corner);\n            r.ri.normalize();\n            r.ni.copy(r.ri);\n            r.ri.mult(R,r.ri);\n            worldCorner.vsub(xj,r.rj);\n\n            // Should be relative to the body.\n            r.ri.vadd(xi, r.ri);\n            r.ri.vsub(bi.position, r.ri);\n\n            // Should be relative to the body.\n            r.rj.vadd(xj, r.rj);\n            r.rj.vsub(bj.position, r.rj);\n\n            this.result.push(r);\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\n            return;\n        }\n    }\n\n    // Check side (plane) intersections\n    var found = false;\n    for(var i=0, nfaces=faces.length; i!==nfaces && found===false; i++){\n        var normal = normals[i];\n        var face = faces[i];\n\n        // Get world-transformed normal of the face\n        var worldNormal = sphereConvex_worldNormal;\n        qj.vmult(normal,worldNormal);\n\n        // Get a world vertex from the face\n        var worldPoint = sphereConvex_worldPoint;\n        qj.vmult(verts[face[0]],worldPoint);\n        worldPoint.vadd(xj,worldPoint);\n\n        // Get a point on the sphere, closest to the face normal\n        var worldSpherePointClosestToPlane = sphereConvex_worldSpherePointClosestToPlane;\n        worldNormal.mult(-R, worldSpherePointClosestToPlane);\n        xi.vadd(worldSpherePointClosestToPlane, worldSpherePointClosestToPlane);\n\n        // Vector from a face point to the closest point on the sphere\n        var penetrationVec = sphereConvex_penetrationVec;\n        worldSpherePointClosestToPlane.vsub(worldPoint,penetrationVec);\n\n        // The penetration. Negative value means overlap.\n        var penetration = penetrationVec.dot(worldNormal);\n\n        var worldPointToSphere = sphereConvex_sphereToWorldPoint;\n        xi.vsub(worldPoint, worldPointToSphere);\n\n        if(penetration < 0 && worldPointToSphere.dot(worldNormal)>0){\n            // Intersects plane. Now check if the sphere is inside the face polygon\n            var faceVerts = []; // Face vertices, in world coords\n            for(var j=0, Nverts=face.length; j!==Nverts; j++){\n                var worldVertex = v3pool.get();\n                qj.vmult(verts[face[j]], worldVertex);\n                xj.vadd(worldVertex,worldVertex);\n                faceVerts.push(worldVertex);\n            }\n\n            if(pointInPolygon(faceVerts,worldNormal,xi)){ // Is the sphere center in the face polygon?\n                found = true;\n                var r = this.createContactEquation(bi,bj,si,sj);\n\n                worldNormal.mult(-R, r.ri); // Contact offset, from sphere center to contact\n                worldNormal.negate(r.ni); // Normal pointing out of sphere\n\n                var penetrationVec2 = v3pool.get();\n                worldNormal.mult(-penetration, penetrationVec2);\n                var penetrationSpherePoint = v3pool.get();\n                worldNormal.mult(-R, penetrationSpherePoint);\n\n                //xi.vsub(xj).vadd(penetrationSpherePoint).vadd(penetrationVec2 , r.rj);\n                xi.vsub(xj,r.rj);\n                r.rj.vadd(penetrationSpherePoint,r.rj);\n                r.rj.vadd(penetrationVec2 , r.rj);\n\n                // Should be relative to the body.\n                r.rj.vadd(xj, r.rj);\n                r.rj.vsub(bj.position, r.rj);\n\n                // Should be relative to the body.\n                r.ri.vadd(xi, r.ri);\n                r.ri.vsub(bi.position, r.ri);\n\n                v3pool.release(penetrationVec2);\n                v3pool.release(penetrationSpherePoint);\n\n                this.result.push(r);\n                this.createFrictionEquationsFromContact(r, this.frictionResult);\n\n                // Release world vertices\n                for(var j=0, Nfaceverts=faceVerts.length; j!==Nfaceverts; j++){\n                    v3pool.release(faceVerts[j]);\n                }\n\n                return; // We only expect *one* face contact\n            } else {\n                // Edge?\n                for(var j=0; j!==face.length; j++){\n\n                    // Get two world transformed vertices\n                    var v1 = v3pool.get();\n                    var v2 = v3pool.get();\n                    qj.vmult(verts[face[(j+1)%face.length]], v1);\n                    qj.vmult(verts[face[(j+2)%face.length]], v2);\n                    xj.vadd(v1, v1);\n                    xj.vadd(v2, v2);\n\n                    // Construct edge vector\n                    var edge = sphereConvex_edge;\n                    v2.vsub(v1,edge);\n\n                    // Construct the same vector, but normalized\n                    var edgeUnit = sphereConvex_edgeUnit;\n                    edge.unit(edgeUnit);\n\n                    // p is xi projected onto the edge\n                    var p = v3pool.get();\n                    var v1_to_xi = v3pool.get();\n                    xi.vsub(v1, v1_to_xi);\n                    var dot = v1_to_xi.dot(edgeUnit);\n                    edgeUnit.mult(dot, p);\n                    p.vadd(v1, p);\n\n                    // Compute a vector from p to the center of the sphere\n                    var xi_to_p = v3pool.get();\n                    p.vsub(xi, xi_to_p);\n\n                    // Collision if the edge-sphere distance is less than the radius\n                    // AND if p is in between v1 and v2\n                    if(dot > 0 && dot*dot<edge.norm2() && xi_to_p.norm2() < R*R){ // Collision if the edge-sphere distance is less than the radius\n                        // Edge contact!\n                        var r = this.createContactEquation(bi,bj,si,sj);\n                        p.vsub(xj,r.rj);\n\n                        p.vsub(xi,r.ni);\n                        r.ni.normalize();\n\n                        r.ni.mult(R,r.ri);\n\n                        // Should be relative to the body.\n                        r.rj.vadd(xj, r.rj);\n                        r.rj.vsub(bj.position, r.rj);\n\n                        // Should be relative to the body.\n                        r.ri.vadd(xi, r.ri);\n                        r.ri.vsub(bi.position, r.ri);\n\n                        this.result.push(r);\n                        this.createFrictionEquationsFromContact(r, this.frictionResult);\n\n                        // Release world vertices\n                        for(var j=0, Nfaceverts=faceVerts.length; j!==Nfaceverts; j++){\n                            v3pool.release(faceVerts[j]);\n                        }\n\n                        v3pool.release(v1);\n                        v3pool.release(v2);\n                        v3pool.release(p);\n                        v3pool.release(xi_to_p);\n                        v3pool.release(v1_to_xi);\n\n                        return;\n                    }\n\n                    v3pool.release(v1);\n                    v3pool.release(v2);\n                    v3pool.release(p);\n                    v3pool.release(xi_to_p);\n                    v3pool.release(v1_to_xi);\n                }\n            }\n\n            // Release world vertices\n            for(var j=0, Nfaceverts=faceVerts.length; j!==Nfaceverts; j++){\n                v3pool.release(faceVerts[j]);\n            }\n        }\n    }\n};\n\nvar planeBox_normal = new Vec3();\nvar plane_to_corner = new Vec3();\n\n/**\n * @method planeBox\n * @param  {Array}      result\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.PLANE | Shape.types.BOX] =\nNarrowphase.prototype.planeBox = function(si,sj,xi,xj,qi,qj,bi,bj){\n    sj.convexPolyhedronRepresentation.material = sj.material;\n    sj.convexPolyhedronRepresentation.collisionResponse = sj.collisionResponse;\n    this.planeConvex(si,sj.convexPolyhedronRepresentation,xi,xj,qi,qj,bi,bj);\n};\n\nvar planeConvex_v = new Vec3();\nvar planeConvex_normal = new Vec3();\nvar planeConvex_relpos = new Vec3();\nvar planeConvex_projected = new Vec3();\n\n/**\n * @method planeConvex\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.PLANE | Shape.types.CONVEXPOLYHEDRON] =\nNarrowphase.prototype.planeConvex = function(\n    planeShape,\n    convexShape,\n    planePosition,\n    convexPosition,\n    planeQuat,\n    convexQuat,\n    planeBody,\n    convexBody\n){\n    // Simply return the points behind the plane.\n    var worldVertex = planeConvex_v,\n        worldNormal = planeConvex_normal;\n    worldNormal.set(0,0,1);\n    planeQuat.vmult(worldNormal,worldNormal); // Turn normal according to plane orientation\n\n    var numContacts = 0;\n    var relpos = planeConvex_relpos;\n    for(var i = 0; i !== convexShape.vertices.length; i++){\n\n        // Get world convex vertex\n        worldVertex.copy(convexShape.vertices[i]);\n        convexQuat.vmult(worldVertex, worldVertex);\n        convexPosition.vadd(worldVertex, worldVertex);\n        worldVertex.vsub(planePosition, relpos);\n\n        var dot = worldNormal.dot(relpos);\n        if(dot <= 0.0){\n\n            var r = this.createContactEquation(planeBody, convexBody, planeShape, convexShape);\n\n            // Get vertex position projected on plane\n            var projected = planeConvex_projected;\n            worldNormal.mult(worldNormal.dot(relpos),projected);\n            worldVertex.vsub(projected, projected);\n            projected.vsub(planePosition, r.ri); // From plane to vertex projected on plane\n\n            r.ni.copy(worldNormal); // Contact normal is the plane normal out from plane\n\n            // rj is now just the vector from the convex center to the vertex\n            worldVertex.vsub(convexPosition, r.rj);\n\n            // Make it relative to the body\n            r.ri.vadd(planePosition, r.ri);\n            r.ri.vsub(planeBody.position, r.ri);\n            r.rj.vadd(convexPosition, r.rj);\n            r.rj.vsub(convexBody.position, r.rj);\n\n            this.result.push(r);\n            numContacts++;\n            if(!this.enableFrictionReduction){\n                this.createFrictionEquationsFromContact(r, this.frictionResult);\n            }\n        }\n    }\n\n    if(this.enableFrictionReduction && numContacts){\n        this.createFrictionFromAverage(numContacts);\n    }\n};\n\nvar convexConvex_sepAxis = new Vec3();\nvar convexConvex_q = new Vec3();\n\n/**\n * @method convexConvex\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.CONVEXPOLYHEDRON] =\nNarrowphase.prototype.convexConvex = function(si,sj,xi,xj,qi,qj,bi,bj,rsi,rsj,faceListA,faceListB){\n    var sepAxis = convexConvex_sepAxis;\n\n    if(xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius){\n        return;\n    }\n\n    if(si.findSeparatingAxis(sj,xi,qi,xj,qj,sepAxis,faceListA,faceListB)){\n        var res = [];\n        var q = convexConvex_q;\n        si.clipAgainstHull(xi,qi,sj,xj,qj,sepAxis,-100,100,res);\n        var numContacts = 0;\n        for(var j = 0; j !== res.length; j++){\n            var r = this.createContactEquation(bi,bj,si,sj,rsi,rsj),\n                ri = r.ri,\n                rj = r.rj;\n            sepAxis.negate(r.ni);\n            res[j].normal.negate(q);\n            q.mult(res[j].depth, q);\n            res[j].point.vadd(q, ri);\n            rj.copy(res[j].point);\n\n            // Contact points are in world coordinates. Transform back to relative\n            ri.vsub(xi,ri);\n            rj.vsub(xj,rj);\n\n            // Make relative to bodies\n            ri.vadd(xi, ri);\n            ri.vsub(bi.position, ri);\n            rj.vadd(xj, rj);\n            rj.vsub(bj.position, rj);\n\n            this.result.push(r);\n            numContacts++;\n            if(!this.enableFrictionReduction){\n                this.createFrictionEquationsFromContact(r, this.frictionResult);\n            }\n        }\n        if(this.enableFrictionReduction && numContacts){\n            this.createFrictionFromAverage(numContacts);\n        }\n    }\n};\n\n\n/**\n * @method convexTrimesh\n * @param  {Array}      result\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\n// Narrowphase.prototype[Shape.types.CONVEXPOLYHEDRON | Shape.types.TRIMESH] =\n// Narrowphase.prototype.convexTrimesh = function(si,sj,xi,xj,qi,qj,bi,bj,rsi,rsj,faceListA,faceListB){\n//     var sepAxis = convexConvex_sepAxis;\n\n//     if(xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius){\n//         return;\n//     }\n\n//     // Construct a temp hull for each triangle\n//     var hullB = new ConvexPolyhedron();\n\n//     hullB.faces = [[0,1,2]];\n//     var va = new Vec3();\n//     var vb = new Vec3();\n//     var vc = new Vec3();\n//     hullB.vertices = [\n//         va,\n//         vb,\n//         vc\n//     ];\n\n//     for (var i = 0; i < sj.indices.length / 3; i++) {\n\n//         var triangleNormal = new Vec3();\n//         sj.getNormal(i, triangleNormal);\n//         hullB.faceNormals = [triangleNormal];\n\n//         sj.getTriangleVertices(i, va, vb, vc);\n\n//         var d = si.testSepAxis(triangleNormal, hullB, xi, qi, xj, qj);\n//         if(!d){\n//             triangleNormal.scale(-1, triangleNormal);\n//             d = si.testSepAxis(triangleNormal, hullB, xi, qi, xj, qj);\n\n//             if(!d){\n//                 continue;\n//             }\n//         }\n\n//         var res = [];\n//         var q = convexConvex_q;\n//         si.clipAgainstHull(xi,qi,hullB,xj,qj,triangleNormal,-100,100,res);\n//         for(var j = 0; j !== res.length; j++){\n//             var r = this.createContactEquation(bi,bj,si,sj,rsi,rsj),\n//                 ri = r.ri,\n//                 rj = r.rj;\n//             r.ni.copy(triangleNormal);\n//             r.ni.negate(r.ni);\n//             res[j].normal.negate(q);\n//             q.mult(res[j].depth, q);\n//             res[j].point.vadd(q, ri);\n//             rj.copy(res[j].point);\n\n//             // Contact points are in world coordinates. Transform back to relative\n//             ri.vsub(xi,ri);\n//             rj.vsub(xj,rj);\n\n//             // Make relative to bodies\n//             ri.vadd(xi, ri);\n//             ri.vsub(bi.position, ri);\n//             rj.vadd(xj, rj);\n//             rj.vsub(bj.position, rj);\n\n//             result.push(r);\n//         }\n//     }\n// };\n\nvar particlePlane_normal = new Vec3();\nvar particlePlane_relpos = new Vec3();\nvar particlePlane_projected = new Vec3();\n\n/**\n * @method particlePlane\n * @param  {Array}      result\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.PLANE | Shape.types.PARTICLE] =\nNarrowphase.prototype.planeParticle = function(sj,si,xj,xi,qj,qi,bj,bi){\n    var normal = particlePlane_normal;\n    normal.set(0,0,1);\n    bj.quaternion.vmult(normal,normal); // Turn normal according to plane orientation\n    var relpos = particlePlane_relpos;\n    xi.vsub(bj.position,relpos);\n    var dot = normal.dot(relpos);\n    if(dot <= 0.0){\n        var r = this.createContactEquation(bi,bj,si,sj);\n        r.ni.copy(normal); // Contact normal is the plane normal\n        r.ni.negate(r.ni);\n        r.ri.set(0,0,0); // Center of particle\n\n        // Get particle position projected on plane\n        var projected = particlePlane_projected;\n        normal.mult(normal.dot(xi),projected);\n        xi.vsub(projected,projected);\n        //projected.vadd(bj.position,projected);\n\n        // rj is now the projected world position minus plane position\n        r.rj.copy(projected);\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n    }\n};\n\nvar particleSphere_normal = new Vec3();\n\n/**\n * @method particleSphere\n * @param  {Array}      result\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.PARTICLE | Shape.types.SPHERE] =\nNarrowphase.prototype.sphereParticle = function(sj,si,xj,xi,qj,qi,bj,bi){\n    // The normal is the unit vector from sphere center to particle center\n    var normal = particleSphere_normal;\n    normal.set(0,0,1);\n    xi.vsub(xj,normal);\n    var lengthSquared = normal.norm2();\n\n    if(lengthSquared <= sj.radius * sj.radius){\n        var r = this.createContactEquation(bi,bj,si,sj);\n        normal.normalize();\n        r.rj.copy(normal);\n        r.rj.mult(sj.radius,r.rj);\n        r.ni.copy(normal); // Contact normal\n        r.ni.negate(r.ni);\n        r.ri.set(0,0,0); // Center of particle\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n    }\n};\n\n// WIP\nvar cqj = new Quaternion();\nvar convexParticle_local = new Vec3();\nvar convexParticle_normal = new Vec3();\nvar convexParticle_penetratedFaceNormal = new Vec3();\nvar convexParticle_vertexToParticle = new Vec3();\nvar convexParticle_worldPenetrationVec = new Vec3();\n\n/**\n * @method convexParticle\n * @param  {Array}      result\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.PARTICLE | Shape.types.CONVEXPOLYHEDRON] =\nNarrowphase.prototype.convexParticle = function(sj,si,xj,xi,qj,qi,bj,bi){\n    var penetratedFaceIndex = -1;\n    var penetratedFaceNormal = convexParticle_penetratedFaceNormal;\n    var worldPenetrationVec = convexParticle_worldPenetrationVec;\n    var minPenetration = null;\n    var numDetectedFaces = 0;\n\n    // Convert particle position xi to local coords in the convex\n    var local = convexParticle_local;\n    local.copy(xi);\n    local.vsub(xj,local); // Convert position to relative the convex origin\n    qj.conjugate(cqj);\n    cqj.vmult(local,local);\n\n    if(sj.pointIsInside(local)){\n\n        if(sj.worldVerticesNeedsUpdate){\n            sj.computeWorldVertices(xj,qj);\n        }\n        if(sj.worldFaceNormalsNeedsUpdate){\n            sj.computeWorldFaceNormals(qj);\n        }\n\n        // For each world polygon in the polyhedra\n        for(var i=0,nfaces=sj.faces.length; i!==nfaces; i++){\n\n            // Construct world face vertices\n            var verts = [ sj.worldVertices[ sj.faces[i][0] ] ];\n            var normal = sj.worldFaceNormals[i];\n\n            // Check how much the particle penetrates the polygon plane.\n            xi.vsub(verts[0],convexParticle_vertexToParticle);\n            var penetration = -normal.dot(convexParticle_vertexToParticle);\n            if(minPenetration===null || Math.abs(penetration)<Math.abs(minPenetration)){\n                minPenetration = penetration;\n                penetratedFaceIndex = i;\n                penetratedFaceNormal.copy(normal);\n                numDetectedFaces++;\n            }\n        }\n\n        if(penetratedFaceIndex!==-1){\n            // Setup contact\n            var r = this.createContactEquation(bi,bj,si,sj);\n            penetratedFaceNormal.mult(minPenetration, worldPenetrationVec);\n\n            // rj is the particle position projected to the face\n            worldPenetrationVec.vadd(xi,worldPenetrationVec);\n            worldPenetrationVec.vsub(xj,worldPenetrationVec);\n            r.rj.copy(worldPenetrationVec);\n            //var projectedToFace = xi.vsub(xj).vadd(worldPenetrationVec);\n            //projectedToFace.copy(r.rj);\n\n            //qj.vmult(r.rj,r.rj);\n            penetratedFaceNormal.negate( r.ni ); // Contact normal\n            r.ri.set(0,0,0); // Center of particle\n\n            var ri = r.ri,\n                rj = r.rj;\n\n            // Make relative to bodies\n            ri.vadd(xi, ri);\n            ri.vsub(bi.position, ri);\n            rj.vadd(xj, rj);\n            rj.vsub(bj.position, rj);\n\n            this.result.push(r);\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\n        } else {\n            console.warn(\"Point found inside convex, but did not find penetrating face!\");\n        }\n    }\n};\n\nNarrowphase.prototype[Shape.types.BOX | Shape.types.HEIGHTFIELD] =\nNarrowphase.prototype.boxHeightfield = function (si,sj,xi,xj,qi,qj,bi,bj){\n    si.convexPolyhedronRepresentation.material = si.material;\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n    this.convexHeightfield(si.convexPolyhedronRepresentation,sj,xi,xj,qi,qj,bi,bj);\n};\n\nvar convexHeightfield_tmp1 = new Vec3();\nvar convexHeightfield_tmp2 = new Vec3();\nvar convexHeightfield_faceList = [0];\n\n/**\n * @method convexHeightfield\n */\nNarrowphase.prototype[Shape.types.CONVEXPOLYHEDRON | Shape.types.HEIGHTFIELD] =\nNarrowphase.prototype.convexHeightfield = function (\n    convexShape,\n    hfShape,\n    convexPos,\n    hfPos,\n    convexQuat,\n    hfQuat,\n    convexBody,\n    hfBody\n){\n    var data = hfShape.data,\n        w = hfShape.elementSize,\n        radius = convexShape.boundingSphereRadius,\n        worldPillarOffset = convexHeightfield_tmp2,\n        faceList = convexHeightfield_faceList;\n\n    // Get sphere position to heightfield local!\n    var localConvexPos = convexHeightfield_tmp1;\n    Transform.pointToLocalFrame(hfPos, hfQuat, convexPos, localConvexPos);\n\n    // Get the index of the data points to test against\n    var iMinX = Math.floor((localConvexPos.x - radius) / w) - 1,\n        iMaxX = Math.ceil((localConvexPos.x + radius) / w) + 1,\n        iMinY = Math.floor((localConvexPos.y - radius) / w) - 1,\n        iMaxY = Math.ceil((localConvexPos.y + radius) / w) + 1;\n\n    // Bail out if we are out of the terrain\n    if(iMaxX < 0 || iMaxY < 0 || iMinX > data.length || iMinY > data[0].length){\n        return;\n    }\n\n    // Clamp index to edges\n    if(iMinX < 0){ iMinX = 0; }\n    if(iMaxX < 0){ iMaxX = 0; }\n    if(iMinY < 0){ iMinY = 0; }\n    if(iMaxY < 0){ iMaxY = 0; }\n    if(iMinX >= data.length){ iMinX = data.length - 1; }\n    if(iMaxX >= data.length){ iMaxX = data.length - 1; }\n    if(iMaxY >= data[0].length){ iMaxY = data[0].length - 1; }\n    if(iMinY >= data[0].length){ iMinY = data[0].length - 1; }\n\n    var minMax = [];\n    hfShape.getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, minMax);\n    var min = minMax[0];\n    var max = minMax[1];\n\n    // Bail out if we're cant touch the bounding height box\n    if(localConvexPos.z - radius > max || localConvexPos.z + radius < min){\n        return;\n    }\n\n    for(var i = iMinX; i < iMaxX; i++){\n        for(var j = iMinY; j < iMaxY; j++){\n\n            // Lower triangle\n            hfShape.getConvexTrianglePillar(i, j, false);\n            Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n            if (convexPos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + convexShape.boundingSphereRadius) {\n                this.convexConvex(convexShape, hfShape.pillarConvex, convexPos, worldPillarOffset, convexQuat, hfQuat, convexBody, hfBody, null, null, faceList, null);\n            }\n\n            // Upper triangle\n            hfShape.getConvexTrianglePillar(i, j, true);\n            Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n            if (convexPos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + convexShape.boundingSphereRadius) {\n                this.convexConvex(convexShape, hfShape.pillarConvex, convexPos, worldPillarOffset, convexQuat, hfQuat, convexBody, hfBody, null, null, faceList, null);\n            }\n        }\n    }\n};\n\nvar sphereHeightfield_tmp1 = new Vec3();\nvar sphereHeightfield_tmp2 = new Vec3();\n\n/**\n * @method sphereHeightfield\n */\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.HEIGHTFIELD] =\nNarrowphase.prototype.sphereHeightfield = function (\n    sphereShape,\n    hfShape,\n    spherePos,\n    hfPos,\n    sphereQuat,\n    hfQuat,\n    sphereBody,\n    hfBody\n){\n    var data = hfShape.data,\n        radius = sphereShape.radius,\n        w = hfShape.elementSize,\n        worldPillarOffset = sphereHeightfield_tmp2;\n\n    // Get sphere position to heightfield local!\n    var localSpherePos = sphereHeightfield_tmp1;\n    Transform.pointToLocalFrame(hfPos, hfQuat, spherePos, localSpherePos);\n\n    // Get the index of the data points to test against\n    var iMinX = Math.floor((localSpherePos.x - radius) / w) - 1,\n        iMaxX = Math.ceil((localSpherePos.x + radius) / w) + 1,\n        iMinY = Math.floor((localSpherePos.y - radius) / w) - 1,\n        iMaxY = Math.ceil((localSpherePos.y + radius) / w) + 1;\n\n    // Bail out if we are out of the terrain\n    if(iMaxX < 0 || iMaxY < 0 || iMinX > data.length || iMaxY > data[0].length){\n        return;\n    }\n\n    // Clamp index to edges\n    if(iMinX < 0){ iMinX = 0; }\n    if(iMaxX < 0){ iMaxX = 0; }\n    if(iMinY < 0){ iMinY = 0; }\n    if(iMaxY < 0){ iMaxY = 0; }\n    if(iMinX >= data.length){ iMinX = data.length - 1; }\n    if(iMaxX >= data.length){ iMaxX = data.length - 1; }\n    if(iMaxY >= data[0].length){ iMaxY = data[0].length - 1; }\n    if(iMinY >= data[0].length){ iMinY = data[0].length - 1; }\n\n    var minMax = [];\n    hfShape.getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, minMax);\n    var min = minMax[0];\n    var max = minMax[1];\n\n    // Bail out if we're cant touch the bounding height box\n    if(localSpherePos.z - radius > max || localSpherePos.z + radius < min){\n        return;\n    }\n\n    var result = this.result;\n    for(var i = iMinX; i < iMaxX; i++){\n        for(var j = iMinY; j < iMaxY; j++){\n\n            var numContactsBefore = result.length;\n\n            // Lower triangle\n            hfShape.getConvexTrianglePillar(i, j, false);\n            Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n            if (spherePos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + sphereShape.boundingSphereRadius) {\n                this.sphereConvex(sphereShape, hfShape.pillarConvex, spherePos, worldPillarOffset, sphereQuat, hfQuat, sphereBody, hfBody);\n            }\n\n            // Upper triangle\n            hfShape.getConvexTrianglePillar(i, j, true);\n            Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n            if (spherePos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + sphereShape.boundingSphereRadius) {\n                this.sphereConvex(sphereShape, hfShape.pillarConvex, spherePos, worldPillarOffset, sphereQuat, hfQuat, sphereBody, hfBody);\n            }\n\n            var numContacts = result.length - numContactsBefore;\n\n            if(numContacts > 2){\n                return;\n            }\n            /*\n            // Skip all but 1\n            for (var k = 0; k < numContacts - 1; k++) {\n                result.pop();\n            }\n            */\n        }\n    }\n};\n\n},{\"../collision/AABB\":3,\"../collision/Ray\":9,\"../equations/ContactEquation\":19,\"../equations/FrictionEquation\":21,\"../math/Quaternion\":28,\"../math/Transform\":29,\"../math/Vec3\":30,\"../shapes/ConvexPolyhedron\":38,\"../shapes/Shape\":43,\"../solver/Solver\":47,\"../utils/Vec3Pool\":54}],56:[function(_dereq_,module,exports){\n/* global performance */\n\nmodule.exports = World;\n\nvar Shape = _dereq_('../shapes/Shape');\nvar Vec3 = _dereq_('../math/Vec3');\nvar Quaternion = _dereq_('../math/Quaternion');\nvar GSSolver = _dereq_('../solver/GSSolver');\nvar Vec3Pool = _dereq_('../utils/Vec3Pool');\nvar ContactEquation = _dereq_('../equations/ContactEquation');\nvar FrictionEquation = _dereq_('../equations/FrictionEquation');\nvar Narrowphase = _dereq_('./Narrowphase');\nvar EventTarget = _dereq_('../utils/EventTarget');\nvar ArrayCollisionMatrix = _dereq_('../collision/ArrayCollisionMatrix');\nvar Material = _dereq_('../material/Material');\nvar ContactMaterial = _dereq_('../material/ContactMaterial');\nvar Body = _dereq_('../objects/Body');\nvar TupleDictionary = _dereq_('../utils/TupleDictionary');\nvar RaycastResult = _dereq_('../collision/RaycastResult');\nvar AABB = _dereq_('../collision/AABB');\nvar Ray = _dereq_('../collision/Ray');\nvar NaiveBroadphase = _dereq_('../collision/NaiveBroadphase');\n\n/**\n * The physics world\n * @class World\n * @constructor\n * @extends EventTarget\n */\nfunction World(){\n    EventTarget.apply(this);\n\n    /**\n     * Currently / last used timestep. Is set to -1 if not available. This value is updated before each internal step, which means that it is \"fresh\" inside event callbacks.\n     * @property {Number} dt\n     */\n    this.dt = -1;\n\n    /**\n     * Makes bodies go to sleep when they've been inactive\n     * @property allowSleep\n     * @type {Boolean}\n     */\n    this.allowSleep = false;\n\n    /**\n     * All the current contacts (instances of ContactEquation) in the world.\n     * @property contacts\n     * @type {Array}\n     */\n    this.contacts = [];\n    this.frictionEquations = [];\n\n    /**\n     * How often to normalize quaternions. Set to 0 for every step, 1 for every second etc.. A larger value increases performance. If bodies tend to explode, set to a smaller value (zero to be sure nothing can go wrong).\n     * @property quatNormalizeSkip\n     * @type {Number}\n     */\n    this.quatNormalizeSkip = 0;\n\n    /**\n     * Set to true to use fast quaternion normalization. It is often enough accurate to use. If bodies tend to explode, set to false.\n     * @property quatNormalizeFast\n     * @type {Boolean}\n     * @see Quaternion.normalizeFast\n     * @see Quaternion.normalize\n     */\n    this.quatNormalizeFast = false;\n\n    /**\n     * The wall-clock time since simulation start\n     * @property time\n     * @type {Number}\n     */\n    this.time = 0.0;\n\n    /**\n     * Number of timesteps taken since start\n     * @property stepnumber\n     * @type {Number}\n     */\n    this.stepnumber = 0;\n\n    /// Default and last timestep sizes\n    this.default_dt = 1/60;\n\n    this.nextId = 0;\n    /**\n     * @property gravity\n     * @type {Vec3}\n     */\n    this.gravity = new Vec3();\n\n    /**\n     * @property broadphase\n     * @type {Broadphase}\n     */\n    this.broadphase = new NaiveBroadphase();\n\n    /**\n     * @property bodies\n     * @type {Array}\n     */\n    this.bodies = [];\n\n    /**\n     * @property solver\n     * @type {Solver}\n     */\n    this.solver = new GSSolver();\n\n    /**\n     * @property constraints\n     * @type {Array}\n     */\n    this.constraints = [];\n\n    /**\n     * @property narrowphase\n     * @type {Narrowphase}\n     */\n    this.narrowphase = new Narrowphase(this);\n\n    /**\n     * @property {ArrayCollisionMatrix} collisionMatrix\n\t * @type {ArrayCollisionMatrix}\n\t */\n\tthis.collisionMatrix = new ArrayCollisionMatrix();\n\n    /**\n     * CollisionMatrix from the previous step.\n     * @property {ArrayCollisionMatrix} collisionMatrixPrevious\n\t * @type {ArrayCollisionMatrix}\n\t */\n\tthis.collisionMatrixPrevious = new ArrayCollisionMatrix();\n\n    /**\n     * All added materials\n     * @property materials\n     * @type {Array}\n     */\n    this.materials = [];\n\n    /**\n     * @property contactmaterials\n     * @type {Array}\n     */\n    this.contactmaterials = [];\n\n    /**\n     * Used to look up a ContactMaterial given two instances of Material.\n     * @property {TupleDictionary} contactMaterialTable\n     */\n    this.contactMaterialTable = new TupleDictionary();\n\n    this.defaultMaterial = new Material(\"default\");\n\n    /**\n     * This contact material is used if no suitable contactmaterial is found for a contact.\n     * @property defaultContactMaterial\n     * @type {ContactMaterial}\n     */\n    this.defaultContactMaterial = new ContactMaterial(this.defaultMaterial, this.defaultMaterial, { friction: 0.3, restitution: 0.0 });\n\n    /**\n     * @property doProfiling\n     * @type {Boolean}\n     */\n    this.doProfiling = false;\n\n    /**\n     * @property profile\n     * @type {Object}\n     */\n    this.profile = {\n        solve:0,\n        makeContactConstraints:0,\n        broadphase:0,\n        integrate:0,\n        narrowphase:0,\n    };\n\n    /**\n     * @property subsystems\n     * @type {Array}\n     */\n    this.subsystems = [];\n\n    this.addBodyEvent = {\n        type:\"addBody\",\n        body : null,\n    };\n\n    this.removeBodyEvent = {\n        type:\"removeBody\",\n        body : null,\n    };\n}\nWorld.prototype = new EventTarget();\n\n// Temp stuff\nvar tmpAABB1 = new AABB();\nvar tmpArray1 = [];\nvar tmpRay = new Ray();\n\n/**\n * Get the contact material between materials m1 and m2\n * @method getContactMaterial\n * @param {Material} m1\n * @param {Material} m2\n * @return {ContactMaterial} The contact material if it was found.\n */\nWorld.prototype.getContactMaterial = function(m1,m2){\n    return this.contactMaterialTable.get(m1.id,m2.id); //this.contactmaterials[this.mats2cmat[i+j*this.materials.length]];\n};\n\n/**\n * Get number of objects in the world.\n * @method numObjects\n * @return {Number}\n * @deprecated\n */\nWorld.prototype.numObjects = function(){\n    return this.bodies.length;\n};\n\n/**\n * Store old collision state info\n * @method collisionMatrixTick\n */\nWorld.prototype.collisionMatrixTick = function(){\n\tvar temp = this.collisionMatrixPrevious;\n\tthis.collisionMatrixPrevious = this.collisionMatrix;\n\tthis.collisionMatrix = temp;\n\tthis.collisionMatrix.reset();\n};\n\n/**\n * Add a rigid body to the simulation.\n * @method add\n * @param {Body} body\n * @todo If the simulation has not yet started, why recrete and copy arrays for each body? Accumulate in dynamic arrays in this case.\n * @todo Adding an array of bodies should be possible. This would save some loops too\n * @deprecated Use .addBody instead\n */\nWorld.prototype.add = World.prototype.addBody = function(body){\n    if(this.bodies.indexOf(body) !== -1){\n        return;\n    }\n    body.index = this.bodies.length;\n    this.bodies.push(body);\n    body.world = this;\n    body.initPosition.copy(body.position);\n    body.initVelocity.copy(body.velocity);\n    body.timeLastSleepy = this.time;\n    if(body instanceof Body){\n        body.initAngularVelocity.copy(body.angularVelocity);\n        body.initQuaternion.copy(body.quaternion);\n    }\n\tthis.collisionMatrix.setNumObjects(this.bodies.length);\n    this.addBodyEvent.body = body;\n    this.dispatchEvent(this.addBodyEvent);\n};\n\n/**\n * Add a constraint to the simulation.\n * @method addConstraint\n * @param {Constraint} c\n */\nWorld.prototype.addConstraint = function(c){\n    this.constraints.push(c);\n};\n\n/**\n * Removes a constraint\n * @method removeConstraint\n * @param {Constraint} c\n */\nWorld.prototype.removeConstraint = function(c){\n    var idx = this.constraints.indexOf(c);\n    if(idx!==-1){\n        this.constraints.splice(idx,1);\n    }\n};\n\n/**\n * Raycast test\n * @method rayTest\n * @param {Vec3} from\n * @param {Vec3} to\n * @param {Function|RaycastResult} result\n * @deprecated Use .raycastAll, .raycastClosest or .raycastAny instead.\n */\nWorld.prototype.rayTest = function(from, to, result){\n    if(result instanceof RaycastResult){\n        // Do raycastclosest\n        this.raycastClosest(from, to, {\n            skipBackfaces: true\n        }, result);\n    } else {\n        // Do raycastAll\n        this.raycastAll(from, to, {\n            skipBackfaces: true\n        }, result);\n    }\n};\n\n/**\n * Ray cast against all bodies. The provided callback will be executed for each hit with a RaycastResult as single argument.\n * @method raycastAll\n * @param  {Vec3} from\n * @param  {Vec3} to\n * @param  {Object} options\n * @param  {number} [options.collisionFilterMask=-1]\n * @param  {number} [options.collisionFilterGroup=-1]\n * @param  {boolean} [options.skipBackfaces=false]\n * @param  {boolean} [options.checkCollisionResponse=true]\n * @param  {Function} callback\n * @return {boolean} True if any body was hit.\n */\nWorld.prototype.raycastAll = function(from, to, options, callback){\n    options.mode = Ray.ALL;\n    options.from = from;\n    options.to = to;\n    options.callback = callback;\n    return tmpRay.intersectWorld(this, options);\n};\n\n/**\n * Ray cast, and stop at the first result. Note that the order is random - but the method is fast.\n * @method raycastAny\n * @param  {Vec3} from\n * @param  {Vec3} to\n * @param  {Object} options\n * @param  {number} [options.collisionFilterMask=-1]\n * @param  {number} [options.collisionFilterGroup=-1]\n * @param  {boolean} [options.skipBackfaces=false]\n * @param  {boolean} [options.checkCollisionResponse=true]\n * @param  {RaycastResult} result\n * @return {boolean} True if any body was hit.\n */\nWorld.prototype.raycastAny = function(from, to, options, result){\n    options.mode = Ray.ANY;\n    options.from = from;\n    options.to = to;\n    options.result = result;\n    return tmpRay.intersectWorld(this, options);\n};\n\n/**\n * Ray cast, and return information of the closest hit.\n * @method raycastClosest\n * @param  {Vec3} from\n * @param  {Vec3} to\n * @param  {Object} options\n * @param  {number} [options.collisionFilterMask=-1]\n * @param  {number} [options.collisionFilterGroup=-1]\n * @param  {boolean} [options.skipBackfaces=false]\n * @param  {boolean} [options.checkCollisionResponse=true]\n * @param  {RaycastResult} result\n * @return {boolean} True if any body was hit.\n */\nWorld.prototype.raycastClosest = function(from, to, options, result){\n    options.mode = Ray.CLOSEST;\n    options.from = from;\n    options.to = to;\n    options.result = result;\n    return tmpRay.intersectWorld(this, options);\n};\n\n/**\n * Remove a rigid body from the simulation.\n * @method remove\n * @param {Body} body\n * @deprecated Use .removeBody instead\n */\nWorld.prototype.remove = function(body){\n    body.world = null;\n    var n = this.bodies.length-1,\n        bodies = this.bodies,\n        idx = bodies.indexOf(body);\n    if(idx !== -1){\n        bodies.splice(idx, 1); // Todo: should use a garbage free method\n\n        // Recompute index\n        for(var i=0; i!==bodies.length; i++){\n            bodies[i].index = i;\n        }\n\n        this.collisionMatrix.setNumObjects(n);\n        this.removeBodyEvent.body = body;\n        this.dispatchEvent(this.removeBodyEvent);\n    }\n};\n\n/**\n * Remove a rigid body from the simulation.\n * @method removeBody\n * @param {Body} body\n */\nWorld.prototype.removeBody = World.prototype.remove;\n\n/**\n * Adds a material to the World.\n * @method addMaterial\n * @param {Material} m\n * @todo Necessary?\n */\nWorld.prototype.addMaterial = function(m){\n    this.materials.push(m);\n};\n\n/**\n * Adds a contact material to the World\n * @method addContactMaterial\n * @param {ContactMaterial} cmat\n */\nWorld.prototype.addContactMaterial = function(cmat) {\n\n    // Add contact material\n    this.contactmaterials.push(cmat);\n\n    // Add current contact material to the material table\n    this.contactMaterialTable.set(cmat.materials[0].id,cmat.materials[1].id,cmat);\n};\n\n// performance.now()\nif(typeof performance === 'undefined'){\n    performance = {};\n}\nif(!performance.now){\n    var nowOffset = Date.now();\n    if (performance.timing && performance.timing.navigationStart){\n        nowOffset = performance.timing.navigationStart;\n    }\n    performance.now = function(){\n        return Date.now() - nowOffset;\n    };\n}\n\nvar step_tmp1 = new Vec3();\n\n/**\n * Step the physics world forward in time.\n *\n * There are two modes. The simple mode is fixed timestepping without interpolation. In this case you only use the first argument. The second case uses interpolation. In that you also provide the time since the function was last used, as well as the maximum fixed timesteps to take.\n *\n * @method step\n * @param {Number} dt                       The fixed time step size to use.\n * @param {Number} [timeSinceLastCalled]    The time elapsed since the function was last called.\n * @param {Number} [maxSubSteps=10]         Maximum number of fixed steps to take per function call.\n *\n * @example\n *     // fixed timestepping without interpolation\n *     world.step(1/60);\n *\n * @see http://bulletphysics.org/mediawiki-1.5.8/index.php/Stepping_The_World\n */\nWorld.prototype.step = function(dt, timeSinceLastCalled, maxSubSteps){\n    maxSubSteps = maxSubSteps || 10;\n    timeSinceLastCalled = timeSinceLastCalled || 0;\n\n    if(timeSinceLastCalled === 0){ // Fixed, simple stepping\n\n        this.internalStep(dt);\n\n        // Increment time\n        this.time += dt;\n\n    } else {\n\n        // Compute the number of fixed steps we should have taken since the last step\n        var internalSteps = Math.floor((this.time + timeSinceLastCalled) / dt) - Math.floor(this.time / dt);\n        internalSteps = Math.min(internalSteps,maxSubSteps);\n\n        // Do some fixed steps to catch up\n        var t0 = performance.now();\n        for(var i=0; i!==internalSteps; i++){\n            this.internalStep(dt);\n            if(performance.now() - t0 > dt * 1000){\n                // We are slower than real-time. Better bail out.\n                break;\n            }\n        }\n\n        // Increment internal clock\n        this.time += timeSinceLastCalled;\n\n        // Compute \"Left over\" time step\n        var h = this.time % dt;\n        var h_div_dt = h / dt;\n        var interpvelo = step_tmp1;\n        var bodies = this.bodies;\n\n        for(var j=0; j !== bodies.length; j++){\n            var b = bodies[j];\n            if(b.type !== Body.STATIC && b.sleepState !== Body.SLEEPING){\n\n                // Interpolate\n                b.position.vsub(b.previousPosition, interpvelo);\n                interpvelo.scale(h_div_dt, interpvelo);\n                b.position.vadd(interpvelo, b.interpolatedPosition);\n\n                // TODO: interpolate quaternion\n                // b.interpolatedAngle = b.angle + (b.angle - b.previousAngle) * h_div_dt;\n\n            } else {\n\n                // For static bodies, just copy. Who else will do it?\n                b.interpolatedPosition.copy(b.position);\n                b.interpolatedQuaternion.copy(b.quaternion);\n            }\n        }\n    }\n};\n\n/**\n * Step the simulation\n * @method step\n * @param {Number} dt\n */\nvar World_step_postStepEvent = {type:\"postStep\"}, // Reusable event objects to save memory\n    World_step_preStepEvent = {type:\"preStep\"},\n    World_step_collideEvent = {type:\"collide\", body:null, contact:null },\n    World_step_oldContacts = [], // Pools for unused objects\n    World_step_frictionEquationPool = [],\n    World_step_p1 = [], // Reusable arrays for collision pairs\n    World_step_p2 = [],\n    World_step_gvec = new Vec3(), // Temporary vectors and quats\n    World_step_vi = new Vec3(),\n    World_step_vj = new Vec3(),\n    World_step_wi = new Vec3(),\n    World_step_wj = new Vec3(),\n    World_step_t1 = new Vec3(),\n    World_step_t2 = new Vec3(),\n    World_step_rixn = new Vec3(),\n    World_step_rjxn = new Vec3(),\n    World_step_step_q = new Quaternion(),\n    World_step_step_w = new Quaternion(),\n    World_step_step_wq = new Quaternion(),\n    invI_tau_dt = new Vec3();\nWorld.prototype.internalStep = function(dt){\n    this.dt = dt;\n\n    var world = this,\n        that = this,\n        contacts = this.contacts,\n        p1 = World_step_p1,\n        p2 = World_step_p2,\n        N = this.numObjects(),\n        bodies = this.bodies,\n        solver = this.solver,\n        gravity = this.gravity,\n        doProfiling = this.doProfiling,\n        profile = this.profile,\n        DYNAMIC = Body.DYNAMIC,\n        profilingStart,\n        constraints = this.constraints,\n        frictionEquationPool = World_step_frictionEquationPool,\n        gnorm = gravity.norm(),\n        gx = gravity.x,\n        gy = gravity.y,\n        gz = gravity.z,\n        i=0;\n\n    if(doProfiling){\n        profilingStart = performance.now();\n    }\n\n    // Add gravity to all objects\n    for(i=0; i!==N; i++){\n        var bi = bodies[i];\n        if(bi.type & DYNAMIC){ // Only for dynamic bodies\n            var f = bi.force, m = bi.mass;\n            f.x += m*gx;\n            f.y += m*gy;\n            f.z += m*gz;\n        }\n    }\n\n    // Update subsystems\n    for(var i=0, Nsubsystems=this.subsystems.length; i!==Nsubsystems; i++){\n        this.subsystems[i].update();\n    }\n\n    // Collision detection\n    if(doProfiling){ profilingStart = performance.now(); }\n    p1.length = 0; // Clean up pair arrays from last step\n    p2.length = 0;\n    this.broadphase.collisionPairs(this,p1,p2);\n    if(doProfiling){ profile.broadphase = performance.now() - profilingStart; }\n\n    // Remove constrained pairs with collideConnected == false\n    var Nconstraints = constraints.length;\n    for(i=0; i!==Nconstraints; i++){\n        var c = constraints[i];\n        if(!c.collideConnected){\n            for(var j = p1.length-1; j>=0; j-=1){\n                if( (c.bodyA === p1[j] && c.bodyB === p2[j]) ||\n                    (c.bodyB === p1[j] && c.bodyA === p2[j])){\n                    p1.splice(j, 1);\n                    p2.splice(j, 1);\n                }\n            }\n        }\n    }\n\n    this.collisionMatrixTick();\n\n    // Generate contacts\n    if(doProfiling){ profilingStart = performance.now(); }\n    var oldcontacts = World_step_oldContacts;\n    var NoldContacts = contacts.length;\n\n    for(i=0; i!==NoldContacts; i++){\n        oldcontacts.push(contacts[i]);\n    }\n    contacts.length = 0;\n\n    // Transfer FrictionEquation from current list to the pool for reuse\n    var NoldFrictionEquations = this.frictionEquations.length;\n    for(i=0; i!==NoldFrictionEquations; i++){\n        frictionEquationPool.push(this.frictionEquations[i]);\n    }\n    this.frictionEquations.length = 0;\n\n    this.narrowphase.getContacts(\n        p1,\n        p2,\n        this,\n        contacts,\n        oldcontacts, // To be reused\n        this.frictionEquations,\n        frictionEquationPool\n    );\n\n    if(doProfiling){\n        profile.narrowphase = performance.now() - profilingStart;\n    }\n\n    // Loop over all collisions\n    if(doProfiling){\n        profilingStart = performance.now();\n    }\n\n    // Add all friction eqs\n    for (var i = 0; i < this.frictionEquations.length; i++) {\n        solver.addEquation(this.frictionEquations[i]);\n    }\n\n    var ncontacts = contacts.length;\n    for(var k=0; k!==ncontacts; k++){\n\n        // Current contact\n        var c = contacts[k];\n\n        // Get current collision indeces\n        var bi = c.bi,\n            bj = c.bj,\n            si = c.si,\n            sj = c.sj;\n\n        // Get collision properties\n        var cm;\n        if(bi.material && bj.material){\n            cm = this.getContactMaterial(bi.material,bj.material) || this.defaultContactMaterial;\n        } else {\n            cm = this.defaultContactMaterial;\n        }\n\n        // c.enabled = bi.collisionResponse && bj.collisionResponse && si.collisionResponse && sj.collisionResponse;\n\n        var mu = cm.friction;\n        // c.restitution = cm.restitution;\n\n        // If friction or restitution were specified in the material, use them\n        if(bi.material && bj.material){\n            if(bi.material.friction >= 0 && bj.material.friction >= 0){\n                mu = bi.material.friction * bj.material.friction;\n            }\n\n            if(bi.material.restitution >= 0 && bj.material.restitution >= 0){\n                c.restitution = bi.material.restitution * bj.material.restitution;\n            }\n        }\n\n\t\t// c.setSpookParams(\n  //           cm.contactEquationStiffness,\n  //           cm.contactEquationRelaxation,\n  //           dt\n  //       );\n\n\t\tsolver.addEquation(c);\n\n\t\t// // Add friction constraint equation\n\t\t// if(mu > 0){\n\n\t\t// \t// Create 2 tangent equations\n\t\t// \tvar mug = mu * gnorm;\n\t\t// \tvar reducedMass = (bi.invMass + bj.invMass);\n\t\t// \tif(reducedMass > 0){\n\t\t// \t\treducedMass = 1/reducedMass;\n\t\t// \t}\n\t\t// \tvar pool = frictionEquationPool;\n\t\t// \tvar c1 = pool.length ? pool.pop() : new FrictionEquation(bi,bj,mug*reducedMass);\n\t\t// \tvar c2 = pool.length ? pool.pop() : new FrictionEquation(bi,bj,mug*reducedMass);\n\t\t// \tthis.frictionEquations.push(c1, c2);\n\n\t\t// \tc1.bi = c2.bi = bi;\n\t\t// \tc1.bj = c2.bj = bj;\n\t\t// \tc1.minForce = c2.minForce = -mug*reducedMass;\n\t\t// \tc1.maxForce = c2.maxForce = mug*reducedMass;\n\n\t\t// \t// Copy over the relative vectors\n\t\t// \tc1.ri.copy(c.ri);\n\t\t// \tc1.rj.copy(c.rj);\n\t\t// \tc2.ri.copy(c.ri);\n\t\t// \tc2.rj.copy(c.rj);\n\n\t\t// \t// Construct tangents\n\t\t// \tc.ni.tangents(c1.t, c2.t);\n\n  //           // Set spook params\n  //           c1.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, dt);\n  //           c2.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, dt);\n\n  //           c1.enabled = c2.enabled = c.enabled;\n\n\t\t// \t// Add equations to solver\n\t\t// \tsolver.addEquation(c1);\n\t\t// \tsolver.addEquation(c2);\n\t\t// }\n\n        if( bi.allowSleep &&\n            bi.type === Body.DYNAMIC &&\n            bi.sleepState  === Body.SLEEPING &&\n            bj.sleepState  === Body.AWAKE &&\n            bj.type !== Body.STATIC\n        ){\n            var speedSquaredB = bj.velocity.norm2() + bj.angularVelocity.norm2();\n            var speedLimitSquaredB = Math.pow(bj.sleepSpeedLimit,2);\n            if(speedSquaredB >= speedLimitSquaredB*2){\n                bi._wakeUpAfterNarrowphase = true;\n            }\n        }\n\n        if( bj.allowSleep &&\n            bj.type === Body.DYNAMIC &&\n            bj.sleepState  === Body.SLEEPING &&\n            bi.sleepState  === Body.AWAKE &&\n            bi.type !== Body.STATIC\n        ){\n            var speedSquaredA = bi.velocity.norm2() + bi.angularVelocity.norm2();\n            var speedLimitSquaredA = Math.pow(bi.sleepSpeedLimit,2);\n            if(speedSquaredA >= speedLimitSquaredA*2){\n                bj._wakeUpAfterNarrowphase = true;\n            }\n        }\n\n        // Now we know that i and j are in contact. Set collision matrix state\n\t\tthis.collisionMatrix.set(bi, bj, true);\n\n        if (!this.collisionMatrixPrevious.get(bi, bj)) {\n            // First contact!\n            // We reuse the collideEvent object, otherwise we will end up creating new objects for each new contact, even if there's no event listener attached.\n            World_step_collideEvent.body = bj;\n            World_step_collideEvent.contact = c;\n            bi.dispatchEvent(World_step_collideEvent);\n\n            World_step_collideEvent.body = bi;\n            bj.dispatchEvent(World_step_collideEvent);\n        }\n    }\n    if(doProfiling){\n        profile.makeContactConstraints = performance.now() - profilingStart;\n        profilingStart = performance.now();\n    }\n\n    // Wake up bodies\n    for(i=0; i!==N; i++){\n        var bi = bodies[i];\n        if(bi._wakeUpAfterNarrowphase){\n            bi.wakeUp();\n            bi._wakeUpAfterNarrowphase = false;\n        }\n    }\n\n    // Add user-added constraints\n    var Nconstraints = constraints.length;\n    for(i=0; i!==Nconstraints; i++){\n        var c = constraints[i];\n        c.update();\n        for(var j=0, Neq=c.equations.length; j!==Neq; j++){\n            var eq = c.equations[j];\n            solver.addEquation(eq);\n        }\n    }\n\n    // Solve the constrained system\n    solver.solve(dt,this);\n\n    if(doProfiling){\n        profile.solve = performance.now() - profilingStart;\n    }\n\n    // Remove all contacts from solver\n    solver.removeAllEquations();\n\n    // Apply damping, see http://code.google.com/p/bullet/issues/detail?id=74 for details\n    var pow = Math.pow;\n    for(i=0; i!==N; i++){\n        var bi = bodies[i];\n        if(bi.type & DYNAMIC){ // Only for dynamic bodies\n            var ld = pow(1.0 - bi.linearDamping,dt);\n            var v = bi.velocity;\n            v.mult(ld,v);\n            var av = bi.angularVelocity;\n            if(av){\n                var ad = pow(1.0 - bi.angularDamping,dt);\n                av.mult(ad,av);\n            }\n        }\n    }\n\n    this.dispatchEvent(World_step_preStepEvent);\n\n    // Invoke pre-step callbacks\n    for(i=0; i!==N; i++){\n        var bi = bodies[i];\n        if(bi.preStep){\n            bi.preStep.call(bi);\n        }\n    }\n\n    // Leap frog\n    // vnew = v + h*f/m\n    // xnew = x + h*vnew\n    if(doProfiling){\n        profilingStart = performance.now();\n    }\n    var q = World_step_step_q;\n    var w = World_step_step_w;\n    var wq = World_step_step_wq;\n    var stepnumber = this.stepnumber;\n    var DYNAMIC_OR_KINEMATIC = Body.DYNAMIC | Body.KINEMATIC;\n    var quatNormalize = stepnumber % (this.quatNormalizeSkip+1) === 0;\n    var quatNormalizeFast = this.quatNormalizeFast;\n    var half_dt = dt * 0.5;\n    var PLANE = Shape.types.PLANE,\n        CONVEX = Shape.types.CONVEXPOLYHEDRON;\n\n    for(i=0; i!==N; i++){\n        var b = bodies[i],\n            force = b.force,\n            tau = b.torque;\n        if((b.type & DYNAMIC_OR_KINEMATIC) && b.sleepState !== Body.SLEEPING){ // Only for dynamic\n            var velo = b.velocity,\n                angularVelo = b.angularVelocity,\n                pos = b.position,\n                quat = b.quaternion,\n                invMass = b.invMass,\n                invInertia = b.invInertiaWorld;\n\n            velo.x += force.x * invMass * dt;\n            velo.y += force.y * invMass * dt;\n            velo.z += force.z * invMass * dt;\n\n            if(b.angularVelocity){\n                invInertia.vmult(tau,invI_tau_dt);\n                invI_tau_dt.mult(dt,invI_tau_dt);\n                invI_tau_dt.vadd(angularVelo,angularVelo);\n            }\n\n            // Use new velocity  - leap frog\n            pos.x += velo.x * dt;\n            pos.y += velo.y * dt;\n            pos.z += velo.z * dt;\n\n            if(b.angularVelocity){\n                w.set(angularVelo.x, angularVelo.y, angularVelo.z, 0);\n                w.mult(quat,wq);\n                quat.x += half_dt * wq.x;\n                quat.y += half_dt * wq.y;\n                quat.z += half_dt * wq.z;\n                quat.w += half_dt * wq.w;\n                if(quatNormalize){\n                    if(quatNormalizeFast){\n                        quat.normalizeFast();\n                    } else {\n                        quat.normalize();\n                    }\n                }\n            }\n\n            if(b.aabb){\n                b.aabbNeedsUpdate = true;\n            }\n\n            // Update world inertia\n            if(b.updateInertiaWorld){\n                b.updateInertiaWorld();\n            }\n        }\n    }\n    this.clearForces();\n\n    this.broadphase.dirty = true;\n\n    if(doProfiling){\n        profile.integrate = performance.now() - profilingStart;\n    }\n\n    // Update world time\n    this.time += dt;\n    this.stepnumber += 1;\n\n    this.dispatchEvent(World_step_postStepEvent);\n\n    // Invoke post-step callbacks\n    for(i=0; i!==N; i++){\n        var bi = bodies[i];\n        var postStep = bi.postStep;\n        if(postStep){\n            postStep.call(bi);\n        }\n    }\n\n    // Sleeping update\n    if(this.allowSleep){\n        for(i=0; i!==N; i++){\n            bodies[i].sleepTick(this.time);\n        }\n    }\n};\n\n/**\n * Sets all body forces in the world to zero.\n * @method clearForces\n */\nWorld.prototype.clearForces = function(){\n    var bodies = this.bodies;\n    var N = bodies.length;\n    for(var i=0; i !== N; i++){\n        var b = bodies[i],\n            force = b.force,\n            tau = b.torque;\n\n        b.force.set(0,0,0);\n        b.torque.set(0,0,0);\n    }\n};\n\n},{\"../collision/AABB\":3,\"../collision/ArrayCollisionMatrix\":4,\"../collision/NaiveBroadphase\":7,\"../collision/Ray\":9,\"../collision/RaycastResult\":10,\"../equations/ContactEquation\":19,\"../equations/FrictionEquation\":21,\"../material/ContactMaterial\":24,\"../material/Material\":25,\"../math/Quaternion\":28,\"../math/Vec3\":30,\"../objects/Body\":31,\"../shapes/Shape\":43,\"../solver/GSSolver\":46,\"../utils/EventTarget\":49,\"../utils/TupleDictionary\":52,\"../utils/Vec3Pool\":54,\"./Narrowphase\":55}]},{},[2])\n(2)\n});"},"lineCount":13689}},"error":null,"hash":"f95ac8c33b7d94e27cdfcd92074ea194","cacheData":{"env":{}}}